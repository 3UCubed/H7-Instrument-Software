
H7-LQFP100-RTOS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001b1c0  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000498  0801b460  0801b460  0002b460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  0801b8f8  0801b8f8  0002b8f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  0801b900  0801b900  0002b900  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0801b904  0801b904  0002b904  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         0000013c  24000000  0801b908  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          000068a8  24000140  0801ba44  00030140  2**5
                  ALLOC
  8 ._user_heap_stack 00000600  240069e8  0801ba44  000369e8  2**0
                  ALLOC
  9 .ARM.attributes 0000002e  00000000  00000000  0003013c  2**0
                  CONTENTS, READONLY
 10 .debug_info   00041249  00000000  00000000  0003016a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00007db6  00000000  00000000  000713b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00002bc0  00000000  00000000  00079170  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_ranges 00002878  00000000  00000000  0007bd30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  00046855  00000000  00000000  0007e5a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   00043441  00000000  00000000  000c4dfd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    00196be0  00000000  00000000  0010823e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000050  00000000  00000000  0029ee1e  2**0
                  CONTENTS, READONLY
 18 .debug_frame  0000bd08  00000000  00000000  0029ee70  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	; (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	; (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	24000140 	.word	0x24000140
 80002bc:	00000000 	.word	0x00000000
 80002c0:	0801b448 	.word	0x0801b448

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	; (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	; (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	24000144 	.word	0x24000144
 80002dc:	0801b448 	.word	0x0801b448

080002e0 <__aeabi_uldivmod>:
 80002e0:	b953      	cbnz	r3, 80002f8 <__aeabi_uldivmod+0x18>
 80002e2:	b94a      	cbnz	r2, 80002f8 <__aeabi_uldivmod+0x18>
 80002e4:	2900      	cmp	r1, #0
 80002e6:	bf08      	it	eq
 80002e8:	2800      	cmpeq	r0, #0
 80002ea:	bf1c      	itt	ne
 80002ec:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80002f0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80002f4:	f000 b974 	b.w	80005e0 <__aeabi_idiv0>
 80002f8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002fc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000300:	f000 f806 	bl	8000310 <__udivmoddi4>
 8000304:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000308:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800030c:	b004      	add	sp, #16
 800030e:	4770      	bx	lr

08000310 <__udivmoddi4>:
 8000310:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000314:	9d08      	ldr	r5, [sp, #32]
 8000316:	4604      	mov	r4, r0
 8000318:	468e      	mov	lr, r1
 800031a:	2b00      	cmp	r3, #0
 800031c:	d14d      	bne.n	80003ba <__udivmoddi4+0xaa>
 800031e:	428a      	cmp	r2, r1
 8000320:	4694      	mov	ip, r2
 8000322:	d969      	bls.n	80003f8 <__udivmoddi4+0xe8>
 8000324:	fab2 f282 	clz	r2, r2
 8000328:	b152      	cbz	r2, 8000340 <__udivmoddi4+0x30>
 800032a:	fa01 f302 	lsl.w	r3, r1, r2
 800032e:	f1c2 0120 	rsb	r1, r2, #32
 8000332:	fa20 f101 	lsr.w	r1, r0, r1
 8000336:	fa0c fc02 	lsl.w	ip, ip, r2
 800033a:	ea41 0e03 	orr.w	lr, r1, r3
 800033e:	4094      	lsls	r4, r2
 8000340:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000344:	0c21      	lsrs	r1, r4, #16
 8000346:	fbbe f6f8 	udiv	r6, lr, r8
 800034a:	fa1f f78c 	uxth.w	r7, ip
 800034e:	fb08 e316 	mls	r3, r8, r6, lr
 8000352:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000356:	fb06 f107 	mul.w	r1, r6, r7
 800035a:	4299      	cmp	r1, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x64>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000366:	f080 811f 	bcs.w	80005a8 <__udivmoddi4+0x298>
 800036a:	4299      	cmp	r1, r3
 800036c:	f240 811c 	bls.w	80005a8 <__udivmoddi4+0x298>
 8000370:	3e02      	subs	r6, #2
 8000372:	4463      	add	r3, ip
 8000374:	1a5b      	subs	r3, r3, r1
 8000376:	b2a4      	uxth	r4, r4
 8000378:	fbb3 f0f8 	udiv	r0, r3, r8
 800037c:	fb08 3310 	mls	r3, r8, r0, r3
 8000380:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000384:	fb00 f707 	mul.w	r7, r0, r7
 8000388:	42a7      	cmp	r7, r4
 800038a:	d90a      	bls.n	80003a2 <__udivmoddi4+0x92>
 800038c:	eb1c 0404 	adds.w	r4, ip, r4
 8000390:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000394:	f080 810a 	bcs.w	80005ac <__udivmoddi4+0x29c>
 8000398:	42a7      	cmp	r7, r4
 800039a:	f240 8107 	bls.w	80005ac <__udivmoddi4+0x29c>
 800039e:	4464      	add	r4, ip
 80003a0:	3802      	subs	r0, #2
 80003a2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80003a6:	1be4      	subs	r4, r4, r7
 80003a8:	2600      	movs	r6, #0
 80003aa:	b11d      	cbz	r5, 80003b4 <__udivmoddi4+0xa4>
 80003ac:	40d4      	lsrs	r4, r2
 80003ae:	2300      	movs	r3, #0
 80003b0:	e9c5 4300 	strd	r4, r3, [r5]
 80003b4:	4631      	mov	r1, r6
 80003b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003ba:	428b      	cmp	r3, r1
 80003bc:	d909      	bls.n	80003d2 <__udivmoddi4+0xc2>
 80003be:	2d00      	cmp	r5, #0
 80003c0:	f000 80ef 	beq.w	80005a2 <__udivmoddi4+0x292>
 80003c4:	2600      	movs	r6, #0
 80003c6:	e9c5 0100 	strd	r0, r1, [r5]
 80003ca:	4630      	mov	r0, r6
 80003cc:	4631      	mov	r1, r6
 80003ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003d2:	fab3 f683 	clz	r6, r3
 80003d6:	2e00      	cmp	r6, #0
 80003d8:	d14a      	bne.n	8000470 <__udivmoddi4+0x160>
 80003da:	428b      	cmp	r3, r1
 80003dc:	d302      	bcc.n	80003e4 <__udivmoddi4+0xd4>
 80003de:	4282      	cmp	r2, r0
 80003e0:	f200 80f9 	bhi.w	80005d6 <__udivmoddi4+0x2c6>
 80003e4:	1a84      	subs	r4, r0, r2
 80003e6:	eb61 0303 	sbc.w	r3, r1, r3
 80003ea:	2001      	movs	r0, #1
 80003ec:	469e      	mov	lr, r3
 80003ee:	2d00      	cmp	r5, #0
 80003f0:	d0e0      	beq.n	80003b4 <__udivmoddi4+0xa4>
 80003f2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003f6:	e7dd      	b.n	80003b4 <__udivmoddi4+0xa4>
 80003f8:	b902      	cbnz	r2, 80003fc <__udivmoddi4+0xec>
 80003fa:	deff      	udf	#255	; 0xff
 80003fc:	fab2 f282 	clz	r2, r2
 8000400:	2a00      	cmp	r2, #0
 8000402:	f040 8092 	bne.w	800052a <__udivmoddi4+0x21a>
 8000406:	eba1 010c 	sub.w	r1, r1, ip
 800040a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800040e:	fa1f fe8c 	uxth.w	lr, ip
 8000412:	2601      	movs	r6, #1
 8000414:	0c20      	lsrs	r0, r4, #16
 8000416:	fbb1 f3f7 	udiv	r3, r1, r7
 800041a:	fb07 1113 	mls	r1, r7, r3, r1
 800041e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000422:	fb0e f003 	mul.w	r0, lr, r3
 8000426:	4288      	cmp	r0, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0x12c>
 800042a:	eb1c 0101 	adds.w	r1, ip, r1
 800042e:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000432:	d202      	bcs.n	800043a <__udivmoddi4+0x12a>
 8000434:	4288      	cmp	r0, r1
 8000436:	f200 80cb 	bhi.w	80005d0 <__udivmoddi4+0x2c0>
 800043a:	4643      	mov	r3, r8
 800043c:	1a09      	subs	r1, r1, r0
 800043e:	b2a4      	uxth	r4, r4
 8000440:	fbb1 f0f7 	udiv	r0, r1, r7
 8000444:	fb07 1110 	mls	r1, r7, r0, r1
 8000448:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800044c:	fb0e fe00 	mul.w	lr, lr, r0
 8000450:	45a6      	cmp	lr, r4
 8000452:	d908      	bls.n	8000466 <__udivmoddi4+0x156>
 8000454:	eb1c 0404 	adds.w	r4, ip, r4
 8000458:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 800045c:	d202      	bcs.n	8000464 <__udivmoddi4+0x154>
 800045e:	45a6      	cmp	lr, r4
 8000460:	f200 80bb 	bhi.w	80005da <__udivmoddi4+0x2ca>
 8000464:	4608      	mov	r0, r1
 8000466:	eba4 040e 	sub.w	r4, r4, lr
 800046a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800046e:	e79c      	b.n	80003aa <__udivmoddi4+0x9a>
 8000470:	f1c6 0720 	rsb	r7, r6, #32
 8000474:	40b3      	lsls	r3, r6
 8000476:	fa22 fc07 	lsr.w	ip, r2, r7
 800047a:	ea4c 0c03 	orr.w	ip, ip, r3
 800047e:	fa20 f407 	lsr.w	r4, r0, r7
 8000482:	fa01 f306 	lsl.w	r3, r1, r6
 8000486:	431c      	orrs	r4, r3
 8000488:	40f9      	lsrs	r1, r7
 800048a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800048e:	fa00 f306 	lsl.w	r3, r0, r6
 8000492:	fbb1 f8f9 	udiv	r8, r1, r9
 8000496:	0c20      	lsrs	r0, r4, #16
 8000498:	fa1f fe8c 	uxth.w	lr, ip
 800049c:	fb09 1118 	mls	r1, r9, r8, r1
 80004a0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80004a4:	fb08 f00e 	mul.w	r0, r8, lr
 80004a8:	4288      	cmp	r0, r1
 80004aa:	fa02 f206 	lsl.w	r2, r2, r6
 80004ae:	d90b      	bls.n	80004c8 <__udivmoddi4+0x1b8>
 80004b0:	eb1c 0101 	adds.w	r1, ip, r1
 80004b4:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80004b8:	f080 8088 	bcs.w	80005cc <__udivmoddi4+0x2bc>
 80004bc:	4288      	cmp	r0, r1
 80004be:	f240 8085 	bls.w	80005cc <__udivmoddi4+0x2bc>
 80004c2:	f1a8 0802 	sub.w	r8, r8, #2
 80004c6:	4461      	add	r1, ip
 80004c8:	1a09      	subs	r1, r1, r0
 80004ca:	b2a4      	uxth	r4, r4
 80004cc:	fbb1 f0f9 	udiv	r0, r1, r9
 80004d0:	fb09 1110 	mls	r1, r9, r0, r1
 80004d4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80004d8:	fb00 fe0e 	mul.w	lr, r0, lr
 80004dc:	458e      	cmp	lr, r1
 80004de:	d908      	bls.n	80004f2 <__udivmoddi4+0x1e2>
 80004e0:	eb1c 0101 	adds.w	r1, ip, r1
 80004e4:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 80004e8:	d26c      	bcs.n	80005c4 <__udivmoddi4+0x2b4>
 80004ea:	458e      	cmp	lr, r1
 80004ec:	d96a      	bls.n	80005c4 <__udivmoddi4+0x2b4>
 80004ee:	3802      	subs	r0, #2
 80004f0:	4461      	add	r1, ip
 80004f2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004f6:	fba0 9402 	umull	r9, r4, r0, r2
 80004fa:	eba1 010e 	sub.w	r1, r1, lr
 80004fe:	42a1      	cmp	r1, r4
 8000500:	46c8      	mov	r8, r9
 8000502:	46a6      	mov	lr, r4
 8000504:	d356      	bcc.n	80005b4 <__udivmoddi4+0x2a4>
 8000506:	d053      	beq.n	80005b0 <__udivmoddi4+0x2a0>
 8000508:	b15d      	cbz	r5, 8000522 <__udivmoddi4+0x212>
 800050a:	ebb3 0208 	subs.w	r2, r3, r8
 800050e:	eb61 010e 	sbc.w	r1, r1, lr
 8000512:	fa01 f707 	lsl.w	r7, r1, r7
 8000516:	fa22 f306 	lsr.w	r3, r2, r6
 800051a:	40f1      	lsrs	r1, r6
 800051c:	431f      	orrs	r7, r3
 800051e:	e9c5 7100 	strd	r7, r1, [r5]
 8000522:	2600      	movs	r6, #0
 8000524:	4631      	mov	r1, r6
 8000526:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800052a:	f1c2 0320 	rsb	r3, r2, #32
 800052e:	40d8      	lsrs	r0, r3
 8000530:	fa0c fc02 	lsl.w	ip, ip, r2
 8000534:	fa21 f303 	lsr.w	r3, r1, r3
 8000538:	4091      	lsls	r1, r2
 800053a:	4301      	orrs	r1, r0
 800053c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000540:	fa1f fe8c 	uxth.w	lr, ip
 8000544:	fbb3 f0f7 	udiv	r0, r3, r7
 8000548:	fb07 3610 	mls	r6, r7, r0, r3
 800054c:	0c0b      	lsrs	r3, r1, #16
 800054e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000552:	fb00 f60e 	mul.w	r6, r0, lr
 8000556:	429e      	cmp	r6, r3
 8000558:	fa04 f402 	lsl.w	r4, r4, r2
 800055c:	d908      	bls.n	8000570 <__udivmoddi4+0x260>
 800055e:	eb1c 0303 	adds.w	r3, ip, r3
 8000562:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000566:	d22f      	bcs.n	80005c8 <__udivmoddi4+0x2b8>
 8000568:	429e      	cmp	r6, r3
 800056a:	d92d      	bls.n	80005c8 <__udivmoddi4+0x2b8>
 800056c:	3802      	subs	r0, #2
 800056e:	4463      	add	r3, ip
 8000570:	1b9b      	subs	r3, r3, r6
 8000572:	b289      	uxth	r1, r1
 8000574:	fbb3 f6f7 	udiv	r6, r3, r7
 8000578:	fb07 3316 	mls	r3, r7, r6, r3
 800057c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000580:	fb06 f30e 	mul.w	r3, r6, lr
 8000584:	428b      	cmp	r3, r1
 8000586:	d908      	bls.n	800059a <__udivmoddi4+0x28a>
 8000588:	eb1c 0101 	adds.w	r1, ip, r1
 800058c:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8000590:	d216      	bcs.n	80005c0 <__udivmoddi4+0x2b0>
 8000592:	428b      	cmp	r3, r1
 8000594:	d914      	bls.n	80005c0 <__udivmoddi4+0x2b0>
 8000596:	3e02      	subs	r6, #2
 8000598:	4461      	add	r1, ip
 800059a:	1ac9      	subs	r1, r1, r3
 800059c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 80005a0:	e738      	b.n	8000414 <__udivmoddi4+0x104>
 80005a2:	462e      	mov	r6, r5
 80005a4:	4628      	mov	r0, r5
 80005a6:	e705      	b.n	80003b4 <__udivmoddi4+0xa4>
 80005a8:	4606      	mov	r6, r0
 80005aa:	e6e3      	b.n	8000374 <__udivmoddi4+0x64>
 80005ac:	4618      	mov	r0, r3
 80005ae:	e6f8      	b.n	80003a2 <__udivmoddi4+0x92>
 80005b0:	454b      	cmp	r3, r9
 80005b2:	d2a9      	bcs.n	8000508 <__udivmoddi4+0x1f8>
 80005b4:	ebb9 0802 	subs.w	r8, r9, r2
 80005b8:	eb64 0e0c 	sbc.w	lr, r4, ip
 80005bc:	3801      	subs	r0, #1
 80005be:	e7a3      	b.n	8000508 <__udivmoddi4+0x1f8>
 80005c0:	4646      	mov	r6, r8
 80005c2:	e7ea      	b.n	800059a <__udivmoddi4+0x28a>
 80005c4:	4620      	mov	r0, r4
 80005c6:	e794      	b.n	80004f2 <__udivmoddi4+0x1e2>
 80005c8:	4640      	mov	r0, r8
 80005ca:	e7d1      	b.n	8000570 <__udivmoddi4+0x260>
 80005cc:	46d0      	mov	r8, sl
 80005ce:	e77b      	b.n	80004c8 <__udivmoddi4+0x1b8>
 80005d0:	3b02      	subs	r3, #2
 80005d2:	4461      	add	r1, ip
 80005d4:	e732      	b.n	800043c <__udivmoddi4+0x12c>
 80005d6:	4630      	mov	r0, r6
 80005d8:	e709      	b.n	80003ee <__udivmoddi4+0xde>
 80005da:	4464      	add	r4, ip
 80005dc:	3802      	subs	r0, #2
 80005de:	e742      	b.n	8000466 <__udivmoddi4+0x156>

080005e0 <__aeabi_idiv0>:
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <MX_ADC1_Init>:
DMA_HandleTypeDef hdma_adc1;
DMA_HandleTypeDef hdma_adc3;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 80005e4:	b580      	push	{r7, lr}
 80005e6:	b08a      	sub	sp, #40	; 0x28
 80005e8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 80005ea:	f107 031c 	add.w	r3, r7, #28
 80005ee:	2200      	movs	r2, #0
 80005f0:	601a      	str	r2, [r3, #0]
 80005f2:	605a      	str	r2, [r3, #4]
 80005f4:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 80005f6:	463b      	mov	r3, r7
 80005f8:	2200      	movs	r2, #0
 80005fa:	601a      	str	r2, [r3, #0]
 80005fc:	605a      	str	r2, [r3, #4]
 80005fe:	609a      	str	r2, [r3, #8]
 8000600:	60da      	str	r2, [r3, #12]
 8000602:	611a      	str	r2, [r3, #16]
 8000604:	615a      	str	r2, [r3, #20]
 8000606:	619a      	str	r2, [r3, #24]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8000608:	4b7a      	ldr	r3, [pc, #488]	; (80007f4 <MX_ADC1_Init+0x210>)
 800060a:	4a7b      	ldr	r2, [pc, #492]	; (80007f8 <MX_ADC1_Init+0x214>)
 800060c:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV2;
 800060e:	4b79      	ldr	r3, [pc, #484]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000610:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8000614:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000616:	4b77      	ldr	r3, [pc, #476]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000618:	2208      	movs	r2, #8
 800061a:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 800061c:	4b75      	ldr	r3, [pc, #468]	; (80007f4 <MX_ADC1_Init+0x210>)
 800061e:	2201      	movs	r2, #1
 8000620:	60da      	str	r2, [r3, #12]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000622:	4b74      	ldr	r3, [pc, #464]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000624:	2204      	movs	r2, #4
 8000626:	611a      	str	r2, [r3, #16]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000628:	4b72      	ldr	r3, [pc, #456]	; (80007f4 <MX_ADC1_Init+0x210>)
 800062a:	2200      	movs	r2, #0
 800062c:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800062e:	4b71      	ldr	r3, [pc, #452]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000630:	2201      	movs	r2, #1
 8000632:	755a      	strb	r2, [r3, #21]
  hadc1.Init.NbrOfConversion = 11;
 8000634:	4b6f      	ldr	r3, [pc, #444]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000636:	220b      	movs	r2, #11
 8000638:	619a      	str	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800063a:	4b6e      	ldr	r3, [pc, #440]	; (80007f4 <MX_ADC1_Init+0x210>)
 800063c:	2200      	movs	r2, #0
 800063e:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000640:	4b6c      	ldr	r3, [pc, #432]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000642:	2200      	movs	r2, #0
 8000644:	625a      	str	r2, [r3, #36]	; 0x24
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000646:	4b6b      	ldr	r3, [pc, #428]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000648:	2200      	movs	r2, #0
 800064a:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DMA_CIRCULAR;
 800064c:	4b69      	ldr	r3, [pc, #420]	; (80007f4 <MX_ADC1_Init+0x210>)
 800064e:	2203      	movs	r2, #3
 8000650:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 8000652:	4b68      	ldr	r3, [pc, #416]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000654:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000658:	631a      	str	r2, [r3, #48]	; 0x30
  hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 800065a:	4b66      	ldr	r3, [pc, #408]	; (80007f4 <MX_ADC1_Init+0x210>)
 800065c:	2200      	movs	r2, #0
 800065e:	635a      	str	r2, [r3, #52]	; 0x34
  hadc1.Init.OversamplingMode = DISABLE;
 8000660:	4b64      	ldr	r3, [pc, #400]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000662:	2200      	movs	r2, #0
 8000664:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000668:	4862      	ldr	r0, [pc, #392]	; (80007f4 <MX_ADC1_Init+0x210>)
 800066a:	f005 fffd 	bl	8006668 <HAL_ADC_Init>
 800066e:	4603      	mov	r3, r0
 8000670:	2b00      	cmp	r3, #0
 8000672:	d001      	beq.n	8000678 <MX_ADC1_Init+0x94>
  {
    Error_Handler();
 8000674:	f003 fa7a 	bl	8003b6c <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000678:	2300      	movs	r3, #0
 800067a:	61fb      	str	r3, [r7, #28]
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 800067c:	f107 031c 	add.w	r3, r7, #28
 8000680:	4619      	mov	r1, r3
 8000682:	485c      	ldr	r0, [pc, #368]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000684:	f007 f918 	bl	80078b8 <HAL_ADCEx_MultiModeConfigChannel>
 8000688:	4603      	mov	r3, r0
 800068a:	2b00      	cmp	r3, #0
 800068c:	d001      	beq.n	8000692 <MX_ADC1_Init+0xae>
  {
    Error_Handler();
 800068e:	f003 fa6d 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8000692:	4b5a      	ldr	r3, [pc, #360]	; (80007fc <MX_ADC1_Init+0x218>)
 8000694:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000696:	2306      	movs	r3, #6
 8000698:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_810CYCLES_5;
 800069a:	2307      	movs	r3, #7
 800069c:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 800069e:	f240 73ff 	movw	r3, #2047	; 0x7ff
 80006a2:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80006a4:	2304      	movs	r3, #4
 80006a6:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 80006a8:	2300      	movs	r3, #0
 80006aa:	617b      	str	r3, [r7, #20]
  sConfig.OffsetSignedSaturation = DISABLE;
 80006ac:	2300      	movs	r3, #0
 80006ae:	767b      	strb	r3, [r7, #25]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80006b0:	463b      	mov	r3, r7
 80006b2:	4619      	mov	r1, r3
 80006b4:	484f      	ldr	r0, [pc, #316]	; (80007f4 <MX_ADC1_Init+0x210>)
 80006b6:	f006 fa5b 	bl	8006b70 <HAL_ADC_ConfigChannel>
 80006ba:	4603      	mov	r3, r0
 80006bc:	2b00      	cmp	r3, #0
 80006be:	d001      	beq.n	80006c4 <MX_ADC1_Init+0xe0>
  {
    Error_Handler();
 80006c0:	f003 fa54 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_4;
 80006c4:	4b4e      	ldr	r3, [pc, #312]	; (8000800 <MX_ADC1_Init+0x21c>)
 80006c6:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80006c8:	230c      	movs	r3, #12
 80006ca:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80006cc:	463b      	mov	r3, r7
 80006ce:	4619      	mov	r1, r3
 80006d0:	4848      	ldr	r0, [pc, #288]	; (80007f4 <MX_ADC1_Init+0x210>)
 80006d2:	f006 fa4d 	bl	8006b70 <HAL_ADC_ConfigChannel>
 80006d6:	4603      	mov	r3, r0
 80006d8:	2b00      	cmp	r3, #0
 80006da:	d001      	beq.n	80006e0 <MX_ADC1_Init+0xfc>
  {
    Error_Handler();
 80006dc:	f003 fa46 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_5;
 80006e0:	4b48      	ldr	r3, [pc, #288]	; (8000804 <MX_ADC1_Init+0x220>)
 80006e2:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 80006e4:	2312      	movs	r3, #18
 80006e6:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80006e8:	463b      	mov	r3, r7
 80006ea:	4619      	mov	r1, r3
 80006ec:	4841      	ldr	r0, [pc, #260]	; (80007f4 <MX_ADC1_Init+0x210>)
 80006ee:	f006 fa3f 	bl	8006b70 <HAL_ADC_ConfigChannel>
 80006f2:	4603      	mov	r3, r0
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	d001      	beq.n	80006fc <MX_ADC1_Init+0x118>
  {
    Error_Handler();
 80006f8:	f003 fa38 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_7;
 80006fc:	4b42      	ldr	r3, [pc, #264]	; (8000808 <MX_ADC1_Init+0x224>)
 80006fe:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_4;
 8000700:	2318      	movs	r3, #24
 8000702:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000704:	463b      	mov	r3, r7
 8000706:	4619      	mov	r1, r3
 8000708:	483a      	ldr	r0, [pc, #232]	; (80007f4 <MX_ADC1_Init+0x210>)
 800070a:	f006 fa31 	bl	8006b70 <HAL_ADC_ConfigChannel>
 800070e:	4603      	mov	r3, r0
 8000710:	2b00      	cmp	r3, #0
 8000712:	d001      	beq.n	8000718 <MX_ADC1_Init+0x134>
  {
    Error_Handler();
 8000714:	f003 fa2a 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_8;
 8000718:	4b3c      	ldr	r3, [pc, #240]	; (800080c <MX_ADC1_Init+0x228>)
 800071a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_5;
 800071c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000720:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000722:	463b      	mov	r3, r7
 8000724:	4619      	mov	r1, r3
 8000726:	4833      	ldr	r0, [pc, #204]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000728:	f006 fa22 	bl	8006b70 <HAL_ADC_ConfigChannel>
 800072c:	4603      	mov	r3, r0
 800072e:	2b00      	cmp	r3, #0
 8000730:	d001      	beq.n	8000736 <MX_ADC1_Init+0x152>
  {
    Error_Handler();
 8000732:	f003 fa1b 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_9;
 8000736:	4b36      	ldr	r3, [pc, #216]	; (8000810 <MX_ADC1_Init+0x22c>)
 8000738:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_6;
 800073a:	f44f 7383 	mov.w	r3, #262	; 0x106
 800073e:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000740:	463b      	mov	r3, r7
 8000742:	4619      	mov	r1, r3
 8000744:	482b      	ldr	r0, [pc, #172]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000746:	f006 fa13 	bl	8006b70 <HAL_ADC_ConfigChannel>
 800074a:	4603      	mov	r3, r0
 800074c:	2b00      	cmp	r3, #0
 800074e:	d001      	beq.n	8000754 <MX_ADC1_Init+0x170>
  {
    Error_Handler();
 8000750:	f003 fa0c 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_10;
 8000754:	4b2f      	ldr	r3, [pc, #188]	; (8000814 <MX_ADC1_Init+0x230>)
 8000756:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_7;
 8000758:	f44f 7386 	mov.w	r3, #268	; 0x10c
 800075c:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800075e:	463b      	mov	r3, r7
 8000760:	4619      	mov	r1, r3
 8000762:	4824      	ldr	r0, [pc, #144]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000764:	f006 fa04 	bl	8006b70 <HAL_ADC_ConfigChannel>
 8000768:	4603      	mov	r3, r0
 800076a:	2b00      	cmp	r3, #0
 800076c:	d001      	beq.n	8000772 <MX_ADC1_Init+0x18e>
  {
    Error_Handler();
 800076e:	f003 f9fd 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_11;
 8000772:	4b29      	ldr	r3, [pc, #164]	; (8000818 <MX_ADC1_Init+0x234>)
 8000774:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_8;
 8000776:	f44f 7389 	mov.w	r3, #274	; 0x112
 800077a:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800077c:	463b      	mov	r3, r7
 800077e:	4619      	mov	r1, r3
 8000780:	481c      	ldr	r0, [pc, #112]	; (80007f4 <MX_ADC1_Init+0x210>)
 8000782:	f006 f9f5 	bl	8006b70 <HAL_ADC_ConfigChannel>
 8000786:	4603      	mov	r3, r0
 8000788:	2b00      	cmp	r3, #0
 800078a:	d001      	beq.n	8000790 <MX_ADC1_Init+0x1ac>
  {
    Error_Handler();
 800078c:	f003 f9ee 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_14;
 8000790:	4b22      	ldr	r3, [pc, #136]	; (800081c <MX_ADC1_Init+0x238>)
 8000792:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_9;
 8000794:	f44f 738c 	mov.w	r3, #280	; 0x118
 8000798:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800079a:	463b      	mov	r3, r7
 800079c:	4619      	mov	r1, r3
 800079e:	4815      	ldr	r0, [pc, #84]	; (80007f4 <MX_ADC1_Init+0x210>)
 80007a0:	f006 f9e6 	bl	8006b70 <HAL_ADC_ConfigChannel>
 80007a4:	4603      	mov	r3, r0
 80007a6:	2b00      	cmp	r3, #0
 80007a8:	d001      	beq.n	80007ae <MX_ADC1_Init+0x1ca>
  {
    Error_Handler();
 80007aa:	f003 f9df 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_15;
 80007ae:	4b1c      	ldr	r3, [pc, #112]	; (8000820 <MX_ADC1_Init+0x23c>)
 80007b0:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_10;
 80007b2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80007b6:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80007b8:	463b      	mov	r3, r7
 80007ba:	4619      	mov	r1, r3
 80007bc:	480d      	ldr	r0, [pc, #52]	; (80007f4 <MX_ADC1_Init+0x210>)
 80007be:	f006 f9d7 	bl	8006b70 <HAL_ADC_ConfigChannel>
 80007c2:	4603      	mov	r3, r0
 80007c4:	2b00      	cmp	r3, #0
 80007c6:	d001      	beq.n	80007cc <MX_ADC1_Init+0x1e8>
  {
    Error_Handler();
 80007c8:	f003 f9d0 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_17;
 80007cc:	4b15      	ldr	r3, [pc, #84]	; (8000824 <MX_ADC1_Init+0x240>)
 80007ce:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_11;
 80007d0:	f240 2306 	movw	r3, #518	; 0x206
 80007d4:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80007d6:	463b      	mov	r3, r7
 80007d8:	4619      	mov	r1, r3
 80007da:	4806      	ldr	r0, [pc, #24]	; (80007f4 <MX_ADC1_Init+0x210>)
 80007dc:	f006 f9c8 	bl	8006b70 <HAL_ADC_ConfigChannel>
 80007e0:	4603      	mov	r3, r0
 80007e2:	2b00      	cmp	r3, #0
 80007e4:	d001      	beq.n	80007ea <MX_ADC1_Init+0x206>
  {
    Error_Handler();
 80007e6:	f003 f9c1 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80007ea:	bf00      	nop
 80007ec:	3728      	adds	r7, #40	; 0x28
 80007ee:	46bd      	mov	sp, r7
 80007f0:	bd80      	pop	{r7, pc}
 80007f2:	bf00      	nop
 80007f4:	2400015c 	.word	0x2400015c
 80007f8:	40022000 	.word	0x40022000
 80007fc:	0c900008 	.word	0x0c900008
 8000800:	10c00010 	.word	0x10c00010
 8000804:	14f00020 	.word	0x14f00020
 8000808:	1d500080 	.word	0x1d500080
 800080c:	21800100 	.word	0x21800100
 8000810:	25b00200 	.word	0x25b00200
 8000814:	2a000400 	.word	0x2a000400
 8000818:	2e300800 	.word	0x2e300800
 800081c:	3ac04000 	.word	0x3ac04000
 8000820:	3ef08000 	.word	0x3ef08000
 8000824:	47520000 	.word	0x47520000

08000828 <MX_ADC3_Init>:
/* ADC3 init function */
void MX_ADC3_Init(void)
{
 8000828:	b580      	push	{r7, lr}
 800082a:	b088      	sub	sp, #32
 800082c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800082e:	1d3b      	adds	r3, r7, #4
 8000830:	2200      	movs	r2, #0
 8000832:	601a      	str	r2, [r3, #0]
 8000834:	605a      	str	r2, [r3, #4]
 8000836:	609a      	str	r2, [r3, #8]
 8000838:	60da      	str	r2, [r3, #12]
 800083a:	611a      	str	r2, [r3, #16]
 800083c:	615a      	str	r2, [r3, #20]
 800083e:	619a      	str	r2, [r3, #24]

  /* USER CODE END ADC3_Init 1 */

  /** Common config
  */
  hadc3.Instance = ADC3;
 8000840:	4b3d      	ldr	r3, [pc, #244]	; (8000938 <MX_ADC3_Init+0x110>)
 8000842:	4a3e      	ldr	r2, [pc, #248]	; (800093c <MX_ADC3_Init+0x114>)
 8000844:	601a      	str	r2, [r3, #0]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8000846:	4b3c      	ldr	r3, [pc, #240]	; (8000938 <MX_ADC3_Init+0x110>)
 8000848:	2208      	movs	r2, #8
 800084a:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 800084c:	4b3a      	ldr	r3, [pc, #232]	; (8000938 <MX_ADC3_Init+0x110>)
 800084e:	2201      	movs	r2, #1
 8000850:	60da      	str	r2, [r3, #12]
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000852:	4b39      	ldr	r3, [pc, #228]	; (8000938 <MX_ADC3_Init+0x110>)
 8000854:	2204      	movs	r2, #4
 8000856:	611a      	str	r2, [r3, #16]
  hadc3.Init.LowPowerAutoWait = DISABLE;
 8000858:	4b37      	ldr	r3, [pc, #220]	; (8000938 <MX_ADC3_Init+0x110>)
 800085a:	2200      	movs	r2, #0
 800085c:	751a      	strb	r2, [r3, #20]
  hadc3.Init.ContinuousConvMode = ENABLE;
 800085e:	4b36      	ldr	r3, [pc, #216]	; (8000938 <MX_ADC3_Init+0x110>)
 8000860:	2201      	movs	r2, #1
 8000862:	755a      	strb	r2, [r3, #21]
  hadc3.Init.NbrOfConversion = 4;
 8000864:	4b34      	ldr	r3, [pc, #208]	; (8000938 <MX_ADC3_Init+0x110>)
 8000866:	2204      	movs	r2, #4
 8000868:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 800086a:	4b33      	ldr	r3, [pc, #204]	; (8000938 <MX_ADC3_Init+0x110>)
 800086c:	2200      	movs	r2, #0
 800086e:	771a      	strb	r2, [r3, #28]
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000870:	4b31      	ldr	r3, [pc, #196]	; (8000938 <MX_ADC3_Init+0x110>)
 8000872:	2200      	movs	r2, #0
 8000874:	625a      	str	r2, [r3, #36]	; 0x24
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000876:	4b30      	ldr	r3, [pc, #192]	; (8000938 <MX_ADC3_Init+0x110>)
 8000878:	2200      	movs	r2, #0
 800087a:	629a      	str	r2, [r3, #40]	; 0x28
  hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DMA_CIRCULAR;
 800087c:	4b2e      	ldr	r3, [pc, #184]	; (8000938 <MX_ADC3_Init+0x110>)
 800087e:	2203      	movs	r2, #3
 8000880:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc3.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 8000882:	4b2d      	ldr	r3, [pc, #180]	; (8000938 <MX_ADC3_Init+0x110>)
 8000884:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000888:	631a      	str	r2, [r3, #48]	; 0x30
  hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 800088a:	4b2b      	ldr	r3, [pc, #172]	; (8000938 <MX_ADC3_Init+0x110>)
 800088c:	2200      	movs	r2, #0
 800088e:	635a      	str	r2, [r3, #52]	; 0x34
  hadc3.Init.OversamplingMode = DISABLE;
 8000890:	4b29      	ldr	r3, [pc, #164]	; (8000938 <MX_ADC3_Init+0x110>)
 8000892:	2200      	movs	r2, #0
 8000894:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8000898:	4827      	ldr	r0, [pc, #156]	; (8000938 <MX_ADC3_Init+0x110>)
 800089a:	f005 fee5 	bl	8006668 <HAL_ADC_Init>
 800089e:	4603      	mov	r3, r0
 80008a0:	2b00      	cmp	r3, #0
 80008a2:	d001      	beq.n	80008a8 <MX_ADC3_Init+0x80>
  {
    Error_Handler();
 80008a4:	f003 f962 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 80008a8:	4b25      	ldr	r3, [pc, #148]	; (8000940 <MX_ADC3_Init+0x118>)
 80008aa:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80008ac:	2306      	movs	r3, #6
 80008ae:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_810CYCLES_5;
 80008b0:	2307      	movs	r3, #7
 80008b2:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80008b4:	f240 73ff 	movw	r3, #2047	; 0x7ff
 80008b8:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80008ba:	2304      	movs	r3, #4
 80008bc:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 80008be:	2300      	movs	r3, #0
 80008c0:	61bb      	str	r3, [r7, #24]
  sConfig.OffsetSignedSaturation = DISABLE;
 80008c2:	2300      	movs	r3, #0
 80008c4:	777b      	strb	r3, [r7, #29]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 80008c6:	1d3b      	adds	r3, r7, #4
 80008c8:	4619      	mov	r1, r3
 80008ca:	481b      	ldr	r0, [pc, #108]	; (8000938 <MX_ADC3_Init+0x110>)
 80008cc:	f006 f950 	bl	8006b70 <HAL_ADC_ConfigChannel>
 80008d0:	4603      	mov	r3, r0
 80008d2:	2b00      	cmp	r3, #0
 80008d4:	d001      	beq.n	80008da <MX_ADC3_Init+0xb2>
  {
    Error_Handler();
 80008d6:	f003 f949 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 80008da:	4b1a      	ldr	r3, [pc, #104]	; (8000944 <MX_ADC3_Init+0x11c>)
 80008dc:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80008de:	230c      	movs	r3, #12
 80008e0:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 80008e2:	1d3b      	adds	r3, r7, #4
 80008e4:	4619      	mov	r1, r3
 80008e6:	4814      	ldr	r0, [pc, #80]	; (8000938 <MX_ADC3_Init+0x110>)
 80008e8:	f006 f942 	bl	8006b70 <HAL_ADC_ConfigChannel>
 80008ec:	4603      	mov	r3, r0
 80008ee:	2b00      	cmp	r3, #0
 80008f0:	d001      	beq.n	80008f6 <MX_ADC3_Init+0xce>
  {
    Error_Handler();
 80008f2:	f003 f93b 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 80008f6:	2301      	movs	r3, #1
 80008f8:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 80008fa:	2312      	movs	r3, #18
 80008fc:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 80008fe:	1d3b      	adds	r3, r7, #4
 8000900:	4619      	mov	r1, r3
 8000902:	480d      	ldr	r0, [pc, #52]	; (8000938 <MX_ADC3_Init+0x110>)
 8000904:	f006 f934 	bl	8006b70 <HAL_ADC_ConfigChannel>
 8000908:	4603      	mov	r3, r0
 800090a:	2b00      	cmp	r3, #0
 800090c:	d001      	beq.n	8000912 <MX_ADC3_Init+0xea>
  {
    Error_Handler();
 800090e:	f003 f92d 	bl	8003b6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8000912:	4b0d      	ldr	r3, [pc, #52]	; (8000948 <MX_ADC3_Init+0x120>)
 8000914:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_4;
 8000916:	2318      	movs	r3, #24
 8000918:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800091a:	1d3b      	adds	r3, r7, #4
 800091c:	4619      	mov	r1, r3
 800091e:	4806      	ldr	r0, [pc, #24]	; (8000938 <MX_ADC3_Init+0x110>)
 8000920:	f006 f926 	bl	8006b70 <HAL_ADC_ConfigChannel>
 8000924:	4603      	mov	r3, r0
 8000926:	2b00      	cmp	r3, #0
 8000928:	d001      	beq.n	800092e <MX_ADC3_Init+0x106>
  {
    Error_Handler();
 800092a:	f003 f91f 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 800092e:	bf00      	nop
 8000930:	3720      	adds	r7, #32
 8000932:	46bd      	mov	sp, r7
 8000934:	bd80      	pop	{r7, pc}
 8000936:	bf00      	nop
 8000938:	240001c0 	.word	0x240001c0
 800093c:	58026000 	.word	0x58026000
 8000940:	cb840000 	.word	0xcb840000
 8000944:	cfb80000 	.word	0xcfb80000
 8000948:	04300002 	.word	0x04300002

0800094c <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 800094c:	b580      	push	{r7, lr}
 800094e:	b08e      	sub	sp, #56	; 0x38
 8000950:	af00      	add	r7, sp, #0
 8000952:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000954:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000958:	2200      	movs	r2, #0
 800095a:	601a      	str	r2, [r3, #0]
 800095c:	605a      	str	r2, [r3, #4]
 800095e:	609a      	str	r2, [r3, #8]
 8000960:	60da      	str	r2, [r3, #12]
 8000962:	611a      	str	r2, [r3, #16]
  if(adcHandle->Instance==ADC1)
 8000964:	687b      	ldr	r3, [r7, #4]
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	4a7b      	ldr	r2, [pc, #492]	; (8000b58 <HAL_ADC_MspInit+0x20c>)
 800096a:	4293      	cmp	r3, r2
 800096c:	f040 8091 	bne.w	8000a92 <HAL_ADC_MspInit+0x146>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 8000970:	4b7a      	ldr	r3, [pc, #488]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000972:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000976:	4a79      	ldr	r2, [pc, #484]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000978:	f043 0320 	orr.w	r3, r3, #32
 800097c:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8000980:	4b76      	ldr	r3, [pc, #472]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000982:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000986:	f003 0320 	and.w	r3, r3, #32
 800098a:	623b      	str	r3, [r7, #32]
 800098c:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800098e:	4b73      	ldr	r3, [pc, #460]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000990:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000994:	4a71      	ldr	r2, [pc, #452]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000996:	f043 0304 	orr.w	r3, r3, #4
 800099a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800099e:	4b6f      	ldr	r3, [pc, #444]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 80009a0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80009a4:	f003 0304 	and.w	r3, r3, #4
 80009a8:	61fb      	str	r3, [r7, #28]
 80009aa:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80009ac:	4b6b      	ldr	r3, [pc, #428]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 80009ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80009b2:	4a6a      	ldr	r2, [pc, #424]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 80009b4:	f043 0301 	orr.w	r3, r3, #1
 80009b8:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80009bc:	4b67      	ldr	r3, [pc, #412]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 80009be:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80009c2:	f003 0301 	and.w	r3, r3, #1
 80009c6:	61bb      	str	r3, [r7, #24]
 80009c8:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80009ca:	4b64      	ldr	r3, [pc, #400]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 80009cc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80009d0:	4a62      	ldr	r2, [pc, #392]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 80009d2:	f043 0302 	orr.w	r3, r3, #2
 80009d6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80009da:	4b60      	ldr	r3, [pc, #384]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 80009dc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80009e0:	f003 0302 	and.w	r3, r3, #2
 80009e4:	617b      	str	r3, [r7, #20]
 80009e6:	697b      	ldr	r3, [r7, #20]
    PC4     ------> ADC1_INP4
    PC5     ------> ADC1_INP8
    PB0     ------> ADC1_INP9
    PB1     ------> ADC1_INP5
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5;
 80009e8:	2333      	movs	r3, #51	; 0x33
 80009ea:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80009ec:	2303      	movs	r3, #3
 80009ee:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009f0:	2300      	movs	r3, #0
 80009f2:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80009f4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80009f8:	4619      	mov	r1, r3
 80009fa:	4859      	ldr	r0, [pc, #356]	; (8000b60 <HAL_ADC_MspInit+0x214>)
 80009fc:	f00a fe50 	bl	800b6a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 8000a00:	23ce      	movs	r3, #206	; 0xce
 8000a02:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000a04:	2303      	movs	r3, #3
 8000a06:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a08:	2300      	movs	r3, #0
 8000a0a:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000a0c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a10:	4619      	mov	r1, r3
 8000a12:	4854      	ldr	r0, [pc, #336]	; (8000b64 <HAL_ADC_MspInit+0x218>)
 8000a14:	f00a fe44 	bl	800b6a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8000a18:	2303      	movs	r3, #3
 8000a1a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000a1c:	2303      	movs	r3, #3
 8000a1e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a20:	2300      	movs	r3, #0
 8000a22:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000a24:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a28:	4619      	mov	r1, r3
 8000a2a:	484f      	ldr	r0, [pc, #316]	; (8000b68 <HAL_ADC_MspInit+0x21c>)
 8000a2c:	f00a fe38 	bl	800b6a0 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA1_Stream0;
 8000a30:	4b4e      	ldr	r3, [pc, #312]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a32:	4a4f      	ldr	r2, [pc, #316]	; (8000b70 <HAL_ADC_MspInit+0x224>)
 8000a34:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 8000a36:	4b4d      	ldr	r3, [pc, #308]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a38:	2209      	movs	r2, #9
 8000a3a:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000a3c:	4b4b      	ldr	r3, [pc, #300]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a3e:	2200      	movs	r2, #0
 8000a40:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8000a42:	4b4a      	ldr	r3, [pc, #296]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a44:	2200      	movs	r2, #0
 8000a46:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8000a48:	4b48      	ldr	r3, [pc, #288]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a4a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000a4e:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8000a50:	4b46      	ldr	r3, [pc, #280]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a52:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000a56:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8000a58:	4b44      	ldr	r3, [pc, #272]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a5a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000a5e:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8000a60:	4b42      	ldr	r3, [pc, #264]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a62:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000a66:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8000a68:	4b40      	ldr	r3, [pc, #256]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a6a:	2200      	movs	r2, #0
 8000a6c:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8000a6e:	4b3f      	ldr	r3, [pc, #252]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a70:	2200      	movs	r2, #0
 8000a72:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8000a74:	483d      	ldr	r0, [pc, #244]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a76:	f007 fce3 	bl	8008440 <HAL_DMA_Init>
 8000a7a:	4603      	mov	r3, r0
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	d001      	beq.n	8000a84 <HAL_ADC_MspInit+0x138>
    {
      Error_Handler();
 8000a80:	f003 f874 	bl	8003b6c <Error_Handler>
    }

    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 8000a84:	687b      	ldr	r3, [r7, #4]
 8000a86:	4a39      	ldr	r2, [pc, #228]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a88:	64da      	str	r2, [r3, #76]	; 0x4c
 8000a8a:	4a38      	ldr	r2, [pc, #224]	; (8000b6c <HAL_ADC_MspInit+0x220>)
 8000a8c:	687b      	ldr	r3, [r7, #4]
 8000a8e:	6393      	str	r3, [r2, #56]	; 0x38

  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }
}
 8000a90:	e05e      	b.n	8000b50 <HAL_ADC_MspInit+0x204>
  else if(adcHandle->Instance==ADC3)
 8000a92:	687b      	ldr	r3, [r7, #4]
 8000a94:	681b      	ldr	r3, [r3, #0]
 8000a96:	4a37      	ldr	r2, [pc, #220]	; (8000b74 <HAL_ADC_MspInit+0x228>)
 8000a98:	4293      	cmp	r3, r2
 8000a9a:	d159      	bne.n	8000b50 <HAL_ADC_MspInit+0x204>
    __HAL_RCC_ADC3_CLK_ENABLE();
 8000a9c:	4b2f      	ldr	r3, [pc, #188]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000a9e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000aa2:	4a2e      	ldr	r2, [pc, #184]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000aa4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000aa8:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000aac:	4b2b      	ldr	r3, [pc, #172]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000aae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ab2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8000ab6:	613b      	str	r3, [r7, #16]
 8000ab8:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000aba:	4b28      	ldr	r3, [pc, #160]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000abc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ac0:	4a26      	ldr	r2, [pc, #152]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000ac2:	f043 0304 	orr.w	r3, r3, #4
 8000ac6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000aca:	4b24      	ldr	r3, [pc, #144]	; (8000b5c <HAL_ADC_MspInit+0x210>)
 8000acc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ad0:	f003 0304 	and.w	r3, r3, #4
 8000ad4:	60fb      	str	r3, [r7, #12]
 8000ad6:	68fb      	ldr	r3, [r7, #12]
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PC2, SYSCFG_SWITCH_PC2_OPEN);
 8000ad8:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
 8000adc:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
 8000ae0:	f005 fb9e 	bl	8006220 <HAL_SYSCFG_AnalogSwitchConfig>
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PC3, SYSCFG_SWITCH_PC3_OPEN);
 8000ae4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
 8000ae8:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
 8000aec:	f005 fb98 	bl	8006220 <HAL_SYSCFG_AnalogSwitchConfig>
    hdma_adc3.Instance = DMA1_Stream1;
 8000af0:	4b21      	ldr	r3, [pc, #132]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000af2:	4a22      	ldr	r2, [pc, #136]	; (8000b7c <HAL_ADC_MspInit+0x230>)
 8000af4:	601a      	str	r2, [r3, #0]
    hdma_adc3.Init.Request = DMA_REQUEST_ADC3;
 8000af6:	4b20      	ldr	r3, [pc, #128]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000af8:	2273      	movs	r2, #115	; 0x73
 8000afa:	605a      	str	r2, [r3, #4]
    hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000afc:	4b1e      	ldr	r3, [pc, #120]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000afe:	2200      	movs	r2, #0
 8000b00:	609a      	str	r2, [r3, #8]
    hdma_adc3.Init.PeriphInc = DMA_PINC_DISABLE;
 8000b02:	4b1d      	ldr	r3, [pc, #116]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b04:	2200      	movs	r2, #0
 8000b06:	60da      	str	r2, [r3, #12]
    hdma_adc3.Init.MemInc = DMA_MINC_ENABLE;
 8000b08:	4b1b      	ldr	r3, [pc, #108]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b0a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000b0e:	611a      	str	r2, [r3, #16]
    hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8000b10:	4b19      	ldr	r3, [pc, #100]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b12:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000b16:	615a      	str	r2, [r3, #20]
    hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8000b18:	4b17      	ldr	r3, [pc, #92]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b1a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000b1e:	619a      	str	r2, [r3, #24]
    hdma_adc3.Init.Mode = DMA_CIRCULAR;
 8000b20:	4b15      	ldr	r3, [pc, #84]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b22:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000b26:	61da      	str	r2, [r3, #28]
    hdma_adc3.Init.Priority = DMA_PRIORITY_LOW;
 8000b28:	4b13      	ldr	r3, [pc, #76]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	621a      	str	r2, [r3, #32]
    hdma_adc3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8000b2e:	4b12      	ldr	r3, [pc, #72]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b30:	2200      	movs	r2, #0
 8000b32:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 8000b34:	4810      	ldr	r0, [pc, #64]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b36:	f007 fc83 	bl	8008440 <HAL_DMA_Init>
 8000b3a:	4603      	mov	r3, r0
 8000b3c:	2b00      	cmp	r3, #0
 8000b3e:	d001      	beq.n	8000b44 <HAL_ADC_MspInit+0x1f8>
      Error_Handler();
 8000b40:	f003 f814 	bl	8003b6c <Error_Handler>
    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc3);
 8000b44:	687b      	ldr	r3, [r7, #4]
 8000b46:	4a0c      	ldr	r2, [pc, #48]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b48:	64da      	str	r2, [r3, #76]	; 0x4c
 8000b4a:	4a0b      	ldr	r2, [pc, #44]	; (8000b78 <HAL_ADC_MspInit+0x22c>)
 8000b4c:	687b      	ldr	r3, [r7, #4]
 8000b4e:	6393      	str	r3, [r2, #56]	; 0x38
}
 8000b50:	bf00      	nop
 8000b52:	3738      	adds	r7, #56	; 0x38
 8000b54:	46bd      	mov	sp, r7
 8000b56:	bd80      	pop	{r7, pc}
 8000b58:	40022000 	.word	0x40022000
 8000b5c:	58024400 	.word	0x58024400
 8000b60:	58020800 	.word	0x58020800
 8000b64:	58020000 	.word	0x58020000
 8000b68:	58020400 	.word	0x58020400
 8000b6c:	24000224 	.word	0x24000224
 8000b70:	40020010 	.word	0x40020010
 8000b74:	58026000 	.word	0x58026000
 8000b78:	2400029c 	.word	0x2400029c
 8000b7c:	40020028 	.word	0x40020028

08000b80 <MX_DAC1_Init>:
DAC_HandleTypeDef hdac1;
DMA_HandleTypeDef hdma_dac1_ch1;

/* DAC1 init function */
void MX_DAC1_Init(void)
{
 8000b80:	b580      	push	{r7, lr}
 8000b82:	b08a      	sub	sp, #40	; 0x28
 8000b84:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC1_Init 0 */

  /* USER CODE END DAC1_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 8000b86:	1d3b      	adds	r3, r7, #4
 8000b88:	2224      	movs	r2, #36	; 0x24
 8000b8a:	2100      	movs	r1, #0
 8000b8c:	4618      	mov	r0, r3
 8000b8e:	f019 ff55 	bl	801aa3c <memset>

  /* USER CODE END DAC1_Init 1 */

  /** DAC Initialization
  */
  hdac1.Instance = DAC1;
 8000b92:	4b12      	ldr	r3, [pc, #72]	; (8000bdc <MX_DAC1_Init+0x5c>)
 8000b94:	4a12      	ldr	r2, [pc, #72]	; (8000be0 <MX_DAC1_Init+0x60>)
 8000b96:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac1) != HAL_OK)
 8000b98:	4810      	ldr	r0, [pc, #64]	; (8000bdc <MX_DAC1_Init+0x5c>)
 8000b9a:	f007 f84b 	bl	8007c34 <HAL_DAC_Init>
 8000b9e:	4603      	mov	r3, r0
 8000ba0:	2b00      	cmp	r3, #0
 8000ba2:	d001      	beq.n	8000ba8 <MX_DAC1_Init+0x28>
  {
    Error_Handler();
 8000ba4:	f002 ffe2 	bl	8003b6c <Error_Handler>
  }

  /** DAC channel OUT1 config
  */
  sConfig.DAC_SampleAndHold = DAC_SAMPLEANDHOLD_DISABLE;
 8000ba8:	2300      	movs	r3, #0
 8000baa:	607b      	str	r3, [r7, #4]
  sConfig.DAC_Trigger = DAC_TRIGGER_T2_TRGO;
 8000bac:	230a      	movs	r3, #10
 8000bae:	60bb      	str	r3, [r7, #8]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8000bb0:	2300      	movs	r3, #0
 8000bb2:	60fb      	str	r3, [r7, #12]
  sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 8000bb4:	2301      	movs	r3, #1
 8000bb6:	613b      	str	r3, [r7, #16]
  sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 8000bb8:	2300      	movs	r3, #0
 8000bba:	617b      	str	r3, [r7, #20]
  if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 8000bbc:	1d3b      	adds	r3, r7, #4
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	4619      	mov	r1, r3
 8000bc2:	4806      	ldr	r0, [pc, #24]	; (8000bdc <MX_DAC1_Init+0x5c>)
 8000bc4:	f007 fa66 	bl	8008094 <HAL_DAC_ConfigChannel>
 8000bc8:	4603      	mov	r3, r0
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d001      	beq.n	8000bd2 <MX_DAC1_Init+0x52>
  {
    Error_Handler();
 8000bce:	f002 ffcd 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN DAC1_Init 2 */

  /* USER CODE END DAC1_Init 2 */

}
 8000bd2:	bf00      	nop
 8000bd4:	3728      	adds	r7, #40	; 0x28
 8000bd6:	46bd      	mov	sp, r7
 8000bd8:	bd80      	pop	{r7, pc}
 8000bda:	bf00      	nop
 8000bdc:	24000314 	.word	0x24000314
 8000be0:	40007400 	.word	0x40007400

08000be4 <HAL_DAC_MspInit>:

void HAL_DAC_MspInit(DAC_HandleTypeDef* dacHandle)
{
 8000be4:	b580      	push	{r7, lr}
 8000be6:	b08a      	sub	sp, #40	; 0x28
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bec:	f107 0314 	add.w	r3, r7, #20
 8000bf0:	2200      	movs	r2, #0
 8000bf2:	601a      	str	r2, [r3, #0]
 8000bf4:	605a      	str	r2, [r3, #4]
 8000bf6:	609a      	str	r2, [r3, #8]
 8000bf8:	60da      	str	r2, [r3, #12]
 8000bfa:	611a      	str	r2, [r3, #16]
  if(dacHandle->Instance==DAC1)
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	4a34      	ldr	r2, [pc, #208]	; (8000cd4 <HAL_DAC_MspInit+0xf0>)
 8000c02:	4293      	cmp	r3, r2
 8000c04:	d161      	bne.n	8000cca <HAL_DAC_MspInit+0xe6>
  {
  /* USER CODE BEGIN DAC1_MspInit 0 */

  /* USER CODE END DAC1_MspInit 0 */
    /* DAC1 clock enable */
    __HAL_RCC_DAC12_CLK_ENABLE();
 8000c06:	4b34      	ldr	r3, [pc, #208]	; (8000cd8 <HAL_DAC_MspInit+0xf4>)
 8000c08:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8000c0c:	4a32      	ldr	r2, [pc, #200]	; (8000cd8 <HAL_DAC_MspInit+0xf4>)
 8000c0e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000c12:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8000c16:	4b30      	ldr	r3, [pc, #192]	; (8000cd8 <HAL_DAC_MspInit+0xf4>)
 8000c18:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8000c1c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8000c20:	613b      	str	r3, [r7, #16]
 8000c22:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c24:	4b2c      	ldr	r3, [pc, #176]	; (8000cd8 <HAL_DAC_MspInit+0xf4>)
 8000c26:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c2a:	4a2b      	ldr	r2, [pc, #172]	; (8000cd8 <HAL_DAC_MspInit+0xf4>)
 8000c2c:	f043 0301 	orr.w	r3, r3, #1
 8000c30:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000c34:	4b28      	ldr	r3, [pc, #160]	; (8000cd8 <HAL_DAC_MspInit+0xf4>)
 8000c36:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c3a:	f003 0301 	and.w	r3, r3, #1
 8000c3e:	60fb      	str	r3, [r7, #12]
 8000c40:	68fb      	ldr	r3, [r7, #12]
    /**DAC1 GPIO Configuration
    PA4     ------> DAC1_OUT1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8000c42:	2310      	movs	r3, #16
 8000c44:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000c46:	2303      	movs	r3, #3
 8000c48:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c4a:	2300      	movs	r3, #0
 8000c4c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c4e:	f107 0314 	add.w	r3, r7, #20
 8000c52:	4619      	mov	r1, r3
 8000c54:	4821      	ldr	r0, [pc, #132]	; (8000cdc <HAL_DAC_MspInit+0xf8>)
 8000c56:	f00a fd23 	bl	800b6a0 <HAL_GPIO_Init>

    /* DAC1 DMA Init */
    /* DAC1_CH1 Init */
    hdma_dac1_ch1.Instance = DMA1_Stream5;
 8000c5a:	4b21      	ldr	r3, [pc, #132]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c5c:	4a21      	ldr	r2, [pc, #132]	; (8000ce4 <HAL_DAC_MspInit+0x100>)
 8000c5e:	601a      	str	r2, [r3, #0]
    hdma_dac1_ch1.Init.Request = DMA_REQUEST_DAC1;
 8000c60:	4b1f      	ldr	r3, [pc, #124]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c62:	2243      	movs	r2, #67	; 0x43
 8000c64:	605a      	str	r2, [r3, #4]
    hdma_dac1_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000c66:	4b1e      	ldr	r3, [pc, #120]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c68:	2240      	movs	r2, #64	; 0x40
 8000c6a:	609a      	str	r2, [r3, #8]
    hdma_dac1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8000c6c:	4b1c      	ldr	r3, [pc, #112]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c6e:	2200      	movs	r2, #0
 8000c70:	60da      	str	r2, [r3, #12]
    hdma_dac1_ch1.Init.MemInc = DMA_MINC_ENABLE;
 8000c72:	4b1b      	ldr	r3, [pc, #108]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c74:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000c78:	611a      	str	r2, [r3, #16]
    hdma_dac1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8000c7a:	4b19      	ldr	r3, [pc, #100]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c7c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000c80:	615a      	str	r2, [r3, #20]
    hdma_dac1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8000c82:	4b17      	ldr	r3, [pc, #92]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c84:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000c88:	619a      	str	r2, [r3, #24]
    hdma_dac1_ch1.Init.Mode = DMA_CIRCULAR;
 8000c8a:	4b15      	ldr	r3, [pc, #84]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c8c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000c90:	61da      	str	r2, [r3, #28]
    hdma_dac1_ch1.Init.Priority = DMA_PRIORITY_LOW;
 8000c92:	4b13      	ldr	r3, [pc, #76]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c94:	2200      	movs	r2, #0
 8000c96:	621a      	str	r2, [r3, #32]
    hdma_dac1_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8000c98:	4b11      	ldr	r3, [pc, #68]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_dac1_ch1) != HAL_OK)
 8000c9e:	4810      	ldr	r0, [pc, #64]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000ca0:	f007 fbce 	bl	8008440 <HAL_DMA_Init>
 8000ca4:	4603      	mov	r3, r0
 8000ca6:	2b00      	cmp	r3, #0
 8000ca8:	d001      	beq.n	8000cae <HAL_DAC_MspInit+0xca>
    {
      Error_Handler();
 8000caa:	f002 ff5f 	bl	8003b6c <Error_Handler>
    }

    __HAL_LINKDMA(dacHandle,DMA_Handle1,hdma_dac1_ch1);
 8000cae:	687b      	ldr	r3, [r7, #4]
 8000cb0:	4a0b      	ldr	r2, [pc, #44]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000cb2:	609a      	str	r2, [r3, #8]
 8000cb4:	4a0a      	ldr	r2, [pc, #40]	; (8000ce0 <HAL_DAC_MspInit+0xfc>)
 8000cb6:	687b      	ldr	r3, [r7, #4]
 8000cb8:	6393      	str	r3, [r2, #56]	; 0x38

    /* DAC1 interrupt Init */
    HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 5, 0);
 8000cba:	2200      	movs	r2, #0
 8000cbc:	2105      	movs	r1, #5
 8000cbe:	2036      	movs	r0, #54	; 0x36
 8000cc0:	f006 ff90 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8000cc4:	2036      	movs	r0, #54	; 0x36
 8000cc6:	f006 ffa7 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DAC1_MspInit 1 */

  /* USER CODE END DAC1_MspInit 1 */
  }
}
 8000cca:	bf00      	nop
 8000ccc:	3728      	adds	r7, #40	; 0x28
 8000cce:	46bd      	mov	sp, r7
 8000cd0:	bd80      	pop	{r7, pc}
 8000cd2:	bf00      	nop
 8000cd4:	40007400 	.word	0x40007400
 8000cd8:	58024400 	.word	0x58024400
 8000cdc:	58020000 	.word	0x58020000
 8000ce0:	24000328 	.word	0x24000328
 8000ce4:	40020088 	.word	0x40020088

08000ce8 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8000ce8:	b580      	push	{r7, lr}
 8000cea:	b082      	sub	sp, #8
 8000cec:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8000cee:	4b29      	ldr	r3, [pc, #164]	; (8000d94 <MX_DMA_Init+0xac>)
 8000cf0:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000cf4:	4a27      	ldr	r2, [pc, #156]	; (8000d94 <MX_DMA_Init+0xac>)
 8000cf6:	f043 0301 	orr.w	r3, r3, #1
 8000cfa:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8000cfe:	4b25      	ldr	r3, [pc, #148]	; (8000d94 <MX_DMA_Init+0xac>)
 8000d00:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000d04:	f003 0301 	and.w	r3, r3, #1
 8000d08:	607b      	str	r3, [r7, #4]
 8000d0a:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 5, 0);
 8000d0c:	2200      	movs	r2, #0
 8000d0e:	2105      	movs	r1, #5
 8000d10:	200b      	movs	r0, #11
 8000d12:	f006 ff67 	bl	8007be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8000d16:	200b      	movs	r0, #11
 8000d18:	f006 ff7e 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 8000d1c:	2200      	movs	r2, #0
 8000d1e:	2105      	movs	r1, #5
 8000d20:	200c      	movs	r0, #12
 8000d22:	f006 ff5f 	bl	8007be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 8000d26:	200c      	movs	r0, #12
 8000d28:	f006 ff76 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 5, 0);
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	2105      	movs	r1, #5
 8000d30:	200d      	movs	r0, #13
 8000d32:	f006 ff57 	bl	8007be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 8000d36:	200d      	movs	r0, #13
 8000d38:	f006 ff6e 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 5, 0);
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	2105      	movs	r1, #5
 8000d40:	200e      	movs	r0, #14
 8000d42:	f006 ff4f 	bl	8007be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 8000d46:	200e      	movs	r0, #14
 8000d48:	f006 ff66 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 5, 0);
 8000d4c:	2200      	movs	r2, #0
 8000d4e:	2105      	movs	r1, #5
 8000d50:	200f      	movs	r0, #15
 8000d52:	f006 ff47 	bl	8007be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8000d56:	200f      	movs	r0, #15
 8000d58:	f006 ff5e 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 5, 0);
 8000d5c:	2200      	movs	r2, #0
 8000d5e:	2105      	movs	r1, #5
 8000d60:	2010      	movs	r0, #16
 8000d62:	f006 ff3f 	bl	8007be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8000d66:	2010      	movs	r0, #16
 8000d68:	f006 ff56 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream6_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 5, 0);
 8000d6c:	2200      	movs	r2, #0
 8000d6e:	2105      	movs	r1, #5
 8000d70:	2011      	movs	r0, #17
 8000d72:	f006 ff37 	bl	8007be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 8000d76:	2011      	movs	r0, #17
 8000d78:	f006 ff4e 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 5, 0);
 8000d7c:	2200      	movs	r2, #0
 8000d7e:	2105      	movs	r1, #5
 8000d80:	202f      	movs	r0, #47	; 0x2f
 8000d82:	f006 ff2f 	bl	8007be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 8000d86:	202f      	movs	r0, #47	; 0x2f
 8000d88:	f006 ff46 	bl	8007c18 <HAL_NVIC_EnableIRQ>

}
 8000d8c:	bf00      	nop
 8000d8e:	3708      	adds	r7, #8
 8000d90:	46bd      	mov	sp, r7
 8000d92:	bd80      	pop	{r7, pc}
 8000d94:	58024400 	.word	0x58024400

08000d98 <EE_Init>:
  * @retval - Flash error code: on write Flash error
  *         - FLASH_COMPLETE: on success
  */

uint16_t EE_Init(void)
{
 8000d98:	b580      	push	{r7, lr}
 8000d9a:	b092      	sub	sp, #72	; 0x48
 8000d9c:	af00      	add	r7, sp, #0
  uint16_t PageStatus0 = 6, PageStatus1 = 6;
 8000d9e:	2306      	movs	r3, #6
 8000da0:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
 8000da4:	2306      	movs	r3, #6
 8000da6:	f8a7 3040 	strh.w	r3, [r7, #64]	; 0x40
  uint16_t VarIdx = 0;
 8000daa:	2300      	movs	r3, #0
 8000dac:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
  uint16_t EepromStatus = 0, ReadStatus = 0;
 8000db0:	2300      	movs	r3, #0
 8000db2:	87fb      	strh	r3, [r7, #62]	; 0x3e
 8000db4:	2300      	movs	r3, #0
 8000db6:	87bb      	strh	r3, [r7, #60]	; 0x3c
  int16_t x = -1;
 8000db8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000dbc:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
  HAL_StatusTypeDef  FlashStatus;
  uint32_t SectorError = 0;
 8000dc0:	2300      	movs	r3, #0
 8000dc2:	637b      	str	r3, [r7, #52]	; 0x34
  FLASH_EraseInitTypeDef pEraseInit;
  uint32_t valid[8] = {0x0000};
 8000dc4:	463b      	mov	r3, r7
 8000dc6:	2220      	movs	r2, #32
 8000dc8:	2100      	movs	r1, #0
 8000dca:	4618      	mov	r0, r3
 8000dcc:	f019 fe36 	bl	801aa3c <memset>

  /* Get Page0 status */
  PageStatus0 = (*(__IO uint16_t*)PAGE0_BASE_ADDRESS);
 8000dd0:	4bb7      	ldr	r3, [pc, #732]	; (80010b0 <EE_Init+0x318>)
 8000dd2:	881b      	ldrh	r3, [r3, #0]
 8000dd4:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
  /* Get Page1 status */
  PageStatus1 = (*(__IO uint16_t*)PAGE1_BASE_ADDRESS);
 8000dd8:	4bb6      	ldr	r3, [pc, #728]	; (80010b4 <EE_Init+0x31c>)
 8000dda:	881b      	ldrh	r3, [r3, #0]
 8000ddc:	f8a7 3040 	strh.w	r3, [r7, #64]	; 0x40

  pEraseInit.TypeErase = TYPEERASE_SECTORS;
 8000de0:	2300      	movs	r3, #0
 8000de2:	623b      	str	r3, [r7, #32]
  pEraseInit.Banks = FLASH_BANK_2 ;
 8000de4:	2302      	movs	r3, #2
 8000de6:	627b      	str	r3, [r7, #36]	; 0x24
  pEraseInit.Sector = PAGE0_ID;
 8000de8:	2306      	movs	r3, #6
 8000dea:	62bb      	str	r3, [r7, #40]	; 0x28
  pEraseInit.NbSectors = 1;
 8000dec:	2301      	movs	r3, #1
 8000dee:	62fb      	str	r3, [r7, #44]	; 0x2c
  pEraseInit.VoltageRange = VOLTAGE_RANGE;
 8000df0:	2320      	movs	r3, #32
 8000df2:	633b      	str	r3, [r7, #48]	; 0x30

  /* Check for invalid header states and repair if necessary */
  switch (PageStatus0)
 8000df4:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 8000df8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dfc:	4293      	cmp	r3, r2
 8000dfe:	d00d      	beq.n	8000e1c <EE_Init+0x84>
 8000e00:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8000e04:	f280 8430 	bge.w	8001668 <EE_Init+0x8d0>
 8000e08:	2b00      	cmp	r3, #0
 8000e0a:	f000 82ca 	beq.w	80013a2 <EE_Init+0x60a>
 8000e0e:	f64e 62ee 	movw	r2, #61166	; 0xeeee
 8000e12:	4293      	cmp	r3, r2
 8000e14:	f000 810f 	beq.w	8001036 <EE_Init+0x29e>
 8000e18:	f000 bc26 	b.w	8001668 <EE_Init+0x8d0>
  {
    case ERASED:
      if (PageStatus1 == VALID_PAGE) /* Page0 erased, Page1 valid */
 8000e1c:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	d154      	bne.n	8000ece <EE_Init+0x136>
      {
          /* Erase Page0 */
        if(!EE_VerifyPageFullyErased(PAGE0_BASE_ADDRESS))
 8000e24:	48a2      	ldr	r0, [pc, #648]	; (80010b0 <EE_Init+0x318>)
 8000e26:	f000 fc45 	bl	80016b4 <EE_VerifyPageFullyErased>
 8000e2a:	4603      	mov	r3, r0
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	f040 8428 	bne.w	8001682 <EE_Init+0x8ea>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000e32:	f3bf 8f4f 	dsb	sy
}
 8000e36:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000e38:	f3bf 8f6f 	isb	sy
}
 8000e3c:	bf00      	nop
__STATIC_FORCEINLINE void SCB_DisableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8000e3e:	4b9e      	ldr	r3, [pc, #632]	; (80010b8 <EE_Init+0x320>)
 8000e40:	695b      	ldr	r3, [r3, #20]
 8000e42:	4a9d      	ldr	r2, [pc, #628]	; (80010b8 <EE_Init+0x320>)
 8000e44:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8000e48:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000e4a:	4b9b      	ldr	r3, [pc, #620]	; (80010b8 <EE_Init+0x320>)
 8000e4c:	2200      	movs	r2, #0
 8000e4e:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000e52:	f3bf 8f4f 	dsb	sy
}
 8000e56:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000e58:	f3bf 8f6f 	isb	sy
}
 8000e5c:	bf00      	nop
    __DSB();
    __ISB();
  #endif
}
 8000e5e:	bf00      	nop
        {
		  SCB_DisableICache();
          FlashStatus = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 8000e60:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8000e64:	f107 0320 	add.w	r3, r7, #32
 8000e68:	4611      	mov	r1, r2
 8000e6a:	4618      	mov	r0, r3
 8000e6c:	f00a faa6 	bl	800b3bc <HAL_FLASHEx_Erase>
 8000e70:	4603      	mov	r3, r0
 8000e72:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8000e76:	4b90      	ldr	r3, [pc, #576]	; (80010b8 <EE_Init+0x320>)
 8000e78:	695b      	ldr	r3, [r3, #20]
 8000e7a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000e7e:	2b00      	cmp	r3, #0
 8000e80:	d11b      	bne.n	8000eba <EE_Init+0x122>
  __ASM volatile ("dsb 0xF":::"memory");
 8000e82:	f3bf 8f4f 	dsb	sy
}
 8000e86:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000e88:	f3bf 8f6f 	isb	sy
}
 8000e8c:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000e8e:	4b8a      	ldr	r3, [pc, #552]	; (80010b8 <EE_Init+0x320>)
 8000e90:	2200      	movs	r2, #0
 8000e92:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000e96:	f3bf 8f4f 	dsb	sy
}
 8000e9a:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000e9c:	f3bf 8f6f 	isb	sy
}
 8000ea0:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000ea2:	4b85      	ldr	r3, [pc, #532]	; (80010b8 <EE_Init+0x320>)
 8000ea4:	695b      	ldr	r3, [r3, #20]
 8000ea6:	4a84      	ldr	r2, [pc, #528]	; (80010b8 <EE_Init+0x320>)
 8000ea8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000eac:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8000eae:	f3bf 8f4f 	dsb	sy
}
 8000eb2:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000eb4:	f3bf 8f6f 	isb	sy
}
 8000eb8:	e000      	b.n	8000ebc <EE_Init+0x124>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8000eba:	bf00      	nop
		  SCB_EnableICache();
          /* If erase operation was failed, a Flash error code is returned */
          if (FlashStatus != HAL_OK)
 8000ebc:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8000ec0:	2b00      	cmp	r3, #0
 8000ec2:	f000 83de 	beq.w	8001682 <EE_Init+0x8ea>
          {
            return FlashStatus;
 8000ec6:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8000eca:	b29b      	uxth	r3, r3
 8000ecc:	e3e1      	b.n	8001692 <EE_Init+0x8fa>
          }
        }
      }
      else if (PageStatus1 == RECEIVE_DATA) /* Page0 erased, Page1 receive */
 8000ece:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 8000ed2:	f64e 62ee 	movw	r2, #61166	; 0xeeee
 8000ed6:	4293      	cmp	r3, r2
 8000ed8:	f040 809f 	bne.w	800101a <EE_Init+0x282>
      {
        /* Erase Page0 */
        if(!EE_VerifyPageFullyErased(PAGE0_BASE_ADDRESS))
 8000edc:	4874      	ldr	r0, [pc, #464]	; (80010b0 <EE_Init+0x318>)
 8000ede:	f000 fbe9 	bl	80016b4 <EE_VerifyPageFullyErased>
 8000ee2:	4603      	mov	r3, r0
 8000ee4:	2b00      	cmp	r3, #0
 8000ee6:	d14c      	bne.n	8000f82 <EE_Init+0x1ea>
  __ASM volatile ("dsb 0xF":::"memory");
 8000ee8:	f3bf 8f4f 	dsb	sy
}
 8000eec:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000eee:	f3bf 8f6f 	isb	sy
}
 8000ef2:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8000ef4:	4b70      	ldr	r3, [pc, #448]	; (80010b8 <EE_Init+0x320>)
 8000ef6:	695b      	ldr	r3, [r3, #20]
 8000ef8:	4a6f      	ldr	r2, [pc, #444]	; (80010b8 <EE_Init+0x320>)
 8000efa:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8000efe:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000f00:	4b6d      	ldr	r3, [pc, #436]	; (80010b8 <EE_Init+0x320>)
 8000f02:	2200      	movs	r2, #0
 8000f04:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000f08:	f3bf 8f4f 	dsb	sy
}
 8000f0c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000f0e:	f3bf 8f6f 	isb	sy
}
 8000f12:	bf00      	nop
}
 8000f14:	bf00      	nop
        {
		  SCB_DisableICache();
          FlashStatus = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 8000f16:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8000f1a:	f107 0320 	add.w	r3, r7, #32
 8000f1e:	4611      	mov	r1, r2
 8000f20:	4618      	mov	r0, r3
 8000f22:	f00a fa4b 	bl	800b3bc <HAL_FLASHEx_Erase>
 8000f26:	4603      	mov	r3, r0
 8000f28:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8000f2c:	4b62      	ldr	r3, [pc, #392]	; (80010b8 <EE_Init+0x320>)
 8000f2e:	695b      	ldr	r3, [r3, #20]
 8000f30:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000f34:	2b00      	cmp	r3, #0
 8000f36:	d11b      	bne.n	8000f70 <EE_Init+0x1d8>
  __ASM volatile ("dsb 0xF":::"memory");
 8000f38:	f3bf 8f4f 	dsb	sy
}
 8000f3c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000f3e:	f3bf 8f6f 	isb	sy
}
 8000f42:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000f44:	4b5c      	ldr	r3, [pc, #368]	; (80010b8 <EE_Init+0x320>)
 8000f46:	2200      	movs	r2, #0
 8000f48:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000f4c:	f3bf 8f4f 	dsb	sy
}
 8000f50:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000f52:	f3bf 8f6f 	isb	sy
}
 8000f56:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000f58:	4b57      	ldr	r3, [pc, #348]	; (80010b8 <EE_Init+0x320>)
 8000f5a:	695b      	ldr	r3, [r3, #20]
 8000f5c:	4a56      	ldr	r2, [pc, #344]	; (80010b8 <EE_Init+0x320>)
 8000f5e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000f62:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8000f64:	f3bf 8f4f 	dsb	sy
}
 8000f68:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000f6a:	f3bf 8f6f 	isb	sy
}
 8000f6e:	e000      	b.n	8000f72 <EE_Init+0x1da>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8000f70:	bf00      	nop
		  SCB_EnableICache();
          /* If erase operation was failed, a Flash error code is returned */
          if (FlashStatus != HAL_OK)
 8000f72:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d003      	beq.n	8000f82 <EE_Init+0x1ea>
          {
            return FlashStatus;
 8000f7a:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8000f7e:	b29b      	uxth	r3, r3
 8000f80:	e387      	b.n	8001692 <EE_Init+0x8fa>
  __ASM volatile ("dsb 0xF":::"memory");
 8000f82:	f3bf 8f4f 	dsb	sy
}
 8000f86:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000f88:	f3bf 8f6f 	isb	sy
}
 8000f8c:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8000f8e:	4b4a      	ldr	r3, [pc, #296]	; (80010b8 <EE_Init+0x320>)
 8000f90:	695b      	ldr	r3, [r3, #20]
 8000f92:	4a49      	ldr	r2, [pc, #292]	; (80010b8 <EE_Init+0x320>)
 8000f94:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8000f98:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000f9a:	4b47      	ldr	r3, [pc, #284]	; (80010b8 <EE_Init+0x320>)
 8000f9c:	2200      	movs	r2, #0
 8000f9e:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000fa2:	f3bf 8f4f 	dsb	sy
}
 8000fa6:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000fa8:	f3bf 8f6f 	isb	sy
}
 8000fac:	bf00      	nop
}
 8000fae:	bf00      	nop
          }
        }
        /* Mark Page1 as valid */
		SCB_DisableICache();
        FlashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, PAGE1_BASE_ADDRESS, ((uint32_t)valid));
 8000fb0:	463b      	mov	r3, r7
 8000fb2:	461a      	mov	r2, r3
 8000fb4:	493f      	ldr	r1, [pc, #252]	; (80010b4 <EE_Init+0x31c>)
 8000fb6:	2001      	movs	r0, #1
 8000fb8:	f00a f898 	bl	800b0ec <HAL_FLASH_Program>
 8000fbc:	4603      	mov	r3, r0
 8000fbe:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8000fc2:	4b3d      	ldr	r3, [pc, #244]	; (80010b8 <EE_Init+0x320>)
 8000fc4:	695b      	ldr	r3, [r3, #20]
 8000fc6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000fca:	2b00      	cmp	r3, #0
 8000fcc:	d11b      	bne.n	8001006 <EE_Init+0x26e>
  __ASM volatile ("dsb 0xF":::"memory");
 8000fce:	f3bf 8f4f 	dsb	sy
}
 8000fd2:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000fd4:	f3bf 8f6f 	isb	sy
}
 8000fd8:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000fda:	4b37      	ldr	r3, [pc, #220]	; (80010b8 <EE_Init+0x320>)
 8000fdc:	2200      	movs	r2, #0
 8000fde:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000fe2:	f3bf 8f4f 	dsb	sy
}
 8000fe6:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000fe8:	f3bf 8f6f 	isb	sy
}
 8000fec:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000fee:	4b32      	ldr	r3, [pc, #200]	; (80010b8 <EE_Init+0x320>)
 8000ff0:	695b      	ldr	r3, [r3, #20]
 8000ff2:	4a31      	ldr	r2, [pc, #196]	; (80010b8 <EE_Init+0x320>)
 8000ff4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000ff8:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8000ffa:	f3bf 8f4f 	dsb	sy
}
 8000ffe:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001000:	f3bf 8f6f 	isb	sy
}
 8001004:	e000      	b.n	8001008 <EE_Init+0x270>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001006:	bf00      	nop
		SCB_EnableICache();

        /* If program operation was failed, a Flash error code is returned */
        if (FlashStatus != HAL_OK)
 8001008:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800100c:	2b00      	cmp	r3, #0
 800100e:	f000 8338 	beq.w	8001682 <EE_Init+0x8ea>
        {
          return FlashStatus;
 8001012:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001016:	b29b      	uxth	r3, r3
 8001018:	e33b      	b.n	8001692 <EE_Init+0x8fa>
        }
      }
      else /* First EEPROM access (Page0&1 are erased) or invalid state -> format EEPROM */
      {
        /* Erase both Page0 and Page1 and set Page0 as valid page */
        FlashStatus = EE_Format();
 800101a:	f000 fbdf 	bl	80017dc <EE_Format>
 800101e:	4603      	mov	r3, r0
 8001020:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
        /* If erase/program operation was failed, a Flash error code is returned */
        if (FlashStatus != HAL_OK)
 8001024:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001028:	2b00      	cmp	r3, #0
 800102a:	f000 832a 	beq.w	8001682 <EE_Init+0x8ea>
        {
          return FlashStatus;
 800102e:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001032:	b29b      	uxth	r3, r3
 8001034:	e32d      	b.n	8001692 <EE_Init+0x8fa>
        }
      }
      break;

    case RECEIVE_DATA:
      if (PageStatus1 == VALID_PAGE) /* Page0 receive, Page1 valid */
 8001036:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800103a:	2b00      	cmp	r3, #0
 800103c:	f040 80f5 	bne.w	800122a <EE_Init+0x492>
      {
        /* Transfer data from Page1 to Page0 */
        for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 8001040:	2300      	movs	r3, #0
 8001042:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8001046:	e044      	b.n	80010d2 <EE_Init+0x33a>
        {
          if (( *(__IO uint16_t*)(PAGE0_BASE_ADDRESS + 6)) == VirtAddVarTab[VarIdx])
 8001048:	4b1c      	ldr	r3, [pc, #112]	; (80010bc <EE_Init+0x324>)
 800104a:	881b      	ldrh	r3, [r3, #0]
 800104c:	b29a      	uxth	r2, r3
 800104e:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 8001052:	491b      	ldr	r1, [pc, #108]	; (80010c0 <EE_Init+0x328>)
 8001054:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8001058:	429a      	cmp	r2, r3
 800105a:	d103      	bne.n	8001064 <EE_Init+0x2cc>
          {
            x = VarIdx;
 800105c:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 8001060:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
          }
          if (VarIdx != x)
 8001064:	f8b7 2046 	ldrh.w	r2, [r7, #70]	; 0x46
 8001068:	f9b7 3044 	ldrsh.w	r3, [r7, #68]	; 0x44
 800106c:	429a      	cmp	r2, r3
 800106e:	d02b      	beq.n	80010c8 <EE_Init+0x330>
          {
            /* Read the last variables' updates */
            ReadStatus = EE_ReadVariable(VirtAddVarTab[VarIdx], &DataVar);
 8001070:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 8001074:	4a12      	ldr	r2, [pc, #72]	; (80010c0 <EE_Init+0x328>)
 8001076:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800107a:	4912      	ldr	r1, [pc, #72]	; (80010c4 <EE_Init+0x32c>)
 800107c:	4618      	mov	r0, r3
 800107e:	f000 fb43 	bl	8001708 <EE_ReadVariable>
 8001082:	4603      	mov	r3, r0
 8001084:	87bb      	strh	r3, [r7, #60]	; 0x3c
            /* In case variable corresponding to the virtual address was found */
            if (ReadStatus != 0x1)
 8001086:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 8001088:	2b01      	cmp	r3, #1
 800108a:	d01d      	beq.n	80010c8 <EE_Init+0x330>
            {
              /* Transfer the variable to the Page0 */
              EepromStatus = EE_VerifyPageFullWriteVariable(VirtAddVarTab[VarIdx], DataVar);
 800108c:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 8001090:	4a0b      	ldr	r2, [pc, #44]	; (80010c0 <EE_Init+0x328>)
 8001092:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001096:	4a0b      	ldr	r2, [pc, #44]	; (80010c4 <EE_Init+0x32c>)
 8001098:	8812      	ldrh	r2, [r2, #0]
 800109a:	4611      	mov	r1, r2
 800109c:	4618      	mov	r0, r3
 800109e:	f000 fcf7 	bl	8001a90 <EE_VerifyPageFullWriteVariable>
 80010a2:	4603      	mov	r3, r0
 80010a4:	87fb      	strh	r3, [r7, #62]	; 0x3e
              /* If program operation was failed, a Flash error code is returned */
              if (EepromStatus != HAL_OK)
 80010a6:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 80010a8:	2b00      	cmp	r3, #0
 80010aa:	d00d      	beq.n	80010c8 <EE_Init+0x330>
              {
                return EepromStatus;
 80010ac:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 80010ae:	e2f0      	b.n	8001692 <EE_Init+0x8fa>
 80010b0:	081c0000 	.word	0x081c0000
 80010b4:	081e0000 	.word	0x081e0000
 80010b8:	e000ed00 	.word	0xe000ed00
 80010bc:	081c0006 	.word	0x081c0006
 80010c0:	24000000 	.word	0x24000000
 80010c4:	240003a0 	.word	0x240003a0
        for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 80010c8:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 80010cc:	3301      	adds	r3, #1
 80010ce:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 80010d2:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 80010d6:	2b1c      	cmp	r3, #28
 80010d8:	d9b6      	bls.n	8001048 <EE_Init+0x2b0>
  __ASM volatile ("dsb 0xF":::"memory");
 80010da:	f3bf 8f4f 	dsb	sy
}
 80010de:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80010e0:	f3bf 8f6f 	isb	sy
}
 80010e4:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 80010e6:	4bb8      	ldr	r3, [pc, #736]	; (80013c8 <EE_Init+0x630>)
 80010e8:	695b      	ldr	r3, [r3, #20]
 80010ea:	4ab7      	ldr	r2, [pc, #732]	; (80013c8 <EE_Init+0x630>)
 80010ec:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80010f0:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80010f2:	4bb5      	ldr	r3, [pc, #724]	; (80013c8 <EE_Init+0x630>)
 80010f4:	2200      	movs	r2, #0
 80010f6:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80010fa:	f3bf 8f4f 	dsb	sy
}
 80010fe:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001100:	f3bf 8f6f 	isb	sy
}
 8001104:	bf00      	nop
}
 8001106:	bf00      	nop
            }
          }
        }
        /* Mark Page0 as valid */
		SCB_DisableICache();
        FlashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, PAGE0_BASE_ADDRESS, ((uint32_t)valid));
 8001108:	463b      	mov	r3, r7
 800110a:	461a      	mov	r2, r3
 800110c:	49af      	ldr	r1, [pc, #700]	; (80013cc <EE_Init+0x634>)
 800110e:	2001      	movs	r0, #1
 8001110:	f009 ffec 	bl	800b0ec <HAL_FLASH_Program>
 8001114:	4603      	mov	r3, r0
 8001116:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 800111a:	4bab      	ldr	r3, [pc, #684]	; (80013c8 <EE_Init+0x630>)
 800111c:	695b      	ldr	r3, [r3, #20]
 800111e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001122:	2b00      	cmp	r3, #0
 8001124:	d11b      	bne.n	800115e <EE_Init+0x3c6>
  __ASM volatile ("dsb 0xF":::"memory");
 8001126:	f3bf 8f4f 	dsb	sy
}
 800112a:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800112c:	f3bf 8f6f 	isb	sy
}
 8001130:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001132:	4ba5      	ldr	r3, [pc, #660]	; (80013c8 <EE_Init+0x630>)
 8001134:	2200      	movs	r2, #0
 8001136:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800113a:	f3bf 8f4f 	dsb	sy
}
 800113e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001140:	f3bf 8f6f 	isb	sy
}
 8001144:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001146:	4ba0      	ldr	r3, [pc, #640]	; (80013c8 <EE_Init+0x630>)
 8001148:	695b      	ldr	r3, [r3, #20]
 800114a:	4a9f      	ldr	r2, [pc, #636]	; (80013c8 <EE_Init+0x630>)
 800114c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001150:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001152:	f3bf 8f4f 	dsb	sy
}
 8001156:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001158:	f3bf 8f6f 	isb	sy
}
 800115c:	e000      	b.n	8001160 <EE_Init+0x3c8>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 800115e:	bf00      	nop
		SCB_EnableICache();

        /* If program operation was failed, a Flash error code is returned */
        if (FlashStatus != HAL_OK)
 8001160:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001164:	2b00      	cmp	r3, #0
 8001166:	d003      	beq.n	8001170 <EE_Init+0x3d8>
        {
          return FlashStatus;
 8001168:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800116c:	b29b      	uxth	r3, r3
 800116e:	e290      	b.n	8001692 <EE_Init+0x8fa>
        }
        pEraseInit.Sector = PAGE1_ID;
 8001170:	2307      	movs	r3, #7
 8001172:	62bb      	str	r3, [r7, #40]	; 0x28
        pEraseInit.Banks = FLASH_BANK_2 ;
 8001174:	2302      	movs	r3, #2
 8001176:	627b      	str	r3, [r7, #36]	; 0x24
        pEraseInit.NbSectors = 1;
 8001178:	2301      	movs	r3, #1
 800117a:	62fb      	str	r3, [r7, #44]	; 0x2c
        pEraseInit.VoltageRange = VOLTAGE_RANGE;
 800117c:	2320      	movs	r3, #32
 800117e:	633b      	str	r3, [r7, #48]	; 0x30
        /* Erase Page1 */
        if(!EE_VerifyPageFullyErased(PAGE1_BASE_ADDRESS))
 8001180:	4893      	ldr	r0, [pc, #588]	; (80013d0 <EE_Init+0x638>)
 8001182:	f000 fa97 	bl	80016b4 <EE_VerifyPageFullyErased>
 8001186:	4603      	mov	r3, r0
 8001188:	2b00      	cmp	r3, #0
 800118a:	f040 827c 	bne.w	8001686 <EE_Init+0x8ee>
  __ASM volatile ("dsb 0xF":::"memory");
 800118e:	f3bf 8f4f 	dsb	sy
}
 8001192:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001194:	f3bf 8f6f 	isb	sy
}
 8001198:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 800119a:	4b8b      	ldr	r3, [pc, #556]	; (80013c8 <EE_Init+0x630>)
 800119c:	695b      	ldr	r3, [r3, #20]
 800119e:	4a8a      	ldr	r2, [pc, #552]	; (80013c8 <EE_Init+0x630>)
 80011a0:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80011a4:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80011a6:	4b88      	ldr	r3, [pc, #544]	; (80013c8 <EE_Init+0x630>)
 80011a8:	2200      	movs	r2, #0
 80011aa:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80011ae:	f3bf 8f4f 	dsb	sy
}
 80011b2:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80011b4:	f3bf 8f6f 	isb	sy
}
 80011b8:	bf00      	nop
}
 80011ba:	bf00      	nop
        {
          SCB_DisableICache();
		  FlashStatus = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 80011bc:	f107 0234 	add.w	r2, r7, #52	; 0x34
 80011c0:	f107 0320 	add.w	r3, r7, #32
 80011c4:	4611      	mov	r1, r2
 80011c6:	4618      	mov	r0, r3
 80011c8:	f00a f8f8 	bl	800b3bc <HAL_FLASHEx_Erase>
 80011cc:	4603      	mov	r3, r0
 80011ce:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80011d2:	4b7d      	ldr	r3, [pc, #500]	; (80013c8 <EE_Init+0x630>)
 80011d4:	695b      	ldr	r3, [r3, #20]
 80011d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80011da:	2b00      	cmp	r3, #0
 80011dc:	d11b      	bne.n	8001216 <EE_Init+0x47e>
  __ASM volatile ("dsb 0xF":::"memory");
 80011de:	f3bf 8f4f 	dsb	sy
}
 80011e2:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80011e4:	f3bf 8f6f 	isb	sy
}
 80011e8:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80011ea:	4b77      	ldr	r3, [pc, #476]	; (80013c8 <EE_Init+0x630>)
 80011ec:	2200      	movs	r2, #0
 80011ee:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80011f2:	f3bf 8f4f 	dsb	sy
}
 80011f6:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80011f8:	f3bf 8f6f 	isb	sy
}
 80011fc:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 80011fe:	4b72      	ldr	r3, [pc, #456]	; (80013c8 <EE_Init+0x630>)
 8001200:	695b      	ldr	r3, [r3, #20]
 8001202:	4a71      	ldr	r2, [pc, #452]	; (80013c8 <EE_Init+0x630>)
 8001204:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001208:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800120a:	f3bf 8f4f 	dsb	sy
}
 800120e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001210:	f3bf 8f6f 	isb	sy
}
 8001214:	e000      	b.n	8001218 <EE_Init+0x480>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001216:	bf00      	nop
		  SCB_EnableICache();
          /* If erase operation was failed, a Flash error code is returned */
          if (FlashStatus != HAL_OK)
 8001218:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800121c:	2b00      	cmp	r3, #0
 800121e:	f000 8232 	beq.w	8001686 <EE_Init+0x8ee>
          {
            return FlashStatus;
 8001222:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001226:	b29b      	uxth	r3, r3
 8001228:	e233      	b.n	8001692 <EE_Init+0x8fa>
          }
        }
      }
      else if (PageStatus1 == ERASED) /* Page0 receive, Page1 erased */
 800122a:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800122e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001232:	4293      	cmp	r3, r2
 8001234:	f040 80a7 	bne.w	8001386 <EE_Init+0x5ee>
      {
        pEraseInit.Sector = PAGE1_ID;
 8001238:	2307      	movs	r3, #7
 800123a:	62bb      	str	r3, [r7, #40]	; 0x28
        pEraseInit.Banks = FLASH_BANK_2 ;
 800123c:	2302      	movs	r3, #2
 800123e:	627b      	str	r3, [r7, #36]	; 0x24
        pEraseInit.NbSectors = 1;
 8001240:	2301      	movs	r3, #1
 8001242:	62fb      	str	r3, [r7, #44]	; 0x2c
        pEraseInit.VoltageRange = VOLTAGE_RANGE;
 8001244:	2320      	movs	r3, #32
 8001246:	633b      	str	r3, [r7, #48]	; 0x30
        /* Erase Page1 */
        if(!EE_VerifyPageFullyErased(PAGE1_BASE_ADDRESS))
 8001248:	4861      	ldr	r0, [pc, #388]	; (80013d0 <EE_Init+0x638>)
 800124a:	f000 fa33 	bl	80016b4 <EE_VerifyPageFullyErased>
 800124e:	4603      	mov	r3, r0
 8001250:	2b00      	cmp	r3, #0
 8001252:	d14c      	bne.n	80012ee <EE_Init+0x556>
  __ASM volatile ("dsb 0xF":::"memory");
 8001254:	f3bf 8f4f 	dsb	sy
}
 8001258:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800125a:	f3bf 8f6f 	isb	sy
}
 800125e:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8001260:	4b59      	ldr	r3, [pc, #356]	; (80013c8 <EE_Init+0x630>)
 8001262:	695b      	ldr	r3, [r3, #20]
 8001264:	4a58      	ldr	r2, [pc, #352]	; (80013c8 <EE_Init+0x630>)
 8001266:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800126a:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 800126c:	4b56      	ldr	r3, [pc, #344]	; (80013c8 <EE_Init+0x630>)
 800126e:	2200      	movs	r2, #0
 8001270:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001274:	f3bf 8f4f 	dsb	sy
}
 8001278:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800127a:	f3bf 8f6f 	isb	sy
}
 800127e:	bf00      	nop
}
 8001280:	bf00      	nop
        {
          SCB_DisableICache();
		  FlashStatus = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 8001282:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8001286:	f107 0320 	add.w	r3, r7, #32
 800128a:	4611      	mov	r1, r2
 800128c:	4618      	mov	r0, r3
 800128e:	f00a f895 	bl	800b3bc <HAL_FLASHEx_Erase>
 8001292:	4603      	mov	r3, r0
 8001294:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001298:	4b4b      	ldr	r3, [pc, #300]	; (80013c8 <EE_Init+0x630>)
 800129a:	695b      	ldr	r3, [r3, #20]
 800129c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80012a0:	2b00      	cmp	r3, #0
 80012a2:	d11b      	bne.n	80012dc <EE_Init+0x544>
  __ASM volatile ("dsb 0xF":::"memory");
 80012a4:	f3bf 8f4f 	dsb	sy
}
 80012a8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80012aa:	f3bf 8f6f 	isb	sy
}
 80012ae:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80012b0:	4b45      	ldr	r3, [pc, #276]	; (80013c8 <EE_Init+0x630>)
 80012b2:	2200      	movs	r2, #0
 80012b4:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80012b8:	f3bf 8f4f 	dsb	sy
}
 80012bc:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80012be:	f3bf 8f6f 	isb	sy
}
 80012c2:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 80012c4:	4b40      	ldr	r3, [pc, #256]	; (80013c8 <EE_Init+0x630>)
 80012c6:	695b      	ldr	r3, [r3, #20]
 80012c8:	4a3f      	ldr	r2, [pc, #252]	; (80013c8 <EE_Init+0x630>)
 80012ca:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80012ce:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 80012d0:	f3bf 8f4f 	dsb	sy
}
 80012d4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80012d6:	f3bf 8f6f 	isb	sy
}
 80012da:	e000      	b.n	80012de <EE_Init+0x546>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80012dc:	bf00      	nop
		  SCB_EnableICache();
          /* If erase operation was failed, a Flash error code is returned */
          if (FlashStatus != HAL_OK)
 80012de:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d003      	beq.n	80012ee <EE_Init+0x556>
          {
            return FlashStatus;
 80012e6:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80012ea:	b29b      	uxth	r3, r3
 80012ec:	e1d1      	b.n	8001692 <EE_Init+0x8fa>
  __ASM volatile ("dsb 0xF":::"memory");
 80012ee:	f3bf 8f4f 	dsb	sy
}
 80012f2:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80012f4:	f3bf 8f6f 	isb	sy
}
 80012f8:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 80012fa:	4b33      	ldr	r3, [pc, #204]	; (80013c8 <EE_Init+0x630>)
 80012fc:	695b      	ldr	r3, [r3, #20]
 80012fe:	4a32      	ldr	r2, [pc, #200]	; (80013c8 <EE_Init+0x630>)
 8001300:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001304:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001306:	4b30      	ldr	r3, [pc, #192]	; (80013c8 <EE_Init+0x630>)
 8001308:	2200      	movs	r2, #0
 800130a:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800130e:	f3bf 8f4f 	dsb	sy
}
 8001312:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001314:	f3bf 8f6f 	isb	sy
}
 8001318:	bf00      	nop
}
 800131a:	bf00      	nop
          }
        }
        /* Mark Page0 as valid */
		SCB_DisableICache();
        FlashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, PAGE0_BASE_ADDRESS, ((uint32_t)valid));
 800131c:	463b      	mov	r3, r7
 800131e:	461a      	mov	r2, r3
 8001320:	492a      	ldr	r1, [pc, #168]	; (80013cc <EE_Init+0x634>)
 8001322:	2001      	movs	r0, #1
 8001324:	f009 fee2 	bl	800b0ec <HAL_FLASH_Program>
 8001328:	4603      	mov	r3, r0
 800132a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 800132e:	4b26      	ldr	r3, [pc, #152]	; (80013c8 <EE_Init+0x630>)
 8001330:	695b      	ldr	r3, [r3, #20]
 8001332:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001336:	2b00      	cmp	r3, #0
 8001338:	d11b      	bne.n	8001372 <EE_Init+0x5da>
  __ASM volatile ("dsb 0xF":::"memory");
 800133a:	f3bf 8f4f 	dsb	sy
}
 800133e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001340:	f3bf 8f6f 	isb	sy
}
 8001344:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001346:	4b20      	ldr	r3, [pc, #128]	; (80013c8 <EE_Init+0x630>)
 8001348:	2200      	movs	r2, #0
 800134a:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800134e:	f3bf 8f4f 	dsb	sy
}
 8001352:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001354:	f3bf 8f6f 	isb	sy
}
 8001358:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 800135a:	4b1b      	ldr	r3, [pc, #108]	; (80013c8 <EE_Init+0x630>)
 800135c:	695b      	ldr	r3, [r3, #20]
 800135e:	4a1a      	ldr	r2, [pc, #104]	; (80013c8 <EE_Init+0x630>)
 8001360:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001364:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001366:	f3bf 8f4f 	dsb	sy
}
 800136a:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800136c:	f3bf 8f6f 	isb	sy
}
 8001370:	e000      	b.n	8001374 <EE_Init+0x5dc>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001372:	bf00      	nop
		SCB_EnableICache();
        /* If program operation was failed, a Flash error code is returned */
        if (FlashStatus != HAL_OK)
 8001374:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001378:	2b00      	cmp	r3, #0
 800137a:	f000 8184 	beq.w	8001686 <EE_Init+0x8ee>
        {
          return FlashStatus;
 800137e:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001382:	b29b      	uxth	r3, r3
 8001384:	e185      	b.n	8001692 <EE_Init+0x8fa>
        }
      }
      else /* Invalid state -> format eeprom */
      {
        /* Erase both Page0 and Page1 and set Page0 as valid page */
        FlashStatus = EE_Format();
 8001386:	f000 fa29 	bl	80017dc <EE_Format>
 800138a:	4603      	mov	r3, r0
 800138c:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
        /* If erase/program operation was failed, a Flash error code is returned */
        if (FlashStatus != HAL_OK)
 8001390:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001394:	2b00      	cmp	r3, #0
 8001396:	f000 8176 	beq.w	8001686 <EE_Init+0x8ee>
        {
          return FlashStatus;
 800139a:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800139e:	b29b      	uxth	r3, r3
 80013a0:	e177      	b.n	8001692 <EE_Init+0x8fa>
        }
      }
      break;

    case VALID_PAGE:
      if (PageStatus1 == VALID_PAGE) /* Invalid state -> format eeprom */
 80013a2:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d114      	bne.n	80013d4 <EE_Init+0x63c>
      {
        /* Erase both Page0 and Page1 and set Page0 as valid page */
        FlashStatus = EE_Format();
 80013aa:	f000 fa17 	bl	80017dc <EE_Format>
 80013ae:	4603      	mov	r3, r0
 80013b0:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
        /* If erase/program operation was failed, a Flash error code is returned */
        if (FlashStatus != HAL_OK)
 80013b4:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80013b8:	2b00      	cmp	r3, #0
 80013ba:	f000 8166 	beq.w	800168a <EE_Init+0x8f2>
        {
          return FlashStatus;
 80013be:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80013c2:	b29b      	uxth	r3, r3
 80013c4:	e165      	b.n	8001692 <EE_Init+0x8fa>
 80013c6:	bf00      	nop
 80013c8:	e000ed00 	.word	0xe000ed00
 80013cc:	081c0000 	.word	0x081c0000
 80013d0:	081e0000 	.word	0x081e0000
        }
      }
      else if (PageStatus1 == ERASED) /* Page0 valid, Page1 erased */
 80013d4:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 80013d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013dc:	4293      	cmp	r3, r2
 80013de:	d15c      	bne.n	800149a <EE_Init+0x702>
      {
        pEraseInit.Sector = PAGE1_ID;
 80013e0:	2307      	movs	r3, #7
 80013e2:	62bb      	str	r3, [r7, #40]	; 0x28
        pEraseInit.Banks = FLASH_BANK_2 ;
 80013e4:	2302      	movs	r3, #2
 80013e6:	627b      	str	r3, [r7, #36]	; 0x24
        pEraseInit.NbSectors = 1;
 80013e8:	2301      	movs	r3, #1
 80013ea:	62fb      	str	r3, [r7, #44]	; 0x2c
        pEraseInit.VoltageRange = VOLTAGE_RANGE;
 80013ec:	2320      	movs	r3, #32
 80013ee:	633b      	str	r3, [r7, #48]	; 0x30
        /* Erase Page1 */
        if(!EE_VerifyPageFullyErased(PAGE1_BASE_ADDRESS))
 80013f0:	48aa      	ldr	r0, [pc, #680]	; (800169c <EE_Init+0x904>)
 80013f2:	f000 f95f 	bl	80016b4 <EE_VerifyPageFullyErased>
 80013f6:	4603      	mov	r3, r0
 80013f8:	2b00      	cmp	r3, #0
 80013fa:	f040 8146 	bne.w	800168a <EE_Init+0x8f2>
  __ASM volatile ("dsb 0xF":::"memory");
 80013fe:	f3bf 8f4f 	dsb	sy
}
 8001402:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001404:	f3bf 8f6f 	isb	sy
}
 8001408:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 800140a:	4ba5      	ldr	r3, [pc, #660]	; (80016a0 <EE_Init+0x908>)
 800140c:	695b      	ldr	r3, [r3, #20]
 800140e:	4aa4      	ldr	r2, [pc, #656]	; (80016a0 <EE_Init+0x908>)
 8001410:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001414:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001416:	4ba2      	ldr	r3, [pc, #648]	; (80016a0 <EE_Init+0x908>)
 8001418:	2200      	movs	r2, #0
 800141a:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800141e:	f3bf 8f4f 	dsb	sy
}
 8001422:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001424:	f3bf 8f6f 	isb	sy
}
 8001428:	bf00      	nop
}
 800142a:	bf00      	nop
        {
          SCB_DisableICache();
		  FlashStatus = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 800142c:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8001430:	f107 0320 	add.w	r3, r7, #32
 8001434:	4611      	mov	r1, r2
 8001436:	4618      	mov	r0, r3
 8001438:	f009 ffc0 	bl	800b3bc <HAL_FLASHEx_Erase>
 800143c:	4603      	mov	r3, r0
 800143e:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001442:	4b97      	ldr	r3, [pc, #604]	; (80016a0 <EE_Init+0x908>)
 8001444:	695b      	ldr	r3, [r3, #20]
 8001446:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800144a:	2b00      	cmp	r3, #0
 800144c:	d11b      	bne.n	8001486 <EE_Init+0x6ee>
  __ASM volatile ("dsb 0xF":::"memory");
 800144e:	f3bf 8f4f 	dsb	sy
}
 8001452:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001454:	f3bf 8f6f 	isb	sy
}
 8001458:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 800145a:	4b91      	ldr	r3, [pc, #580]	; (80016a0 <EE_Init+0x908>)
 800145c:	2200      	movs	r2, #0
 800145e:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001462:	f3bf 8f4f 	dsb	sy
}
 8001466:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001468:	f3bf 8f6f 	isb	sy
}
 800146c:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 800146e:	4b8c      	ldr	r3, [pc, #560]	; (80016a0 <EE_Init+0x908>)
 8001470:	695b      	ldr	r3, [r3, #20]
 8001472:	4a8b      	ldr	r2, [pc, #556]	; (80016a0 <EE_Init+0x908>)
 8001474:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001478:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800147a:	f3bf 8f4f 	dsb	sy
}
 800147e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001480:	f3bf 8f6f 	isb	sy
}
 8001484:	e000      	b.n	8001488 <EE_Init+0x6f0>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001486:	bf00      	nop
		  SCB_EnableICache();
          /* If erase operation was failed, a Flash error code is returned */
          if (FlashStatus != HAL_OK)
 8001488:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800148c:	2b00      	cmp	r3, #0
 800148e:	f000 80fc 	beq.w	800168a <EE_Init+0x8f2>
          {
            return FlashStatus;
 8001492:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001496:	b29b      	uxth	r3, r3
 8001498:	e0fb      	b.n	8001692 <EE_Init+0x8fa>
        }
      }
      else /* Page0 valid, Page1 receive */
      {
        /* Transfer data from Page0 to Page1 */
        for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 800149a:	2300      	movs	r3, #0
 800149c:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 80014a0:	e038      	b.n	8001514 <EE_Init+0x77c>
        {
          if ((*(__IO uint16_t*)(PAGE1_BASE_ADDRESS + 6)) == VirtAddVarTab[VarIdx])
 80014a2:	4b80      	ldr	r3, [pc, #512]	; (80016a4 <EE_Init+0x90c>)
 80014a4:	881b      	ldrh	r3, [r3, #0]
 80014a6:	b29a      	uxth	r2, r3
 80014a8:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 80014ac:	497e      	ldr	r1, [pc, #504]	; (80016a8 <EE_Init+0x910>)
 80014ae:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80014b2:	429a      	cmp	r2, r3
 80014b4:	d103      	bne.n	80014be <EE_Init+0x726>
          {
            x = VarIdx;
 80014b6:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 80014ba:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
          }
          if (VarIdx != x)
 80014be:	f8b7 2046 	ldrh.w	r2, [r7, #70]	; 0x46
 80014c2:	f9b7 3044 	ldrsh.w	r3, [r7, #68]	; 0x44
 80014c6:	429a      	cmp	r2, r3
 80014c8:	d01f      	beq.n	800150a <EE_Init+0x772>
          {
            /* Read the last variables' updates */
            ReadStatus = EE_ReadVariable(VirtAddVarTab[VarIdx], &DataVar);
 80014ca:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 80014ce:	4a76      	ldr	r2, [pc, #472]	; (80016a8 <EE_Init+0x910>)
 80014d0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80014d4:	4975      	ldr	r1, [pc, #468]	; (80016ac <EE_Init+0x914>)
 80014d6:	4618      	mov	r0, r3
 80014d8:	f000 f916 	bl	8001708 <EE_ReadVariable>
 80014dc:	4603      	mov	r3, r0
 80014de:	87bb      	strh	r3, [r7, #60]	; 0x3c
            /* In case variable corresponding to the virtual address was found */
            if (ReadStatus != 0x1)
 80014e0:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 80014e2:	2b01      	cmp	r3, #1
 80014e4:	d011      	beq.n	800150a <EE_Init+0x772>
            {
              /* Transfer the variable to the Page1 */
              EepromStatus = EE_VerifyPageFullWriteVariable(VirtAddVarTab[VarIdx], DataVar);
 80014e6:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 80014ea:	4a6f      	ldr	r2, [pc, #444]	; (80016a8 <EE_Init+0x910>)
 80014ec:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80014f0:	4a6e      	ldr	r2, [pc, #440]	; (80016ac <EE_Init+0x914>)
 80014f2:	8812      	ldrh	r2, [r2, #0]
 80014f4:	4611      	mov	r1, r2
 80014f6:	4618      	mov	r0, r3
 80014f8:	f000 faca 	bl	8001a90 <EE_VerifyPageFullWriteVariable>
 80014fc:	4603      	mov	r3, r0
 80014fe:	87fb      	strh	r3, [r7, #62]	; 0x3e
              /* If program operation was failed, a Flash error code is returned */
              if (EepromStatus != HAL_OK)
 8001500:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 8001502:	2b00      	cmp	r3, #0
 8001504:	d001      	beq.n	800150a <EE_Init+0x772>
              {
                return EepromStatus;
 8001506:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 8001508:	e0c3      	b.n	8001692 <EE_Init+0x8fa>
        for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 800150a:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 800150e:	3301      	adds	r3, #1
 8001510:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8001514:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 8001518:	2b1c      	cmp	r3, #28
 800151a:	d9c2      	bls.n	80014a2 <EE_Init+0x70a>
  __ASM volatile ("dsb 0xF":::"memory");
 800151c:	f3bf 8f4f 	dsb	sy
}
 8001520:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001522:	f3bf 8f6f 	isb	sy
}
 8001526:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8001528:	4b5d      	ldr	r3, [pc, #372]	; (80016a0 <EE_Init+0x908>)
 800152a:	695b      	ldr	r3, [r3, #20]
 800152c:	4a5c      	ldr	r2, [pc, #368]	; (80016a0 <EE_Init+0x908>)
 800152e:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001532:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001534:	4b5a      	ldr	r3, [pc, #360]	; (80016a0 <EE_Init+0x908>)
 8001536:	2200      	movs	r2, #0
 8001538:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800153c:	f3bf 8f4f 	dsb	sy
}
 8001540:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001542:	f3bf 8f6f 	isb	sy
}
 8001546:	bf00      	nop
}
 8001548:	bf00      	nop
            }
          }
        }
        /* Mark Page1 as valid */
		SCB_DisableICache();
        FlashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, PAGE1_BASE_ADDRESS, ((uint32_t)valid));
 800154a:	463b      	mov	r3, r7
 800154c:	461a      	mov	r2, r3
 800154e:	4953      	ldr	r1, [pc, #332]	; (800169c <EE_Init+0x904>)
 8001550:	2001      	movs	r0, #1
 8001552:	f009 fdcb 	bl	800b0ec <HAL_FLASH_Program>
 8001556:	4603      	mov	r3, r0
 8001558:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 800155c:	4b50      	ldr	r3, [pc, #320]	; (80016a0 <EE_Init+0x908>)
 800155e:	695b      	ldr	r3, [r3, #20]
 8001560:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001564:	2b00      	cmp	r3, #0
 8001566:	d11b      	bne.n	80015a0 <EE_Init+0x808>
  __ASM volatile ("dsb 0xF":::"memory");
 8001568:	f3bf 8f4f 	dsb	sy
}
 800156c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800156e:	f3bf 8f6f 	isb	sy
}
 8001572:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001574:	4b4a      	ldr	r3, [pc, #296]	; (80016a0 <EE_Init+0x908>)
 8001576:	2200      	movs	r2, #0
 8001578:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800157c:	f3bf 8f4f 	dsb	sy
}
 8001580:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001582:	f3bf 8f6f 	isb	sy
}
 8001586:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001588:	4b45      	ldr	r3, [pc, #276]	; (80016a0 <EE_Init+0x908>)
 800158a:	695b      	ldr	r3, [r3, #20]
 800158c:	4a44      	ldr	r2, [pc, #272]	; (80016a0 <EE_Init+0x908>)
 800158e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001592:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001594:	f3bf 8f4f 	dsb	sy
}
 8001598:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800159a:	f3bf 8f6f 	isb	sy
}
 800159e:	e000      	b.n	80015a2 <EE_Init+0x80a>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80015a0:	bf00      	nop
		SCB_EnableICache();

        /* If program operation was failed, a Flash error code is returned */
        if (FlashStatus != HAL_OK)
 80015a2:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	d003      	beq.n	80015b2 <EE_Init+0x81a>
        {
          return FlashStatus;
 80015aa:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80015ae:	b29b      	uxth	r3, r3
 80015b0:	e06f      	b.n	8001692 <EE_Init+0x8fa>
        }
        pEraseInit.Sector = PAGE0_ID;
 80015b2:	2306      	movs	r3, #6
 80015b4:	62bb      	str	r3, [r7, #40]	; 0x28
        pEraseInit.Banks = FLASH_BANK_2 ;
 80015b6:	2302      	movs	r3, #2
 80015b8:	627b      	str	r3, [r7, #36]	; 0x24
        pEraseInit.NbSectors = 1;
 80015ba:	2301      	movs	r3, #1
 80015bc:	62fb      	str	r3, [r7, #44]	; 0x2c
        pEraseInit.VoltageRange = VOLTAGE_RANGE;
 80015be:	2320      	movs	r3, #32
 80015c0:	633b      	str	r3, [r7, #48]	; 0x30
        /* Erase Page0 */
        if(!EE_VerifyPageFullyErased(PAGE0_BASE_ADDRESS))
 80015c2:	483b      	ldr	r0, [pc, #236]	; (80016b0 <EE_Init+0x918>)
 80015c4:	f000 f876 	bl	80016b4 <EE_VerifyPageFullyErased>
 80015c8:	4603      	mov	r3, r0
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	d15d      	bne.n	800168a <EE_Init+0x8f2>
  __ASM volatile ("dsb 0xF":::"memory");
 80015ce:	f3bf 8f4f 	dsb	sy
}
 80015d2:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80015d4:	f3bf 8f6f 	isb	sy
}
 80015d8:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 80015da:	4b31      	ldr	r3, [pc, #196]	; (80016a0 <EE_Init+0x908>)
 80015dc:	695b      	ldr	r3, [r3, #20]
 80015de:	4a30      	ldr	r2, [pc, #192]	; (80016a0 <EE_Init+0x908>)
 80015e0:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80015e4:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80015e6:	4b2e      	ldr	r3, [pc, #184]	; (80016a0 <EE_Init+0x908>)
 80015e8:	2200      	movs	r2, #0
 80015ea:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80015ee:	f3bf 8f4f 	dsb	sy
}
 80015f2:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80015f4:	f3bf 8f6f 	isb	sy
}
 80015f8:	bf00      	nop
}
 80015fa:	bf00      	nop
        {
          SCB_DisableICache();
		  FlashStatus = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 80015fc:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8001600:	f107 0320 	add.w	r3, r7, #32
 8001604:	4611      	mov	r1, r2
 8001606:	4618      	mov	r0, r3
 8001608:	f009 fed8 	bl	800b3bc <HAL_FLASHEx_Erase>
 800160c:	4603      	mov	r3, r0
 800160e:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001612:	4b23      	ldr	r3, [pc, #140]	; (80016a0 <EE_Init+0x908>)
 8001614:	695b      	ldr	r3, [r3, #20]
 8001616:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800161a:	2b00      	cmp	r3, #0
 800161c:	d11b      	bne.n	8001656 <EE_Init+0x8be>
  __ASM volatile ("dsb 0xF":::"memory");
 800161e:	f3bf 8f4f 	dsb	sy
}
 8001622:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001624:	f3bf 8f6f 	isb	sy
}
 8001628:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 800162a:	4b1d      	ldr	r3, [pc, #116]	; (80016a0 <EE_Init+0x908>)
 800162c:	2200      	movs	r2, #0
 800162e:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001632:	f3bf 8f4f 	dsb	sy
}
 8001636:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001638:	f3bf 8f6f 	isb	sy
}
 800163c:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 800163e:	4b18      	ldr	r3, [pc, #96]	; (80016a0 <EE_Init+0x908>)
 8001640:	695b      	ldr	r3, [r3, #20]
 8001642:	4a17      	ldr	r2, [pc, #92]	; (80016a0 <EE_Init+0x908>)
 8001644:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001648:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800164a:	f3bf 8f4f 	dsb	sy
}
 800164e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001650:	f3bf 8f6f 	isb	sy
}
 8001654:	e000      	b.n	8001658 <EE_Init+0x8c0>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001656:	bf00      	nop
		  SCB_EnableICache();
          /* If erase operation was failed, a Flash error code is returned */
          if (FlashStatus != HAL_OK)
 8001658:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800165c:	2b00      	cmp	r3, #0
 800165e:	d014      	beq.n	800168a <EE_Init+0x8f2>
          {
            return FlashStatus;
 8001660:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001664:	b29b      	uxth	r3, r3
 8001666:	e014      	b.n	8001692 <EE_Init+0x8fa>
      }
      break;

    default:  /* Any other state -> format eeprom */
      /* Erase both Page0 and Page1 and set Page0 as valid page */
      FlashStatus = EE_Format();
 8001668:	f000 f8b8 	bl	80017dc <EE_Format>
 800166c:	4603      	mov	r3, r0
 800166e:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
      /* If erase/program operation was failed, a Flash error code is returned */
      if (FlashStatus != HAL_OK)
 8001672:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8001676:	2b00      	cmp	r3, #0
 8001678:	d009      	beq.n	800168e <EE_Init+0x8f6>
      {
        return FlashStatus;
 800167a:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800167e:	b29b      	uxth	r3, r3
 8001680:	e007      	b.n	8001692 <EE_Init+0x8fa>
      break;
 8001682:	bf00      	nop
 8001684:	e004      	b.n	8001690 <EE_Init+0x8f8>
      break;
 8001686:	bf00      	nop
 8001688:	e002      	b.n	8001690 <EE_Init+0x8f8>
      break;
 800168a:	bf00      	nop
 800168c:	e000      	b.n	8001690 <EE_Init+0x8f8>
      }
      break;
 800168e:	bf00      	nop
  }

  return HAL_OK;
 8001690:	2300      	movs	r3, #0
}
 8001692:	4618      	mov	r0, r3
 8001694:	3748      	adds	r7, #72	; 0x48
 8001696:	46bd      	mov	sp, r7
 8001698:	bd80      	pop	{r7, pc}
 800169a:	bf00      	nop
 800169c:	081e0000 	.word	0x081e0000
 80016a0:	e000ed00 	.word	0xe000ed00
 80016a4:	081e0006 	.word	0x081e0006
 80016a8:	24000000 	.word	0x24000000
 80016ac:	240003a0 	.word	0x240003a0
 80016b0:	081c0000 	.word	0x081c0000

080016b4 <EE_VerifyPageFullyErased>:
  * @retval page fully erased status:
  *           - 0: if Page not erased
  *           - 1: if Page erased
  */
uint16_t EE_VerifyPageFullyErased(uint32_t Address)
{
 80016b4:	b480      	push	{r7}
 80016b6:	b087      	sub	sp, #28
 80016b8:	af00      	add	r7, sp, #0
 80016ba:	6078      	str	r0, [r7, #4]
  uint32_t EndAddress;
  uint32_t ReadStatus = 1;
 80016bc:	2301      	movs	r3, #1
 80016be:	617b      	str	r3, [r7, #20]
  uint16_t AddressValue = 0x5555;
 80016c0:	f245 5355 	movw	r3, #21845	; 0x5555
 80016c4:	827b      	strh	r3, [r7, #18]

  /* Compute page end-address */
  EndAddress = (uint32_t)(Address + (PAGE_SIZE - 4U));
 80016c6:	687a      	ldr	r2, [r7, #4]
 80016c8:	4b0e      	ldr	r3, [pc, #56]	; (8001704 <EE_VerifyPageFullyErased+0x50>)
 80016ca:	4413      	add	r3, r2
 80016cc:	60fb      	str	r3, [r7, #12]

  /* Check each active page address starting from end */
  while (Address <= EndAddress)
 80016ce:	e00d      	b.n	80016ec <EE_VerifyPageFullyErased+0x38>
  {
    /* Get the current location content to be compared with virtual address */
    AddressValue = (*(__IO uint16_t*)Address);
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	881b      	ldrh	r3, [r3, #0]
 80016d4:	827b      	strh	r3, [r7, #18]

    /* Compare the read address with the virtual address */
    if (AddressValue != ERASED)
 80016d6:	8a7b      	ldrh	r3, [r7, #18]
 80016d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016dc:	4293      	cmp	r3, r2
 80016de:	d002      	beq.n	80016e6 <EE_VerifyPageFullyErased+0x32>
    {

      /* In case variable value is read, reset ReadStatus flag */
      ReadStatus = 0;
 80016e0:	2300      	movs	r3, #0
 80016e2:	617b      	str	r3, [r7, #20]

      break;
 80016e4:	e006      	b.n	80016f4 <EE_VerifyPageFullyErased+0x40>
    }
    /* Next address location */
    Address = Address + 4;
 80016e6:	687b      	ldr	r3, [r7, #4]
 80016e8:	3304      	adds	r3, #4
 80016ea:	607b      	str	r3, [r7, #4]
  while (Address <= EndAddress)
 80016ec:	687a      	ldr	r2, [r7, #4]
 80016ee:	68fb      	ldr	r3, [r7, #12]
 80016f0:	429a      	cmp	r2, r3
 80016f2:	d9ed      	bls.n	80016d0 <EE_VerifyPageFullyErased+0x1c>
  }

  /* Return ReadStatus value: (0: Page not erased, 1: Sector erased) */
  return ReadStatus;
 80016f4:	697b      	ldr	r3, [r7, #20]
 80016f6:	b29b      	uxth	r3, r3
}
 80016f8:	4618      	mov	r0, r3
 80016fa:	371c      	adds	r7, #28
 80016fc:	46bd      	mov	sp, r7
 80016fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001702:	4770      	bx	lr
 8001704:	0001fffc 	.word	0x0001fffc

08001708 <EE_ReadVariable>:
  *           - 0: if variable was found
  *           - 1: if the variable was not found
  *           - NO_VALID_PAGE: if no valid page was found.
  */
uint16_t EE_ReadVariable(uint16_t VirtAddress, uint16_t* Data)
{
 8001708:	b580      	push	{r7, lr}
 800170a:	b086      	sub	sp, #24
 800170c:	af00      	add	r7, sp, #0
 800170e:	4603      	mov	r3, r0
 8001710:	6039      	str	r1, [r7, #0]
 8001712:	80fb      	strh	r3, [r7, #6]
  uint16_t ValidPage = PAGE0;
 8001714:	2300      	movs	r3, #0
 8001716:	81fb      	strh	r3, [r7, #14]
  uint16_t AddressValue = 0x5555, ReadStatus = 1;
 8001718:	f245 5355 	movw	r3, #21845	; 0x5555
 800171c:	81bb      	strh	r3, [r7, #12]
 800171e:	2301      	movs	r3, #1
 8001720:	82fb      	strh	r3, [r7, #22]
  uint32_t Address = EEPROM_START_ADDRESS, PageStartAddress = EEPROM_START_ADDRESS;
 8001722:	4b1b      	ldr	r3, [pc, #108]	; (8001790 <EE_ReadVariable+0x88>)
 8001724:	613b      	str	r3, [r7, #16]
 8001726:	4b1a      	ldr	r3, [pc, #104]	; (8001790 <EE_ReadVariable+0x88>)
 8001728:	60bb      	str	r3, [r7, #8]

  /* Get active Page for read operation */
  ValidPage = EE_FindValidPage(READ_FROM_VALID_PAGE);
 800172a:	2000      	movs	r0, #0
 800172c:	f000 f96a 	bl	8001a04 <EE_FindValidPage>
 8001730:	4603      	mov	r3, r0
 8001732:	81fb      	strh	r3, [r7, #14]

  /* Check if there is no valid page */
  if (ValidPage == NO_VALID_PAGE)
 8001734:	89fb      	ldrh	r3, [r7, #14]
 8001736:	2bab      	cmp	r3, #171	; 0xab
 8001738:	d101      	bne.n	800173e <EE_ReadVariable+0x36>
  {
    return  NO_VALID_PAGE;
 800173a:	23ab      	movs	r3, #171	; 0xab
 800173c:	e024      	b.n	8001788 <EE_ReadVariable+0x80>
  }

  /* Get the valid Page start Address */
  PageStartAddress = (uint32_t)(EEPROM_START_ADDRESS + (uint32_t)(ValidPage * PAGE_SIZE));
 800173e:	89fb      	ldrh	r3, [r7, #14]
 8001740:	f203 430e 	addw	r3, r3, #1038	; 0x40e
 8001744:	045b      	lsls	r3, r3, #17
 8001746:	60bb      	str	r3, [r7, #8]

  /* Get the valid Page end Address */
  Address = (uint32_t)((EEPROM_START_ADDRESS - 32) + (uint32_t)((1 + ValidPage) * PAGE_SIZE));
 8001748:	89fb      	ldrh	r3, [r7, #14]
 800174a:	3301      	adds	r3, #1
 800174c:	045a      	lsls	r2, r3, #17
 800174e:	4b11      	ldr	r3, [pc, #68]	; (8001794 <EE_ReadVariable+0x8c>)
 8001750:	4413      	add	r3, r2
 8001752:	613b      	str	r3, [r7, #16]

  /* Check each active page address starting from end */
  while (Address > (PageStartAddress + 32))
 8001754:	e012      	b.n	800177c <EE_ReadVariable+0x74>
  {
    /* Get the current location content to be compared with virtual address */
    AddressValue = (*(__IO uint16_t*)Address);
 8001756:	693b      	ldr	r3, [r7, #16]
 8001758:	881b      	ldrh	r3, [r3, #0]
 800175a:	81bb      	strh	r3, [r7, #12]

    /* Compare the read address with the virtual address */
    if (AddressValue == VirtAddress)
 800175c:	89ba      	ldrh	r2, [r7, #12]
 800175e:	88fb      	ldrh	r3, [r7, #6]
 8001760:	429a      	cmp	r2, r3
 8001762:	d108      	bne.n	8001776 <EE_ReadVariable+0x6e>
    {
      /* Get content of Address-2 which is variable value */
      *Data = (*(__IO uint16_t*)(Address - 32));
 8001764:	693b      	ldr	r3, [r7, #16]
 8001766:	3b20      	subs	r3, #32
 8001768:	881b      	ldrh	r3, [r3, #0]
 800176a:	b29a      	uxth	r2, r3
 800176c:	683b      	ldr	r3, [r7, #0]
 800176e:	801a      	strh	r2, [r3, #0]

      /* In case variable value is read, reset ReadStatus flag */
      ReadStatus = 0;
 8001770:	2300      	movs	r3, #0
 8001772:	82fb      	strh	r3, [r7, #22]

      break;
 8001774:	e007      	b.n	8001786 <EE_ReadVariable+0x7e>
    }
    else
    {
      /* Next address location */
      Address = Address - 64;
 8001776:	693b      	ldr	r3, [r7, #16]
 8001778:	3b40      	subs	r3, #64	; 0x40
 800177a:	613b      	str	r3, [r7, #16]
  while (Address > (PageStartAddress + 32))
 800177c:	68bb      	ldr	r3, [r7, #8]
 800177e:	3320      	adds	r3, #32
 8001780:	693a      	ldr	r2, [r7, #16]
 8001782:	429a      	cmp	r2, r3
 8001784:	d8e7      	bhi.n	8001756 <EE_ReadVariable+0x4e>
    }
  }

  /* Return ReadStatus value: (0: variable exist, 1: variable doesn't exist) */
  return ReadStatus;
 8001786:	8afb      	ldrh	r3, [r7, #22]
}
 8001788:	4618      	mov	r0, r3
 800178a:	3718      	adds	r7, #24
 800178c:	46bd      	mov	sp, r7
 800178e:	bd80      	pop	{r7, pc}
 8001790:	081c0000 	.word	0x081c0000
 8001794:	081bffe0 	.word	0x081bffe0

08001798 <EE_WriteVariable>:
  *           - PAGE_FULL: if valid page is full
  *           - NO_VALID_PAGE: if no valid page was found
  *           - Flash error code: on write Flash error
  */
uint16_t EE_WriteVariable(uint16_t VirtAddress, uint16_t Data)
{
 8001798:	b580      	push	{r7, lr}
 800179a:	b084      	sub	sp, #16
 800179c:	af00      	add	r7, sp, #0
 800179e:	4603      	mov	r3, r0
 80017a0:	460a      	mov	r2, r1
 80017a2:	80fb      	strh	r3, [r7, #6]
 80017a4:	4613      	mov	r3, r2
 80017a6:	80bb      	strh	r3, [r7, #4]
  uint16_t Status = 0;
 80017a8:	2300      	movs	r3, #0
 80017aa:	81fb      	strh	r3, [r7, #14]

  /* Write the variable virtual address and value in the EEPROM */
  Status = EE_VerifyPageFullWriteVariable(VirtAddress, Data);
 80017ac:	88ba      	ldrh	r2, [r7, #4]
 80017ae:	88fb      	ldrh	r3, [r7, #6]
 80017b0:	4611      	mov	r1, r2
 80017b2:	4618      	mov	r0, r3
 80017b4:	f000 f96c 	bl	8001a90 <EE_VerifyPageFullWriteVariable>
 80017b8:	4603      	mov	r3, r0
 80017ba:	81fb      	strh	r3, [r7, #14]

  /* In case the EEPROM active page is full */
  if (Status == PAGE_FULL)
 80017bc:	89fb      	ldrh	r3, [r7, #14]
 80017be:	2b80      	cmp	r3, #128	; 0x80
 80017c0:	d107      	bne.n	80017d2 <EE_WriteVariable+0x3a>
  {
    /* Perform Page transfer */
    Status = EE_PageTransfer(VirtAddress, Data);
 80017c2:	88ba      	ldrh	r2, [r7, #4]
 80017c4:	88fb      	ldrh	r3, [r7, #6]
 80017c6:	4611      	mov	r1, r2
 80017c8:	4618      	mov	r0, r3
 80017ca:	f000 fa13 	bl	8001bf4 <EE_PageTransfer>
 80017ce:	4603      	mov	r3, r0
 80017d0:	81fb      	strh	r3, [r7, #14]
  }

  /* Return last operation status */
  return Status;
 80017d2:	89fb      	ldrh	r3, [r7, #14]
}
 80017d4:	4618      	mov	r0, r3
 80017d6:	3710      	adds	r7, #16
 80017d8:	46bd      	mov	sp, r7
 80017da:	bd80      	pop	{r7, pc}

080017dc <EE_Format>:
  * @param  None
  * @retval Status of the last operation (Flash write or erase) done during
  *         EEPROM formatting
  */
static HAL_StatusTypeDef EE_Format(void)
{
 80017dc:	b580      	push	{r7, lr}
 80017de:	b090      	sub	sp, #64	; 0x40
 80017e0:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef FlashStatus = HAL_OK;
 80017e2:	2300      	movs	r3, #0
 80017e4:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
  uint32_t SectorError = 0;
 80017e8:	2300      	movs	r3, #0
 80017ea:	63bb      	str	r3, [r7, #56]	; 0x38
  FLASH_EraseInitTypeDef pEraseInit;
  uint32_t valid[8] = {0x0000};
 80017ec:	1d3b      	adds	r3, r7, #4
 80017ee:	2220      	movs	r2, #32
 80017f0:	2100      	movs	r1, #0
 80017f2:	4618      	mov	r0, r3
 80017f4:	f019 f922 	bl	801aa3c <memset>

  pEraseInit.TypeErase = FLASH_TYPEERASE_SECTORS;
 80017f8:	2300      	movs	r3, #0
 80017fa:	627b      	str	r3, [r7, #36]	; 0x24
  pEraseInit.Banks = FLASH_BANK_2 ;
 80017fc:	2302      	movs	r3, #2
 80017fe:	62bb      	str	r3, [r7, #40]	; 0x28
  pEraseInit.Sector = PAGE0_ID;
 8001800:	2306      	movs	r3, #6
 8001802:	62fb      	str	r3, [r7, #44]	; 0x2c
  pEraseInit.NbSectors = 1;
 8001804:	2301      	movs	r3, #1
 8001806:	633b      	str	r3, [r7, #48]	; 0x30
  pEraseInit.VoltageRange = VOLTAGE_RANGE;
 8001808:	2320      	movs	r3, #32
 800180a:	637b      	str	r3, [r7, #52]	; 0x34

  /* Erase Page0 */
  if(!EE_VerifyPageFullyErased(PAGE0_BASE_ADDRESS))
 800180c:	487a      	ldr	r0, [pc, #488]	; (80019f8 <EE_Format+0x21c>)
 800180e:	f7ff ff51 	bl	80016b4 <EE_VerifyPageFullyErased>
 8001812:	4603      	mov	r3, r0
 8001814:	2b00      	cmp	r3, #0
 8001816:	d14b      	bne.n	80018b0 <EE_Format+0xd4>
  __ASM volatile ("dsb 0xF":::"memory");
 8001818:	f3bf 8f4f 	dsb	sy
}
 800181c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800181e:	f3bf 8f6f 	isb	sy
}
 8001822:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8001824:	4b75      	ldr	r3, [pc, #468]	; (80019fc <EE_Format+0x220>)
 8001826:	695b      	ldr	r3, [r3, #20]
 8001828:	4a74      	ldr	r2, [pc, #464]	; (80019fc <EE_Format+0x220>)
 800182a:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800182e:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001830:	4b72      	ldr	r3, [pc, #456]	; (80019fc <EE_Format+0x220>)
 8001832:	2200      	movs	r2, #0
 8001834:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001838:	f3bf 8f4f 	dsb	sy
}
 800183c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800183e:	f3bf 8f6f 	isb	sy
}
 8001842:	bf00      	nop
}
 8001844:	bf00      	nop
  {
    SCB_DisableICache();
    FlashStatus = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 8001846:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800184a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800184e:	4611      	mov	r1, r2
 8001850:	4618      	mov	r0, r3
 8001852:	f009 fdb3 	bl	800b3bc <HAL_FLASHEx_Erase>
 8001856:	4603      	mov	r3, r0
 8001858:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 800185c:	4b67      	ldr	r3, [pc, #412]	; (80019fc <EE_Format+0x220>)
 800185e:	695b      	ldr	r3, [r3, #20]
 8001860:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001864:	2b00      	cmp	r3, #0
 8001866:	d11b      	bne.n	80018a0 <EE_Format+0xc4>
  __ASM volatile ("dsb 0xF":::"memory");
 8001868:	f3bf 8f4f 	dsb	sy
}
 800186c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800186e:	f3bf 8f6f 	isb	sy
}
 8001872:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001874:	4b61      	ldr	r3, [pc, #388]	; (80019fc <EE_Format+0x220>)
 8001876:	2200      	movs	r2, #0
 8001878:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800187c:	f3bf 8f4f 	dsb	sy
}
 8001880:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001882:	f3bf 8f6f 	isb	sy
}
 8001886:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001888:	4b5c      	ldr	r3, [pc, #368]	; (80019fc <EE_Format+0x220>)
 800188a:	695b      	ldr	r3, [r3, #20]
 800188c:	4a5b      	ldr	r2, [pc, #364]	; (80019fc <EE_Format+0x220>)
 800188e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001892:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001894:	f3bf 8f4f 	dsb	sy
}
 8001898:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800189a:	f3bf 8f6f 	isb	sy
}
 800189e:	e000      	b.n	80018a2 <EE_Format+0xc6>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80018a0:	bf00      	nop
    SCB_EnableICache();
    /* If erase operation was failed, a Flash error code is returned */
    if (FlashStatus != HAL_OK)
 80018a2:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80018a6:	2b00      	cmp	r3, #0
 80018a8:	d002      	beq.n	80018b0 <EE_Format+0xd4>
    {
      return FlashStatus;
 80018aa:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80018ae:	e09e      	b.n	80019ee <EE_Format+0x212>
  __ASM volatile ("dsb 0xF":::"memory");
 80018b0:	f3bf 8f4f 	dsb	sy
}
 80018b4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80018b6:	f3bf 8f6f 	isb	sy
}
 80018ba:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 80018bc:	4b4f      	ldr	r3, [pc, #316]	; (80019fc <EE_Format+0x220>)
 80018be:	695b      	ldr	r3, [r3, #20]
 80018c0:	4a4e      	ldr	r2, [pc, #312]	; (80019fc <EE_Format+0x220>)
 80018c2:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80018c6:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80018c8:	4b4c      	ldr	r3, [pc, #304]	; (80019fc <EE_Format+0x220>)
 80018ca:	2200      	movs	r2, #0
 80018cc:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80018d0:	f3bf 8f4f 	dsb	sy
}
 80018d4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80018d6:	f3bf 8f6f 	isb	sy
}
 80018da:	bf00      	nop
}
 80018dc:	bf00      	nop
    }
  }

  /* Set Page0 as valid page: Write VALID_PAGE at Page0 base address */
  SCB_DisableICache();
  FlashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, PAGE0_BASE_ADDRESS,((uint32_t)valid));
 80018de:	1d3b      	adds	r3, r7, #4
 80018e0:	461a      	mov	r2, r3
 80018e2:	4945      	ldr	r1, [pc, #276]	; (80019f8 <EE_Format+0x21c>)
 80018e4:	2001      	movs	r0, #1
 80018e6:	f009 fc01 	bl	800b0ec <HAL_FLASH_Program>
 80018ea:	4603      	mov	r3, r0
 80018ec:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80018f0:	4b42      	ldr	r3, [pc, #264]	; (80019fc <EE_Format+0x220>)
 80018f2:	695b      	ldr	r3, [r3, #20]
 80018f4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d11b      	bne.n	8001934 <EE_Format+0x158>
  __ASM volatile ("dsb 0xF":::"memory");
 80018fc:	f3bf 8f4f 	dsb	sy
}
 8001900:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001902:	f3bf 8f6f 	isb	sy
}
 8001906:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001908:	4b3c      	ldr	r3, [pc, #240]	; (80019fc <EE_Format+0x220>)
 800190a:	2200      	movs	r2, #0
 800190c:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001910:	f3bf 8f4f 	dsb	sy
}
 8001914:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001916:	f3bf 8f6f 	isb	sy
}
 800191a:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 800191c:	4b37      	ldr	r3, [pc, #220]	; (80019fc <EE_Format+0x220>)
 800191e:	695b      	ldr	r3, [r3, #20]
 8001920:	4a36      	ldr	r2, [pc, #216]	; (80019fc <EE_Format+0x220>)
 8001922:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001926:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001928:	f3bf 8f4f 	dsb	sy
}
 800192c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800192e:	f3bf 8f6f 	isb	sy
}
 8001932:	e000      	b.n	8001936 <EE_Format+0x15a>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001934:	bf00      	nop
  SCB_EnableICache();

  /* If program operation was failed, a Flash error code is returned */
  if (FlashStatus != HAL_OK)
 8001936:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 800193a:	2b00      	cmp	r3, #0
 800193c:	d002      	beq.n	8001944 <EE_Format+0x168>
  {
    return FlashStatus;
 800193e:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8001942:	e054      	b.n	80019ee <EE_Format+0x212>
  }

  pEraseInit.Sector = PAGE1_ID;
 8001944:	2307      	movs	r3, #7
 8001946:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Erase Page1 */
  if(!EE_VerifyPageFullyErased(PAGE1_BASE_ADDRESS))
 8001948:	482d      	ldr	r0, [pc, #180]	; (8001a00 <EE_Format+0x224>)
 800194a:	f7ff feb3 	bl	80016b4 <EE_VerifyPageFullyErased>
 800194e:	4603      	mov	r3, r0
 8001950:	2b00      	cmp	r3, #0
 8001952:	d14b      	bne.n	80019ec <EE_Format+0x210>
  __ASM volatile ("dsb 0xF":::"memory");
 8001954:	f3bf 8f4f 	dsb	sy
}
 8001958:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800195a:	f3bf 8f6f 	isb	sy
}
 800195e:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8001960:	4b26      	ldr	r3, [pc, #152]	; (80019fc <EE_Format+0x220>)
 8001962:	695b      	ldr	r3, [r3, #20]
 8001964:	4a25      	ldr	r2, [pc, #148]	; (80019fc <EE_Format+0x220>)
 8001966:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800196a:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 800196c:	4b23      	ldr	r3, [pc, #140]	; (80019fc <EE_Format+0x220>)
 800196e:	2200      	movs	r2, #0
 8001970:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001974:	f3bf 8f4f 	dsb	sy
}
 8001978:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800197a:	f3bf 8f6f 	isb	sy
}
 800197e:	bf00      	nop
}
 8001980:	bf00      	nop
  {
    SCB_DisableICache();
    FlashStatus = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 8001982:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8001986:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800198a:	4611      	mov	r1, r2
 800198c:	4618      	mov	r0, r3
 800198e:	f009 fd15 	bl	800b3bc <HAL_FLASHEx_Erase>
 8001992:	4603      	mov	r3, r0
 8001994:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001998:	4b18      	ldr	r3, [pc, #96]	; (80019fc <EE_Format+0x220>)
 800199a:	695b      	ldr	r3, [r3, #20]
 800199c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d11b      	bne.n	80019dc <EE_Format+0x200>
  __ASM volatile ("dsb 0xF":::"memory");
 80019a4:	f3bf 8f4f 	dsb	sy
}
 80019a8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80019aa:	f3bf 8f6f 	isb	sy
}
 80019ae:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80019b0:	4b12      	ldr	r3, [pc, #72]	; (80019fc <EE_Format+0x220>)
 80019b2:	2200      	movs	r2, #0
 80019b4:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80019b8:	f3bf 8f4f 	dsb	sy
}
 80019bc:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80019be:	f3bf 8f6f 	isb	sy
}
 80019c2:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 80019c4:	4b0d      	ldr	r3, [pc, #52]	; (80019fc <EE_Format+0x220>)
 80019c6:	695b      	ldr	r3, [r3, #20]
 80019c8:	4a0c      	ldr	r2, [pc, #48]	; (80019fc <EE_Format+0x220>)
 80019ca:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80019ce:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 80019d0:	f3bf 8f4f 	dsb	sy
}
 80019d4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80019d6:	f3bf 8f6f 	isb	sy
}
 80019da:	e000      	b.n	80019de <EE_Format+0x202>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80019dc:	bf00      	nop
    SCB_EnableICache();
    /* If erase operation was failed, a Flash error code is returned */
    if (FlashStatus != HAL_OK)
 80019de:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80019e2:	2b00      	cmp	r3, #0
 80019e4:	d002      	beq.n	80019ec <EE_Format+0x210>
    {
      return FlashStatus;
 80019e6:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80019ea:	e000      	b.n	80019ee <EE_Format+0x212>
    }
  }

  return HAL_OK;
 80019ec:	2300      	movs	r3, #0
}
 80019ee:	4618      	mov	r0, r3
 80019f0:	3740      	adds	r7, #64	; 0x40
 80019f2:	46bd      	mov	sp, r7
 80019f4:	bd80      	pop	{r7, pc}
 80019f6:	bf00      	nop
 80019f8:	081c0000 	.word	0x081c0000
 80019fc:	e000ed00 	.word	0xe000ed00
 8001a00:	081e0000 	.word	0x081e0000

08001a04 <EE_FindValidPage>:
  *     @arg WRITE_IN_VALID_PAGE: write operation from valid page
  * @retval Valid page number (PAGE or PAGE1) or NO_VALID_PAGE in case
  *   of no valid page was found
  */
static uint16_t EE_FindValidPage(uint8_t Operation)
{
 8001a04:	b480      	push	{r7}
 8001a06:	b085      	sub	sp, #20
 8001a08:	af00      	add	r7, sp, #0
 8001a0a:	4603      	mov	r3, r0
 8001a0c:	71fb      	strb	r3, [r7, #7]
  uint16_t PageStatus0 = 6, PageStatus1 = 6;
 8001a0e:	2306      	movs	r3, #6
 8001a10:	81fb      	strh	r3, [r7, #14]
 8001a12:	2306      	movs	r3, #6
 8001a14:	81bb      	strh	r3, [r7, #12]

  /* Get Page0 actual status */
  PageStatus0 = (*(__IO uint16_t*)PAGE0_BASE_ADDRESS);
 8001a16:	4b1c      	ldr	r3, [pc, #112]	; (8001a88 <EE_FindValidPage+0x84>)
 8001a18:	881b      	ldrh	r3, [r3, #0]
 8001a1a:	81fb      	strh	r3, [r7, #14]

  /* Get Page1 actual status */
  PageStatus1 = (*(__IO uint16_t*)PAGE1_BASE_ADDRESS);
 8001a1c:	4b1b      	ldr	r3, [pc, #108]	; (8001a8c <EE_FindValidPage+0x88>)
 8001a1e:	881b      	ldrh	r3, [r3, #0]
 8001a20:	81bb      	strh	r3, [r7, #12]

  /* Write or read operation */
  switch (Operation)
 8001a22:	79fb      	ldrb	r3, [r7, #7]
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d01b      	beq.n	8001a60 <EE_FindValidPage+0x5c>
 8001a28:	2b01      	cmp	r3, #1
 8001a2a:	d125      	bne.n	8001a78 <EE_FindValidPage+0x74>
  {
    case WRITE_IN_VALID_PAGE:   /* ---- Write operation ---- */
      if (PageStatus1 == VALID_PAGE)
 8001a2c:	89bb      	ldrh	r3, [r7, #12]
 8001a2e:	2b00      	cmp	r3, #0
 8001a30:	d108      	bne.n	8001a44 <EE_FindValidPage+0x40>
      {
        /* Page0 receiving data */
        if (PageStatus0 == RECEIVE_DATA)
 8001a32:	89fb      	ldrh	r3, [r7, #14]
 8001a34:	f64e 62ee 	movw	r2, #61166	; 0xeeee
 8001a38:	4293      	cmp	r3, r2
 8001a3a:	d101      	bne.n	8001a40 <EE_FindValidPage+0x3c>
        {
          return PAGE0;         /* Page0 valid */
 8001a3c:	2300      	movs	r3, #0
 8001a3e:	e01c      	b.n	8001a7a <EE_FindValidPage+0x76>
        }
        else
        {
          return PAGE1;         /* Page1 valid */
 8001a40:	2301      	movs	r3, #1
 8001a42:	e01a      	b.n	8001a7a <EE_FindValidPage+0x76>
        }
      }
      else if (PageStatus0 == VALID_PAGE)
 8001a44:	89fb      	ldrh	r3, [r7, #14]
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	d108      	bne.n	8001a5c <EE_FindValidPage+0x58>
      {
        /* Page1 receiving data */
        if (PageStatus1 == RECEIVE_DATA)
 8001a4a:	89bb      	ldrh	r3, [r7, #12]
 8001a4c:	f64e 62ee 	movw	r2, #61166	; 0xeeee
 8001a50:	4293      	cmp	r3, r2
 8001a52:	d101      	bne.n	8001a58 <EE_FindValidPage+0x54>
        {
          return PAGE1;         /* Page1 valid */
 8001a54:	2301      	movs	r3, #1
 8001a56:	e010      	b.n	8001a7a <EE_FindValidPage+0x76>
        }
        else
        {
          return PAGE0;         /* Page0 valid */
 8001a58:	2300      	movs	r3, #0
 8001a5a:	e00e      	b.n	8001a7a <EE_FindValidPage+0x76>
        }
      }
      else
      {
        return NO_VALID_PAGE;   /* No valid Page */
 8001a5c:	23ab      	movs	r3, #171	; 0xab
 8001a5e:	e00c      	b.n	8001a7a <EE_FindValidPage+0x76>
      }

    case READ_FROM_VALID_PAGE:  /* ---- Read operation ---- */
      if (PageStatus0 == VALID_PAGE)
 8001a60:	89fb      	ldrh	r3, [r7, #14]
 8001a62:	2b00      	cmp	r3, #0
 8001a64:	d101      	bne.n	8001a6a <EE_FindValidPage+0x66>
      {
        return PAGE0;           /* Page0 valid */
 8001a66:	2300      	movs	r3, #0
 8001a68:	e007      	b.n	8001a7a <EE_FindValidPage+0x76>
      }
      else if (PageStatus1 == VALID_PAGE)
 8001a6a:	89bb      	ldrh	r3, [r7, #12]
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	d101      	bne.n	8001a74 <EE_FindValidPage+0x70>
      {
        return PAGE1;           /* Page1 valid */
 8001a70:	2301      	movs	r3, #1
 8001a72:	e002      	b.n	8001a7a <EE_FindValidPage+0x76>
      }
      else
      {
        return NO_VALID_PAGE ;  /* No valid Page */
 8001a74:	23ab      	movs	r3, #171	; 0xab
 8001a76:	e000      	b.n	8001a7a <EE_FindValidPage+0x76>
      }

    default:
      return PAGE0;             /* Page0 valid */
 8001a78:	2300      	movs	r3, #0
  }
}
 8001a7a:	4618      	mov	r0, r3
 8001a7c:	3714      	adds	r7, #20
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a84:	4770      	bx	lr
 8001a86:	bf00      	nop
 8001a88:	081c0000 	.word	0x081c0000
 8001a8c:	081e0000 	.word	0x081e0000

08001a90 <EE_VerifyPageFullWriteVariable>:
  *           - PAGE_FULL: if valid page is full
  *           - NO_VALID_PAGE: if no valid page was found
  *           - Flash error code: on write Flash error
  */
static uint16_t EE_VerifyPageFullWriteVariable(uint16_t VirtAddress, uint16_t Data)
{
 8001a90:	b580      	push	{r7, lr}
 8001a92:	b096      	sub	sp, #88	; 0x58
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	4603      	mov	r3, r0
 8001a98:	460a      	mov	r2, r1
 8001a9a:	80fb      	strh	r3, [r7, #6]
 8001a9c:	4613      	mov	r3, r2
 8001a9e:	80bb      	strh	r3, [r7, #4]
  HAL_StatusTypeDef FlashStatus = HAL_OK;
 8001aa0:	2300      	movs	r3, #0
 8001aa2:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
  uint16_t ValidPage = PAGE0;
 8001aa6:	2300      	movs	r3, #0
 8001aa8:	f8a7 3050 	strh.w	r3, [r7, #80]	; 0x50
  uint32_t Address = EEPROM_START_ADDRESS, PageEndAddress = EEPROM_START_ADDRESS+PAGE_SIZE;
 8001aac:	4b4d      	ldr	r3, [pc, #308]	; (8001be4 <EE_VerifyPageFullWriteVariable+0x154>)
 8001aae:	657b      	str	r3, [r7, #84]	; 0x54
 8001ab0:	4b4d      	ldr	r3, [pc, #308]	; (8001be8 <EE_VerifyPageFullWriteVariable+0x158>)
 8001ab2:	64fb      	str	r3, [r7, #76]	; 0x4c

  uint32_t data32[8] = {Data};
 8001ab4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001ab8:	2220      	movs	r2, #32
 8001aba:	2100      	movs	r1, #0
 8001abc:	4618      	mov	r0, r3
 8001abe:	f018 ffbd 	bl	801aa3c <memset>
 8001ac2:	88bb      	ldrh	r3, [r7, #4]
 8001ac4:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t VirtAddress1[8] = {VirtAddress};
 8001ac6:	f107 030c 	add.w	r3, r7, #12
 8001aca:	2220      	movs	r2, #32
 8001acc:	2100      	movs	r1, #0
 8001ace:	4618      	mov	r0, r3
 8001ad0:	f018 ffb4 	bl	801aa3c <memset>
 8001ad4:	88fb      	ldrh	r3, [r7, #6]
 8001ad6:	60fb      	str	r3, [r7, #12]
  /* Get valid Page for write operation */
  ValidPage = EE_FindValidPage(WRITE_IN_VALID_PAGE);
 8001ad8:	2001      	movs	r0, #1
 8001ada:	f7ff ff93 	bl	8001a04 <EE_FindValidPage>
 8001ade:	4603      	mov	r3, r0
 8001ae0:	f8a7 3050 	strh.w	r3, [r7, #80]	; 0x50

  /* Check if there is no valid page */
  if (ValidPage == NO_VALID_PAGE)
 8001ae4:	f8b7 3050 	ldrh.w	r3, [r7, #80]	; 0x50
 8001ae8:	2bab      	cmp	r3, #171	; 0xab
 8001aea:	d101      	bne.n	8001af0 <EE_VerifyPageFullWriteVariable+0x60>
  {
    return  NO_VALID_PAGE;
 8001aec:	23ab      	movs	r3, #171	; 0xab
 8001aee:	e075      	b.n	8001bdc <EE_VerifyPageFullWriteVariable+0x14c>
  }

  /* Get the valid Page start Address */
  Address = (uint32_t)(EEPROM_START_ADDRESS + (uint32_t)(ValidPage * PAGE_SIZE));
 8001af0:	f8b7 3050 	ldrh.w	r3, [r7, #80]	; 0x50
 8001af4:	f203 430e 	addw	r3, r3, #1038	; 0x40e
 8001af8:	045b      	lsls	r3, r3, #17
 8001afa:	657b      	str	r3, [r7, #84]	; 0x54

  /* Get the valid Page end Address */
  PageEndAddress = (uint32_t)((EEPROM_START_ADDRESS - 1) + (uint32_t)((ValidPage + 1) * PAGE_SIZE));
 8001afc:	f8b7 3050 	ldrh.w	r3, [r7, #80]	; 0x50
 8001b00:	3301      	adds	r3, #1
 8001b02:	045a      	lsls	r2, r3, #17
 8001b04:	4b39      	ldr	r3, [pc, #228]	; (8001bec <EE_VerifyPageFullWriteVariable+0x15c>)
 8001b06:	4413      	add	r3, r2
 8001b08:	64fb      	str	r3, [r7, #76]	; 0x4c
  __ASM volatile ("dsb 0xF":::"memory");
 8001b0a:	f3bf 8f4f 	dsb	sy
}
 8001b0e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001b10:	f3bf 8f6f 	isb	sy
}
 8001b14:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8001b16:	4b36      	ldr	r3, [pc, #216]	; (8001bf0 <EE_VerifyPageFullWriteVariable+0x160>)
 8001b18:	695b      	ldr	r3, [r3, #20]
 8001b1a:	4a35      	ldr	r2, [pc, #212]	; (8001bf0 <EE_VerifyPageFullWriteVariable+0x160>)
 8001b1c:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001b20:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001b22:	4b33      	ldr	r3, [pc, #204]	; (8001bf0 <EE_VerifyPageFullWriteVariable+0x160>)
 8001b24:	2200      	movs	r2, #0
 8001b26:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001b2a:	f3bf 8f4f 	dsb	sy
}
 8001b2e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001b30:	f3bf 8f6f 	isb	sy
}
 8001b34:	bf00      	nop
}
 8001b36:	bf00      	nop

  SCB_DisableICache();

  /* Check each active page address starting from beginning */
  while (Address < PageEndAddress)
 8001b38:	e028      	b.n	8001b8c <EE_VerifyPageFullWriteVariable+0xfc>
  {
    /* Verify if Address and Address+2 contents are 0xFFFFFFFF */
    if ((*(__IO uint32_t*)Address) == 0xFFFFFFFF)
 8001b3a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8001b3c:	681b      	ldr	r3, [r3, #0]
 8001b3e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001b42:	d120      	bne.n	8001b86 <EE_VerifyPageFullWriteVariable+0xf6>
    {
      /* Set variable data */
      FlashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, Address, ((uint32_t)data32));
 8001b44:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b48:	461a      	mov	r2, r3
 8001b4a:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8001b4c:	2001      	movs	r0, #1
 8001b4e:	f009 facd 	bl	800b0ec <HAL_FLASH_Program>
 8001b52:	4603      	mov	r3, r0
 8001b54:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53

      /* If program operation was failed, a Flash error code is returned */
      if (FlashStatus != HAL_OK)
 8001b58:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d003      	beq.n	8001b68 <EE_VerifyPageFullWriteVariable+0xd8>
      {
        return FlashStatus;
 8001b60:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8001b64:	b29b      	uxth	r3, r3
 8001b66:	e039      	b.n	8001bdc <EE_VerifyPageFullWriteVariable+0x14c>
      }
      /* Set variable virtual address */
     FlashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, Address + 32, ((uint32_t)VirtAddress1));
 8001b68:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8001b6a:	3320      	adds	r3, #32
 8001b6c:	f107 020c 	add.w	r2, r7, #12
 8001b70:	4619      	mov	r1, r3
 8001b72:	2001      	movs	r0, #1
 8001b74:	f009 faba 	bl	800b0ec <HAL_FLASH_Program>
 8001b78:	4603      	mov	r3, r0
 8001b7a:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53

      /* Return program operation status */
     return FlashStatus;
 8001b7e:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8001b82:	b29b      	uxth	r3, r3
 8001b84:	e02a      	b.n	8001bdc <EE_VerifyPageFullWriteVariable+0x14c>
    }
    else
    {
      /* Next address location */
      Address = Address + 64;
 8001b86:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8001b88:	3340      	adds	r3, #64	; 0x40
 8001b8a:	657b      	str	r3, [r7, #84]	; 0x54
  while (Address < PageEndAddress)
 8001b8c:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8001b8e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8001b90:	429a      	cmp	r2, r3
 8001b92:	d3d2      	bcc.n	8001b3a <EE_VerifyPageFullWriteVariable+0xaa>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001b94:	4b16      	ldr	r3, [pc, #88]	; (8001bf0 <EE_VerifyPageFullWriteVariable+0x160>)
 8001b96:	695b      	ldr	r3, [r3, #20]
 8001b98:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b9c:	2b00      	cmp	r3, #0
 8001b9e:	d11b      	bne.n	8001bd8 <EE_VerifyPageFullWriteVariable+0x148>
  __ASM volatile ("dsb 0xF":::"memory");
 8001ba0:	f3bf 8f4f 	dsb	sy
}
 8001ba4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001ba6:	f3bf 8f6f 	isb	sy
}
 8001baa:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001bac:	4b10      	ldr	r3, [pc, #64]	; (8001bf0 <EE_VerifyPageFullWriteVariable+0x160>)
 8001bae:	2200      	movs	r2, #0
 8001bb0:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001bb4:	f3bf 8f4f 	dsb	sy
}
 8001bb8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001bba:	f3bf 8f6f 	isb	sy
}
 8001bbe:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001bc0:	4b0b      	ldr	r3, [pc, #44]	; (8001bf0 <EE_VerifyPageFullWriteVariable+0x160>)
 8001bc2:	695b      	ldr	r3, [r3, #20]
 8001bc4:	4a0a      	ldr	r2, [pc, #40]	; (8001bf0 <EE_VerifyPageFullWriteVariable+0x160>)
 8001bc6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001bca:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001bcc:	f3bf 8f4f 	dsb	sy
}
 8001bd0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001bd2:	f3bf 8f6f 	isb	sy
}
 8001bd6:	e000      	b.n	8001bda <EE_VerifyPageFullWriteVariable+0x14a>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001bd8:	bf00      	nop
    }
  }
  SCB_EnableICache();

  /* Return PAGE_FULL in case the valid page is full */
  return PAGE_FULL;
 8001bda:	2380      	movs	r3, #128	; 0x80
}
 8001bdc:	4618      	mov	r0, r3
 8001bde:	3758      	adds	r7, #88	; 0x58
 8001be0:	46bd      	mov	sp, r7
 8001be2:	bd80      	pop	{r7, pc}
 8001be4:	081c0000 	.word	0x081c0000
 8001be8:	081e0000 	.word	0x081e0000
 8001bec:	081bffff 	.word	0x081bffff
 8001bf0:	e000ed00 	.word	0xe000ed00

08001bf4 <EE_PageTransfer>:
  *           - PAGE_FULL: if valid page is full
  *           - NO_VALID_PAGE: if no valid page was found
  *           - Flash error code: on write Flash error
  */
static uint16_t EE_PageTransfer(uint16_t VirtAddress, uint16_t Data)
{
 8001bf4:	b580      	push	{r7, lr}
 8001bf6:	b09c      	sub	sp, #112	; 0x70
 8001bf8:	af00      	add	r7, sp, #0
 8001bfa:	4603      	mov	r3, r0
 8001bfc:	460a      	mov	r2, r1
 8001bfe:	80fb      	strh	r3, [r7, #6]
 8001c00:	4613      	mov	r3, r2
 8001c02:	80bb      	strh	r3, [r7, #4]
  HAL_StatusTypeDef FlashStatus = HAL_OK;
 8001c04:	2300      	movs	r3, #0
 8001c06:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
  uint32_t NewPageAddress = EEPROM_START_ADDRESS;
 8001c0a:	4bc3      	ldr	r3, [pc, #780]	; (8001f18 <EE_PageTransfer+0x324>)
 8001c0c:	66fb      	str	r3, [r7, #108]	; 0x6c
  uint16_t OldPageId=0;
 8001c0e:	2300      	movs	r3, #0
 8001c10:	f8a7 306a 	strh.w	r3, [r7, #106]	; 0x6a
  uint16_t ValidPage = PAGE0, VarIdx = 0;
 8001c14:	2300      	movs	r3, #0
 8001c16:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
 8001c1a:	2300      	movs	r3, #0
 8001c1c:	f8a7 3068 	strh.w	r3, [r7, #104]	; 0x68
  uint16_t EepromStatus = 0, ReadStatus = 0;
 8001c20:	2300      	movs	r3, #0
 8001c22:	f8a7 3062 	strh.w	r3, [r7, #98]	; 0x62
 8001c26:	2300      	movs	r3, #0
 8001c28:	f8a7 3060 	strh.w	r3, [r7, #96]	; 0x60
  uint32_t SectorError = 0;
 8001c2c:	2300      	movs	r3, #0
 8001c2e:	65fb      	str	r3, [r7, #92]	; 0x5c
  FLASH_EraseInitTypeDef pEraseInit;
  uint32_t valid[8] = {0x0000};
 8001c30:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001c34:	2220      	movs	r2, #32
 8001c36:	2100      	movs	r1, #0
 8001c38:	4618      	mov	r0, r3
 8001c3a:	f018 feff 	bl	801aa3c <memset>
  uint32_t receive[8] = {0xEEEE};
 8001c3e:	f107 0308 	add.w	r3, r7, #8
 8001c42:	2220      	movs	r2, #32
 8001c44:	2100      	movs	r1, #0
 8001c46:	4618      	mov	r0, r3
 8001c48:	f018 fef8 	bl	801aa3c <memset>
 8001c4c:	f64e 63ee 	movw	r3, #61166	; 0xeeee
 8001c50:	60bb      	str	r3, [r7, #8]
  /* Get active Page for read operation */
  ValidPage = EE_FindValidPage(READ_FROM_VALID_PAGE);
 8001c52:	2000      	movs	r0, #0
 8001c54:	f7ff fed6 	bl	8001a04 <EE_FindValidPage>
 8001c58:	4603      	mov	r3, r0
 8001c5a:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64

  if (ValidPage == PAGE1)       /* Page1 valid */
 8001c5e:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001c62:	2b01      	cmp	r3, #1
 8001c64:	d105      	bne.n	8001c72 <EE_PageTransfer+0x7e>
  {
    /* New page address where variable will be moved to */
    NewPageAddress = PAGE0_BASE_ADDRESS;
 8001c66:	4bac      	ldr	r3, [pc, #688]	; (8001f18 <EE_PageTransfer+0x324>)
 8001c68:	66fb      	str	r3, [r7, #108]	; 0x6c

    /* Old page ID where variable will be taken from */
    OldPageId = PAGE1_ID;
 8001c6a:	2307      	movs	r3, #7
 8001c6c:	f8a7 306a 	strh.w	r3, [r7, #106]	; 0x6a
 8001c70:	e00b      	b.n	8001c8a <EE_PageTransfer+0x96>
  }
  else if (ValidPage == PAGE0)  /* Page0 valid */
 8001c72:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001c76:	2b00      	cmp	r3, #0
 8001c78:	d105      	bne.n	8001c86 <EE_PageTransfer+0x92>
  {
    /* New page address  where variable will be moved to */
    NewPageAddress = PAGE1_BASE_ADDRESS;
 8001c7a:	4ba8      	ldr	r3, [pc, #672]	; (8001f1c <EE_PageTransfer+0x328>)
 8001c7c:	66fb      	str	r3, [r7, #108]	; 0x6c

    /* Old page ID where variable will be taken from */
    OldPageId = PAGE0_ID;
 8001c7e:	2306      	movs	r3, #6
 8001c80:	f8a7 306a 	strh.w	r3, [r7, #106]	; 0x6a
 8001c84:	e001      	b.n	8001c8a <EE_PageTransfer+0x96>
  }
  else
  {
    return NO_VALID_PAGE;       /* No valid Page */
 8001c86:	23ab      	movs	r3, #171	; 0xab
 8001c88:	e142      	b.n	8001f10 <EE_PageTransfer+0x31c>
  __ASM volatile ("dsb 0xF":::"memory");
 8001c8a:	f3bf 8f4f 	dsb	sy
}
 8001c8e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001c90:	f3bf 8f6f 	isb	sy
}
 8001c94:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8001c96:	4ba2      	ldr	r3, [pc, #648]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001c98:	695b      	ldr	r3, [r3, #20]
 8001c9a:	4aa1      	ldr	r2, [pc, #644]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001c9c:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001ca0:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001ca2:	4b9f      	ldr	r3, [pc, #636]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001ca4:	2200      	movs	r2, #0
 8001ca6:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001caa:	f3bf 8f4f 	dsb	sy
}
 8001cae:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001cb0:	f3bf 8f6f 	isb	sy
}
 8001cb4:	bf00      	nop
}
 8001cb6:	bf00      	nop
  }

  /* Set the new Page status to RECEIVE_DATA status */
  SCB_DisableICache();
  FlashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, NewPageAddress, ((uint32_t)receive));
 8001cb8:	f107 0308 	add.w	r3, r7, #8
 8001cbc:	461a      	mov	r2, r3
 8001cbe:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 8001cc0:	2001      	movs	r0, #1
 8001cc2:	f009 fa13 	bl	800b0ec <HAL_FLASH_Program>
 8001cc6:	4603      	mov	r3, r0
 8001cc8:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001ccc:	4b94      	ldr	r3, [pc, #592]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001cce:	695b      	ldr	r3, [r3, #20]
 8001cd0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001cd4:	2b00      	cmp	r3, #0
 8001cd6:	d11b      	bne.n	8001d10 <EE_PageTransfer+0x11c>
  __ASM volatile ("dsb 0xF":::"memory");
 8001cd8:	f3bf 8f4f 	dsb	sy
}
 8001cdc:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001cde:	f3bf 8f6f 	isb	sy
}
 8001ce2:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001ce4:	4b8e      	ldr	r3, [pc, #568]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001cec:	f3bf 8f4f 	dsb	sy
}
 8001cf0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001cf2:	f3bf 8f6f 	isb	sy
}
 8001cf6:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001cf8:	4b89      	ldr	r3, [pc, #548]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001cfa:	695b      	ldr	r3, [r3, #20]
 8001cfc:	4a88      	ldr	r2, [pc, #544]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001cfe:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001d02:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001d04:	f3bf 8f4f 	dsb	sy
}
 8001d08:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001d0a:	f3bf 8f6f 	isb	sy
}
 8001d0e:	e000      	b.n	8001d12 <EE_PageTransfer+0x11e>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001d10:	bf00      	nop
  SCB_EnableICache();

  /* If program operation was failed, a Flash error code is returned */
  if (FlashStatus != HAL_OK)
 8001d12:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001d16:	2b00      	cmp	r3, #0
 8001d18:	d003      	beq.n	8001d22 <EE_PageTransfer+0x12e>
  {
    return FlashStatus;
 8001d1a:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001d1e:	b29b      	uxth	r3, r3
 8001d20:	e0f6      	b.n	8001f10 <EE_PageTransfer+0x31c>
  }

  /* Write the variable passed as parameter in the new active page */
  EepromStatus = EE_VerifyPageFullWriteVariable(VirtAddress, Data);
 8001d22:	88ba      	ldrh	r2, [r7, #4]
 8001d24:	88fb      	ldrh	r3, [r7, #6]
 8001d26:	4611      	mov	r1, r2
 8001d28:	4618      	mov	r0, r3
 8001d2a:	f7ff feb1 	bl	8001a90 <EE_VerifyPageFullWriteVariable>
 8001d2e:	4603      	mov	r3, r0
 8001d30:	f8a7 3062 	strh.w	r3, [r7, #98]	; 0x62
  /* If program operation was failed, a Flash error code is returned */
  if (EepromStatus != HAL_OK)
 8001d34:	f8b7 3062 	ldrh.w	r3, [r7, #98]	; 0x62
 8001d38:	2b00      	cmp	r3, #0
 8001d3a:	d002      	beq.n	8001d42 <EE_PageTransfer+0x14e>
  {
    return EepromStatus;
 8001d3c:	f8b7 3062 	ldrh.w	r3, [r7, #98]	; 0x62
 8001d40:	e0e6      	b.n	8001f10 <EE_PageTransfer+0x31c>
  }

  /* Transfer process: transfer variables from old to the new active page */
  for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 8001d42:	2300      	movs	r3, #0
 8001d44:	f8a7 3068 	strh.w	r3, [r7, #104]	; 0x68
 8001d48:	e031      	b.n	8001dae <EE_PageTransfer+0x1ba>
  {
    if (VirtAddVarTab[VarIdx] != VirtAddress)  /* Check each variable except the one passed as parameter */
 8001d4a:	f8b7 3068 	ldrh.w	r3, [r7, #104]	; 0x68
 8001d4e:	4a75      	ldr	r2, [pc, #468]	; (8001f24 <EE_PageTransfer+0x330>)
 8001d50:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001d54:	88fa      	ldrh	r2, [r7, #6]
 8001d56:	429a      	cmp	r2, r3
 8001d58:	d024      	beq.n	8001da4 <EE_PageTransfer+0x1b0>
    {
      /* Read the other last variable updates */
      ReadStatus = EE_ReadVariable(VirtAddVarTab[VarIdx], &DataVar);
 8001d5a:	f8b7 3068 	ldrh.w	r3, [r7, #104]	; 0x68
 8001d5e:	4a71      	ldr	r2, [pc, #452]	; (8001f24 <EE_PageTransfer+0x330>)
 8001d60:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001d64:	4970      	ldr	r1, [pc, #448]	; (8001f28 <EE_PageTransfer+0x334>)
 8001d66:	4618      	mov	r0, r3
 8001d68:	f7ff fcce 	bl	8001708 <EE_ReadVariable>
 8001d6c:	4603      	mov	r3, r0
 8001d6e:	f8a7 3060 	strh.w	r3, [r7, #96]	; 0x60
      /* In case variable corresponding to the virtual address was found */
      if (ReadStatus != 0x1)
 8001d72:	f8b7 3060 	ldrh.w	r3, [r7, #96]	; 0x60
 8001d76:	2b01      	cmp	r3, #1
 8001d78:	d014      	beq.n	8001da4 <EE_PageTransfer+0x1b0>
      {
        /* Transfer the variable to the new active page */
        EepromStatus = EE_VerifyPageFullWriteVariable(VirtAddVarTab[VarIdx], DataVar);
 8001d7a:	f8b7 3068 	ldrh.w	r3, [r7, #104]	; 0x68
 8001d7e:	4a69      	ldr	r2, [pc, #420]	; (8001f24 <EE_PageTransfer+0x330>)
 8001d80:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001d84:	4a68      	ldr	r2, [pc, #416]	; (8001f28 <EE_PageTransfer+0x334>)
 8001d86:	8812      	ldrh	r2, [r2, #0]
 8001d88:	4611      	mov	r1, r2
 8001d8a:	4618      	mov	r0, r3
 8001d8c:	f7ff fe80 	bl	8001a90 <EE_VerifyPageFullWriteVariable>
 8001d90:	4603      	mov	r3, r0
 8001d92:	f8a7 3062 	strh.w	r3, [r7, #98]	; 0x62
        /* If program operation was failed, a Flash error code is returned */
        if (EepromStatus != HAL_OK)
 8001d96:	f8b7 3062 	ldrh.w	r3, [r7, #98]	; 0x62
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d002      	beq.n	8001da4 <EE_PageTransfer+0x1b0>
        {
          return EepromStatus;
 8001d9e:	f8b7 3062 	ldrh.w	r3, [r7, #98]	; 0x62
 8001da2:	e0b5      	b.n	8001f10 <EE_PageTransfer+0x31c>
  for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 8001da4:	f8b7 3068 	ldrh.w	r3, [r7, #104]	; 0x68
 8001da8:	3301      	adds	r3, #1
 8001daa:	f8a7 3068 	strh.w	r3, [r7, #104]	; 0x68
 8001dae:	f8b7 3068 	ldrh.w	r3, [r7, #104]	; 0x68
 8001db2:	2b1c      	cmp	r3, #28
 8001db4:	d9c9      	bls.n	8001d4a <EE_PageTransfer+0x156>
        }
      }
    }
  }

  HAL_FLASH_Unlock();
 8001db6:	f009 fa2b 	bl	800b210 <HAL_FLASH_Unlock>

  /* Clear pending flags (if any) */
  __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR |
 8001dba:	4b5c      	ldr	r3, [pc, #368]	; (8001f2c <EE_PageTransfer+0x338>)
 8001dbc:	f44f 028e 	mov.w	r2, #4653056	; 0x470000
 8001dc0:	615a      	str	r2, [r3, #20]
                         FLASH_FLAG_PGSERR | FLASH_FLAG_WRPERR);

  pEraseInit.TypeErase = TYPEERASE_SECTORS;
 8001dc2:	2300      	movs	r3, #0
 8001dc4:	64bb      	str	r3, [r7, #72]	; 0x48
  pEraseInit.Banks = FLASH_BANK_2 ;
 8001dc6:	2302      	movs	r3, #2
 8001dc8:	64fb      	str	r3, [r7, #76]	; 0x4c
  pEraseInit.Sector = OldPageId;
 8001dca:	f8b7 306a 	ldrh.w	r3, [r7, #106]	; 0x6a
 8001dce:	653b      	str	r3, [r7, #80]	; 0x50
  pEraseInit.NbSectors = 1;
 8001dd0:	2301      	movs	r3, #1
 8001dd2:	657b      	str	r3, [r7, #84]	; 0x54
  pEraseInit.VoltageRange = VOLTAGE_RANGE;
 8001dd4:	2320      	movs	r3, #32
 8001dd6:	65bb      	str	r3, [r7, #88]	; 0x58
  __ASM volatile ("dsb 0xF":::"memory");
 8001dd8:	f3bf 8f4f 	dsb	sy
}
 8001ddc:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001dde:	f3bf 8f6f 	isb	sy
}
 8001de2:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8001de4:	4b4e      	ldr	r3, [pc, #312]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001de6:	695b      	ldr	r3, [r3, #20]
 8001de8:	4a4d      	ldr	r2, [pc, #308]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001dea:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001dee:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001df0:	4b4b      	ldr	r3, [pc, #300]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001df2:	2200      	movs	r2, #0
 8001df4:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001df8:	f3bf 8f4f 	dsb	sy
}
 8001dfc:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001dfe:	f3bf 8f6f 	isb	sy
}
 8001e02:	bf00      	nop
}
 8001e04:	bf00      	nop

  /* Erase the old Page: Set old Page status to ERASED status */
  SCB_DisableICache();
  FlashStatus = HAL_FLASHEx_Erase(&pEraseInit, &SectorError);
 8001e06:	f107 025c 	add.w	r2, r7, #92	; 0x5c
 8001e0a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001e0e:	4611      	mov	r1, r2
 8001e10:	4618      	mov	r0, r3
 8001e12:	f009 fad3 	bl	800b3bc <HAL_FLASHEx_Erase>
 8001e16:	4603      	mov	r3, r0
 8001e18:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001e1c:	4b40      	ldr	r3, [pc, #256]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001e1e:	695b      	ldr	r3, [r3, #20]
 8001e20:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e24:	2b00      	cmp	r3, #0
 8001e26:	d11b      	bne.n	8001e60 <EE_PageTransfer+0x26c>
  __ASM volatile ("dsb 0xF":::"memory");
 8001e28:	f3bf 8f4f 	dsb	sy
}
 8001e2c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001e2e:	f3bf 8f6f 	isb	sy
}
 8001e32:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001e34:	4b3a      	ldr	r3, [pc, #232]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001e36:	2200      	movs	r2, #0
 8001e38:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001e3c:	f3bf 8f4f 	dsb	sy
}
 8001e40:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001e42:	f3bf 8f6f 	isb	sy
}
 8001e46:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001e48:	4b35      	ldr	r3, [pc, #212]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001e4a:	695b      	ldr	r3, [r3, #20]
 8001e4c:	4a34      	ldr	r2, [pc, #208]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001e4e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001e52:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001e54:	f3bf 8f4f 	dsb	sy
}
 8001e58:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001e5a:	f3bf 8f6f 	isb	sy
}
 8001e5e:	e000      	b.n	8001e62 <EE_PageTransfer+0x26e>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001e60:	bf00      	nop
  SCB_EnableICache();
  /* If erase operation was failed, a Flash error code is returned */
  if (FlashStatus != HAL_OK)
 8001e62:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	d003      	beq.n	8001e72 <EE_PageTransfer+0x27e>
  {
    return FlashStatus;
 8001e6a:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001e6e:	b29b      	uxth	r3, r3
 8001e70:	e04e      	b.n	8001f10 <EE_PageTransfer+0x31c>
  __ASM volatile ("dsb 0xF":::"memory");
 8001e72:	f3bf 8f4f 	dsb	sy
}
 8001e76:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001e78:	f3bf 8f6f 	isb	sy
}
 8001e7c:	bf00      	nop
    SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
 8001e7e:	4b28      	ldr	r3, [pc, #160]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001e80:	695b      	ldr	r3, [r3, #20]
 8001e82:	4a27      	ldr	r2, [pc, #156]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001e84:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001e88:	6153      	str	r3, [r2, #20]
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001e8a:	4b25      	ldr	r3, [pc, #148]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001e8c:	2200      	movs	r2, #0
 8001e8e:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001e92:	f3bf 8f4f 	dsb	sy
}
 8001e96:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001e98:	f3bf 8f6f 	isb	sy
}
 8001e9c:	bf00      	nop
}
 8001e9e:	bf00      	nop
  }

  /* Set new Page status to VALID_PAGE status */
  SCB_DisableICache();
  FlashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, NewPageAddress, ((uint32_t)valid));
 8001ea0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001ea4:	461a      	mov	r2, r3
 8001ea6:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 8001ea8:	2001      	movs	r0, #1
 8001eaa:	f009 f91f 	bl	800b0ec <HAL_FLASH_Program>
 8001eae:	4603      	mov	r3, r0
 8001eb0:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001eb4:	4b1a      	ldr	r3, [pc, #104]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001eb6:	695b      	ldr	r3, [r3, #20]
 8001eb8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ebc:	2b00      	cmp	r3, #0
 8001ebe:	d11b      	bne.n	8001ef8 <EE_PageTransfer+0x304>
  __ASM volatile ("dsb 0xF":::"memory");
 8001ec0:	f3bf 8f4f 	dsb	sy
}
 8001ec4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001ec6:	f3bf 8f6f 	isb	sy
}
 8001eca:	bf00      	nop
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8001ecc:	4b14      	ldr	r3, [pc, #80]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001ece:	2200      	movs	r2, #0
 8001ed0:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001ed4:	f3bf 8f4f 	dsb	sy
}
 8001ed8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001eda:	f3bf 8f6f 	isb	sy
}
 8001ede:	bf00      	nop
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001ee0:	4b0f      	ldr	r3, [pc, #60]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001ee2:	695b      	ldr	r3, [r3, #20]
 8001ee4:	4a0e      	ldr	r2, [pc, #56]	; (8001f20 <EE_PageTransfer+0x32c>)
 8001ee6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001eea:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001eec:	f3bf 8f4f 	dsb	sy
}
 8001ef0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001ef2:	f3bf 8f6f 	isb	sy
}
 8001ef6:	e000      	b.n	8001efa <EE_PageTransfer+0x306>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8001ef8:	bf00      	nop
  SCB_EnableICache();
  /* If program operation was failed, a Flash error code is returned */
  if (FlashStatus != HAL_OK)
 8001efa:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001efe:	2b00      	cmp	r3, #0
 8001f00:	d003      	beq.n	8001f0a <EE_PageTransfer+0x316>
  {
    return FlashStatus;
 8001f02:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001f06:	b29b      	uxth	r3, r3
 8001f08:	e002      	b.n	8001f10 <EE_PageTransfer+0x31c>
  }

  /* Return last operation flash status */
  return FlashStatus;
 8001f0a:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001f0e:	b29b      	uxth	r3, r3
}
 8001f10:	4618      	mov	r0, r3
 8001f12:	3770      	adds	r7, #112	; 0x70
 8001f14:	46bd      	mov	sp, r7
 8001f16:	bd80      	pop	{r7, pc}
 8001f18:	081c0000 	.word	0x081c0000
 8001f1c:	081e0000 	.word	0x081e0000
 8001f20:	e000ed00 	.word	0xe000ed00
 8001f24:	24000000 	.word	0x24000000
 8001f28:	240003a0 	.word	0x240003a0
 8001f2c:	52002000 	.word	0x52002000

08001f30 <__NVIC_SystemReset>:
{
 8001f30:	b480      	push	{r7}
 8001f32:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
 8001f34:	f3bf 8f4f 	dsb	sy
}
 8001f38:	bf00      	nop
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8001f3a:	4b06      	ldr	r3, [pc, #24]	; (8001f54 <__NVIC_SystemReset+0x24>)
 8001f3c:	68db      	ldr	r3, [r3, #12]
 8001f3e:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8001f42:	4904      	ldr	r1, [pc, #16]	; (8001f54 <__NVIC_SystemReset+0x24>)
 8001f44:	4b04      	ldr	r3, [pc, #16]	; (8001f58 <__NVIC_SystemReset+0x28>)
 8001f46:	4313      	orrs	r3, r2
 8001f48:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8001f4a:	f3bf 8f4f 	dsb	sy
}
 8001f4e:	bf00      	nop
    __NOP();
 8001f50:	bf00      	nop
 8001f52:	e7fd      	b.n	8001f50 <__NVIC_SystemReset+0x20>
 8001f54:	e000ed00 	.word	0xe000ed00
 8001f58:	05fa0004 	.word	0x05fa0004

08001f5c <handle_error>:
 * set the previous error to whatever error we are currently handling, send an error packet,
 * and enter IDLE mode. Additional actions are taken depending on the error category.
 *
 * @param error Error given by the caller.
 */
void handle_error(ERROR_STRUCT error) {
 8001f5c:	b580      	push	{r7, lr}
 8001f5e:	b082      	sub	sp, #8
 8001f60:	af00      	add	r7, sp, #0
 8001f62:	463b      	mov	r3, r7
 8001f64:	e883 0003 	stmia.w	r3, {r0, r1}
#ifdef ERROR_HANDLING_ENABLED
	osEventFlagsSet(mode_event_flags, IDLE_FLAG);
 8001f68:	4b18      	ldr	r3, [pc, #96]	; (8001fcc <handle_error+0x70>)
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	2102      	movs	r1, #2
 8001f6e:	4618      	mov	r0, r3
 8001f70:	f015 fb98 	bl	80176a4 <osEventFlagsSet>
	while (!IDLING) {};
 8001f74:	bf00      	nop
 8001f76:	4b16      	ldr	r3, [pc, #88]	; (8001fd0 <handle_error+0x74>)
 8001f78:	781b      	ldrb	r3, [r3, #0]
 8001f7a:	b2db      	uxtb	r3, r3
 8001f7c:	2b00      	cmp	r3, #0
 8001f7e:	d0fa      	beq.n	8001f76 <handle_error+0x1a>
	increment_error_counter(error);
 8001f80:	463b      	mov	r3, r7
 8001f82:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001f86:	f000 f855 	bl	8002034 <increment_error_counter>
	set_previous_error(error);
 8001f8a:	463b      	mov	r3, r7
 8001f8c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001f90:	f000 f8b6 	bl	8002100 <set_previous_error>
	send_current_error_packet(error);
 8001f94:	463b      	mov	r3, r7
 8001f96:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001f9a:	f000 fa61 	bl	8002460 <send_current_error_packet>
	send_junk_packet();
 8001f9e:	f000 fa9b 	bl	80024d8 <send_junk_packet>

	switch (error.category) {
 8001fa2:	783b      	ldrb	r3, [r7, #0]
 8001fa4:	2b02      	cmp	r3, #2
 8001fa6:	d008      	beq.n	8001fba <handle_error+0x5e>
 8001fa8:	2b02      	cmp	r3, #2
 8001faa:	dc08      	bgt.n	8001fbe <handle_error+0x62>
 8001fac:	2b00      	cmp	r3, #0
 8001fae:	d002      	beq.n	8001fb6 <handle_error+0x5a>
 8001fb0:	2b01      	cmp	r3, #1
 8001fb2:	d006      	beq.n	8001fc2 <handle_error+0x66>
	case EC_peripheral:
		NVIC_SystemReset();
		break;
	default:
		// Should not be possible to get here
		break;
 8001fb4:	e003      	b.n	8001fbe <handle_error+0x62>
		NVIC_SystemReset();
 8001fb6:	f7ff ffbb 	bl	8001f30 <__NVIC_SystemReset>
		NVIC_SystemReset();
 8001fba:	f7ff ffb9 	bl	8001f30 <__NVIC_SystemReset>
		break;
 8001fbe:	bf00      	nop
 8001fc0:	e000      	b.n	8001fc4 <handle_error+0x68>
		break;
 8001fc2:	bf00      	nop
	}
#endif
}
 8001fc4:	bf00      	nop
 8001fc6:	3708      	adds	r7, #8
 8001fc8:	46bd      	mov	sp, r7
 8001fca:	bd80      	pop	{r7, pc}
 8001fcc:	24001a98 	.word	0x24001a98
 8001fd0:	240000c0 	.word	0x240000c0

08001fd4 <error_counter_init>:

/**
 * @breif Initializes the EE, reads the error counters from the EE, and stores them in local_cpy.
 */
void error_counter_init() {
 8001fd4:	b580      	push	{r7, lr}
 8001fd6:	b082      	sub	sp, #8
 8001fd8:	af00      	add	r7, sp, #0
	HAL_FLASH_Unlock();
 8001fda:	f009 f919 	bl	800b210 <HAL_FLASH_Unlock>
	if (EE_Init() != EE_OK) {
 8001fde:	f7fe fedb 	bl	8000d98 <EE_Init>
 8001fe2:	4603      	mov	r3, r0
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	d001      	beq.n	8001fec <error_counter_init+0x18>
		Error_Handler();
 8001fe8:	f001 fdc0 	bl	8003b6c <Error_Handler>
	}

	for (int i = 0; i < NUM_ERROR_COUNTERS; i++) {
 8001fec:	2300      	movs	r3, #0
 8001fee:	607b      	str	r3, [r7, #4]
 8001ff0:	e013      	b.n	800201a <error_counter_init+0x46>
		if ((EE_ReadVariable(VirtAddVarTab[i], &local_cpy[i])) != HAL_OK) {
 8001ff2:	4a0e      	ldr	r2, [pc, #56]	; (800202c <error_counter_init+0x58>)
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	005b      	lsls	r3, r3, #1
 8001ffe:	490c      	ldr	r1, [pc, #48]	; (8002030 <error_counter_init+0x5c>)
 8002000:	440b      	add	r3, r1
 8002002:	4619      	mov	r1, r3
 8002004:	4610      	mov	r0, r2
 8002006:	f7ff fb7f 	bl	8001708 <EE_ReadVariable>
 800200a:	4603      	mov	r3, r0
 800200c:	2b00      	cmp	r3, #0
 800200e:	d001      	beq.n	8002014 <error_counter_init+0x40>
			Error_Handler();
 8002010:	f001 fdac 	bl	8003b6c <Error_Handler>
	for (int i = 0; i < NUM_ERROR_COUNTERS; i++) {
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	3301      	adds	r3, #1
 8002018:	607b      	str	r3, [r7, #4]
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	2b1a      	cmp	r3, #26
 800201e:	dde8      	ble.n	8001ff2 <error_counter_init+0x1e>
		}
	}
}
 8002020:	bf00      	nop
 8002022:	bf00      	nop
 8002024:	3708      	adds	r7, #8
 8002026:	46bd      	mov	sp, r7
 8002028:	bd80      	pop	{r7, pc}
 800202a:	bf00      	nop
 800202c:	24000000 	.word	0x24000000
 8002030:	240003a4 	.word	0x240003a4

08002034 <increment_error_counter>:
 * local_cpy array. To see what index a particular error is stored in, just check the value
 * each category or detail is assigned in the header file.
 *
 * @param error Error given by the caller.
 */
void increment_error_counter(ERROR_STRUCT error) {
 8002034:	b580      	push	{r7, lr}
 8002036:	b082      	sub	sp, #8
 8002038:	af00      	add	r7, sp, #0
 800203a:	463b      	mov	r3, r7
 800203c:	e883 0003 	stmia.w	r3, {r0, r1}
	local_cpy[error.category]++;
 8002040:	783b      	ldrb	r3, [r7, #0]
 8002042:	4a0b      	ldr	r2, [pc, #44]	; (8002070 <increment_error_counter+0x3c>)
 8002044:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8002048:	3201      	adds	r2, #1
 800204a:	b291      	uxth	r1, r2
 800204c:	4a08      	ldr	r2, [pc, #32]	; (8002070 <increment_error_counter+0x3c>)
 800204e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	local_cpy[error.detail]++;
 8002052:	787b      	ldrb	r3, [r7, #1]
 8002054:	4a06      	ldr	r2, [pc, #24]	; (8002070 <increment_error_counter+0x3c>)
 8002056:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 800205a:	3201      	adds	r2, #1
 800205c:	b291      	uxth	r1, r2
 800205e:	4a04      	ldr	r2, [pc, #16]	; (8002070 <increment_error_counter+0x3c>)
 8002060:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	update_error_counter();
 8002064:	f000 f806 	bl	8002074 <update_error_counter>
}
 8002068:	bf00      	nop
 800206a:	3708      	adds	r7, #8
 800206c:	46bd      	mov	sp, r7
 800206e:	bd80      	pop	{r7, pc}
 8002070:	240003a4 	.word	0x240003a4

08002074 <update_error_counter>:

/**
 * @brief Writes the contents of local_cpy to the EE, excluding the previous error codes.
 */
void update_error_counter(){
 8002074:	b580      	push	{r7, lr}
 8002076:	b082      	sub	sp, #8
 8002078:	af00      	add	r7, sp, #0
	for (int i = 0; i < NUM_ERROR_COUNTERS; i++) {
 800207a:	2300      	movs	r3, #0
 800207c:	607b      	str	r3, [r7, #4]
 800207e:	e013      	b.n	80020a8 <update_error_counter+0x34>
		if ((EE_WriteVariable(VirtAddVarTab[i], local_cpy[i])) != HAL_OK) {
 8002080:	4a0d      	ldr	r2, [pc, #52]	; (80020b8 <update_error_counter+0x44>)
 8002082:	687b      	ldr	r3, [r7, #4]
 8002084:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8002088:	490c      	ldr	r1, [pc, #48]	; (80020bc <update_error_counter+0x48>)
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8002090:	4619      	mov	r1, r3
 8002092:	4610      	mov	r0, r2
 8002094:	f7ff fb80 	bl	8001798 <EE_WriteVariable>
 8002098:	4603      	mov	r3, r0
 800209a:	2b00      	cmp	r3, #0
 800209c:	d001      	beq.n	80020a2 <update_error_counter+0x2e>
			Error_Handler();
 800209e:	f001 fd65 	bl	8003b6c <Error_Handler>
	for (int i = 0; i < NUM_ERROR_COUNTERS; i++) {
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	3301      	adds	r3, #1
 80020a6:	607b      	str	r3, [r7, #4]
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	2b1a      	cmp	r3, #26
 80020ac:	dde8      	ble.n	8002080 <update_error_counter+0xc>
		}
	}
}
 80020ae:	bf00      	nop
 80020b0:	bf00      	nop
 80020b2:	3708      	adds	r7, #8
 80020b4:	46bd      	mov	sp, r7
 80020b6:	bd80      	pop	{r7, pc}
 80020b8:	24000000 	.word	0x24000000
 80020bc:	240003a4 	.word	0x240003a4

080020c0 <reset_error_counters>:

/**
 * @brief Resets all error counters in the EE to 0.
 */
void reset_error_counters() {
 80020c0:	b580      	push	{r7, lr}
 80020c2:	b082      	sub	sp, #8
 80020c4:	af00      	add	r7, sp, #0
	for (int i = 0; i < NUM_ERROR_COUNTERS; i++) {
 80020c6:	2300      	movs	r3, #0
 80020c8:	607b      	str	r3, [r7, #4]
 80020ca:	e00f      	b.n	80020ec <reset_error_counters+0x2c>
		if ((EE_WriteVariable(VirtAddVarTab[i], 0)) != HAL_OK) {
 80020cc:	4a0b      	ldr	r2, [pc, #44]	; (80020fc <reset_error_counters+0x3c>)
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80020d4:	2100      	movs	r1, #0
 80020d6:	4618      	mov	r0, r3
 80020d8:	f7ff fb5e 	bl	8001798 <EE_WriteVariable>
 80020dc:	4603      	mov	r3, r0
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d001      	beq.n	80020e6 <reset_error_counters+0x26>
			Error_Handler();
 80020e2:	f001 fd43 	bl	8003b6c <Error_Handler>
	for (int i = 0; i < NUM_ERROR_COUNTERS; i++) {
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	3301      	adds	r3, #1
 80020ea:	607b      	str	r3, [r7, #4]
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	2b1a      	cmp	r3, #26
 80020f0:	ddec      	ble.n	80020cc <reset_error_counters+0xc>
		}
	}
}
 80020f2:	bf00      	nop
 80020f4:	bf00      	nop
 80020f6:	3708      	adds	r7, #8
 80020f8:	46bd      	mov	sp, r7
 80020fa:	bd80      	pop	{r7, pc}
 80020fc:	24000000 	.word	0x24000000

08002100 <set_previous_error>:
/**
 * @brief Sets previous error code in the EE.
 *
 * @param error Previous error code in EE is set to this.
 */
void set_previous_error(ERROR_STRUCT error) {
 8002100:	b580      	push	{r7, lr}
 8002102:	b082      	sub	sp, #8
 8002104:	af00      	add	r7, sp, #0
 8002106:	463b      	mov	r3, r7
 8002108:	e883 0003 	stmia.w	r3, {r0, r1}
	if ((EE_WriteVariable(VirtAddVarTab[PREV_ERROR_CATEGORY_INDEX], error.category)) != HAL_OK) {
 800210c:	4b0e      	ldr	r3, [pc, #56]	; (8002148 <set_previous_error+0x48>)
 800210e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002110:	783a      	ldrb	r2, [r7, #0]
 8002112:	b292      	uxth	r2, r2
 8002114:	4611      	mov	r1, r2
 8002116:	4618      	mov	r0, r3
 8002118:	f7ff fb3e 	bl	8001798 <EE_WriteVariable>
 800211c:	4603      	mov	r3, r0
 800211e:	2b00      	cmp	r3, #0
 8002120:	d001      	beq.n	8002126 <set_previous_error+0x26>
		Error_Handler();
 8002122:	f001 fd23 	bl	8003b6c <Error_Handler>
	}
	if ((EE_WriteVariable(VirtAddVarTab[PREV_ERROR_DETAIL_INDEX], error.detail)) != HAL_OK) {
 8002126:	4b08      	ldr	r3, [pc, #32]	; (8002148 <set_previous_error+0x48>)
 8002128:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
 800212a:	787a      	ldrb	r2, [r7, #1]
 800212c:	b292      	uxth	r2, r2
 800212e:	4611      	mov	r1, r2
 8002130:	4618      	mov	r0, r3
 8002132:	f7ff fb31 	bl	8001798 <EE_WriteVariable>
 8002136:	4603      	mov	r3, r0
 8002138:	2b00      	cmp	r3, #0
 800213a:	d001      	beq.n	8002140 <set_previous_error+0x40>
		Error_Handler();
 800213c:	f001 fd16 	bl	8003b6c <Error_Handler>
	}
}
 8002140:	bf00      	nop
 8002142:	3708      	adds	r7, #8
 8002144:	46bd      	mov	sp, r7
 8002146:	bd80      	pop	{r7, pc}
 8002148:	24000000 	.word	0x24000000

0800214c <get_previous_error>:
/**
 * @brief Reads the previous error codes from EE
 *
 * @return Error populated with retrieved category and detail.
 */
ERROR_STRUCT get_previous_error() {
 800214c:	b580      	push	{r7, lr}
 800214e:	b086      	sub	sp, #24
 8002150:	af00      	add	r7, sp, #0
 8002152:	6078      	str	r0, [r7, #4]
	ERROR_STRUCT prev_error;
	uint16_t category;
	uint16_t detail;

	if ((EE_ReadVariable(VirtAddVarTab[PREV_ERROR_CATEGORY_INDEX], &category)) != HAL_OK) {
 8002154:	4b15      	ldr	r3, [pc, #84]	; (80021ac <get_previous_error+0x60>)
 8002156:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002158:	f107 020e 	add.w	r2, r7, #14
 800215c:	4611      	mov	r1, r2
 800215e:	4618      	mov	r0, r3
 8002160:	f7ff fad2 	bl	8001708 <EE_ReadVariable>
 8002164:	4603      	mov	r3, r0
 8002166:	2b00      	cmp	r3, #0
 8002168:	d001      	beq.n	800216e <get_previous_error+0x22>
		Error_Handler();
 800216a:	f001 fcff 	bl	8003b6c <Error_Handler>
	}
	if ((EE_ReadVariable(VirtAddVarTab[PREV_ERROR_DETAIL_INDEX], &detail)) != HAL_OK) {
 800216e:	4b0f      	ldr	r3, [pc, #60]	; (80021ac <get_previous_error+0x60>)
 8002170:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
 8002172:	f107 020c 	add.w	r2, r7, #12
 8002176:	4611      	mov	r1, r2
 8002178:	4618      	mov	r0, r3
 800217a:	f7ff fac5 	bl	8001708 <EE_ReadVariable>
 800217e:	4603      	mov	r3, r0
 8002180:	2b00      	cmp	r3, #0
 8002182:	d001      	beq.n	8002188 <get_previous_error+0x3c>
		Error_Handler();
 8002184:	f001 fcf2 	bl	8003b6c <Error_Handler>
	}

	prev_error.category = category;
 8002188:	89fb      	ldrh	r3, [r7, #14]
 800218a:	b2db      	uxtb	r3, r3
 800218c:	743b      	strb	r3, [r7, #16]
	prev_error.detail = detail;
 800218e:	89bb      	ldrh	r3, [r7, #12]
 8002190:	b2db      	uxtb	r3, r3
 8002192:	747b      	strb	r3, [r7, #17]

	return prev_error;
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	461a      	mov	r2, r3
 8002198:	f107 0310 	add.w	r3, r7, #16
 800219c:	cb03      	ldmia	r3!, {r0, r1}
 800219e:	6010      	str	r0, [r2, #0]
 80021a0:	6051      	str	r1, [r2, #4]
}
 80021a2:	6878      	ldr	r0, [r7, #4]
 80021a4:	3718      	adds	r7, #24
 80021a6:	46bd      	mov	sp, r7
 80021a8:	bd80      	pop	{r7, pc}
 80021aa:	bf00      	nop
 80021ac:	24000000 	.word	0x24000000

080021b0 <send_error_counter_packet>:
 * @brief Creates and sends a packet containing all 27 error counters.
 *
 * There is an error counter for every single category and detail.
 * This type of packet is only sent during sync.
 */
void send_error_counter_packet() {
 80021b0:	b580      	push	{r7, lr}
 80021b2:	b08e      	sub	sp, #56	; 0x38
 80021b4:	af00      	add	r7, sp, #0
	uint8_t buffer[ERROR_COUNTER_PACKET_SIZE];

	buffer[0] = ERROR_COUNTER_PACKET_SYNC;
 80021b6:	23cc      	movs	r3, #204	; 0xcc
 80021b8:	703b      	strb	r3, [r7, #0]
	buffer[1] = ERROR_COUNTER_PACKET_SYNC;
 80021ba:	23cc      	movs	r3, #204	; 0xcc
 80021bc:	707b      	strb	r3, [r7, #1]
	buffer[2] = ((local_cpy[0] & 0xFF00) >> 8);
 80021be:	4b98      	ldr	r3, [pc, #608]	; (8002420 <send_error_counter_packet+0x270>)
 80021c0:	881b      	ldrh	r3, [r3, #0]
 80021c2:	0a1b      	lsrs	r3, r3, #8
 80021c4:	b29b      	uxth	r3, r3
 80021c6:	b2db      	uxtb	r3, r3
 80021c8:	70bb      	strb	r3, [r7, #2]
	buffer[3] = (local_cpy[0] & 0xFF);
 80021ca:	4b95      	ldr	r3, [pc, #596]	; (8002420 <send_error_counter_packet+0x270>)
 80021cc:	881b      	ldrh	r3, [r3, #0]
 80021ce:	b2db      	uxtb	r3, r3
 80021d0:	70fb      	strb	r3, [r7, #3]
	buffer[4] = ((local_cpy[1] & 0xFF00) >> 8);
 80021d2:	4b93      	ldr	r3, [pc, #588]	; (8002420 <send_error_counter_packet+0x270>)
 80021d4:	885b      	ldrh	r3, [r3, #2]
 80021d6:	0a1b      	lsrs	r3, r3, #8
 80021d8:	b29b      	uxth	r3, r3
 80021da:	b2db      	uxtb	r3, r3
 80021dc:	713b      	strb	r3, [r7, #4]
	buffer[5] = (local_cpy[1] & 0xFF);
 80021de:	4b90      	ldr	r3, [pc, #576]	; (8002420 <send_error_counter_packet+0x270>)
 80021e0:	885b      	ldrh	r3, [r3, #2]
 80021e2:	b2db      	uxtb	r3, r3
 80021e4:	717b      	strb	r3, [r7, #5]
	buffer[6] = ((local_cpy[2] & 0xFF00) >> 8);
 80021e6:	4b8e      	ldr	r3, [pc, #568]	; (8002420 <send_error_counter_packet+0x270>)
 80021e8:	889b      	ldrh	r3, [r3, #4]
 80021ea:	0a1b      	lsrs	r3, r3, #8
 80021ec:	b29b      	uxth	r3, r3
 80021ee:	b2db      	uxtb	r3, r3
 80021f0:	71bb      	strb	r3, [r7, #6]
	buffer[7] = (local_cpy[2] & 0xFF);
 80021f2:	4b8b      	ldr	r3, [pc, #556]	; (8002420 <send_error_counter_packet+0x270>)
 80021f4:	889b      	ldrh	r3, [r3, #4]
 80021f6:	b2db      	uxtb	r3, r3
 80021f8:	71fb      	strb	r3, [r7, #7]
	buffer[8] = ((local_cpy[3] & 0xFF00) >> 8);
 80021fa:	4b89      	ldr	r3, [pc, #548]	; (8002420 <send_error_counter_packet+0x270>)
 80021fc:	88db      	ldrh	r3, [r3, #6]
 80021fe:	0a1b      	lsrs	r3, r3, #8
 8002200:	b29b      	uxth	r3, r3
 8002202:	b2db      	uxtb	r3, r3
 8002204:	723b      	strb	r3, [r7, #8]
	buffer[9] = (local_cpy[3] & 0xFF);
 8002206:	4b86      	ldr	r3, [pc, #536]	; (8002420 <send_error_counter_packet+0x270>)
 8002208:	88db      	ldrh	r3, [r3, #6]
 800220a:	b2db      	uxtb	r3, r3
 800220c:	727b      	strb	r3, [r7, #9]
	buffer[10] = ((local_cpy[4] & 0xFF00) >> 8);
 800220e:	4b84      	ldr	r3, [pc, #528]	; (8002420 <send_error_counter_packet+0x270>)
 8002210:	891b      	ldrh	r3, [r3, #8]
 8002212:	0a1b      	lsrs	r3, r3, #8
 8002214:	b29b      	uxth	r3, r3
 8002216:	b2db      	uxtb	r3, r3
 8002218:	72bb      	strb	r3, [r7, #10]
	buffer[11] = (local_cpy[4] & 0xFF);
 800221a:	4b81      	ldr	r3, [pc, #516]	; (8002420 <send_error_counter_packet+0x270>)
 800221c:	891b      	ldrh	r3, [r3, #8]
 800221e:	b2db      	uxtb	r3, r3
 8002220:	72fb      	strb	r3, [r7, #11]
	buffer[12] = ((local_cpy[5] & 0xFF00) >> 8);
 8002222:	4b7f      	ldr	r3, [pc, #508]	; (8002420 <send_error_counter_packet+0x270>)
 8002224:	895b      	ldrh	r3, [r3, #10]
 8002226:	0a1b      	lsrs	r3, r3, #8
 8002228:	b29b      	uxth	r3, r3
 800222a:	b2db      	uxtb	r3, r3
 800222c:	733b      	strb	r3, [r7, #12]
	buffer[13] = (local_cpy[5] & 0xFF);
 800222e:	4b7c      	ldr	r3, [pc, #496]	; (8002420 <send_error_counter_packet+0x270>)
 8002230:	895b      	ldrh	r3, [r3, #10]
 8002232:	b2db      	uxtb	r3, r3
 8002234:	737b      	strb	r3, [r7, #13]
	buffer[14] = ((local_cpy[6] & 0xFF00) >> 8);
 8002236:	4b7a      	ldr	r3, [pc, #488]	; (8002420 <send_error_counter_packet+0x270>)
 8002238:	899b      	ldrh	r3, [r3, #12]
 800223a:	0a1b      	lsrs	r3, r3, #8
 800223c:	b29b      	uxth	r3, r3
 800223e:	b2db      	uxtb	r3, r3
 8002240:	73bb      	strb	r3, [r7, #14]
	buffer[15] = (local_cpy[6] & 0xFF);
 8002242:	4b77      	ldr	r3, [pc, #476]	; (8002420 <send_error_counter_packet+0x270>)
 8002244:	899b      	ldrh	r3, [r3, #12]
 8002246:	b2db      	uxtb	r3, r3
 8002248:	73fb      	strb	r3, [r7, #15]
	buffer[16] = ((local_cpy[7] & 0xFF00) >> 8);
 800224a:	4b75      	ldr	r3, [pc, #468]	; (8002420 <send_error_counter_packet+0x270>)
 800224c:	89db      	ldrh	r3, [r3, #14]
 800224e:	0a1b      	lsrs	r3, r3, #8
 8002250:	b29b      	uxth	r3, r3
 8002252:	b2db      	uxtb	r3, r3
 8002254:	743b      	strb	r3, [r7, #16]
	buffer[17] = (local_cpy[7] & 0xFF);
 8002256:	4b72      	ldr	r3, [pc, #456]	; (8002420 <send_error_counter_packet+0x270>)
 8002258:	89db      	ldrh	r3, [r3, #14]
 800225a:	b2db      	uxtb	r3, r3
 800225c:	747b      	strb	r3, [r7, #17]
	buffer[18] = ((local_cpy[8] & 0xFF00) >> 8);
 800225e:	4b70      	ldr	r3, [pc, #448]	; (8002420 <send_error_counter_packet+0x270>)
 8002260:	8a1b      	ldrh	r3, [r3, #16]
 8002262:	0a1b      	lsrs	r3, r3, #8
 8002264:	b29b      	uxth	r3, r3
 8002266:	b2db      	uxtb	r3, r3
 8002268:	74bb      	strb	r3, [r7, #18]
	buffer[19] = (local_cpy[8] & 0xFF);
 800226a:	4b6d      	ldr	r3, [pc, #436]	; (8002420 <send_error_counter_packet+0x270>)
 800226c:	8a1b      	ldrh	r3, [r3, #16]
 800226e:	b2db      	uxtb	r3, r3
 8002270:	74fb      	strb	r3, [r7, #19]
	buffer[20] = ((local_cpy[9] & 0xFF00) >> 8);
 8002272:	4b6b      	ldr	r3, [pc, #428]	; (8002420 <send_error_counter_packet+0x270>)
 8002274:	8a5b      	ldrh	r3, [r3, #18]
 8002276:	0a1b      	lsrs	r3, r3, #8
 8002278:	b29b      	uxth	r3, r3
 800227a:	b2db      	uxtb	r3, r3
 800227c:	753b      	strb	r3, [r7, #20]
	buffer[21] = (local_cpy[9] & 0xFF);
 800227e:	4b68      	ldr	r3, [pc, #416]	; (8002420 <send_error_counter_packet+0x270>)
 8002280:	8a5b      	ldrh	r3, [r3, #18]
 8002282:	b2db      	uxtb	r3, r3
 8002284:	757b      	strb	r3, [r7, #21]
	buffer[22] = ((local_cpy[10] & 0xFF00) >> 8);
 8002286:	4b66      	ldr	r3, [pc, #408]	; (8002420 <send_error_counter_packet+0x270>)
 8002288:	8a9b      	ldrh	r3, [r3, #20]
 800228a:	0a1b      	lsrs	r3, r3, #8
 800228c:	b29b      	uxth	r3, r3
 800228e:	b2db      	uxtb	r3, r3
 8002290:	75bb      	strb	r3, [r7, #22]
	buffer[23] = (local_cpy[10] & 0xFF);
 8002292:	4b63      	ldr	r3, [pc, #396]	; (8002420 <send_error_counter_packet+0x270>)
 8002294:	8a9b      	ldrh	r3, [r3, #20]
 8002296:	b2db      	uxtb	r3, r3
 8002298:	75fb      	strb	r3, [r7, #23]
	buffer[24] = ((local_cpy[11] & 0xFF00) >> 8);
 800229a:	4b61      	ldr	r3, [pc, #388]	; (8002420 <send_error_counter_packet+0x270>)
 800229c:	8adb      	ldrh	r3, [r3, #22]
 800229e:	0a1b      	lsrs	r3, r3, #8
 80022a0:	b29b      	uxth	r3, r3
 80022a2:	b2db      	uxtb	r3, r3
 80022a4:	763b      	strb	r3, [r7, #24]
	buffer[25] = (local_cpy[11] & 0xFF);
 80022a6:	4b5e      	ldr	r3, [pc, #376]	; (8002420 <send_error_counter_packet+0x270>)
 80022a8:	8adb      	ldrh	r3, [r3, #22]
 80022aa:	b2db      	uxtb	r3, r3
 80022ac:	767b      	strb	r3, [r7, #25]
	buffer[26] = ((local_cpy[12] & 0xFF00) >> 8);
 80022ae:	4b5c      	ldr	r3, [pc, #368]	; (8002420 <send_error_counter_packet+0x270>)
 80022b0:	8b1b      	ldrh	r3, [r3, #24]
 80022b2:	0a1b      	lsrs	r3, r3, #8
 80022b4:	b29b      	uxth	r3, r3
 80022b6:	b2db      	uxtb	r3, r3
 80022b8:	76bb      	strb	r3, [r7, #26]
	buffer[27] = (local_cpy[12] & 0xFF);
 80022ba:	4b59      	ldr	r3, [pc, #356]	; (8002420 <send_error_counter_packet+0x270>)
 80022bc:	8b1b      	ldrh	r3, [r3, #24]
 80022be:	b2db      	uxtb	r3, r3
 80022c0:	76fb      	strb	r3, [r7, #27]
	buffer[28] = ((local_cpy[13] & 0xFF00) >> 8);
 80022c2:	4b57      	ldr	r3, [pc, #348]	; (8002420 <send_error_counter_packet+0x270>)
 80022c4:	8b5b      	ldrh	r3, [r3, #26]
 80022c6:	0a1b      	lsrs	r3, r3, #8
 80022c8:	b29b      	uxth	r3, r3
 80022ca:	b2db      	uxtb	r3, r3
 80022cc:	773b      	strb	r3, [r7, #28]
	buffer[29] = (local_cpy[13] & 0xFF);
 80022ce:	4b54      	ldr	r3, [pc, #336]	; (8002420 <send_error_counter_packet+0x270>)
 80022d0:	8b5b      	ldrh	r3, [r3, #26]
 80022d2:	b2db      	uxtb	r3, r3
 80022d4:	777b      	strb	r3, [r7, #29]
	buffer[30] = ((local_cpy[14] & 0xFF00) >> 8);
 80022d6:	4b52      	ldr	r3, [pc, #328]	; (8002420 <send_error_counter_packet+0x270>)
 80022d8:	8b9b      	ldrh	r3, [r3, #28]
 80022da:	0a1b      	lsrs	r3, r3, #8
 80022dc:	b29b      	uxth	r3, r3
 80022de:	b2db      	uxtb	r3, r3
 80022e0:	77bb      	strb	r3, [r7, #30]
	buffer[31] = (local_cpy[14] & 0xFF);
 80022e2:	4b4f      	ldr	r3, [pc, #316]	; (8002420 <send_error_counter_packet+0x270>)
 80022e4:	8b9b      	ldrh	r3, [r3, #28]
 80022e6:	b2db      	uxtb	r3, r3
 80022e8:	77fb      	strb	r3, [r7, #31]
	buffer[32] = ((local_cpy[15] & 0xFF00) >> 8);
 80022ea:	4b4d      	ldr	r3, [pc, #308]	; (8002420 <send_error_counter_packet+0x270>)
 80022ec:	8bdb      	ldrh	r3, [r3, #30]
 80022ee:	0a1b      	lsrs	r3, r3, #8
 80022f0:	b29b      	uxth	r3, r3
 80022f2:	b2db      	uxtb	r3, r3
 80022f4:	f887 3020 	strb.w	r3, [r7, #32]
	buffer[33] = (local_cpy[15] & 0xFF);
 80022f8:	4b49      	ldr	r3, [pc, #292]	; (8002420 <send_error_counter_packet+0x270>)
 80022fa:	8bdb      	ldrh	r3, [r3, #30]
 80022fc:	b2db      	uxtb	r3, r3
 80022fe:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	buffer[34] = ((local_cpy[16] & 0xFF00) >> 8);
 8002302:	4b47      	ldr	r3, [pc, #284]	; (8002420 <send_error_counter_packet+0x270>)
 8002304:	8c1b      	ldrh	r3, [r3, #32]
 8002306:	0a1b      	lsrs	r3, r3, #8
 8002308:	b29b      	uxth	r3, r3
 800230a:	b2db      	uxtb	r3, r3
 800230c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	buffer[35] = (local_cpy[16] & 0xFF);
 8002310:	4b43      	ldr	r3, [pc, #268]	; (8002420 <send_error_counter_packet+0x270>)
 8002312:	8c1b      	ldrh	r3, [r3, #32]
 8002314:	b2db      	uxtb	r3, r3
 8002316:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	buffer[36] = ((local_cpy[17] & 0xFF00) >> 8);
 800231a:	4b41      	ldr	r3, [pc, #260]	; (8002420 <send_error_counter_packet+0x270>)
 800231c:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800231e:	0a1b      	lsrs	r3, r3, #8
 8002320:	b29b      	uxth	r3, r3
 8002322:	b2db      	uxtb	r3, r3
 8002324:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	buffer[37] = (local_cpy[17] & 0xFF);
 8002328:	4b3d      	ldr	r3, [pc, #244]	; (8002420 <send_error_counter_packet+0x270>)
 800232a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800232c:	b2db      	uxtb	r3, r3
 800232e:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
	buffer[38] = ((local_cpy[18] & 0xFF00) >> 8);
 8002332:	4b3b      	ldr	r3, [pc, #236]	; (8002420 <send_error_counter_packet+0x270>)
 8002334:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002336:	0a1b      	lsrs	r3, r3, #8
 8002338:	b29b      	uxth	r3, r3
 800233a:	b2db      	uxtb	r3, r3
 800233c:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	buffer[39] = (local_cpy[18] & 0xFF);
 8002340:	4b37      	ldr	r3, [pc, #220]	; (8002420 <send_error_counter_packet+0x270>)
 8002342:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002344:	b2db      	uxtb	r3, r3
 8002346:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	buffer[40] = ((local_cpy[19] & 0xFF00) >> 8);
 800234a:	4b35      	ldr	r3, [pc, #212]	; (8002420 <send_error_counter_packet+0x270>)
 800234c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800234e:	0a1b      	lsrs	r3, r3, #8
 8002350:	b29b      	uxth	r3, r3
 8002352:	b2db      	uxtb	r3, r3
 8002354:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	buffer[41] = (local_cpy[19] & 0xFF);
 8002358:	4b31      	ldr	r3, [pc, #196]	; (8002420 <send_error_counter_packet+0x270>)
 800235a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800235c:	b2db      	uxtb	r3, r3
 800235e:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
	buffer[42] = ((local_cpy[20] & 0xFF00) >> 8);
 8002362:	4b2f      	ldr	r3, [pc, #188]	; (8002420 <send_error_counter_packet+0x270>)
 8002364:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002366:	0a1b      	lsrs	r3, r3, #8
 8002368:	b29b      	uxth	r3, r3
 800236a:	b2db      	uxtb	r3, r3
 800236c:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	buffer[43] = (local_cpy[20] & 0xFF);
 8002370:	4b2b      	ldr	r3, [pc, #172]	; (8002420 <send_error_counter_packet+0x270>)
 8002372:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002374:	b2db      	uxtb	r3, r3
 8002376:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
	buffer[44] = ((local_cpy[21] & 0xFF00) >> 8);
 800237a:	4b29      	ldr	r3, [pc, #164]	; (8002420 <send_error_counter_packet+0x270>)
 800237c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800237e:	0a1b      	lsrs	r3, r3, #8
 8002380:	b29b      	uxth	r3, r3
 8002382:	b2db      	uxtb	r3, r3
 8002384:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
	buffer[45] = (local_cpy[21] & 0xFF);
 8002388:	4b25      	ldr	r3, [pc, #148]	; (8002420 <send_error_counter_packet+0x270>)
 800238a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800238c:	b2db      	uxtb	r3, r3
 800238e:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
	buffer[46] = ((local_cpy[22] & 0xFF00) >> 8);
 8002392:	4b23      	ldr	r3, [pc, #140]	; (8002420 <send_error_counter_packet+0x270>)
 8002394:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8002396:	0a1b      	lsrs	r3, r3, #8
 8002398:	b29b      	uxth	r3, r3
 800239a:	b2db      	uxtb	r3, r3
 800239c:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
	buffer[47] = (local_cpy[22] & 0xFF);
 80023a0:	4b1f      	ldr	r3, [pc, #124]	; (8002420 <send_error_counter_packet+0x270>)
 80023a2:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80023a4:	b2db      	uxtb	r3, r3
 80023a6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	buffer[48] = ((local_cpy[23] & 0xFF00) >> 8);
 80023aa:	4b1d      	ldr	r3, [pc, #116]	; (8002420 <send_error_counter_packet+0x270>)
 80023ac:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80023ae:	0a1b      	lsrs	r3, r3, #8
 80023b0:	b29b      	uxth	r3, r3
 80023b2:	b2db      	uxtb	r3, r3
 80023b4:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
	buffer[49] = (local_cpy[23] & 0xFF);
 80023b8:	4b19      	ldr	r3, [pc, #100]	; (8002420 <send_error_counter_packet+0x270>)
 80023ba:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80023bc:	b2db      	uxtb	r3, r3
 80023be:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
	buffer[50] = ((local_cpy[24] & 0xFF00) >> 8);
 80023c2:	4b17      	ldr	r3, [pc, #92]	; (8002420 <send_error_counter_packet+0x270>)
 80023c4:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
 80023c6:	0a1b      	lsrs	r3, r3, #8
 80023c8:	b29b      	uxth	r3, r3
 80023ca:	b2db      	uxtb	r3, r3
 80023cc:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
	buffer[51] = (local_cpy[24] & 0xFF);
 80023d0:	4b13      	ldr	r3, [pc, #76]	; (8002420 <send_error_counter_packet+0x270>)
 80023d2:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
 80023d4:	b2db      	uxtb	r3, r3
 80023d6:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
	buffer[52] = ((local_cpy[25] & 0xFF00) >> 8);
 80023da:	4b11      	ldr	r3, [pc, #68]	; (8002420 <send_error_counter_packet+0x270>)
 80023dc:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 80023de:	0a1b      	lsrs	r3, r3, #8
 80023e0:	b29b      	uxth	r3, r3
 80023e2:	b2db      	uxtb	r3, r3
 80023e4:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
	buffer[53] = (local_cpy[25] & 0xFF);
 80023e8:	4b0d      	ldr	r3, [pc, #52]	; (8002420 <send_error_counter_packet+0x270>)
 80023ea:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 80023ec:	b2db      	uxtb	r3, r3
 80023ee:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
	buffer[54] = ((local_cpy[26] & 0xFF00) >> 8);
 80023f2:	4b0b      	ldr	r3, [pc, #44]	; (8002420 <send_error_counter_packet+0x270>)
 80023f4:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
 80023f6:	0a1b      	lsrs	r3, r3, #8
 80023f8:	b29b      	uxth	r3, r3
 80023fa:	b2db      	uxtb	r3, r3
 80023fc:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
	buffer[55] = (local_cpy[26] & 0xFF);
 8002400:	4b07      	ldr	r3, [pc, #28]	; (8002420 <send_error_counter_packet+0x270>)
 8002402:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
 8002404:	b2db      	uxtb	r3, r3
 8002406:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	HAL_UART_Transmit(&huart1, buffer, ERROR_COUNTER_PACKET_SIZE, 100);
 800240a:	4639      	mov	r1, r7
 800240c:	2364      	movs	r3, #100	; 0x64
 800240e:	2238      	movs	r2, #56	; 0x38
 8002410:	4804      	ldr	r0, [pc, #16]	; (8002424 <send_error_counter_packet+0x274>)
 8002412:	f012 f9a1 	bl	8014758 <HAL_UART_Transmit>
}
 8002416:	bf00      	nop
 8002418:	3738      	adds	r7, #56	; 0x38
 800241a:	46bd      	mov	sp, r7
 800241c:	bd80      	pop	{r7, pc}
 800241e:	bf00      	nop
 8002420:	240003a4 	.word	0x240003a4
 8002424:	24001e3c 	.word	0x24001e3c

08002428 <send_previous_error_packet>:
/**
 * @brief Creates and sends a packet containing the error codes for the previous error.
 *
 * This type of packet is only sent on request.
 */
void send_previous_error_packet() {
 8002428:	b580      	push	{r7, lr}
 800242a:	b084      	sub	sp, #16
 800242c:	af00      	add	r7, sp, #0
	ERROR_STRUCT prev_error;
	uint8_t buffer[PREV_ERROR_PACKET_SIZE];

	prev_error = get_previous_error();
 800242e:	f107 0308 	add.w	r3, r7, #8
 8002432:	4618      	mov	r0, r3
 8002434:	f7ff fe8a 	bl	800214c <get_previous_error>

	buffer[0] = PREV_ERROR_PACKET_SYNC;
 8002438:	23aa      	movs	r3, #170	; 0xaa
 800243a:	713b      	strb	r3, [r7, #4]
	buffer[1] = PREV_ERROR_PACKET_SYNC;
 800243c:	23aa      	movs	r3, #170	; 0xaa
 800243e:	717b      	strb	r3, [r7, #5]
	buffer[2] = prev_error.category;
 8002440:	7a3b      	ldrb	r3, [r7, #8]
 8002442:	71bb      	strb	r3, [r7, #6]
	buffer[3] = prev_error.detail;
 8002444:	7a7b      	ldrb	r3, [r7, #9]
 8002446:	71fb      	strb	r3, [r7, #7]

	HAL_UART_Transmit(&huart1, buffer, PREV_ERROR_PACKET_SIZE, 100);
 8002448:	1d39      	adds	r1, r7, #4
 800244a:	2364      	movs	r3, #100	; 0x64
 800244c:	2204      	movs	r2, #4
 800244e:	4803      	ldr	r0, [pc, #12]	; (800245c <send_previous_error_packet+0x34>)
 8002450:	f012 f982 	bl	8014758 <HAL_UART_Transmit>
}
 8002454:	bf00      	nop
 8002456:	3710      	adds	r7, #16
 8002458:	46bd      	mov	sp, r7
 800245a:	bd80      	pop	{r7, pc}
 800245c:	24001e3c 	.word	0x24001e3c

08002460 <send_current_error_packet>:
/**
 * @brief Creates and sends a packet containing the error codes for the current error.
 *
 * This type of packet is only sent when handle_error() is called.
 */
void send_current_error_packet(ERROR_STRUCT error) {
 8002460:	b580      	push	{r7, lr}
 8002462:	b086      	sub	sp, #24
 8002464:	af00      	add	r7, sp, #0
 8002466:	463b      	mov	r3, r7
 8002468:	e883 0003 	stmia.w	r3, {r0, r1}
	uint8_t buffer[CURRENT_ERROR_PACKET_SIZE];

	// If the error isn't a power supply rail, set the out of bounds values to 0
	if (error.category != EC_power_supply_rail) {
 800246c:	783b      	ldrb	r3, [r7, #0]
 800246e:	2b00      	cmp	r3, #0
 8002470:	d005      	beq.n	800247e <send_current_error_packet+0x1e>
		error.OOB_1 = 0;
 8002472:	2300      	movs	r3, #0
 8002474:	807b      	strh	r3, [r7, #2]
		error.OOB_2 = 0;
 8002476:	2300      	movs	r3, #0
 8002478:	80bb      	strh	r3, [r7, #4]
		error.OOB_3 = 0;
 800247a:	2300      	movs	r3, #0
 800247c:	80fb      	strh	r3, [r7, #6]
	}

	buffer[0] = CURRENT_ERROR_PACKET_SYNC;
 800247e:	23bb      	movs	r3, #187	; 0xbb
 8002480:	733b      	strb	r3, [r7, #12]
	buffer[1] = CURRENT_ERROR_PACKET_SYNC;
 8002482:	23bb      	movs	r3, #187	; 0xbb
 8002484:	737b      	strb	r3, [r7, #13]
	buffer[2] = error.category;
 8002486:	783b      	ldrb	r3, [r7, #0]
 8002488:	73bb      	strb	r3, [r7, #14]
	buffer[3] = error.detail;
 800248a:	787b      	ldrb	r3, [r7, #1]
 800248c:	73fb      	strb	r3, [r7, #15]
	buffer[4] = ((error.OOB_1 & 0xFF00) >> 8);
 800248e:	887b      	ldrh	r3, [r7, #2]
 8002490:	0a1b      	lsrs	r3, r3, #8
 8002492:	b29b      	uxth	r3, r3
 8002494:	b2db      	uxtb	r3, r3
 8002496:	743b      	strb	r3, [r7, #16]
	buffer[5] = (error.OOB_1 & 0xFF);
 8002498:	887b      	ldrh	r3, [r7, #2]
 800249a:	b2db      	uxtb	r3, r3
 800249c:	747b      	strb	r3, [r7, #17]
	buffer[6] = ((error.OOB_2 & 0xFF00) >> 8);
 800249e:	88bb      	ldrh	r3, [r7, #4]
 80024a0:	0a1b      	lsrs	r3, r3, #8
 80024a2:	b29b      	uxth	r3, r3
 80024a4:	b2db      	uxtb	r3, r3
 80024a6:	74bb      	strb	r3, [r7, #18]
	buffer[7] = (error.OOB_2 & 0xFF);
 80024a8:	88bb      	ldrh	r3, [r7, #4]
 80024aa:	b2db      	uxtb	r3, r3
 80024ac:	74fb      	strb	r3, [r7, #19]
	buffer[8] = ((error.OOB_3 & 0xFF00) >> 8);
 80024ae:	88fb      	ldrh	r3, [r7, #6]
 80024b0:	0a1b      	lsrs	r3, r3, #8
 80024b2:	b29b      	uxth	r3, r3
 80024b4:	b2db      	uxtb	r3, r3
 80024b6:	753b      	strb	r3, [r7, #20]
	buffer[9] = (error.OOB_3 & 0xFF);
 80024b8:	88fb      	ldrh	r3, [r7, #6]
 80024ba:	b2db      	uxtb	r3, r3
 80024bc:	757b      	strb	r3, [r7, #21]

	HAL_UART_Transmit(&huart1, buffer, PREV_ERROR_PACKET_SIZE, 100);
 80024be:	f107 010c 	add.w	r1, r7, #12
 80024c2:	2364      	movs	r3, #100	; 0x64
 80024c4:	2204      	movs	r2, #4
 80024c6:	4803      	ldr	r0, [pc, #12]	; (80024d4 <send_current_error_packet+0x74>)
 80024c8:	f012 f946 	bl	8014758 <HAL_UART_Transmit>
}
 80024cc:	bf00      	nop
 80024ce:	3718      	adds	r7, #24
 80024d0:	46bd      	mov	sp, r7
 80024d2:	bd80      	pop	{r7, pc}
 80024d4:	24001e3c 	.word	0x24001e3c

080024d8 <send_junk_packet>:
/**
 * @brief Creates and sends a junk packet containing all 0xCE.
 *
 * Used to clear out the buffer on the OBC.
 */
void send_junk_packet() {	// TODO: Figure out if we still need this.
 80024d8:	b580      	push	{r7, lr}
 80024da:	f5ad 6d81 	sub.w	sp, sp, #1032	; 0x408
 80024de:	af00      	add	r7, sp, #0
	uint8_t buffer[JUNK_PACKET_SIZE];

	for (int i = 0; i < JUNK_PACKET_SIZE; i++) {
 80024e0:	2300      	movs	r3, #0
 80024e2:	f8c7 3404 	str.w	r3, [r7, #1028]	; 0x404
 80024e6:	e00d      	b.n	8002504 <send_junk_packet+0x2c>
		buffer[i] = 0xCE;
 80024e8:	f507 6381 	add.w	r3, r7, #1032	; 0x408
 80024ec:	f2a3 4204 	subw	r2, r3, #1028	; 0x404
 80024f0:	f8d7 3404 	ldr.w	r3, [r7, #1028]	; 0x404
 80024f4:	4413      	add	r3, r2
 80024f6:	22ce      	movs	r2, #206	; 0xce
 80024f8:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < JUNK_PACKET_SIZE; i++) {
 80024fa:	f8d7 3404 	ldr.w	r3, [r7, #1028]	; 0x404
 80024fe:	3301      	adds	r3, #1
 8002500:	f8c7 3404 	str.w	r3, [r7, #1028]	; 0x404
 8002504:	f8d7 3404 	ldr.w	r3, [r7, #1028]	; 0x404
 8002508:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800250c:	dbec      	blt.n	80024e8 <send_junk_packet+0x10>
	}

	HAL_UART_Transmit(&huart1, buffer, JUNK_PACKET_SIZE, 100);
 800250e:	1d39      	adds	r1, r7, #4
 8002510:	2364      	movs	r3, #100	; 0x64
 8002512:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002516:	4804      	ldr	r0, [pc, #16]	; (8002528 <send_junk_packet+0x50>)
 8002518:	f012 f91e 	bl	8014758 <HAL_UART_Transmit>
}
 800251c:	bf00      	nop
 800251e:	f507 6781 	add.w	r7, r7, #1032	; 0x408
 8002522:	46bd      	mov	sp, r7
 8002524:	bd80      	pop	{r7, pc}
 8002526:	bf00      	nop
 8002528:	24001e3c 	.word	0x24001e3c

0800252c <vApplicationTickHook>:
void vApplicationTickHook(void);
void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);

/* USER CODE BEGIN 3 */
void vApplicationTickHook( void )
{
 800252c:	b480      	push	{r7}
 800252e:	af00      	add	r7, sp, #0
   /* This function will be called by each tick interrupt if
   configUSE_TICK_HOOK is set to 1 in FreeRTOSConfig.h. User code can be
   added here, but the tick hook is called from an interrupt context, so
   code must not attempt to block, and only the interrupt safe FreeRTOS API
   functions can be used (those that end in FromISR()). */
	uptime_millis++;
 8002530:	4b04      	ldr	r3, [pc, #16]	; (8002544 <vApplicationTickHook+0x18>)
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	3301      	adds	r3, #1
 8002536:	4a03      	ldr	r2, [pc, #12]	; (8002544 <vApplicationTickHook+0x18>)
 8002538:	6013      	str	r3, [r2, #0]
}
 800253a:	bf00      	nop
 800253c:	46bd      	mov	sp, r7
 800253e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002542:	4770      	bx	lr
 8002544:	24001ae0 	.word	0x24001ae0

08002548 <vApplicationStackOverflowHook>:
/* USER CODE END 3 */

/* USER CODE BEGIN 4 */
void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)
{
 8002548:	b480      	push	{r7}
 800254a:	b083      	sub	sp, #12
 800254c:	af00      	add	r7, sp, #0
 800254e:	6078      	str	r0, [r7, #4]
 8002550:	6039      	str	r1, [r7, #0]
   /* Run time stack overflow checking is performed if
   configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
   called if a stack overflow is detected. */
}
 8002552:	bf00      	nop
 8002554:	370c      	adds	r7, #12
 8002556:	46bd      	mov	sp, r7
 8002558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800255c:	4770      	bx	lr
	...

08002560 <MX_FREERTOS_Init>:
/**
  * @brief  FreeRTOS initialization
  * @param  None
  * @retval None
  */
void MX_FREERTOS_Init(void) {
 8002560:	b580      	push	{r7, lr}
 8002562:	af00      	add	r7, sp, #0
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of PMT_task */
  PMT_taskHandle = osThreadNew(PMT_init, NULL, &PMT_task_attributes);
 8002564:	4a24      	ldr	r2, [pc, #144]	; (80025f8 <MX_FREERTOS_Init+0x98>)
 8002566:	2100      	movs	r1, #0
 8002568:	4824      	ldr	r0, [pc, #144]	; (80025fc <MX_FREERTOS_Init+0x9c>)
 800256a:	f014 ff4d 	bl	8017408 <osThreadNew>
 800256e:	4603      	mov	r3, r0
 8002570:	4a23      	ldr	r2, [pc, #140]	; (8002600 <MX_FREERTOS_Init+0xa0>)
 8002572:	6013      	str	r3, [r2, #0]

  /* creation of ERPA_task */
  ERPA_taskHandle = osThreadNew(ERPA_init, NULL, &ERPA_task_attributes);
 8002574:	4a23      	ldr	r2, [pc, #140]	; (8002604 <MX_FREERTOS_Init+0xa4>)
 8002576:	2100      	movs	r1, #0
 8002578:	4823      	ldr	r0, [pc, #140]	; (8002608 <MX_FREERTOS_Init+0xa8>)
 800257a:	f014 ff45 	bl	8017408 <osThreadNew>
 800257e:	4603      	mov	r3, r0
 8002580:	4a22      	ldr	r2, [pc, #136]	; (800260c <MX_FREERTOS_Init+0xac>)
 8002582:	6013      	str	r3, [r2, #0]

  /* creation of HK_task */
  HK_taskHandle = osThreadNew(HK_init, NULL, &HK_task_attributes);
 8002584:	4a22      	ldr	r2, [pc, #136]	; (8002610 <MX_FREERTOS_Init+0xb0>)
 8002586:	2100      	movs	r1, #0
 8002588:	4822      	ldr	r0, [pc, #136]	; (8002614 <MX_FREERTOS_Init+0xb4>)
 800258a:	f014 ff3d 	bl	8017408 <osThreadNew>
 800258e:	4603      	mov	r3, r0
 8002590:	4a21      	ldr	r2, [pc, #132]	; (8002618 <MX_FREERTOS_Init+0xb8>)
 8002592:	6013      	str	r3, [r2, #0]

  /* creation of AUTOINIT_task */
  AUTOINIT_taskHandle = osThreadNew(AUTOINIT_init, NULL, &AUTOINIT_task_attributes);
 8002594:	4a21      	ldr	r2, [pc, #132]	; (800261c <MX_FREERTOS_Init+0xbc>)
 8002596:	2100      	movs	r1, #0
 8002598:	4821      	ldr	r0, [pc, #132]	; (8002620 <MX_FREERTOS_Init+0xc0>)
 800259a:	f014 ff35 	bl	8017408 <osThreadNew>
 800259e:	4603      	mov	r3, r0
 80025a0:	4a20      	ldr	r2, [pc, #128]	; (8002624 <MX_FREERTOS_Init+0xc4>)
 80025a2:	6013      	str	r3, [r2, #0]

  /* creation of AUTODEINIT_task */
  AUTODEINIT_taskHandle = osThreadNew(AUTODEINIT_init, NULL, &AUTODEINIT_task_attributes);
 80025a4:	4a20      	ldr	r2, [pc, #128]	; (8002628 <MX_FREERTOS_Init+0xc8>)
 80025a6:	2100      	movs	r1, #0
 80025a8:	4820      	ldr	r0, [pc, #128]	; (800262c <MX_FREERTOS_Init+0xcc>)
 80025aa:	f014 ff2d 	bl	8017408 <osThreadNew>
 80025ae:	4603      	mov	r3, r0
 80025b0:	4a1f      	ldr	r2, [pc, #124]	; (8002630 <MX_FREERTOS_Init+0xd0>)
 80025b2:	6013      	str	r3, [r2, #0]

  /* creation of Voltage_Monitor */
  Voltage_MonitorHandle = osThreadNew(Voltage_Monitor_init, NULL, &Voltage_Monitor_attributes);
 80025b4:	4a1f      	ldr	r2, [pc, #124]	; (8002634 <MX_FREERTOS_Init+0xd4>)
 80025b6:	2100      	movs	r1, #0
 80025b8:	481f      	ldr	r0, [pc, #124]	; (8002638 <MX_FREERTOS_Init+0xd8>)
 80025ba:	f014 ff25 	bl	8017408 <osThreadNew>
 80025be:	4603      	mov	r3, r0
 80025c0:	4a1e      	ldr	r2, [pc, #120]	; (800263c <MX_FREERTOS_Init+0xdc>)
 80025c2:	6013      	str	r3, [r2, #0]

  /* creation of STOP_task */
  STOP_taskHandle = osThreadNew(STOP_init, NULL, &STOP_task_attributes);
 80025c4:	4a1e      	ldr	r2, [pc, #120]	; (8002640 <MX_FREERTOS_Init+0xe0>)
 80025c6:	2100      	movs	r1, #0
 80025c8:	481e      	ldr	r0, [pc, #120]	; (8002644 <MX_FREERTOS_Init+0xe4>)
 80025ca:	f014 ff1d 	bl	8017408 <osThreadNew>
 80025ce:	4603      	mov	r3, r0
 80025d0:	4a1d      	ldr	r2, [pc, #116]	; (8002648 <MX_FREERTOS_Init+0xe8>)
 80025d2:	6013      	str	r3, [r2, #0]

  /* creation of Science_task */
  Science_taskHandle = osThreadNew(Science_init, NULL, &Science_task_attributes);
 80025d4:	4a1d      	ldr	r2, [pc, #116]	; (800264c <MX_FREERTOS_Init+0xec>)
 80025d6:	2100      	movs	r1, #0
 80025d8:	481d      	ldr	r0, [pc, #116]	; (8002650 <MX_FREERTOS_Init+0xf0>)
 80025da:	f014 ff15 	bl	8017408 <osThreadNew>
 80025de:	4603      	mov	r3, r0
 80025e0:	4a1c      	ldr	r2, [pc, #112]	; (8002654 <MX_FREERTOS_Init+0xf4>)
 80025e2:	6013      	str	r3, [r2, #0]

  /* creation of Idle_task */
  Idle_taskHandle = osThreadNew(Idle_init, NULL, &Idle_task_attributes);
 80025e4:	4a1c      	ldr	r2, [pc, #112]	; (8002658 <MX_FREERTOS_Init+0xf8>)
 80025e6:	2100      	movs	r1, #0
 80025e8:	481c      	ldr	r0, [pc, #112]	; (800265c <MX_FREERTOS_Init+0xfc>)
 80025ea:	f014 ff0d 	bl	8017408 <osThreadNew>
 80025ee:	4603      	mov	r3, r0
 80025f0:	4a1b      	ldr	r2, [pc, #108]	; (8002660 <MX_FREERTOS_Init+0x100>)
 80025f2:	6013      	str	r3, [r2, #0]

  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

}
 80025f4:	bf00      	nop
 80025f6:	bd80      	pop	{r7, pc}
 80025f8:	0801b6c8 	.word	0x0801b6c8
 80025fc:	08002665 	.word	0x08002665
 8002600:	240003dc 	.word	0x240003dc
 8002604:	0801b6ec 	.word	0x0801b6ec
 8002608:	0800268d 	.word	0x0800268d
 800260c:	2400063c 	.word	0x2400063c
 8002610:	0801b710 	.word	0x0801b710
 8002614:	080026b5 	.word	0x080026b5
 8002618:	2400089c 	.word	0x2400089c
 800261c:	0801b734 	.word	0x0801b734
 8002620:	080026dd 	.word	0x080026dd
 8002624:	24000afc 	.word	0x24000afc
 8002628:	0801b758 	.word	0x0801b758
 800262c:	08002755 	.word	0x08002755
 8002630:	24000d5c 	.word	0x24000d5c
 8002634:	0801b77c 	.word	0x0801b77c
 8002638:	080027cd 	.word	0x080027cd
 800263c:	24000fbc 	.word	0x24000fbc
 8002640:	0801b7a0 	.word	0x0801b7a0
 8002644:	080027f5 	.word	0x080027f5
 8002648:	2400121c 	.word	0x2400121c
 800264c:	0801b7c4 	.word	0x0801b7c4
 8002650:	08002825 	.word	0x08002825
 8002654:	2400147c 	.word	0x2400147c
 8002658:	0801b7e8 	.word	0x0801b7e8
 800265c:	08002925 	.word	0x08002925
 8002660:	240016dc 	.word	0x240016dc

08002664 <PMT_init>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_PMT_init */
void PMT_init(void *argument)
{
 8002664:	b580      	push	{r7, lr}
 8002666:	b082      	sub	sp, #8
 8002668:	af00      	add	r7, sp, #0
 800266a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN PMT_init */
  /* Infinite loop */
	for (;;) {
		osEventFlagsWait(packet_event_flags, PMT_FLAG_ID, osFlagsWaitAny, osWaitForever);
 800266c:	4b06      	ldr	r3, [pc, #24]	; (8002688 <PMT_init+0x24>)
 800266e:	6818      	ldr	r0, [r3, #0]
 8002670:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002674:	2200      	movs	r2, #0
 8002676:	2101      	movs	r1, #1
 8002678:	f015 f88a 	bl	8017790 <osEventFlagsWait>

		create_pmt_packet();
 800267c:	f001 fa86 	bl	8003b8c <create_pmt_packet>

		osThreadYield();
 8002680:	f014 ff54 	bl	801752c <osThreadYield>
		osEventFlagsWait(packet_event_flags, PMT_FLAG_ID, osFlagsWaitAny, osWaitForever);
 8002684:	e7f2      	b.n	800266c <PMT_init+0x8>
 8002686:	bf00      	nop
 8002688:	24001a90 	.word	0x24001a90

0800268c <ERPA_init>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ERPA_init */
void ERPA_init(void *argument)
{
 800268c:	b580      	push	{r7, lr}
 800268e:	b082      	sub	sp, #8
 8002690:	af00      	add	r7, sp, #0
 8002692:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN ERPA_init */
  /* Infinite loop */
	for (;;) {
		osEventFlagsWait(packet_event_flags, ERPA_FLAG_ID, osFlagsWaitAny, osWaitForever);
 8002694:	4b06      	ldr	r3, [pc, #24]	; (80026b0 <ERPA_init+0x24>)
 8002696:	6818      	ldr	r0, [r3, #0]
 8002698:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800269c:	2200      	movs	r2, #0
 800269e:	2102      	movs	r1, #2
 80026a0:	f015 f876 	bl	8017790 <osEventFlagsWait>

		create_erpa_packet();
 80026a4:	f001 fab8 	bl	8003c18 <create_erpa_packet>

		osThreadYield();
 80026a8:	f014 ff40 	bl	801752c <osThreadYield>
		osEventFlagsWait(packet_event_flags, ERPA_FLAG_ID, osFlagsWaitAny, osWaitForever);
 80026ac:	e7f2      	b.n	8002694 <ERPA_init+0x8>
 80026ae:	bf00      	nop
 80026b0:	24001a90 	.word	0x24001a90

080026b4 <HK_init>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_HK_init */
void HK_init(void *argument)
{
 80026b4:	b580      	push	{r7, lr}
 80026b6:	b082      	sub	sp, #8
 80026b8:	af00      	add	r7, sp, #0
 80026ba:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN HK_init */
  /* Infinite loop */
	for (;;) {
		osEventFlagsWait(packet_event_flags, HK_FLAG_ID, osFlagsWaitAny, osWaitForever);
 80026bc:	4b06      	ldr	r3, [pc, #24]	; (80026d8 <HK_init+0x24>)
 80026be:	6818      	ldr	r0, [r3, #0]
 80026c0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80026c4:	2200      	movs	r2, #0
 80026c6:	2104      	movs	r1, #4
 80026c8:	f015 f862 	bl	8017790 <osEventFlagsWait>

		create_hk_packet();
 80026cc:	f001 fb02 	bl	8003cd4 <create_hk_packet>

		osThreadYield();
 80026d0:	f014 ff2c 	bl	801752c <osThreadYield>
		osEventFlagsWait(packet_event_flags, HK_FLAG_ID, osFlagsWaitAny, osWaitForever);
 80026d4:	e7f2      	b.n	80026bc <HK_init+0x8>
 80026d6:	bf00      	nop
 80026d8:	24001a90 	.word	0x24001a90

080026dc <AUTOINIT_init>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_AUTOINIT_init */
void AUTOINIT_init(void *argument)
{
 80026dc:	b580      	push	{r7, lr}
 80026de:	b084      	sub	sp, #16
 80026e0:	af00      	add	r7, sp, #0
 80026e2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN AUTOINIT_init */
  /* Infinite loop */
	for (;;) {

		osEventFlagsWait(utility_event_flags, AUTOINIT_FLAG, osFlagsWaitAny, osWaitForever);
 80026e4:	4b19      	ldr	r3, [pc, #100]	; (800274c <AUTOINIT_init+0x70>)
 80026e6:	6818      	ldr	r0, [r3, #0]
 80026e8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80026ec:	2200      	movs	r2, #0
 80026ee:	2104      	movs	r1, #4
 80026f0:	f015 f84e 	bl	8017790 <osEventFlagsWait>

		// Enabling all voltages from SDN1 to 15V (inclusive)
		for (int i = 0; i < 7; i++) {
 80026f4:	2300      	movs	r3, #0
 80026f6:	60fb      	str	r3, [r7, #12]
 80026f8:	e012      	b.n	8002720 <AUTOINIT_init+0x44>
			HAL_GPIO_WritePin(gpios[i].gpio, gpios[i].pin, GPIO_PIN_SET);
 80026fa:	4a15      	ldr	r2, [pc, #84]	; (8002750 <AUTOINIT_init+0x74>)
 80026fc:	68fb      	ldr	r3, [r7, #12]
 80026fe:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8002702:	4a13      	ldr	r2, [pc, #76]	; (8002750 <AUTOINIT_init+0x74>)
 8002704:	68fb      	ldr	r3, [r7, #12]
 8002706:	00db      	lsls	r3, r3, #3
 8002708:	4413      	add	r3, r2
 800270a:	889b      	ldrh	r3, [r3, #4]
 800270c:	2201      	movs	r2, #1
 800270e:	4619      	mov	r1, r3
 8002710:	f009 f98e 	bl	800ba30 <HAL_GPIO_WritePin>
			osDelay(100);
 8002714:	2064      	movs	r0, #100	; 0x64
 8002716:	f014 ff6b 	bl	80175f0 <osDelay>
		for (int i = 0; i < 7; i++) {
 800271a:	68fb      	ldr	r3, [r7, #12]
 800271c:	3301      	adds	r3, #1
 800271e:	60fb      	str	r3, [r7, #12]
 8002720:	68fb      	ldr	r3, [r7, #12]
 8002722:	2b06      	cmp	r3, #6
 8002724:	dde9      	ble.n	80026fa <AUTOINIT_init+0x1e>
		}

		// Telling rail monitor which rails are now enabled
		for (int i = RAIL_2v5; i <= RAIL_15v; i++){
 8002726:	2308      	movs	r3, #8
 8002728:	60bb      	str	r3, [r7, #8]
 800272a:	e008      	b.n	800273e <AUTOINIT_init+0x62>
			set_rail_monitor_enable(i, 1);
 800272c:	68bb      	ldr	r3, [r7, #8]
 800272e:	b2db      	uxtb	r3, r3
 8002730:	2101      	movs	r1, #1
 8002732:	4618      	mov	r0, r3
 8002734:	f003 fac2 	bl	8005cbc <set_rail_monitor_enable>
		for (int i = RAIL_2v5; i <= RAIL_15v; i++){
 8002738:	68bb      	ldr	r3, [r7, #8]
 800273a:	3301      	adds	r3, #1
 800273c:	60bb      	str	r3, [r7, #8]
 800273e:	68bb      	ldr	r3, [r7, #8]
 8002740:	2b0d      	cmp	r3, #13
 8002742:	ddf3      	ble.n	800272c <AUTOINIT_init+0x50>
		}
		osThreadYield();
 8002744:	f014 fef2 	bl	801752c <osThreadYield>
		osEventFlagsWait(utility_event_flags, AUTOINIT_FLAG, osFlagsWaitAny, osWaitForever);
 8002748:	e7cc      	b.n	80026e4 <AUTOINIT_init+0x8>
 800274a:	bf00      	nop
 800274c:	24001a94 	.word	0x24001a94
 8002750:	0801b80c 	.word	0x0801b80c

08002754 <AUTODEINIT_init>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_AUTODEINIT_init */
void AUTODEINIT_init(void *argument)
{
 8002754:	b580      	push	{r7, lr}
 8002756:	b084      	sub	sp, #16
 8002758:	af00      	add	r7, sp, #0
 800275a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN AUTODEINIT_init */
  /* Infinite loop */
	for (;;) {

		osEventFlagsWait(utility_event_flags, AUTODEINIT_FLAG, osFlagsWaitAny, osWaitForever);
 800275c:	4b19      	ldr	r3, [pc, #100]	; (80027c4 <AUTODEINIT_init+0x70>)
 800275e:	6818      	ldr	r0, [r3, #0]
 8002760:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002764:	2200      	movs	r2, #0
 8002766:	2108      	movs	r1, #8
 8002768:	f015 f812 	bl	8017790 <osEventFlagsWait>

		// Telling rail monitor which rails are now disabled
		for (int i = RAIL_15v; i >= RAIL_2v5; i--){
 800276c:	230d      	movs	r3, #13
 800276e:	60fb      	str	r3, [r7, #12]
 8002770:	e008      	b.n	8002784 <AUTODEINIT_init+0x30>
			set_rail_monitor_enable(i, 0);
 8002772:	68fb      	ldr	r3, [r7, #12]
 8002774:	b2db      	uxtb	r3, r3
 8002776:	2100      	movs	r1, #0
 8002778:	4618      	mov	r0, r3
 800277a:	f003 fa9f 	bl	8005cbc <set_rail_monitor_enable>
		for (int i = RAIL_15v; i >= RAIL_2v5; i--){
 800277e:	68fb      	ldr	r3, [r7, #12]
 8002780:	3b01      	subs	r3, #1
 8002782:	60fb      	str	r3, [r7, #12]
 8002784:	68fb      	ldr	r3, [r7, #12]
 8002786:	2b07      	cmp	r3, #7
 8002788:	dcf3      	bgt.n	8002772 <AUTODEINIT_init+0x1e>
		}

		// Disabling all voltages from 15V to SDN1 (inclusive)
		for (int i = 6; i >= 0; i--) {
 800278a:	2306      	movs	r3, #6
 800278c:	60bb      	str	r3, [r7, #8]
 800278e:	e012      	b.n	80027b6 <AUTODEINIT_init+0x62>
			HAL_GPIO_WritePin(gpios[i].gpio, gpios[i].pin, GPIO_PIN_RESET);
 8002790:	4a0d      	ldr	r2, [pc, #52]	; (80027c8 <AUTODEINIT_init+0x74>)
 8002792:	68bb      	ldr	r3, [r7, #8]
 8002794:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8002798:	4a0b      	ldr	r2, [pc, #44]	; (80027c8 <AUTODEINIT_init+0x74>)
 800279a:	68bb      	ldr	r3, [r7, #8]
 800279c:	00db      	lsls	r3, r3, #3
 800279e:	4413      	add	r3, r2
 80027a0:	889b      	ldrh	r3, [r3, #4]
 80027a2:	2200      	movs	r2, #0
 80027a4:	4619      	mov	r1, r3
 80027a6:	f009 f943 	bl	800ba30 <HAL_GPIO_WritePin>
			osDelay(100);
 80027aa:	2064      	movs	r0, #100	; 0x64
 80027ac:	f014 ff20 	bl	80175f0 <osDelay>
		for (int i = 6; i >= 0; i--) {
 80027b0:	68bb      	ldr	r3, [r7, #8]
 80027b2:	3b01      	subs	r3, #1
 80027b4:	60bb      	str	r3, [r7, #8]
 80027b6:	68bb      	ldr	r3, [r7, #8]
 80027b8:	2b00      	cmp	r3, #0
 80027ba:	dae9      	bge.n	8002790 <AUTODEINIT_init+0x3c>
		}


		osThreadYield();
 80027bc:	f014 feb6 	bl	801752c <osThreadYield>
		osEventFlagsWait(utility_event_flags, AUTODEINIT_FLAG, osFlagsWaitAny, osWaitForever);
 80027c0:	e7cc      	b.n	800275c <AUTODEINIT_init+0x8>
 80027c2:	bf00      	nop
 80027c4:	24001a94 	.word	0x24001a94
 80027c8:	0801b80c 	.word	0x0801b80c

080027cc <Voltage_Monitor_init>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_Voltage_Monitor_init */
void Voltage_Monitor_init(void *argument)
{
 80027cc:	b580      	push	{r7, lr}
 80027ce:	b082      	sub	sp, #8
 80027d0:	af00      	add	r7, sp, #0
 80027d2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Voltage_Monitor_init */
  /* Infinite loop */
  for(;;)
  {
	  osEventFlagsWait(utility_event_flags, VOLTAGE_MONITOR_FLAG_ID, osFlagsWaitAny,
 80027d4:	4b06      	ldr	r3, [pc, #24]	; (80027f0 <Voltage_Monitor_init+0x24>)
 80027d6:	6818      	ldr	r0, [r3, #0]
 80027d8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80027dc:	2200      	movs	r2, #0
 80027de:	2101      	movs	r1, #1
 80027e0:	f014 ffd6 	bl	8017790 <osEventFlagsWait>
	  		osWaitForever);
	  set_rail_monitor();
 80027e4:	f003 fa86 	bl	8005cf4 <set_rail_monitor>
	  monitor_rails();
 80027e8:	f003 fb0a 	bl	8005e00 <monitor_rails>
	  osEventFlagsWait(utility_event_flags, VOLTAGE_MONITOR_FLAG_ID, osFlagsWaitAny,
 80027ec:	e7f2      	b.n	80027d4 <Voltage_Monitor_init+0x8>
 80027ee:	bf00      	nop
 80027f0:	24001a94 	.word	0x24001a94

080027f4 <STOP_init>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_STOP_init */
void STOP_init(void *argument)
{
 80027f4:	b580      	push	{r7, lr}
 80027f6:	b082      	sub	sp, #8
 80027f8:	af00      	add	r7, sp, #0
 80027fa:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN STOP_init */
  /* Infinite loop */
  for(;;)
  {
	  osEventFlagsWait(utility_event_flags, STOP_FLAG, osFlagsWaitAny,osWaitForever);
 80027fc:	4b08      	ldr	r3, [pc, #32]	; (8002820 <STOP_init+0x2c>)
 80027fe:	6818      	ldr	r0, [r3, #0]
 8002800:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002804:	2200      	movs	r2, #0
 8002806:	2102      	movs	r1, #2
 8002808:	f014 ffc2 	bl	8017790 <osEventFlagsWait>
	  osEventFlagsClear(utility_event_flags, STOP_FLAG);
 800280c:	4b04      	ldr	r3, [pc, #16]	; (8002820 <STOP_init+0x2c>)
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	2102      	movs	r1, #2
 8002812:	4618      	mov	r0, r3
 8002814:	f014 ff8a 	bl	801772c <osEventFlagsClear>

	  enter_stop();
 8002818:	f001 f98a 	bl	8003b30 <enter_stop>
	  osEventFlagsWait(utility_event_flags, STOP_FLAG, osFlagsWaitAny,osWaitForever);
 800281c:	e7ee      	b.n	80027fc <STOP_init+0x8>
 800281e:	bf00      	nop
 8002820:	24001a94 	.word	0x24001a94

08002824 <Science_init>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_Science_init */
void Science_init(void *argument)
{
 8002824:	b580      	push	{r7, lr}
 8002826:	b086      	sub	sp, #24
 8002828:	af02      	add	r7, sp, #8
 800282a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Science_init */

	/* Infinite loop */
  for(;;)
  {
		osEventFlagsWait(mode_event_flags, SCIENCE_FLAG, osFlagsWaitAny, osWaitForever);
 800282c:	4b32      	ldr	r3, [pc, #200]	; (80028f8 <Science_init+0xd4>)
 800282e:	6818      	ldr	r0, [r3, #0]
 8002830:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002834:	2200      	movs	r2, #0
 8002836:	2101      	movs	r1, #1
 8002838:	f014 ffaa 	bl	8017790 <osEventFlagsWait>
		osThreadSuspend(Voltage_MonitorHandle);
 800283c:	4b2f      	ldr	r3, [pc, #188]	; (80028fc <Science_init+0xd8>)
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	4618      	mov	r0, r3
 8002842:	f014 fe93 	bl	801756c <osThreadSuspend>
		IDLING = 0;
 8002846:	4b2e      	ldr	r3, [pc, #184]	; (8002900 <Science_init+0xdc>)
 8002848:	2200      	movs	r2, #0
 800284a:	701a      	strb	r2, [r3, #0]
		// Enabling all voltages
		for (int i = 0; i < 9; i++) {
 800284c:	2300      	movs	r3, #0
 800284e:	60fb      	str	r3, [r7, #12]
 8002850:	e012      	b.n	8002878 <Science_init+0x54>
			HAL_GPIO_WritePin(gpios[i].gpio, gpios[i].pin, GPIO_PIN_SET);
 8002852:	4a2c      	ldr	r2, [pc, #176]	; (8002904 <Science_init+0xe0>)
 8002854:	68fb      	ldr	r3, [r7, #12]
 8002856:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 800285a:	4a2a      	ldr	r2, [pc, #168]	; (8002904 <Science_init+0xe0>)
 800285c:	68fb      	ldr	r3, [r7, #12]
 800285e:	00db      	lsls	r3, r3, #3
 8002860:	4413      	add	r3, r2
 8002862:	889b      	ldrh	r3, [r3, #4]
 8002864:	2201      	movs	r2, #1
 8002866:	4619      	mov	r1, r3
 8002868:	f009 f8e2 	bl	800ba30 <HAL_GPIO_WritePin>
			osDelay(200);
 800286c:	20c8      	movs	r0, #200	; 0xc8
 800286e:	f014 febf 	bl	80175f0 <osDelay>
		for (int i = 0; i < 9; i++) {
 8002872:	68fb      	ldr	r3, [r7, #12]
 8002874:	3301      	adds	r3, #1
 8002876:	60fb      	str	r3, [r7, #12]
 8002878:	68fb      	ldr	r3, [r7, #12]
 800287a:	2b08      	cmp	r3, #8
 800287c:	dde9      	ble.n	8002852 <Science_init+0x2e>
		}

		// Telling rail monitor which voltages are now enabled
		for (int i = RAIL_busvmon; i <= RAIL_n800v; i++) {
 800287e:	2306      	movs	r3, #6
 8002880:	60bb      	str	r3, [r7, #8]
 8002882:	e008      	b.n	8002896 <Science_init+0x72>
			set_rail_monitor_enable(i, 1);
 8002884:	68bb      	ldr	r3, [r7, #8]
 8002886:	b2db      	uxtb	r3, r3
 8002888:	2101      	movs	r1, #1
 800288a:	4618      	mov	r0, r3
 800288c:	f003 fa16 	bl	8005cbc <set_rail_monitor_enable>
		for (int i = RAIL_busvmon; i <= RAIL_n800v; i++) {
 8002890:	68bb      	ldr	r3, [r7, #8]
 8002892:	3301      	adds	r3, #1
 8002894:	60bb      	str	r3, [r7, #8]
 8002896:	68bb      	ldr	r3, [r7, #8]
 8002898:	2b10      	cmp	r3, #16
 800289a:	ddf3      	ble.n	8002884 <Science_init+0x60>
		}
		osThreadResume(Voltage_MonitorHandle);
 800289c:	4b17      	ldr	r3, [pc, #92]	; (80028fc <Science_init+0xd8>)
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	4618      	mov	r0, r3
 80028a2:	f014 fe84 	bl	80175ae <osThreadResume>
  __ASM volatile ("cpsid i" : : : "memory");
 80028a6:	b672      	cpsid	i
}
 80028a8:	bf00      	nop

		__disable_irq();

		HAL_DAC_Start_DMA(&hdac1, DAC_CHANNEL_1, DAC_OUT, 32, DAC_ALIGN_12B_R);	// Enable auto sweep (doesn't start until ERPA timer is started)
 80028aa:	2300      	movs	r3, #0
 80028ac:	9300      	str	r3, [sp, #0]
 80028ae:	2320      	movs	r3, #32
 80028b0:	4a15      	ldr	r2, [pc, #84]	; (8002908 <Science_init+0xe4>)
 80028b2:	2100      	movs	r1, #0
 80028b4:	4815      	ldr	r0, [pc, #84]	; (800290c <Science_init+0xe8>)
 80028b6:	f005 fa37 	bl	8007d28 <HAL_DAC_Start_DMA>
		HK_ENABLED = 1;
 80028ba:	4b15      	ldr	r3, [pc, #84]	; (8002910 <Science_init+0xec>)
 80028bc:	2201      	movs	r2, #1
 80028be:	701a      	strb	r2, [r3, #0]
		ERPA_ENABLED = 1;
 80028c0:	4b14      	ldr	r3, [pc, #80]	; (8002914 <Science_init+0xf0>)
 80028c2:	2201      	movs	r2, #1
 80028c4:	701a      	strb	r2, [r3, #0]
		uptime_millis = 0;
 80028c6:	4b14      	ldr	r3, [pc, #80]	; (8002918 <Science_init+0xf4>)
 80028c8:	2200      	movs	r2, #0
 80028ca:	601a      	str	r2, [r3, #0]
		reset_packet_sequence_numbers();
 80028cc:	f001 fb44 	bl	8003f58 <reset_packet_sequence_numbers>
		osEventFlagsSet(packet_event_flags, HK_FLAG_ID);
 80028d0:	4b12      	ldr	r3, [pc, #72]	; (800291c <Science_init+0xf8>)
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	2104      	movs	r1, #4
 80028d6:	4618      	mov	r0, r3
 80028d8:	f014 fee4 	bl	80176a4 <osEventFlagsSet>
		TIM2->CCR4 = 312;
 80028dc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80028e0:	f44f 729c 	mov.w	r2, #312	; 0x138
 80028e4:	641a      	str	r2, [r3, #64]	; 0x40
		HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);			// PMT packet on
 80028e6:	2100      	movs	r1, #0
 80028e8:	480d      	ldr	r0, [pc, #52]	; (8002920 <Science_init+0xfc>)
 80028ea:	f010 fbab 	bl	8013044 <HAL_TIM_OC_Start_IT>
  __ASM volatile ("cpsie i" : : : "memory");
 80028ee:	b662      	cpsie	i
}
 80028f0:	bf00      	nop

		__enable_irq();

		// Yield thread control
		osThreadYield();
 80028f2:	f014 fe1b 	bl	801752c <osThreadYield>
		osEventFlagsWait(mode_event_flags, SCIENCE_FLAG, osFlagsWaitAny, osWaitForever);
 80028f6:	e799      	b.n	800282c <Science_init+0x8>
 80028f8:	24001a98 	.word	0x24001a98
 80028fc:	24000fbc 	.word	0x24000fbc
 8002900:	240000c0 	.word	0x240000c0
 8002904:	0801b80c 	.word	0x0801b80c
 8002908:	2400003c 	.word	0x2400003c
 800290c:	24000314 	.word	0x24000314
 8002910:	24001adc 	.word	0x24001adc
 8002914:	24001add 	.word	0x24001add
 8002918:	24001ae0 	.word	0x24001ae0
 800291c:	24001a90 	.word	0x24001a90
 8002920:	24001da4 	.word	0x24001da4

08002924 <Idle_init>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_Idle_init */
void Idle_init(void *argument)
{
 8002924:	b580      	push	{r7, lr}
 8002926:	b084      	sub	sp, #16
 8002928:	af00      	add	r7, sp, #0
 800292a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Idle_init */

  /* Infinite loop */
  for(;;)
  {
		osEventFlagsWait(mode_event_flags, IDLE_FLAG, osFlagsWaitAny, osWaitForever);
 800292c:	4b2a      	ldr	r3, [pc, #168]	; (80029d8 <Idle_init+0xb4>)
 800292e:	6818      	ldr	r0, [r3, #0]
 8002930:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002934:	2200      	movs	r2, #0
 8002936:	2102      	movs	r1, #2
 8002938:	f014 ff2a 	bl	8017790 <osEventFlagsWait>

		ERPA_ENABLED = 0;
 800293c:	4b27      	ldr	r3, [pc, #156]	; (80029dc <Idle_init+0xb8>)
 800293e:	2200      	movs	r2, #0
 8002940:	701a      	strb	r2, [r3, #0]
		TIM2->CCR4 = 0;
 8002942:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002946:	2200      	movs	r2, #0
 8002948:	641a      	str	r2, [r3, #64]	; 0x40
		HAL_TIM_OC_Stop_IT(&htim1, TIM_CHANNEL_1);			// PMT packet off
 800294a:	2100      	movs	r1, #0
 800294c:	4824      	ldr	r0, [pc, #144]	; (80029e0 <Idle_init+0xbc>)
 800294e:	f010 fcd3 	bl	80132f8 <HAL_TIM_OC_Stop_IT>
		HK_ENABLED = 0;
 8002952:	4b24      	ldr	r3, [pc, #144]	; (80029e4 <Idle_init+0xc0>)
 8002954:	2200      	movs	r2, #0
 8002956:	701a      	strb	r2, [r3, #0]
		HAL_DAC_Stop_DMA(&hdac1, DAC_CHANNEL_1);			// Disable auto sweep
 8002958:	2100      	movs	r1, #0
 800295a:	4823      	ldr	r0, [pc, #140]	; (80029e8 <Idle_init+0xc4>)
 800295c:	f005 faa4 	bl	8007ea8 <HAL_DAC_Stop_DMA>
		osThreadSuspend(Voltage_MonitorHandle);
 8002960:	4b22      	ldr	r3, [pc, #136]	; (80029ec <Idle_init+0xc8>)
 8002962:	681b      	ldr	r3, [r3, #0]
 8002964:	4618      	mov	r0, r3
 8002966:	f014 fe01 	bl	801756c <osThreadSuspend>

		// Telling rail monitor which voltages are now disabled
		for (int i = RAIL_n800v; i >= RAIL_busvmon; i--) {
 800296a:	2310      	movs	r3, #16
 800296c:	60fb      	str	r3, [r7, #12]
 800296e:	e008      	b.n	8002982 <Idle_init+0x5e>
			set_rail_monitor_enable(i, 0);
 8002970:	68fb      	ldr	r3, [r7, #12]
 8002972:	b2db      	uxtb	r3, r3
 8002974:	2100      	movs	r1, #0
 8002976:	4618      	mov	r0, r3
 8002978:	f003 f9a0 	bl	8005cbc <set_rail_monitor_enable>
		for (int i = RAIL_n800v; i >= RAIL_busvmon; i--) {
 800297c:	68fb      	ldr	r3, [r7, #12]
 800297e:	3b01      	subs	r3, #1
 8002980:	60fb      	str	r3, [r7, #12]
 8002982:	68fb      	ldr	r3, [r7, #12]
 8002984:	2b05      	cmp	r3, #5
 8002986:	dcf3      	bgt.n	8002970 <Idle_init+0x4c>
		}

		// Disabling all voltages
		for (int i = 8; i >= 0; i--) {
 8002988:	2308      	movs	r3, #8
 800298a:	60bb      	str	r3, [r7, #8]
 800298c:	e012      	b.n	80029b4 <Idle_init+0x90>
			HAL_GPIO_WritePin(gpios[i].gpio, gpios[i].pin, GPIO_PIN_RESET);
 800298e:	4a18      	ldr	r2, [pc, #96]	; (80029f0 <Idle_init+0xcc>)
 8002990:	68bb      	ldr	r3, [r7, #8]
 8002992:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8002996:	4a16      	ldr	r2, [pc, #88]	; (80029f0 <Idle_init+0xcc>)
 8002998:	68bb      	ldr	r3, [r7, #8]
 800299a:	00db      	lsls	r3, r3, #3
 800299c:	4413      	add	r3, r2
 800299e:	889b      	ldrh	r3, [r3, #4]
 80029a0:	2200      	movs	r2, #0
 80029a2:	4619      	mov	r1, r3
 80029a4:	f009 f844 	bl	800ba30 <HAL_GPIO_WritePin>
			osDelay(200);
 80029a8:	20c8      	movs	r0, #200	; 0xc8
 80029aa:	f014 fe21 	bl	80175f0 <osDelay>
		for (int i = 8; i >= 0; i--) {
 80029ae:	68bb      	ldr	r3, [r7, #8]
 80029b0:	3b01      	subs	r3, #1
 80029b2:	60bb      	str	r3, [r7, #8]
 80029b4:	68bb      	ldr	r3, [r7, #8]
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	dae9      	bge.n	800298e <Idle_init+0x6a>
		}
		osDelay(3500);		// TODO: Reduce to 1000 for assembled instrument
 80029ba:	f640 50ac 	movw	r0, #3500	; 0xdac
 80029be:	f014 fe17 	bl	80175f0 <osDelay>
		IDLING = 1;
 80029c2:	4b0c      	ldr	r3, [pc, #48]	; (80029f4 <Idle_init+0xd0>)
 80029c4:	2201      	movs	r2, #1
 80029c6:	701a      	strb	r2, [r3, #0]
		osThreadResume(Voltage_MonitorHandle);
 80029c8:	4b08      	ldr	r3, [pc, #32]	; (80029ec <Idle_init+0xc8>)
 80029ca:	681b      	ldr	r3, [r3, #0]
 80029cc:	4618      	mov	r0, r3
 80029ce:	f014 fdee 	bl	80175ae <osThreadResume>

		// Yield thread control
		osThreadYield();
 80029d2:	f014 fdab 	bl	801752c <osThreadYield>
		osEventFlagsWait(mode_event_flags, IDLE_FLAG, osFlagsWaitAny, osWaitForever);
 80029d6:	e7a9      	b.n	800292c <Idle_init+0x8>
 80029d8:	24001a98 	.word	0x24001a98
 80029dc:	24001add 	.word	0x24001add
 80029e0:	24001da4 	.word	0x24001da4
 80029e4:	24001adc 	.word	0x24001adc
 80029e8:	24000314 	.word	0x24000314
 80029ec:	24000fbc 	.word	0x24000fbc
 80029f0:	0801b80c 	.word	0x0801b80c
 80029f4:	240000c0 	.word	0x240000c0

080029f8 <MX_GPIO_Init>:
     PC15-OSC32_OUT (OSC32_OUT)   ------> RCC_OSC32_OUT
     PH0-OSC_IN (PH0)   ------> RCC_OSC_IN
     PH1-OSC_OUT (PH1)   ------> RCC_OSC_OUT
*/
void MX_GPIO_Init(void)
{
 80029f8:	b580      	push	{r7, lr}
 80029fa:	b08a      	sub	sp, #40	; 0x28
 80029fc:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029fe:	f107 0314 	add.w	r3, r7, #20
 8002a02:	2200      	movs	r2, #0
 8002a04:	601a      	str	r2, [r3, #0]
 8002a06:	605a      	str	r2, [r3, #4]
 8002a08:	609a      	str	r2, [r3, #8]
 8002a0a:	60da      	str	r2, [r3, #12]
 8002a0c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002a0e:	4b34      	ldr	r3, [pc, #208]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a10:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002a14:	4a32      	ldr	r2, [pc, #200]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a16:	f043 0304 	orr.w	r3, r3, #4
 8002a1a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8002a1e:	4b30      	ldr	r3, [pc, #192]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a20:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002a24:	f003 0304 	and.w	r3, r3, #4
 8002a28:	613b      	str	r3, [r7, #16]
 8002a2a:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002a2c:	4b2c      	ldr	r3, [pc, #176]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a2e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002a32:	4a2b      	ldr	r2, [pc, #172]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a34:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002a38:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8002a3c:	4b28      	ldr	r3, [pc, #160]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a3e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002a42:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002a46:	60fb      	str	r3, [r7, #12]
 8002a48:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a4a:	4b25      	ldr	r3, [pc, #148]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a4c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002a50:	4a23      	ldr	r2, [pc, #140]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a52:	f043 0301 	orr.w	r3, r3, #1
 8002a56:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8002a5a:	4b21      	ldr	r3, [pc, #132]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a5c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002a60:	f003 0301 	and.w	r3, r3, #1
 8002a64:	60bb      	str	r3, [r7, #8]
 8002a66:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a68:	4b1d      	ldr	r3, [pc, #116]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a6a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002a6e:	4a1c      	ldr	r2, [pc, #112]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a70:	f043 0302 	orr.w	r3, r3, #2
 8002a74:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8002a78:	4b19      	ldr	r3, [pc, #100]	; (8002ae0 <MX_GPIO_Init+0xe8>)
 8002a7a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002a7e:	f003 0302 	and.w	r3, r3, #2
 8002a82:	607b      	str	r3, [r7, #4]
 8002a84:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8
 8002a86:	2200      	movs	r2, #0
 8002a88:	f44f 511f 	mov.w	r1, #10176	; 0x27c0
 8002a8c:	4815      	ldr	r0, [pc, #84]	; (8002ae4 <MX_GPIO_Init+0xec>)
 8002a8e:	f008 ffcf 	bl	800ba30 <HAL_GPIO_WritePin>
                          |GPIO_PIN_9|GPIO_PIN_10, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2|GPIO_PIN_5|GPIO_PIN_6, GPIO_PIN_RESET);
 8002a92:	2200      	movs	r2, #0
 8002a94:	2164      	movs	r1, #100	; 0x64
 8002a96:	4814      	ldr	r0, [pc, #80]	; (8002ae8 <MX_GPIO_Init+0xf0>)
 8002a98:	f008 ffca 	bl	800ba30 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC13 PC6 PC7 PC8
                           PC9 PC10 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8
 8002a9c:	f44f 531f 	mov.w	r3, #10176	; 0x27c0
 8002aa0:	617b      	str	r3, [r7, #20]
                          |GPIO_PIN_9|GPIO_PIN_10;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002aa2:	2301      	movs	r3, #1
 8002aa4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8002aa6:	2302      	movs	r3, #2
 8002aa8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002aaa:	2300      	movs	r3, #0
 8002aac:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002aae:	f107 0314 	add.w	r3, r7, #20
 8002ab2:	4619      	mov	r1, r3
 8002ab4:	480b      	ldr	r0, [pc, #44]	; (8002ae4 <MX_GPIO_Init+0xec>)
 8002ab6:	f008 fdf3 	bl	800b6a0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB2 PB5 PB6 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_5|GPIO_PIN_6;
 8002aba:	2364      	movs	r3, #100	; 0x64
 8002abc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002abe:	2301      	movs	r3, #1
 8002ac0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8002ac2:	2302      	movs	r3, #2
 8002ac4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002ac6:	2300      	movs	r3, #0
 8002ac8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002aca:	f107 0314 	add.w	r3, r7, #20
 8002ace:	4619      	mov	r1, r3
 8002ad0:	4805      	ldr	r0, [pc, #20]	; (8002ae8 <MX_GPIO_Init+0xf0>)
 8002ad2:	f008 fde5 	bl	800b6a0 <HAL_GPIO_Init>

}
 8002ad6:	bf00      	nop
 8002ad8:	3728      	adds	r7, #40	; 0x28
 8002ada:	46bd      	mov	sp, r7
 8002adc:	bd80      	pop	{r7, pc}
 8002ade:	bf00      	nop
 8002ae0:	58024400 	.word	0x58024400
 8002ae4:	58020800 	.word	0x58020800
 8002ae8:	58020400 	.word	0x58020400

08002aec <MX_I2C1_Init>:
DMA_HandleTypeDef hdma_i2c1_tx;
DMA_HandleTypeDef hdma_i2c1_rx;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8002aec:	b580      	push	{r7, lr}
 8002aee:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8002af0:	4b1c      	ldr	r3, [pc, #112]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002af2:	4a1d      	ldr	r2, [pc, #116]	; (8002b68 <MX_I2C1_Init+0x7c>)
 8002af4:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00100517;
 8002af6:	4b1b      	ldr	r3, [pc, #108]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002af8:	4a1c      	ldr	r2, [pc, #112]	; (8002b6c <MX_I2C1_Init+0x80>)
 8002afa:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8002afc:	4b19      	ldr	r3, [pc, #100]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002afe:	2200      	movs	r2, #0
 8002b00:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002b02:	4b18      	ldr	r3, [pc, #96]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002b04:	2201      	movs	r2, #1
 8002b06:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002b08:	4b16      	ldr	r3, [pc, #88]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002b0a:	2200      	movs	r2, #0
 8002b0c:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8002b0e:	4b15      	ldr	r3, [pc, #84]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002b10:	2200      	movs	r2, #0
 8002b12:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8002b14:	4b13      	ldr	r3, [pc, #76]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002b16:	2200      	movs	r2, #0
 8002b18:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002b1a:	4b12      	ldr	r3, [pc, #72]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002b1c:	2200      	movs	r2, #0
 8002b1e:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002b20:	4b10      	ldr	r3, [pc, #64]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002b22:	2200      	movs	r2, #0
 8002b24:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002b26:	480f      	ldr	r0, [pc, #60]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002b28:	f008 ff9c 	bl	800ba64 <HAL_I2C_Init>
 8002b2c:	4603      	mov	r3, r0
 8002b2e:	2b00      	cmp	r3, #0
 8002b30:	d001      	beq.n	8002b36 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8002b32:	f001 f81b 	bl	8003b6c <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8002b36:	2100      	movs	r1, #0
 8002b38:	480a      	ldr	r0, [pc, #40]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002b3a:	f00b fa3b 	bl	800dfb4 <HAL_I2CEx_ConfigAnalogFilter>
 8002b3e:	4603      	mov	r3, r0
 8002b40:	2b00      	cmp	r3, #0
 8002b42:	d001      	beq.n	8002b48 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8002b44:	f001 f812 	bl	8003b6c <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8002b48:	2100      	movs	r1, #0
 8002b4a:	4806      	ldr	r0, [pc, #24]	; (8002b64 <MX_I2C1_Init+0x78>)
 8002b4c:	f00b fa7d 	bl	800e04a <HAL_I2CEx_ConfigDigitalFilter>
 8002b50:	4603      	mov	r3, r0
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	d001      	beq.n	8002b5a <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8002b56:	f001 f809 	bl	8003b6c <Error_Handler>
  }

  /** I2C Enable Fast Mode Plus
  */
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C1);
 8002b5a:	2001      	movs	r0, #1
 8002b5c:	f00b fac2 	bl	800e0e4 <HAL_I2CEx_EnableFastModePlus>
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8002b60:	bf00      	nop
 8002b62:	bd80      	pop	{r7, pc}
 8002b64:	2400193c 	.word	0x2400193c
 8002b68:	40005400 	.word	0x40005400
 8002b6c:	00100517 	.word	0x00100517

08002b70 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8002b70:	b580      	push	{r7, lr}
 8002b72:	b0ba      	sub	sp, #232	; 0xe8
 8002b74:	af00      	add	r7, sp, #0
 8002b76:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b78:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8002b7c:	2200      	movs	r2, #0
 8002b7e:	601a      	str	r2, [r3, #0]
 8002b80:	605a      	str	r2, [r3, #4]
 8002b82:	609a      	str	r2, [r3, #8]
 8002b84:	60da      	str	r2, [r3, #12]
 8002b86:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002b88:	f107 0310 	add.w	r3, r7, #16
 8002b8c:	22c0      	movs	r2, #192	; 0xc0
 8002b8e:	2100      	movs	r1, #0
 8002b90:	4618      	mov	r0, r3
 8002b92:	f017 ff53 	bl	801aa3c <memset>
  if(i2cHandle->Instance==I2C1)
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	4a5d      	ldr	r2, [pc, #372]	; (8002d10 <HAL_I2C_MspInit+0x1a0>)
 8002b9c:	4293      	cmp	r3, r2
 8002b9e:	f040 80b3 	bne.w	8002d08 <HAL_I2C_MspInit+0x198>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8002ba2:	f04f 0208 	mov.w	r2, #8
 8002ba6:	f04f 0300 	mov.w	r3, #0
 8002baa:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.I2c123ClockSelection = RCC_I2C123CLKSOURCE_D2PCLK1;
 8002bae:	2300      	movs	r3, #0
 8002bb0:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002bb4:	f107 0310 	add.w	r3, r7, #16
 8002bb8:	4618      	mov	r0, r3
 8002bba:	f00c fbb5 	bl	800f328 <HAL_RCCEx_PeriphCLKConfig>
 8002bbe:	4603      	mov	r3, r0
 8002bc0:	2b00      	cmp	r3, #0
 8002bc2:	d001      	beq.n	8002bc8 <HAL_I2C_MspInit+0x58>
    {
      Error_Handler();
 8002bc4:	f000 ffd2 	bl	8003b6c <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002bc8:	4b52      	ldr	r3, [pc, #328]	; (8002d14 <HAL_I2C_MspInit+0x1a4>)
 8002bca:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002bce:	4a51      	ldr	r2, [pc, #324]	; (8002d14 <HAL_I2C_MspInit+0x1a4>)
 8002bd0:	f043 0302 	orr.w	r3, r3, #2
 8002bd4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8002bd8:	4b4e      	ldr	r3, [pc, #312]	; (8002d14 <HAL_I2C_MspInit+0x1a4>)
 8002bda:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8002bde:	f003 0302 	and.w	r3, r3, #2
 8002be2:	60fb      	str	r3, [r7, #12]
 8002be4:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8002be6:	f44f 7340 	mov.w	r3, #768	; 0x300
 8002bea:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002bee:	2312      	movs	r3, #18
 8002bf0:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bf4:	2300      	movs	r3, #0
 8002bf6:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bfa:	2300      	movs	r3, #0
 8002bfc:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002c00:	2304      	movs	r3, #4
 8002c02:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002c06:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8002c0a:	4619      	mov	r1, r3
 8002c0c:	4842      	ldr	r0, [pc, #264]	; (8002d18 <HAL_I2C_MspInit+0x1a8>)
 8002c0e:	f008 fd47 	bl	800b6a0 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002c12:	4b40      	ldr	r3, [pc, #256]	; (8002d14 <HAL_I2C_MspInit+0x1a4>)
 8002c14:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8002c18:	4a3e      	ldr	r2, [pc, #248]	; (8002d14 <HAL_I2C_MspInit+0x1a4>)
 8002c1a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002c1e:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8002c22:	4b3c      	ldr	r3, [pc, #240]	; (8002d14 <HAL_I2C_MspInit+0x1a4>)
 8002c24:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8002c28:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002c2c:	60bb      	str	r3, [r7, #8]
 8002c2e:	68bb      	ldr	r3, [r7, #8]

    /* I2C1 DMA Init */
    /* I2C1_TX Init */
    hdma_i2c1_tx.Instance = DMA1_Stream6;
 8002c30:	4b3a      	ldr	r3, [pc, #232]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c32:	4a3b      	ldr	r2, [pc, #236]	; (8002d20 <HAL_I2C_MspInit+0x1b0>)
 8002c34:	601a      	str	r2, [r3, #0]
    hdma_i2c1_tx.Init.Request = DMA_REQUEST_I2C1_TX;
 8002c36:	4b39      	ldr	r3, [pc, #228]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c38:	2222      	movs	r2, #34	; 0x22
 8002c3a:	605a      	str	r2, [r3, #4]
    hdma_i2c1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002c3c:	4b37      	ldr	r3, [pc, #220]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c3e:	2240      	movs	r2, #64	; 0x40
 8002c40:	609a      	str	r2, [r3, #8]
    hdma_i2c1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002c42:	4b36      	ldr	r3, [pc, #216]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c44:	2200      	movs	r2, #0
 8002c46:	60da      	str	r2, [r3, #12]
    hdma_i2c1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002c48:	4b34      	ldr	r3, [pc, #208]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c4a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002c4e:	611a      	str	r2, [r3, #16]
    hdma_i2c1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002c50:	4b32      	ldr	r3, [pc, #200]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c52:	2200      	movs	r2, #0
 8002c54:	615a      	str	r2, [r3, #20]
    hdma_i2c1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002c56:	4b31      	ldr	r3, [pc, #196]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c58:	2200      	movs	r2, #0
 8002c5a:	619a      	str	r2, [r3, #24]
    hdma_i2c1_tx.Init.Mode = DMA_NORMAL;
 8002c5c:	4b2f      	ldr	r3, [pc, #188]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c5e:	2200      	movs	r2, #0
 8002c60:	61da      	str	r2, [r3, #28]
    hdma_i2c1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002c62:	4b2e      	ldr	r3, [pc, #184]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c64:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8002c68:	621a      	str	r2, [r3, #32]
    hdma_i2c1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002c6a:	4b2c      	ldr	r3, [pc, #176]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c6c:	2200      	movs	r2, #0
 8002c6e:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_i2c1_tx) != HAL_OK)
 8002c70:	482a      	ldr	r0, [pc, #168]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c72:	f005 fbe5 	bl	8008440 <HAL_DMA_Init>
 8002c76:	4603      	mov	r3, r0
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	d001      	beq.n	8002c80 <HAL_I2C_MspInit+0x110>
    {
      Error_Handler();
 8002c7c:	f000 ff76 	bl	8003b6c <Error_Handler>
    }

    __HAL_LINKDMA(i2cHandle,hdmatx,hdma_i2c1_tx);
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	4a26      	ldr	r2, [pc, #152]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c84:	639a      	str	r2, [r3, #56]	; 0x38
 8002c86:	4a25      	ldr	r2, [pc, #148]	; (8002d1c <HAL_I2C_MspInit+0x1ac>)
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	6393      	str	r3, [r2, #56]	; 0x38

    /* I2C1_RX Init */
    hdma_i2c1_rx.Instance = DMA1_Stream7;
 8002c8c:	4b25      	ldr	r3, [pc, #148]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002c8e:	4a26      	ldr	r2, [pc, #152]	; (8002d28 <HAL_I2C_MspInit+0x1b8>)
 8002c90:	601a      	str	r2, [r3, #0]
    hdma_i2c1_rx.Init.Request = DMA_REQUEST_I2C1_RX;
 8002c92:	4b24      	ldr	r3, [pc, #144]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002c94:	2221      	movs	r2, #33	; 0x21
 8002c96:	605a      	str	r2, [r3, #4]
    hdma_i2c1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002c98:	4b22      	ldr	r3, [pc, #136]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002c9a:	2200      	movs	r2, #0
 8002c9c:	609a      	str	r2, [r3, #8]
    hdma_i2c1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002c9e:	4b21      	ldr	r3, [pc, #132]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002ca0:	2200      	movs	r2, #0
 8002ca2:	60da      	str	r2, [r3, #12]
    hdma_i2c1_rx.Init.MemInc = DMA_MINC_ENABLE;
 8002ca4:	4b1f      	ldr	r3, [pc, #124]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002ca6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002caa:	611a      	str	r2, [r3, #16]
    hdma_i2c1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002cac:	4b1d      	ldr	r3, [pc, #116]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002cae:	2200      	movs	r2, #0
 8002cb0:	615a      	str	r2, [r3, #20]
    hdma_i2c1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002cb2:	4b1c      	ldr	r3, [pc, #112]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002cb4:	2200      	movs	r2, #0
 8002cb6:	619a      	str	r2, [r3, #24]
    hdma_i2c1_rx.Init.Mode = DMA_NORMAL;
 8002cb8:	4b1a      	ldr	r3, [pc, #104]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002cba:	2200      	movs	r2, #0
 8002cbc:	61da      	str	r2, [r3, #28]
    hdma_i2c1_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002cbe:	4b19      	ldr	r3, [pc, #100]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002cc0:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8002cc4:	621a      	str	r2, [r3, #32]
    hdma_i2c1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002cc6:	4b17      	ldr	r3, [pc, #92]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002cc8:	2200      	movs	r2, #0
 8002cca:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_i2c1_rx) != HAL_OK)
 8002ccc:	4815      	ldr	r0, [pc, #84]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002cce:	f005 fbb7 	bl	8008440 <HAL_DMA_Init>
 8002cd2:	4603      	mov	r3, r0
 8002cd4:	2b00      	cmp	r3, #0
 8002cd6:	d001      	beq.n	8002cdc <HAL_I2C_MspInit+0x16c>
    {
      Error_Handler();
 8002cd8:	f000 ff48 	bl	8003b6c <Error_Handler>
    }

    __HAL_LINKDMA(i2cHandle,hdmarx,hdma_i2c1_rx);
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	4a11      	ldr	r2, [pc, #68]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002ce0:	63da      	str	r2, [r3, #60]	; 0x3c
 8002ce2:	4a10      	ldr	r2, [pc, #64]	; (8002d24 <HAL_I2C_MspInit+0x1b4>)
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	6393      	str	r3, [r2, #56]	; 0x38

    /* I2C1 interrupt Init */
    HAL_NVIC_SetPriority(I2C1_EV_IRQn, 5, 0);
 8002ce8:	2200      	movs	r2, #0
 8002cea:	2105      	movs	r1, #5
 8002cec:	201f      	movs	r0, #31
 8002cee:	f004 ff79 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C1_EV_IRQn);
 8002cf2:	201f      	movs	r0, #31
 8002cf4:	f004 ff90 	bl	8007c18 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(I2C1_ER_IRQn, 5, 0);
 8002cf8:	2200      	movs	r2, #0
 8002cfa:	2105      	movs	r1, #5
 8002cfc:	2020      	movs	r0, #32
 8002cfe:	f004 ff71 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C1_ER_IRQn);
 8002d02:	2020      	movs	r0, #32
 8002d04:	f004 ff88 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8002d08:	bf00      	nop
 8002d0a:	37e8      	adds	r7, #232	; 0xe8
 8002d0c:	46bd      	mov	sp, r7
 8002d0e:	bd80      	pop	{r7, pc}
 8002d10:	40005400 	.word	0x40005400
 8002d14:	58024400 	.word	0x58024400
 8002d18:	58020400 	.word	0x58020400
 8002d1c:	24001990 	.word	0x24001990
 8002d20:	400200a0 	.word	0x400200a0
 8002d24:	24001a08 	.word	0x24001a08
 8002d28:	400200b8 	.word	0x400200b8

08002d2c <MX_IWDG1_Init>:

IWDG_HandleTypeDef hiwdg1;

/* IWDG1 init function */
void MX_IWDG1_Init(void)
{
 8002d2c:	b580      	push	{r7, lr}
 8002d2e:	af00      	add	r7, sp, #0
  /* USER CODE END IWDG1_Init 0 */

  /* USER CODE BEGIN IWDG1_Init 1 */

  /* USER CODE END IWDG1_Init 1 */
  hiwdg1.Instance = IWDG1;
 8002d30:	4b0b      	ldr	r3, [pc, #44]	; (8002d60 <MX_IWDG1_Init+0x34>)
 8002d32:	4a0c      	ldr	r2, [pc, #48]	; (8002d64 <MX_IWDG1_Init+0x38>)
 8002d34:	601a      	str	r2, [r3, #0]
  hiwdg1.Init.Prescaler = IWDG_PRESCALER_64;
 8002d36:	4b0a      	ldr	r3, [pc, #40]	; (8002d60 <MX_IWDG1_Init+0x34>)
 8002d38:	2204      	movs	r2, #4
 8002d3a:	605a      	str	r2, [r3, #4]
  hiwdg1.Init.Window = 499;
 8002d3c:	4b08      	ldr	r3, [pc, #32]	; (8002d60 <MX_IWDG1_Init+0x34>)
 8002d3e:	f240 12f3 	movw	r2, #499	; 0x1f3
 8002d42:	60da      	str	r2, [r3, #12]
  hiwdg1.Init.Reload = 499;
 8002d44:	4b06      	ldr	r3, [pc, #24]	; (8002d60 <MX_IWDG1_Init+0x34>)
 8002d46:	f240 12f3 	movw	r2, #499	; 0x1f3
 8002d4a:	609a      	str	r2, [r3, #8]
  if (HAL_IWDG_Init(&hiwdg1) != HAL_OK)
 8002d4c:	4804      	ldr	r0, [pc, #16]	; (8002d60 <MX_IWDG1_Init+0x34>)
 8002d4e:	f00b f9ed 	bl	800e12c <HAL_IWDG_Init>
 8002d52:	4603      	mov	r3, r0
 8002d54:	2b00      	cmp	r3, #0
 8002d56:	d001      	beq.n	8002d5c <MX_IWDG1_Init+0x30>
  {
    Error_Handler();
 8002d58:	f000 ff08 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN IWDG1_Init 2 */

  /* USER CODE END IWDG1_Init 2 */

}
 8002d5c:	bf00      	nop
 8002d5e:	bd80      	pop	{r7, pc}
 8002d60:	24001a80 	.word	0x24001a80
 8002d64:	58004800 	.word	0x58004800

08002d68 <__NVIC_SystemReset>:
{
 8002d68:	b480      	push	{r7}
 8002d6a:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
 8002d6c:	f3bf 8f4f 	dsb	sy
}
 8002d70:	bf00      	nop
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8002d72:	4b06      	ldr	r3, [pc, #24]	; (8002d8c <__NVIC_SystemReset+0x24>)
 8002d74:	68db      	ldr	r3, [r3, #12]
 8002d76:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8002d7a:	4904      	ldr	r1, [pc, #16]	; (8002d8c <__NVIC_SystemReset+0x24>)
 8002d7c:	4b04      	ldr	r3, [pc, #16]	; (8002d90 <__NVIC_SystemReset+0x28>)
 8002d7e:	4313      	orrs	r3, r2
 8002d80:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8002d82:	f3bf 8f4f 	dsb	sy
}
 8002d86:	bf00      	nop
    __NOP();
 8002d88:	bf00      	nop
 8002d8a:	e7fd      	b.n	8002d88 <__NVIC_SystemReset+0x20>
 8002d8c:	e000ed00 	.word	0xe000ed00
 8002d90:	05fa0004 	.word	0x05fa0004

08002d94 <HAL_TIM_OC_DelayElapsedCallback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim) {
 8002d94:	b580      	push	{r7, lr}
 8002d96:	b082      	sub	sp, #8
 8002d98:	af00      	add	r7, sp, #0
 8002d9a:	6078      	str	r0, [r7, #4]
	if (htim == &htim1) {
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	4a22      	ldr	r2, [pc, #136]	; (8002e28 <HAL_TIM_OC_DelayElapsedCallback+0x94>)
 8002da0:	4293      	cmp	r3, r2
 8002da2:	d106      	bne.n	8002db2 <HAL_TIM_OC_DelayElapsedCallback+0x1e>
		osEventFlagsSet(packet_event_flags, PMT_FLAG_ID);
 8002da4:	4b21      	ldr	r3, [pc, #132]	; (8002e2c <HAL_TIM_OC_DelayElapsedCallback+0x98>)
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	2101      	movs	r1, #1
 8002daa:	4618      	mov	r0, r3
 8002dac:	f014 fc7a 	bl	80176a4 <osEventFlagsSet>


	} else {
		printf("Unknown Timer Interrupt\n");
	}
}
 8002db0:	e035      	b.n	8002e1e <HAL_TIM_OC_DelayElapsedCallback+0x8a>
	else if (htim == &htim2) {
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	4a1e      	ldr	r2, [pc, #120]	; (8002e30 <HAL_TIM_OC_DelayElapsedCallback+0x9c>)
 8002db6:	4293      	cmp	r3, r2
 8002db8:	d12e      	bne.n	8002e18 <HAL_TIM_OC_DelayElapsedCallback+0x84>
		if (ERPA_ENABLED) {
 8002dba:	4b1e      	ldr	r3, [pc, #120]	; (8002e34 <HAL_TIM_OC_DelayElapsedCallback+0xa0>)
 8002dbc:	781b      	ldrb	r3, [r3, #0]
 8002dbe:	b2db      	uxtb	r3, r3
 8002dc0:	2b00      	cmp	r3, #0
 8002dc2:	d005      	beq.n	8002dd0 <HAL_TIM_OC_DelayElapsedCallback+0x3c>
			osEventFlagsSet(packet_event_flags, ERPA_FLAG_ID);
 8002dc4:	4b19      	ldr	r3, [pc, #100]	; (8002e2c <HAL_TIM_OC_DelayElapsedCallback+0x98>)
 8002dc6:	681b      	ldr	r3, [r3, #0]
 8002dc8:	2102      	movs	r1, #2
 8002dca:	4618      	mov	r0, r3
 8002dcc:	f014 fc6a 	bl	80176a4 <osEventFlagsSet>
		if (HK_100_ms_counter == 32) {
 8002dd0:	4b19      	ldr	r3, [pc, #100]	; (8002e38 <HAL_TIM_OC_DelayElapsedCallback+0xa4>)
 8002dd2:	781b      	ldrb	r3, [r3, #0]
 8002dd4:	b2db      	uxtb	r3, r3
 8002dd6:	2b20      	cmp	r3, #32
 8002dd8:	d113      	bne.n	8002e02 <HAL_TIM_OC_DelayElapsedCallback+0x6e>
			osEventFlagsSet(utility_event_flags, VOLTAGE_MONITOR_FLAG_ID);
 8002dda:	4b18      	ldr	r3, [pc, #96]	; (8002e3c <HAL_TIM_OC_DelayElapsedCallback+0xa8>)
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	2101      	movs	r1, #1
 8002de0:	4618      	mov	r0, r3
 8002de2:	f014 fc5f 	bl	80176a4 <osEventFlagsSet>
			if (HK_ENABLED){
 8002de6:	4b16      	ldr	r3, [pc, #88]	; (8002e40 <HAL_TIM_OC_DelayElapsedCallback+0xac>)
 8002de8:	781b      	ldrb	r3, [r3, #0]
 8002dea:	b2db      	uxtb	r3, r3
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	d005      	beq.n	8002dfc <HAL_TIM_OC_DelayElapsedCallback+0x68>
				osEventFlagsSet(packet_event_flags, HK_FLAG_ID);
 8002df0:	4b0e      	ldr	r3, [pc, #56]	; (8002e2c <HAL_TIM_OC_DelayElapsedCallback+0x98>)
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	2104      	movs	r1, #4
 8002df6:	4618      	mov	r0, r3
 8002df8:	f014 fc54 	bl	80176a4 <osEventFlagsSet>
			HK_100_ms_counter = 0;
 8002dfc:	4b0e      	ldr	r3, [pc, #56]	; (8002e38 <HAL_TIM_OC_DelayElapsedCallback+0xa4>)
 8002dfe:	2200      	movs	r2, #0
 8002e00:	701a      	strb	r2, [r3, #0]
		HK_100_ms_counter++;
 8002e02:	4b0d      	ldr	r3, [pc, #52]	; (8002e38 <HAL_TIM_OC_DelayElapsedCallback+0xa4>)
 8002e04:	781b      	ldrb	r3, [r3, #0]
 8002e06:	b2db      	uxtb	r3, r3
 8002e08:	3301      	adds	r3, #1
 8002e0a:	b2da      	uxtb	r2, r3
 8002e0c:	4b0a      	ldr	r3, [pc, #40]	; (8002e38 <HAL_TIM_OC_DelayElapsedCallback+0xa4>)
 8002e0e:	701a      	strb	r2, [r3, #0]
		HAL_IWDG_Refresh(&hiwdg1);
 8002e10:	480c      	ldr	r0, [pc, #48]	; (8002e44 <HAL_TIM_OC_DelayElapsedCallback+0xb0>)
 8002e12:	f00b f9da 	bl	800e1ca <HAL_IWDG_Refresh>
}
 8002e16:	e002      	b.n	8002e1e <HAL_TIM_OC_DelayElapsedCallback+0x8a>
		printf("Unknown Timer Interrupt\n");
 8002e18:	480b      	ldr	r0, [pc, #44]	; (8002e48 <HAL_TIM_OC_DelayElapsedCallback+0xb4>)
 8002e1a:	f017 fe85 	bl	801ab28 <puts>
}
 8002e1e:	bf00      	nop
 8002e20:	3708      	adds	r7, #8
 8002e22:	46bd      	mov	sp, r7
 8002e24:	bd80      	pop	{r7, pc}
 8002e26:	bf00      	nop
 8002e28:	24001da4 	.word	0x24001da4
 8002e2c:	24001a90 	.word	0x24001a90
 8002e30:	24001df0 	.word	0x24001df0
 8002e34:	24001add 	.word	0x24001add
 8002e38:	24001ae4 	.word	0x24001ae4
 8002e3c:	24001a94 	.word	0x24001a94
 8002e40:	24001adc 	.word	0x24001adc
 8002e44:	24001a80 	.word	0x24001a80
 8002e48:	0801b4d8 	.word	0x0801b4d8

08002e4c <HAL_UART_RxCpltCallback>:


void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8002e4c:	b580      	push	{r7, lr}
 8002e4e:	b088      	sub	sp, #32
 8002e50:	af02      	add	r7, sp, #8
 8002e52:	6078      	str	r0, [r7, #4]
	HAL_UART_Receive_IT(&huart1, UART_RX_BUFFER, 1);
 8002e54:	2201      	movs	r2, #1
 8002e56:	49f7      	ldr	r1, [pc, #988]	; (8003234 <HAL_UART_RxCpltCallback+0x3e8>)
 8002e58:	48f7      	ldr	r0, [pc, #988]	; (8003238 <HAL_UART_RxCpltCallback+0x3ec>)
 8002e5a:	f011 fdd3 	bl	8014a04 <HAL_UART_Receive_IT>
	unsigned char key = UART_RX_BUFFER[0];
 8002e5e:	4bf5      	ldr	r3, [pc, #980]	; (8003234 <HAL_UART_RxCpltCallback+0x3e8>)
 8002e60:	781b      	ldrb	r3, [r3, #0]
 8002e62:	73fb      	strb	r3, [r7, #15]

	switch (key) {
 8002e64:	7bfb      	ldrb	r3, [r7, #15]
 8002e66:	2bef      	cmp	r3, #239	; 0xef
 8002e68:	f200 843e 	bhi.w	80036e8 <HAL_UART_RxCpltCallback+0x89c>
 8002e6c:	a201      	add	r2, pc, #4	; (adr r2, 8002e74 <HAL_UART_RxCpltCallback+0x28>)
 8002e6e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002e72:	bf00      	nop
 8002e74:	08003251 	.word	0x08003251
 8002e78:	08003281 	.word	0x08003281
 8002e7c:	080032f1 	.word	0x080032f1
 8002e80:	0800332b 	.word	0x0800332b
 8002e84:	08003363 	.word	0x08003363
 8002e88:	0800339d 	.word	0x0800339d
 8002e8c:	080033d9 	.word	0x080033d9
 8002e90:	08003415 	.word	0x08003415
 8002e94:	0800344f 	.word	0x0800344f
 8002e98:	08003483 	.word	0x08003483
 8002e9c:	080034b7 	.word	0x080034b7
 8002ea0:	080034e9 	.word	0x080034e9
 8002ea4:	08003513 	.word	0x08003513
 8002ea8:	080035ef 	.word	0x080035ef
 8002eac:	08003657 	.word	0x08003657
 8002eb0:	0800367f 	.word	0x0800367f
 8002eb4:	0800323d 	.word	0x0800323d
 8002eb8:	08003265 	.word	0x08003265
 8002ebc:	080032d3 	.word	0x080032d3
 8002ec0:	0800330f 	.word	0x0800330f
 8002ec4:	08003347 	.word	0x08003347
 8002ec8:	0800337f 	.word	0x0800337f
 8002ecc:	080033bb 	.word	0x080033bb
 8002ed0:	080033f7 	.word	0x080033f7
 8002ed4:	08003433 	.word	0x08003433
 8002ed8:	0800346b 	.word	0x0800346b
 8002edc:	08003493 	.word	0x08003493
 8002ee0:	080034cd 	.word	0x080034cd
 8002ee4:	080034f9 	.word	0x080034f9
 8002ee8:	080035ad 	.word	0x080035ad
 8002eec:	0800362f 	.word	0x0800362f
 8002ef0:	080036e9 	.word	0x080036e9
 8002ef4:	080036e9 	.word	0x080036e9
 8002ef8:	080036e9 	.word	0x080036e9
 8002efc:	080036e9 	.word	0x080036e9
 8002f00:	080036e9 	.word	0x080036e9
 8002f04:	080036e9 	.word	0x080036e9
 8002f08:	080036e9 	.word	0x080036e9
 8002f0c:	080036e9 	.word	0x080036e9
 8002f10:	080036e9 	.word	0x080036e9
 8002f14:	080036e9 	.word	0x080036e9
 8002f18:	080036e9 	.word	0x080036e9
 8002f1c:	080036e9 	.word	0x080036e9
 8002f20:	080036e9 	.word	0x080036e9
 8002f24:	080036e9 	.word	0x080036e9
 8002f28:	080036e9 	.word	0x080036e9
 8002f2c:	080036e9 	.word	0x080036e9
 8002f30:	080036e9 	.word	0x080036e9
 8002f34:	080036e9 	.word	0x080036e9
 8002f38:	080036e9 	.word	0x080036e9
 8002f3c:	080036e9 	.word	0x080036e9
 8002f40:	080036e9 	.word	0x080036e9
 8002f44:	080036e9 	.word	0x080036e9
 8002f48:	080036e9 	.word	0x080036e9
 8002f4c:	080036e9 	.word	0x080036e9
 8002f50:	080036e9 	.word	0x080036e9
 8002f54:	080036e9 	.word	0x080036e9
 8002f58:	080036e9 	.word	0x080036e9
 8002f5c:	080036e9 	.word	0x080036e9
 8002f60:	080036e9 	.word	0x080036e9
 8002f64:	080036e9 	.word	0x080036e9
 8002f68:	080036e9 	.word	0x080036e9
 8002f6c:	080036e9 	.word	0x080036e9
 8002f70:	080036e9 	.word	0x080036e9
 8002f74:	080036e9 	.word	0x080036e9
 8002f78:	080036e9 	.word	0x080036e9
 8002f7c:	080036e9 	.word	0x080036e9
 8002f80:	080036e9 	.word	0x080036e9
 8002f84:	080036e9 	.word	0x080036e9
 8002f88:	080036e9 	.word	0x080036e9
 8002f8c:	080036e9 	.word	0x080036e9
 8002f90:	080036e9 	.word	0x080036e9
 8002f94:	080036e9 	.word	0x080036e9
 8002f98:	080036e9 	.word	0x080036e9
 8002f9c:	080036e9 	.word	0x080036e9
 8002fa0:	080036e9 	.word	0x080036e9
 8002fa4:	080036e9 	.word	0x080036e9
 8002fa8:	080036e9 	.word	0x080036e9
 8002fac:	080036e9 	.word	0x080036e9
 8002fb0:	080036e9 	.word	0x080036e9
 8002fb4:	080036e9 	.word	0x080036e9
 8002fb8:	080036e9 	.word	0x080036e9
 8002fbc:	080036e9 	.word	0x080036e9
 8002fc0:	080036e9 	.word	0x080036e9
 8002fc4:	080036e9 	.word	0x080036e9
 8002fc8:	080036e9 	.word	0x080036e9
 8002fcc:	080036e9 	.word	0x080036e9
 8002fd0:	080036e9 	.word	0x080036e9
 8002fd4:	080036e9 	.word	0x080036e9
 8002fd8:	080036e9 	.word	0x080036e9
 8002fdc:	080036e9 	.word	0x080036e9
 8002fe0:	080036e9 	.word	0x080036e9
 8002fe4:	080036e9 	.word	0x080036e9
 8002fe8:	080036e9 	.word	0x080036e9
 8002fec:	080036e9 	.word	0x080036e9
 8002ff0:	080036e9 	.word	0x080036e9
 8002ff4:	080036e9 	.word	0x080036e9
 8002ff8:	080036e9 	.word	0x080036e9
 8002ffc:	080036e9 	.word	0x080036e9
 8003000:	080036e9 	.word	0x080036e9
 8003004:	080036e9 	.word	0x080036e9
 8003008:	080036e9 	.word	0x080036e9
 800300c:	080036e9 	.word	0x080036e9
 8003010:	080036e9 	.word	0x080036e9
 8003014:	080036e9 	.word	0x080036e9
 8003018:	080036e9 	.word	0x080036e9
 800301c:	080036e9 	.word	0x080036e9
 8003020:	080036e9 	.word	0x080036e9
 8003024:	080036e9 	.word	0x080036e9
 8003028:	080036e9 	.word	0x080036e9
 800302c:	080036e9 	.word	0x080036e9
 8003030:	080036e9 	.word	0x080036e9
 8003034:	080036e9 	.word	0x080036e9
 8003038:	080036e9 	.word	0x080036e9
 800303c:	080036e9 	.word	0x080036e9
 8003040:	080036e9 	.word	0x080036e9
 8003044:	080036e9 	.word	0x080036e9
 8003048:	080036e9 	.word	0x080036e9
 800304c:	080036e9 	.word	0x080036e9
 8003050:	080036e9 	.word	0x080036e9
 8003054:	080036e9 	.word	0x080036e9
 8003058:	080036e9 	.word	0x080036e9
 800305c:	080036e9 	.word	0x080036e9
 8003060:	080036e9 	.word	0x080036e9
 8003064:	080036e9 	.word	0x080036e9
 8003068:	080036e9 	.word	0x080036e9
 800306c:	080036e9 	.word	0x080036e9
 8003070:	080036e9 	.word	0x080036e9
 8003074:	080036e9 	.word	0x080036e9
 8003078:	080036e9 	.word	0x080036e9
 800307c:	080036e9 	.word	0x080036e9
 8003080:	080036e9 	.word	0x080036e9
 8003084:	080036e9 	.word	0x080036e9
 8003088:	080036e9 	.word	0x080036e9
 800308c:	080036e9 	.word	0x080036e9
 8003090:	080036e9 	.word	0x080036e9
 8003094:	080036e9 	.word	0x080036e9
 8003098:	080036e9 	.word	0x080036e9
 800309c:	080036e9 	.word	0x080036e9
 80030a0:	080036e9 	.word	0x080036e9
 80030a4:	080036e9 	.word	0x080036e9
 80030a8:	080036e9 	.word	0x080036e9
 80030ac:	080036e9 	.word	0x080036e9
 80030b0:	080036e9 	.word	0x080036e9
 80030b4:	080036e9 	.word	0x080036e9
 80030b8:	080036e9 	.word	0x080036e9
 80030bc:	080036e9 	.word	0x080036e9
 80030c0:	080036e9 	.word	0x080036e9
 80030c4:	080036e9 	.word	0x080036e9
 80030c8:	080036e9 	.word	0x080036e9
 80030cc:	080036e9 	.word	0x080036e9
 80030d0:	080036e9 	.word	0x080036e9
 80030d4:	080036e9 	.word	0x080036e9
 80030d8:	080036e9 	.word	0x080036e9
 80030dc:	080036e9 	.word	0x080036e9
 80030e0:	080036e9 	.word	0x080036e9
 80030e4:	080036e9 	.word	0x080036e9
 80030e8:	080036e9 	.word	0x080036e9
 80030ec:	080036e9 	.word	0x080036e9
 80030f0:	080036e9 	.word	0x080036e9
 80030f4:	080036e9 	.word	0x080036e9
 80030f8:	080036e9 	.word	0x080036e9
 80030fc:	080036e9 	.word	0x080036e9
 8003100:	080036e9 	.word	0x080036e9
 8003104:	080036e9 	.word	0x080036e9
 8003108:	080036e9 	.word	0x080036e9
 800310c:	080036e9 	.word	0x080036e9
 8003110:	080036e9 	.word	0x080036e9
 8003114:	080036e9 	.word	0x080036e9
 8003118:	080036e9 	.word	0x080036e9
 800311c:	080036e9 	.word	0x080036e9
 8003120:	080036e9 	.word	0x080036e9
 8003124:	080036e9 	.word	0x080036e9
 8003128:	080036e9 	.word	0x080036e9
 800312c:	080036e9 	.word	0x080036e9
 8003130:	080036bb 	.word	0x080036bb
 8003134:	080036e9 	.word	0x080036e9
 8003138:	080036e9 	.word	0x080036e9
 800313c:	080036e9 	.word	0x080036e9
 8003140:	080036e9 	.word	0x080036e9
 8003144:	080036e9 	.word	0x080036e9
 8003148:	080036e9 	.word	0x080036e9
 800314c:	080036e9 	.word	0x080036e9
 8003150:	080036e9 	.word	0x080036e9
 8003154:	080036e9 	.word	0x080036e9
 8003158:	080036e9 	.word	0x080036e9
 800315c:	080036e9 	.word	0x080036e9
 8003160:	080036e9 	.word	0x080036e9
 8003164:	080036e9 	.word	0x080036e9
 8003168:	080036e9 	.word	0x080036e9
 800316c:	080036e9 	.word	0x080036e9
 8003170:	080036c1 	.word	0x080036c1
 8003174:	080036e9 	.word	0x080036e9
 8003178:	080036e9 	.word	0x080036e9
 800317c:	080036e9 	.word	0x080036e9
 8003180:	080036e9 	.word	0x080036e9
 8003184:	080036e9 	.word	0x080036e9
 8003188:	080036e9 	.word	0x080036e9
 800318c:	080036e9 	.word	0x080036e9
 8003190:	080036e9 	.word	0x080036e9
 8003194:	080036e9 	.word	0x080036e9
 8003198:	080036e9 	.word	0x080036e9
 800319c:	080036e9 	.word	0x080036e9
 80031a0:	080036e9 	.word	0x080036e9
 80031a4:	080036e9 	.word	0x080036e9
 80031a8:	080036e9 	.word	0x080036e9
 80031ac:	080036e9 	.word	0x080036e9
 80031b0:	080036cf 	.word	0x080036cf
 80031b4:	080036a7 	.word	0x080036a7
 80031b8:	080036e9 	.word	0x080036e9
 80031bc:	080036e9 	.word	0x080036e9
 80031c0:	080036e9 	.word	0x080036e9
 80031c4:	080036e9 	.word	0x080036e9
 80031c8:	080036e9 	.word	0x080036e9
 80031cc:	080036e9 	.word	0x080036e9
 80031d0:	080036e9 	.word	0x080036e9
 80031d4:	080036e9 	.word	0x080036e9
 80031d8:	080036e9 	.word	0x080036e9
 80031dc:	080036e9 	.word	0x080036e9
 80031e0:	080036e9 	.word	0x080036e9
 80031e4:	080036e9 	.word	0x080036e9
 80031e8:	080036e9 	.word	0x080036e9
 80031ec:	080036e9 	.word	0x080036e9
 80031f0:	080036dd 	.word	0x080036dd
 80031f4:	08003693 	.word	0x08003693
 80031f8:	080036e9 	.word	0x080036e9
 80031fc:	080036e9 	.word	0x080036e9
 8003200:	080036e9 	.word	0x080036e9
 8003204:	080036e9 	.word	0x080036e9
 8003208:	080036e9 	.word	0x080036e9
 800320c:	080036e9 	.word	0x080036e9
 8003210:	080036e9 	.word	0x080036e9
 8003214:	080036e9 	.word	0x080036e9
 8003218:	080036e9 	.word	0x080036e9
 800321c:	080036e9 	.word	0x080036e9
 8003220:	080036e9 	.word	0x080036e9
 8003224:	080036e9 	.word	0x080036e9
 8003228:	080036e9 	.word	0x080036e9
 800322c:	080036e9 	.word	0x080036e9
 8003230:	080036e3 	.word	0x080036e3
 8003234:	24001a9c 	.word	0x24001a9c
 8003238:	24001e3c 	.word	0x24001e3c
	case 0x10: {
		printf("SDN1 ON\n");
 800323c:	48b8      	ldr	r0, [pc, #736]	; (8003520 <HAL_UART_RxCpltCallback+0x6d4>)
 800323e:	f017 fc73 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[0].gpio, gpios[0].pin, GPIO_PIN_SET);
 8003242:	4bb8      	ldr	r3, [pc, #736]	; (8003524 <HAL_UART_RxCpltCallback+0x6d8>)
 8003244:	2104      	movs	r1, #4
 8003246:	2201      	movs	r2, #1
 8003248:	4618      	mov	r0, r3
 800324a:	f008 fbf1 	bl	800ba30 <HAL_GPIO_WritePin>
		break;
 800324e:	e256      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x00: {
		printf("SDN1 OFF\n");
 8003250:	48b5      	ldr	r0, [pc, #724]	; (8003528 <HAL_UART_RxCpltCallback+0x6dc>)
 8003252:	f017 fc69 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[0].gpio, gpios[0].pin, GPIO_PIN_RESET);
 8003256:	4bb3      	ldr	r3, [pc, #716]	; (8003524 <HAL_UART_RxCpltCallback+0x6d8>)
 8003258:	2104      	movs	r1, #4
 800325a:	2200      	movs	r2, #0
 800325c:	4618      	mov	r0, r3
 800325e:	f008 fbe7 	bl	800ba30 <HAL_GPIO_WritePin>
		break;
 8003262:	e24c      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x11: {
		printf("SYS ON PB5\n");
 8003264:	48b1      	ldr	r0, [pc, #708]	; (800352c <HAL_UART_RxCpltCallback+0x6e0>)
 8003266:	f017 fc5f 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[1].gpio, gpios[1].pin, GPIO_PIN_SET);
 800326a:	4bae      	ldr	r3, [pc, #696]	; (8003524 <HAL_UART_RxCpltCallback+0x6d8>)
 800326c:	2120      	movs	r1, #32
 800326e:	2201      	movs	r2, #1
 8003270:	4618      	mov	r0, r3
 8003272:	f008 fbdd 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_2v5, 1);
 8003276:	2101      	movs	r1, #1
 8003278:	2008      	movs	r0, #8
 800327a:	f002 fd1f 	bl	8005cbc <set_rail_monitor_enable>
		break;
 800327e:	e23e      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x01: {
		printf("SYS OFF PB5\n");
 8003280:	48ab      	ldr	r0, [pc, #684]	; (8003530 <HAL_UART_RxCpltCallback+0x6e4>)
 8003282:	f017 fc51 	bl	801ab28 <puts>

		// Turning off all voltage enables (including high voltages) in order from highest to lowest, including SYS_ON
		for (int i = 8; i > 0; i--) {
 8003286:	2308      	movs	r3, #8
 8003288:	617b      	str	r3, [r7, #20]
 800328a:	e00f      	b.n	80032ac <HAL_UART_RxCpltCallback+0x460>
			HAL_GPIO_WritePin(gpios[i].gpio, gpios[i].pin, GPIO_PIN_RESET);
 800328c:	4aa9      	ldr	r2, [pc, #676]	; (8003534 <HAL_UART_RxCpltCallback+0x6e8>)
 800328e:	697b      	ldr	r3, [r7, #20]
 8003290:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8003294:	4aa7      	ldr	r2, [pc, #668]	; (8003534 <HAL_UART_RxCpltCallback+0x6e8>)
 8003296:	697b      	ldr	r3, [r7, #20]
 8003298:	00db      	lsls	r3, r3, #3
 800329a:	4413      	add	r3, r2
 800329c:	889b      	ldrh	r3, [r3, #4]
 800329e:	2200      	movs	r2, #0
 80032a0:	4619      	mov	r1, r3
 80032a2:	f008 fbc5 	bl	800ba30 <HAL_GPIO_WritePin>
		for (int i = 8; i > 0; i--) {
 80032a6:	697b      	ldr	r3, [r7, #20]
 80032a8:	3b01      	subs	r3, #1
 80032aa:	617b      	str	r3, [r7, #20]
 80032ac:	697b      	ldr	r3, [r7, #20]
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	dcec      	bgt.n	800328c <HAL_UART_RxCpltCallback+0x440>
		}

		for (int i = RAIL_n800v; i >= RAIL_2v5; i--) {
 80032b2:	2310      	movs	r3, #16
 80032b4:	613b      	str	r3, [r7, #16]
 80032b6:	e008      	b.n	80032ca <HAL_UART_RxCpltCallback+0x47e>
			set_rail_monitor_enable(i, 0);
 80032b8:	693b      	ldr	r3, [r7, #16]
 80032ba:	b2db      	uxtb	r3, r3
 80032bc:	2100      	movs	r1, #0
 80032be:	4618      	mov	r0, r3
 80032c0:	f002 fcfc 	bl	8005cbc <set_rail_monitor_enable>
		for (int i = RAIL_n800v; i >= RAIL_2v5; i--) {
 80032c4:	693b      	ldr	r3, [r7, #16]
 80032c6:	3b01      	subs	r3, #1
 80032c8:	613b      	str	r3, [r7, #16]
 80032ca:	693b      	ldr	r3, [r7, #16]
 80032cc:	2b07      	cmp	r3, #7
 80032ce:	dcf3      	bgt.n	80032b8 <HAL_UART_RxCpltCallback+0x46c>
		}

		break;
 80032d0:	e215      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x12: {
		printf("3v3 ON PC10\n");
 80032d2:	4899      	ldr	r0, [pc, #612]	; (8003538 <HAL_UART_RxCpltCallback+0x6ec>)
 80032d4:	f017 fc28 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[2].gpio, gpios[2].pin, GPIO_PIN_SET);
 80032d8:	4b98      	ldr	r3, [pc, #608]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 80032da:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80032de:	2201      	movs	r2, #1
 80032e0:	4618      	mov	r0, r3
 80032e2:	f008 fba5 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_3v3, 1);
 80032e6:	2101      	movs	r1, #1
 80032e8:	2009      	movs	r0, #9
 80032ea:	f002 fce7 	bl	8005cbc <set_rail_monitor_enable>

		break;
 80032ee:	e206      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x02: {
		printf("3v3 OFF PC10\n");
 80032f0:	4893      	ldr	r0, [pc, #588]	; (8003540 <HAL_UART_RxCpltCallback+0x6f4>)
 80032f2:	f017 fc19 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[2].gpio, gpios[2].pin, GPIO_PIN_RESET);
 80032f6:	4b91      	ldr	r3, [pc, #580]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 80032f8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80032fc:	2200      	movs	r2, #0
 80032fe:	4618      	mov	r0, r3
 8003300:	f008 fb96 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_3v3, 0);
 8003304:	2100      	movs	r1, #0
 8003306:	2009      	movs	r0, #9
 8003308:	f002 fcd8 	bl	8005cbc <set_rail_monitor_enable>
		break;
 800330c:	e1f7      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x13: {
		printf("5v ON PC7\n");
 800330e:	488d      	ldr	r0, [pc, #564]	; (8003544 <HAL_UART_RxCpltCallback+0x6f8>)
 8003310:	f017 fc0a 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[3].gpio, gpios[3].pin, GPIO_PIN_SET);
 8003314:	4b89      	ldr	r3, [pc, #548]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 8003316:	2180      	movs	r1, #128	; 0x80
 8003318:	2201      	movs	r2, #1
 800331a:	4618      	mov	r0, r3
 800331c:	f008 fb88 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_5v, 1);
 8003320:	2101      	movs	r1, #1
 8003322:	200a      	movs	r0, #10
 8003324:	f002 fcca 	bl	8005cbc <set_rail_monitor_enable>

		break;
 8003328:	e1e9      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x03: {
		printf("5v OFF PC7\n");
 800332a:	4887      	ldr	r0, [pc, #540]	; (8003548 <HAL_UART_RxCpltCallback+0x6fc>)
 800332c:	f017 fbfc 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[3].gpio, gpios[3].pin, GPIO_PIN_RESET);
 8003330:	4b82      	ldr	r3, [pc, #520]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 8003332:	2180      	movs	r1, #128	; 0x80
 8003334:	2200      	movs	r2, #0
 8003336:	4618      	mov	r0, r3
 8003338:	f008 fb7a 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_5v, 0);
 800333c:	2100      	movs	r1, #0
 800333e:	200a      	movs	r0, #10
 8003340:	f002 fcbc 	bl	8005cbc <set_rail_monitor_enable>
		break;
 8003344:	e1db      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x14: {
		printf("n3v3 ON PC6\n");
 8003346:	4881      	ldr	r0, [pc, #516]	; (800354c <HAL_UART_RxCpltCallback+0x700>)
 8003348:	f017 fbee 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[4].gpio, gpios[4].pin, GPIO_PIN_SET);
 800334c:	4b7b      	ldr	r3, [pc, #492]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 800334e:	2140      	movs	r1, #64	; 0x40
 8003350:	2201      	movs	r2, #1
 8003352:	4618      	mov	r0, r3
 8003354:	f008 fb6c 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_n3v3, 1);
 8003358:	2101      	movs	r1, #1
 800335a:	200b      	movs	r0, #11
 800335c:	f002 fcae 	bl	8005cbc <set_rail_monitor_enable>

		break;
 8003360:	e1cd      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x04: {
		printf("n3v3 OFF PC6\n");
 8003362:	487b      	ldr	r0, [pc, #492]	; (8003550 <HAL_UART_RxCpltCallback+0x704>)
 8003364:	f017 fbe0 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[4].gpio, gpios[4].pin, GPIO_PIN_RESET);
 8003368:	4b74      	ldr	r3, [pc, #464]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 800336a:	2140      	movs	r1, #64	; 0x40
 800336c:	2200      	movs	r2, #0
 800336e:	4618      	mov	r0, r3
 8003370:	f008 fb5e 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_n3v3, 0);
 8003374:	2100      	movs	r1, #0
 8003376:	200b      	movs	r0, #11
 8003378:	f002 fca0 	bl	8005cbc <set_rail_monitor_enable>
		break;
 800337c:	e1bf      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x15: {
		printf("n5v ON PC8\n");
 800337e:	4875      	ldr	r0, [pc, #468]	; (8003554 <HAL_UART_RxCpltCallback+0x708>)
 8003380:	f017 fbd2 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[5].gpio, gpios[5].pin, GPIO_PIN_SET);
 8003384:	4b6d      	ldr	r3, [pc, #436]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 8003386:	f44f 7180 	mov.w	r1, #256	; 0x100
 800338a:	2201      	movs	r2, #1
 800338c:	4618      	mov	r0, r3
 800338e:	f008 fb4f 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_n5v, 1);
 8003392:	2101      	movs	r1, #1
 8003394:	200c      	movs	r0, #12
 8003396:	f002 fc91 	bl	8005cbc <set_rail_monitor_enable>

		break;
 800339a:	e1b0      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x05: {
		printf("n5v OFF PC8\n");
 800339c:	486e      	ldr	r0, [pc, #440]	; (8003558 <HAL_UART_RxCpltCallback+0x70c>)
 800339e:	f017 fbc3 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[5].gpio, gpios[5].pin, GPIO_PIN_RESET);
 80033a2:	4b66      	ldr	r3, [pc, #408]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 80033a4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80033a8:	2200      	movs	r2, #0
 80033aa:	4618      	mov	r0, r3
 80033ac:	f008 fb40 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_n5v, 0);
 80033b0:	2100      	movs	r1, #0
 80033b2:	200c      	movs	r0, #12
 80033b4:	f002 fc82 	bl	8005cbc <set_rail_monitor_enable>
		break;
 80033b8:	e1a1      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x16: {
		printf("15v ON PC9\n");
 80033ba:	4868      	ldr	r0, [pc, #416]	; (800355c <HAL_UART_RxCpltCallback+0x710>)
 80033bc:	f017 fbb4 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[6].gpio, gpios[6].pin, GPIO_PIN_SET);
 80033c0:	4b5e      	ldr	r3, [pc, #376]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 80033c2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80033c6:	2201      	movs	r2, #1
 80033c8:	4618      	mov	r0, r3
 80033ca:	f008 fb31 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_15v, 1);
 80033ce:	2101      	movs	r1, #1
 80033d0:	200d      	movs	r0, #13
 80033d2:	f002 fc73 	bl	8005cbc <set_rail_monitor_enable>

		break;
 80033d6:	e192      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x06: {
		printf("15v OFF PC9\n");
 80033d8:	4861      	ldr	r0, [pc, #388]	; (8003560 <HAL_UART_RxCpltCallback+0x714>)
 80033da:	f017 fba5 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[6].gpio, gpios[6].pin, GPIO_PIN_RESET);
 80033de:	4b57      	ldr	r3, [pc, #348]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 80033e0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80033e4:	2200      	movs	r2, #0
 80033e6:	4618      	mov	r0, r3
 80033e8:	f008 fb22 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_15v, 0);
 80033ec:	2100      	movs	r1, #0
 80033ee:	200d      	movs	r0, #13
 80033f0:	f002 fc64 	bl	8005cbc <set_rail_monitor_enable>
		break;
 80033f4:	e183      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x17: {
		printf("n200v ON PC13\n");
 80033f6:	485b      	ldr	r0, [pc, #364]	; (8003564 <HAL_UART_RxCpltCallback+0x718>)
 80033f8:	f017 fb96 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[7].gpio, gpios[7].pin, GPIO_PIN_SET);
 80033fc:	4b4f      	ldr	r3, [pc, #316]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 80033fe:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8003402:	2201      	movs	r2, #1
 8003404:	4618      	mov	r0, r3
 8003406:	f008 fb13 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_n200v, 1);
 800340a:	2101      	movs	r1, #1
 800340c:	200f      	movs	r0, #15
 800340e:	f002 fc55 	bl	8005cbc <set_rail_monitor_enable>

		break;
 8003412:	e174      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x07: {
		printf("n200v OFF PC13\n");
 8003414:	4854      	ldr	r0, [pc, #336]	; (8003568 <HAL_UART_RxCpltCallback+0x71c>)
 8003416:	f017 fb87 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[7].gpio, gpios[7].pin, GPIO_PIN_RESET);
 800341a:	4b48      	ldr	r3, [pc, #288]	; (800353c <HAL_UART_RxCpltCallback+0x6f0>)
 800341c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8003420:	2200      	movs	r2, #0
 8003422:	4618      	mov	r0, r3
 8003424:	f008 fb04 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_n200v, 0);
 8003428:	2100      	movs	r1, #0
 800342a:	200f      	movs	r0, #15
 800342c:	f002 fc46 	bl	8005cbc <set_rail_monitor_enable>
		break;
 8003430:	e165      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x18: {
		printf("800v ON PB6\n");
 8003432:	484e      	ldr	r0, [pc, #312]	; (800356c <HAL_UART_RxCpltCallback+0x720>)
 8003434:	f017 fb78 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[8].gpio, gpios[8].pin, GPIO_PIN_SET);
 8003438:	4b3a      	ldr	r3, [pc, #232]	; (8003524 <HAL_UART_RxCpltCallback+0x6d8>)
 800343a:	2140      	movs	r1, #64	; 0x40
 800343c:	2201      	movs	r2, #1
 800343e:	4618      	mov	r0, r3
 8003440:	f008 faf6 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_n800v, 1);
 8003444:	2101      	movs	r1, #1
 8003446:	2010      	movs	r0, #16
 8003448:	f002 fc38 	bl	8005cbc <set_rail_monitor_enable>

		break;
 800344c:	e157      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x08: {
		printf("800v OFF PB6\n");
 800344e:	4848      	ldr	r0, [pc, #288]	; (8003570 <HAL_UART_RxCpltCallback+0x724>)
 8003450:	f017 fb6a 	bl	801ab28 <puts>
		HAL_GPIO_WritePin(gpios[8].gpio, gpios[8].pin, GPIO_PIN_RESET);
 8003454:	4b33      	ldr	r3, [pc, #204]	; (8003524 <HAL_UART_RxCpltCallback+0x6d8>)
 8003456:	2140      	movs	r1, #64	; 0x40
 8003458:	2200      	movs	r2, #0
 800345a:	4618      	mov	r0, r3
 800345c:	f008 fae8 	bl	800ba30 <HAL_GPIO_WritePin>
		set_rail_monitor_enable(RAIL_n800v, 0);
 8003460:	2100      	movs	r1, #0
 8003462:	2010      	movs	r0, #16
 8003464:	f002 fc2a 	bl	8005cbc <set_rail_monitor_enable>
		break;
 8003468:	e149      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x19: {
		printf("AUTOSWEEP ON\n");
 800346a:	4842      	ldr	r0, [pc, #264]	; (8003574 <HAL_UART_RxCpltCallback+0x728>)
 800346c:	f017 fb5c 	bl	801ab28 <puts>
		HAL_DAC_Start_DMA(&hdac1, DAC_CHANNEL_1, DAC_OUT, 32, DAC_ALIGN_12B_R);
 8003470:	2300      	movs	r3, #0
 8003472:	9300      	str	r3, [sp, #0]
 8003474:	2320      	movs	r3, #32
 8003476:	4a40      	ldr	r2, [pc, #256]	; (8003578 <HAL_UART_RxCpltCallback+0x72c>)
 8003478:	2100      	movs	r1, #0
 800347a:	4840      	ldr	r0, [pc, #256]	; (800357c <HAL_UART_RxCpltCallback+0x730>)
 800347c:	f004 fc54 	bl	8007d28 <HAL_DAC_Start_DMA>
		break;
 8003480:	e13d      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x09: {
		printf("AUTOSWEEP OFF\n");
 8003482:	483f      	ldr	r0, [pc, #252]	; (8003580 <HAL_UART_RxCpltCallback+0x734>)
 8003484:	f017 fb50 	bl	801ab28 <puts>
		HAL_DAC_Stop_DMA(&hdac1, DAC_CHANNEL_1);
 8003488:	2100      	movs	r1, #0
 800348a:	483c      	ldr	r0, [pc, #240]	; (800357c <HAL_UART_RxCpltCallback+0x730>)
 800348c:	f004 fd0c 	bl	8007ea8 <HAL_DAC_Stop_DMA>
		break;
 8003490:	e135      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x1A: {
		printf("ERPA ON\n");
 8003492:	483c      	ldr	r0, [pc, #240]	; (8003584 <HAL_UART_RxCpltCallback+0x738>)
 8003494:	f017 fb48 	bl	801ab28 <puts>
		osEventFlagsSet(packet_event_flags, ERPA_FLAG_ID);
 8003498:	4b3b      	ldr	r3, [pc, #236]	; (8003588 <HAL_UART_RxCpltCallback+0x73c>)
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	2102      	movs	r1, #2
 800349e:	4618      	mov	r0, r3
 80034a0:	f014 f900 	bl	80176a4 <osEventFlagsSet>
		TIM2->CCR4 = 312;
 80034a4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80034a8:	f44f 729c 	mov.w	r2, #312	; 0x138
 80034ac:	641a      	str	r2, [r3, #64]	; 0x40
		ERPA_ENABLED = 1;
 80034ae:	4b37      	ldr	r3, [pc, #220]	; (800358c <HAL_UART_RxCpltCallback+0x740>)
 80034b0:	2201      	movs	r2, #1
 80034b2:	701a      	strb	r2, [r3, #0]

		break;
 80034b4:	e123      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x0A: {
		printf("ERPA OFF\n");
 80034b6:	4836      	ldr	r0, [pc, #216]	; (8003590 <HAL_UART_RxCpltCallback+0x744>)
 80034b8:	f017 fb36 	bl	801ab28 <puts>
		ERPA_ENABLED = 0;
 80034bc:	4b33      	ldr	r3, [pc, #204]	; (800358c <HAL_UART_RxCpltCallback+0x740>)
 80034be:	2200      	movs	r2, #0
 80034c0:	701a      	strb	r2, [r3, #0]
		TIM2->CCR4 = 0;
 80034c2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80034c6:	2200      	movs	r2, #0
 80034c8:	641a      	str	r2, [r3, #64]	; 0x40
		break;
 80034ca:	e118      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x1B: {
		printf("PMT ON\n");
 80034cc:	4831      	ldr	r0, [pc, #196]	; (8003594 <HAL_UART_RxCpltCallback+0x748>)
 80034ce:	f017 fb2b 	bl	801ab28 <puts>
		HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);
 80034d2:	2100      	movs	r1, #0
 80034d4:	4830      	ldr	r0, [pc, #192]	; (8003598 <HAL_UART_RxCpltCallback+0x74c>)
 80034d6:	f00f fdb5 	bl	8013044 <HAL_TIM_OC_Start_IT>
		osEventFlagsSet(packet_event_flags, PMT_FLAG_ID);
 80034da:	4b2b      	ldr	r3, [pc, #172]	; (8003588 <HAL_UART_RxCpltCallback+0x73c>)
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	2101      	movs	r1, #1
 80034e0:	4618      	mov	r0, r3
 80034e2:	f014 f8df 	bl	80176a4 <osEventFlagsSet>
		break;
 80034e6:	e10a      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x0B: {
		printf("PMT OFF\n");
 80034e8:	482c      	ldr	r0, [pc, #176]	; (800359c <HAL_UART_RxCpltCallback+0x750>)
 80034ea:	f017 fb1d 	bl	801ab28 <puts>
		HAL_TIM_OC_Stop_IT(&htim1, TIM_CHANNEL_1);
 80034ee:	2100      	movs	r1, #0
 80034f0:	4829      	ldr	r0, [pc, #164]	; (8003598 <HAL_UART_RxCpltCallback+0x74c>)
 80034f2:	f00f ff01 	bl	80132f8 <HAL_TIM_OC_Stop_IT>
		break;
 80034f6:	e102      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x1C: {
		printf("HK ON \n");
 80034f8:	4829      	ldr	r0, [pc, #164]	; (80035a0 <HAL_UART_RxCpltCallback+0x754>)
 80034fa:	f017 fb15 	bl	801ab28 <puts>
		osEventFlagsSet(packet_event_flags, HK_FLAG_ID);
 80034fe:	4b22      	ldr	r3, [pc, #136]	; (8003588 <HAL_UART_RxCpltCallback+0x73c>)
 8003500:	681b      	ldr	r3, [r3, #0]
 8003502:	2104      	movs	r1, #4
 8003504:	4618      	mov	r0, r3
 8003506:	f014 f8cd 	bl	80176a4 <osEventFlagsSet>
		HK_ENABLED = 1;
 800350a:	4b26      	ldr	r3, [pc, #152]	; (80035a4 <HAL_UART_RxCpltCallback+0x758>)
 800350c:	2201      	movs	r2, #1
 800350e:	701a      	strb	r2, [r3, #0]
		break;
 8003510:	e0f5      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0x0C: {
		printf("HK OFF\n");
 8003512:	4825      	ldr	r0, [pc, #148]	; (80035a8 <HAL_UART_RxCpltCallback+0x75c>)
 8003514:	f017 fb08 	bl	801ab28 <puts>
		HK_ENABLED = 0;
 8003518:	4b22      	ldr	r3, [pc, #136]	; (80035a4 <HAL_UART_RxCpltCallback+0x758>)
 800351a:	2200      	movs	r2, #0
 800351c:	701a      	strb	r2, [r3, #0]
		break;
 800351e:	e0ee      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
 8003520:	0801b4f0 	.word	0x0801b4f0
 8003524:	58020400 	.word	0x58020400
 8003528:	0801b4f8 	.word	0x0801b4f8
 800352c:	0801b504 	.word	0x0801b504
 8003530:	0801b510 	.word	0x0801b510
 8003534:	0801b80c 	.word	0x0801b80c
 8003538:	0801b51c 	.word	0x0801b51c
 800353c:	58020800 	.word	0x58020800
 8003540:	0801b528 	.word	0x0801b528
 8003544:	0801b538 	.word	0x0801b538
 8003548:	0801b544 	.word	0x0801b544
 800354c:	0801b550 	.word	0x0801b550
 8003550:	0801b55c 	.word	0x0801b55c
 8003554:	0801b56c 	.word	0x0801b56c
 8003558:	0801b578 	.word	0x0801b578
 800355c:	0801b584 	.word	0x0801b584
 8003560:	0801b590 	.word	0x0801b590
 8003564:	0801b59c 	.word	0x0801b59c
 8003568:	0801b5ac 	.word	0x0801b5ac
 800356c:	0801b5bc 	.word	0x0801b5bc
 8003570:	0801b5c8 	.word	0x0801b5c8
 8003574:	0801b5d8 	.word	0x0801b5d8
 8003578:	2400003c 	.word	0x2400003c
 800357c:	24000314 	.word	0x24000314
 8003580:	0801b5e8 	.word	0x0801b5e8
 8003584:	0801b5f8 	.word	0x0801b5f8
 8003588:	24001a90 	.word	0x24001a90
 800358c:	24001add 	.word	0x24001add
 8003590:	0801b600 	.word	0x0801b600
 8003594:	0801b60c 	.word	0x0801b60c
 8003598:	24001da4 	.word	0x24001da4
 800359c:	0801b614 	.word	0x0801b614
 80035a0:	0801b61c 	.word	0x0801b61c
 80035a4:	24001adc 	.word	0x24001adc
 80035a8:	0801b624 	.word	0x0801b624
	}
	case 0x1D: {
		printf("Step Up\n");
 80035ac:	4856      	ldr	r0, [pc, #344]	; (8003708 <HAL_UART_RxCpltCallback+0x8bc>)
 80035ae:	f017 fabb 	bl	801ab28 <puts>
		if (step < 14) {
 80035b2:	4b56      	ldr	r3, [pc, #344]	; (800370c <HAL_UART_RxCpltCallback+0x8c0>)
 80035b4:	781b      	ldrb	r3, [r3, #0]
 80035b6:	b2db      	uxtb	r3, r3
 80035b8:	2b0d      	cmp	r3, #13
 80035ba:	f200 8099 	bhi.w	80036f0 <HAL_UART_RxCpltCallback+0x8a4>
			step += 2;
 80035be:	4b53      	ldr	r3, [pc, #332]	; (800370c <HAL_UART_RxCpltCallback+0x8c0>)
 80035c0:	781b      	ldrb	r3, [r3, #0]
 80035c2:	b2db      	uxtb	r3, r3
 80035c4:	3302      	adds	r3, #2
 80035c6:	b2da      	uxtb	r2, r3
 80035c8:	4b50      	ldr	r3, [pc, #320]	; (800370c <HAL_UART_RxCpltCallback+0x8c0>)
 80035ca:	701a      	strb	r2, [r3, #0]
			HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R,
 80035cc:	4b4f      	ldr	r3, [pc, #316]	; (800370c <HAL_UART_RxCpltCallback+0x8c0>)
 80035ce:	781b      	ldrb	r3, [r3, #0]
 80035d0:	b2db      	uxtb	r3, r3
 80035d2:	461a      	mov	r2, r3
 80035d4:	4b4e      	ldr	r3, [pc, #312]	; (8003710 <HAL_UART_RxCpltCallback+0x8c4>)
 80035d6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80035da:	2200      	movs	r2, #0
 80035dc:	2100      	movs	r1, #0
 80035de:	484d      	ldr	r0, [pc, #308]	; (8003714 <HAL_UART_RxCpltCallback+0x8c8>)
 80035e0:	f004 fd05 	bl	8007fee <HAL_DAC_SetValue>
					DAC_OUT[step]);
			HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 80035e4:	2100      	movs	r1, #0
 80035e6:	484b      	ldr	r0, [pc, #300]	; (8003714 <HAL_UART_RxCpltCallback+0x8c8>)
 80035e8:	f004 fb46 	bl	8007c78 <HAL_DAC_Start>
		}
		break;
 80035ec:	e080      	b.n	80036f0 <HAL_UART_RxCpltCallback+0x8a4>
	}
	case 0x0D: {
		printf("Step Down\n");
 80035ee:	484a      	ldr	r0, [pc, #296]	; (8003718 <HAL_UART_RxCpltCallback+0x8cc>)
 80035f0:	f017 fa9a 	bl	801ab28 <puts>
		if (step > 1) {
 80035f4:	4b45      	ldr	r3, [pc, #276]	; (800370c <HAL_UART_RxCpltCallback+0x8c0>)
 80035f6:	781b      	ldrb	r3, [r3, #0]
 80035f8:	b2db      	uxtb	r3, r3
 80035fa:	2b01      	cmp	r3, #1
 80035fc:	d97a      	bls.n	80036f4 <HAL_UART_RxCpltCallback+0x8a8>
			step -= 2;
 80035fe:	4b43      	ldr	r3, [pc, #268]	; (800370c <HAL_UART_RxCpltCallback+0x8c0>)
 8003600:	781b      	ldrb	r3, [r3, #0]
 8003602:	b2db      	uxtb	r3, r3
 8003604:	3b02      	subs	r3, #2
 8003606:	b2da      	uxtb	r2, r3
 8003608:	4b40      	ldr	r3, [pc, #256]	; (800370c <HAL_UART_RxCpltCallback+0x8c0>)
 800360a:	701a      	strb	r2, [r3, #0]
			HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R,
 800360c:	4b3f      	ldr	r3, [pc, #252]	; (800370c <HAL_UART_RxCpltCallback+0x8c0>)
 800360e:	781b      	ldrb	r3, [r3, #0]
 8003610:	b2db      	uxtb	r3, r3
 8003612:	461a      	mov	r2, r3
 8003614:	4b3e      	ldr	r3, [pc, #248]	; (8003710 <HAL_UART_RxCpltCallback+0x8c4>)
 8003616:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800361a:	2200      	movs	r2, #0
 800361c:	2100      	movs	r1, #0
 800361e:	483d      	ldr	r0, [pc, #244]	; (8003714 <HAL_UART_RxCpltCallback+0x8c8>)
 8003620:	f004 fce5 	bl	8007fee <HAL_DAC_SetValue>
					DAC_OUT[step]);
			HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 8003624:	2100      	movs	r1, #0
 8003626:	483b      	ldr	r0, [pc, #236]	; (8003714 <HAL_UART_RxCpltCallback+0x8c8>)
 8003628:	f004 fb26 	bl	8007c78 <HAL_DAC_Start>
		}
		break;
 800362c:	e062      	b.n	80036f4 <HAL_UART_RxCpltCallback+0x8a8>
	}
	case 0x1E: {
		printf("Factor Up\n");
 800362e:	483b      	ldr	r0, [pc, #236]	; (800371c <HAL_UART_RxCpltCallback+0x8d0>)
 8003630:	f017 fa7a 	bl	801ab28 <puts>
		if (cadence <= 50000) {
 8003634:	4b3a      	ldr	r3, [pc, #232]	; (8003720 <HAL_UART_RxCpltCallback+0x8d4>)
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	f24c 3250 	movw	r2, #50000	; 0xc350
 800363c:	4293      	cmp	r3, r2
 800363e:	d85b      	bhi.n	80036f8 <HAL_UART_RxCpltCallback+0x8ac>
			cadence *= 2;
 8003640:	4b37      	ldr	r3, [pc, #220]	; (8003720 <HAL_UART_RxCpltCallback+0x8d4>)
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	005b      	lsls	r3, r3, #1
 8003646:	4a36      	ldr	r2, [pc, #216]	; (8003720 <HAL_UART_RxCpltCallback+0x8d4>)
 8003648:	6013      	str	r3, [r2, #0]
			TIM2->ARR = cadence;
 800364a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800364e:	4b34      	ldr	r3, [pc, #208]	; (8003720 <HAL_UART_RxCpltCallback+0x8d4>)
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	62d3      	str	r3, [r2, #44]	; 0x2c
		}
		break;
 8003654:	e050      	b.n	80036f8 <HAL_UART_RxCpltCallback+0x8ac>
	}
	case 0x0E: {
		printf("Factor Down\n");
 8003656:	4833      	ldr	r0, [pc, #204]	; (8003724 <HAL_UART_RxCpltCallback+0x8d8>)
 8003658:	f017 fa66 	bl	801ab28 <puts>
		if (cadence >= 6250) {
 800365c:	4b30      	ldr	r3, [pc, #192]	; (8003720 <HAL_UART_RxCpltCallback+0x8d4>)
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	f641 0269 	movw	r2, #6249	; 0x1869
 8003664:	4293      	cmp	r3, r2
 8003666:	d949      	bls.n	80036fc <HAL_UART_RxCpltCallback+0x8b0>
			cadence /= 2;
 8003668:	4b2d      	ldr	r3, [pc, #180]	; (8003720 <HAL_UART_RxCpltCallback+0x8d4>)
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	085b      	lsrs	r3, r3, #1
 800366e:	4a2c      	ldr	r2, [pc, #176]	; (8003720 <HAL_UART_RxCpltCallback+0x8d4>)
 8003670:	6013      	str	r3, [r2, #0]
			TIM2->ARR = cadence;
 8003672:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003676:	4b2a      	ldr	r3, [pc, #168]	; (8003720 <HAL_UART_RxCpltCallback+0x8d4>)
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	62d3      	str	r3, [r2, #44]	; 0x2c
		}
		break;
 800367c:	e03e      	b.n	80036fc <HAL_UART_RxCpltCallback+0x8b0>
	}
	case 0x0F: {
		printf("Enter STOP mode\n");
 800367e:	482a      	ldr	r0, [pc, #168]	; (8003728 <HAL_UART_RxCpltCallback+0x8dc>)
 8003680:	f017 fa52 	bl	801ab28 <puts>
		osEventFlagsSet(utility_event_flags, STOP_FLAG);
 8003684:	4b29      	ldr	r3, [pc, #164]	; (800372c <HAL_UART_RxCpltCallback+0x8e0>)
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	2102      	movs	r1, #2
 800368a:	4618      	mov	r0, r3
 800368c:	f014 f80a 	bl	80176a4 <osEventFlagsSet>
		break;
 8003690:	e035      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0xE0: {
		printf("Auto Init\n");
 8003692:	4827      	ldr	r0, [pc, #156]	; (8003730 <HAL_UART_RxCpltCallback+0x8e4>)
 8003694:	f017 fa48 	bl	801ab28 <puts>
		osEventFlagsSet(utility_event_flags, AUTOINIT_FLAG);
 8003698:	4b24      	ldr	r3, [pc, #144]	; (800372c <HAL_UART_RxCpltCallback+0x8e0>)
 800369a:	681b      	ldr	r3, [r3, #0]
 800369c:	2104      	movs	r1, #4
 800369e:	4618      	mov	r0, r3
 80036a0:	f014 f800 	bl	80176a4 <osEventFlagsSet>
		break;
 80036a4:	e02b      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0xD0: {
		printf("Auto Deinit\n");
 80036a6:	4823      	ldr	r0, [pc, #140]	; (8003734 <HAL_UART_RxCpltCallback+0x8e8>)
 80036a8:	f017 fa3e 	bl	801ab28 <puts>
		osEventFlagsSet(utility_event_flags, AUTODEINIT_FLAG);
 80036ac:	4b1f      	ldr	r3, [pc, #124]	; (800372c <HAL_UART_RxCpltCallback+0x8e0>)
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	2108      	movs	r1, #8
 80036b2:	4618      	mov	r0, r3
 80036b4:	f013 fff6 	bl	80176a4 <osEventFlagsSet>
		break;
 80036b8:	e021      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0xAF: {
		sync();
 80036ba:	f000 f99f 	bl	80039fc <sync>
		break;
 80036be:	e01e      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0xBF: {
		osEventFlagsSet(mode_event_flags, SCIENCE_FLAG);
 80036c0:	4b1d      	ldr	r3, [pc, #116]	; (8003738 <HAL_UART_RxCpltCallback+0x8ec>)
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	2101      	movs	r1, #1
 80036c6:	4618      	mov	r0, r3
 80036c8:	f013 ffec 	bl	80176a4 <osEventFlagsSet>
		break;
 80036cc:	e017      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0xCF: {
		osEventFlagsSet(mode_event_flags, IDLE_FLAG);
 80036ce:	4b1a      	ldr	r3, [pc, #104]	; (8003738 <HAL_UART_RxCpltCallback+0x8ec>)
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	2102      	movs	r1, #2
 80036d4:	4618      	mov	r0, r3
 80036d6:	f013 ffe5 	bl	80176a4 <osEventFlagsSet>
		break;
 80036da:	e010      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0xDF: {
		reset_error_counters();
 80036dc:	f7fe fcf0 	bl	80020c0 <reset_error_counters>
		break;
 80036e0:	e00d      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	case 0xEF: {
#ifdef ERROR_HANDLING_ENABLED
		send_previous_error_packet();
 80036e2:	f7fe fea1 	bl	8002428 <send_previous_error_packet>
#endif
		break;
 80036e6:	e00a      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
	}
	default: {
		printf("Unknown Command\n");
 80036e8:	4814      	ldr	r0, [pc, #80]	; (800373c <HAL_UART_RxCpltCallback+0x8f0>)
 80036ea:	f017 fa1d 	bl	801ab28 <puts>
		break;
 80036ee:	e006      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
		break;
 80036f0:	bf00      	nop
 80036f2:	e004      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
		break;
 80036f4:	bf00      	nop
 80036f6:	e002      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
		break;
 80036f8:	bf00      	nop
 80036fa:	e000      	b.n	80036fe <HAL_UART_RxCpltCallback+0x8b2>
		break;
 80036fc:	bf00      	nop
	}
	}
}
 80036fe:	bf00      	nop
 8003700:	3718      	adds	r7, #24
 8003702:	46bd      	mov	sp, r7
 8003704:	bd80      	pop	{r7, pc}
 8003706:	bf00      	nop
 8003708:	0801b62c 	.word	0x0801b62c
 800370c:	24001ade 	.word	0x24001ade
 8003710:	2400003c 	.word	0x2400003c
 8003714:	24000314 	.word	0x24000314
 8003718:	0801b634 	.word	0x0801b634
 800371c:	0801b640 	.word	0x0801b640
 8003720:	240000bc 	.word	0x240000bc
 8003724:	0801b64c 	.word	0x0801b64c
 8003728:	0801b658 	.word	0x0801b658
 800372c:	24001a94 	.word	0x24001a94
 8003730:	0801b668 	.word	0x0801b668
 8003734:	0801b674 	.word	0x0801b674
 8003738:	24001a98 	.word	0x24001a98
 800373c:	0801b680 	.word	0x0801b680

08003740 <get_reset_cause>:

void get_reset_cause()
{
 8003740:	b580      	push	{r7, lr}
 8003742:	b082      	sub	sp, #8
 8003744:	af00      	add	r7, sp, #0
	ERROR_STRUCT error;

	if (__HAL_RCC_GET_FLAG(RCC_FLAG_IWDG1RST))
 8003746:	4b16      	ldr	r3, [pc, #88]	; (80037a0 <get_reset_cause+0x60>)
 8003748:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800374c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8003750:	2b00      	cmp	r3, #0
 8003752:	d009      	beq.n	8003768 <get_reset_cause+0x28>
    {
        error.category = EC_watchdog;
 8003754:	2304      	movs	r3, #4
 8003756:	703b      	strb	r3, [r7, #0]
        error.detail = ED_UNDEFINED;
 8003758:	231a      	movs	r3, #26
 800375a:	707b      	strb	r3, [r7, #1]
        handle_error(error);
 800375c:	463b      	mov	r3, r7
 800375e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8003762:	f7fe fbfb 	bl	8001f5c <handle_error>
 8003766:	e00f      	b.n	8003788 <get_reset_cause+0x48>
    }
    // Needs to come *after* checking the `RCC_FLAG_PORRST` flag in order to
    // ensure first that the reset cause is NOT a POR/PDR reset. See note
    // below.
    else if (__HAL_RCC_GET_FLAG(RCC_FLAG_BORRST))
 8003768:	4b0d      	ldr	r3, [pc, #52]	; (80037a0 <get_reset_cause+0x60>)
 800376a:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800376e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003772:	2b00      	cmp	r3, #0
 8003774:	d008      	beq.n	8003788 <get_reset_cause+0x48>
    {
        error.category = EC_brownout;
 8003776:	2303      	movs	r3, #3
 8003778:	703b      	strb	r3, [r7, #0]
        error.detail = ED_UNDEFINED;
 800377a:	231a      	movs	r3, #26
 800377c:	707b      	strb	r3, [r7, #1]
        handle_error(error);
 800377e:	463b      	mov	r3, r7
 8003780:	e893 0003 	ldmia.w	r3, {r0, r1}
 8003784:	f7fe fbea 	bl	8001f5c <handle_error>
    }

    // Clear all the reset flags or else they will remain set during future
    // resets until system power is fully removed.
    __HAL_RCC_CLEAR_RESET_FLAGS();
 8003788:	4b05      	ldr	r3, [pc, #20]	; (80037a0 <get_reset_cause+0x60>)
 800378a:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800378e:	4a04      	ldr	r2, [pc, #16]	; (80037a0 <get_reset_cause+0x60>)
 8003790:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003794:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
}
 8003798:	bf00      	nop
 800379a:	3708      	adds	r7, #8
 800379c:	46bd      	mov	sp, r7
 800379e:	bd80      	pop	{r7, pc}
 80037a0:	58024400 	.word	0x58024400

080037a4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80037a4:	b580      	push	{r7, lr}
 80037a6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80037a8:	f002 fcd2 	bl	8006150 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80037ac:	f000 f82a 	bl	8003804 <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 80037b0:	f000 f8aa 	bl	8003908 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80037b4:	f7ff f920 	bl	80029f8 <MX_GPIO_Init>
  MX_DMA_Init();
 80037b8:	f7fd fa96 	bl	8000ce8 <MX_DMA_Init>
  MX_USART1_UART_Init();
 80037bc:	f001 fede 	bl	800557c <MX_USART1_UART_Init>
  MX_I2C1_Init();
 80037c0:	f7ff f994 	bl	8002aec <MX_I2C1_Init>
  MX_SPI2_Init();
 80037c4:	f000 fe68 	bl	8004498 <MX_SPI2_Init>
  MX_TIM2_Init();
 80037c8:	f001 fb54 	bl	8004e74 <MX_TIM2_Init>
  MX_TIM1_Init();
 80037cc:	f001 faa4 	bl	8004d18 <MX_TIM1_Init>
  MX_ADC3_Init();
 80037d0:	f7fd f82a 	bl	8000828 <MX_ADC3_Init>
  MX_ADC1_Init();
 80037d4:	f7fc ff06 	bl	80005e4 <MX_ADC1_Init>
  MX_DAC1_Init();
 80037d8:	f7fd f9d2 	bl	8000b80 <MX_DAC1_Init>
  MX_SPI1_Init();
 80037dc:	f000 fe04 	bl	80043e8 <MX_SPI1_Init>
  MX_RTC_Init();
 80037e0:	f000 fbd0 	bl	8003f84 <MX_RTC_Init>
  MX_IWDG1_Init();
 80037e4:	f7ff faa2 	bl	8002d2c <MX_IWDG1_Init>

  /* USER CODE BEGIN 2 */

#ifdef ERROR_HANDLING_ENABLED
  	error_counter_init();
 80037e8:	f7fe fbf4 	bl	8001fd4 <error_counter_init>
  	get_reset_cause();
 80037ec:	f7ff ffa8 	bl	8003740 <get_reset_cause>
#endif

  system_setup();
 80037f0:	f000 f8ba 	bl	8003968 <system_setup>
//  handle_error(error);

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
 80037f4:	f013 fdbe 	bl	8017374 <osKernelInitialize>
  MX_FREERTOS_Init();
 80037f8:	f7fe feb2 	bl	8002560 <MX_FREERTOS_Init>

  /* Start scheduler */
  osKernelStart();
 80037fc:	f013 fdde 	bl	80173bc <osKernelStart>
  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
 8003800:	e7fe      	b.n	8003800 <main+0x5c>
	...

08003804 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003804:	b580      	push	{r7, lr}
 8003806:	b09c      	sub	sp, #112	; 0x70
 8003808:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800380a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800380e:	224c      	movs	r2, #76	; 0x4c
 8003810:	2100      	movs	r1, #0
 8003812:	4618      	mov	r0, r3
 8003814:	f017 f912 	bl	801aa3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003818:	1d3b      	adds	r3, r7, #4
 800381a:	2220      	movs	r2, #32
 800381c:	2100      	movs	r1, #0
 800381e:	4618      	mov	r0, r3
 8003820:	f017 f90c 	bl	801aa3c <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8003824:	2002      	movs	r0, #2
 8003826:	f00a fd1d 	bl	800e264 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 800382a:	2300      	movs	r3, #0
 800382c:	603b      	str	r3, [r7, #0]
 800382e:	4b34      	ldr	r3, [pc, #208]	; (8003900 <SystemClock_Config+0xfc>)
 8003830:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003832:	4a33      	ldr	r2, [pc, #204]	; (8003900 <SystemClock_Config+0xfc>)
 8003834:	f023 0301 	bic.w	r3, r3, #1
 8003838:	62d3      	str	r3, [r2, #44]	; 0x2c
 800383a:	4b31      	ldr	r3, [pc, #196]	; (8003900 <SystemClock_Config+0xfc>)
 800383c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800383e:	f003 0301 	and.w	r3, r3, #1
 8003842:	603b      	str	r3, [r7, #0]
 8003844:	4b2f      	ldr	r3, [pc, #188]	; (8003904 <SystemClock_Config+0x100>)
 8003846:	699b      	ldr	r3, [r3, #24]
 8003848:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800384c:	4a2d      	ldr	r2, [pc, #180]	; (8003904 <SystemClock_Config+0x100>)
 800384e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003852:	6193      	str	r3, [r2, #24]
 8003854:	4b2b      	ldr	r3, [pc, #172]	; (8003904 <SystemClock_Config+0x100>)
 8003856:	699b      	ldr	r3, [r3, #24]
 8003858:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800385c:	603b      	str	r3, [r7, #0]
 800385e:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8003860:	bf00      	nop
 8003862:	4b28      	ldr	r3, [pc, #160]	; (8003904 <SystemClock_Config+0x100>)
 8003864:	699b      	ldr	r3, [r3, #24]
 8003866:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800386a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800386e:	d1f8      	bne.n	8003862 <SystemClock_Config+0x5e>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI
 8003870:	230b      	movs	r3, #11
 8003872:	627b      	str	r3, [r7, #36]	; 0x24
                              |RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003874:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8003878:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV2;
 800387a:	2309      	movs	r3, #9
 800387c:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800387e:	2340      	movs	r3, #64	; 0x40
 8003880:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8003882:	2301      	movs	r3, #1
 8003884:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003886:	2302      	movs	r3, #2
 8003888:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800388a:	2302      	movs	r3, #2
 800388c:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 4;
 800388e:	2304      	movs	r3, #4
 8003890:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 24;
 8003892:	2318      	movs	r3, #24
 8003894:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 2;
 8003896:	2302      	movs	r3, #2
 8003898:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800389a:	2302      	movs	r3, #2
 800389c:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 800389e:	2302      	movs	r3, #2
 80038a0:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 80038a2:	2308      	movs	r3, #8
 80038a4:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOMEDIUM;
 80038a6:	2302      	movs	r3, #2
 80038a8:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 80038aa:	2300      	movs	r3, #0
 80038ac:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80038ae:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80038b2:	4618      	mov	r0, r3
 80038b4:	f00a fd10 	bl	800e2d8 <HAL_RCC_OscConfig>
 80038b8:	4603      	mov	r3, r0
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d001      	beq.n	80038c2 <SystemClock_Config+0xbe>
  {
    Error_Handler();
 80038be:	f000 f955 	bl	8003b6c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80038c2:	233f      	movs	r3, #63	; 0x3f
 80038c4:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80038c6:	2303      	movs	r3, #3
 80038c8:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 80038ca:	2300      	movs	r3, #0
 80038cc:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 80038ce:	2300      	movs	r3, #0
 80038d0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 80038d2:	2300      	movs	r3, #0
 80038d4:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 80038d6:	2340      	movs	r3, #64	; 0x40
 80038d8:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 80038da:	2300      	movs	r3, #0
 80038dc:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 80038de:	2300      	movs	r3, #0
 80038e0:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80038e2:	1d3b      	adds	r3, r7, #4
 80038e4:	2101      	movs	r1, #1
 80038e6:	4618      	mov	r0, r3
 80038e8:	f00b f950 	bl	800eb8c <HAL_RCC_ClockConfig>
 80038ec:	4603      	mov	r3, r0
 80038ee:	2b00      	cmp	r3, #0
 80038f0:	d001      	beq.n	80038f6 <SystemClock_Config+0xf2>
  {
    Error_Handler();
 80038f2:	f000 f93b 	bl	8003b6c <Error_Handler>
  }
}
 80038f6:	bf00      	nop
 80038f8:	3770      	adds	r7, #112	; 0x70
 80038fa:	46bd      	mov	sp, r7
 80038fc:	bd80      	pop	{r7, pc}
 80038fe:	bf00      	nop
 8003900:	58000400 	.word	0x58000400
 8003904:	58024800 	.word	0x58024800

08003908 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 8003908:	b580      	push	{r7, lr}
 800390a:	b0b0      	sub	sp, #192	; 0xc0
 800390c:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800390e:	463b      	mov	r3, r7
 8003910:	22c0      	movs	r2, #192	; 0xc0
 8003912:	2100      	movs	r1, #0
 8003914:	4618      	mov	r0, r3
 8003916:	f017 f891 	bl	801aa3c <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 800391a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 800391e:	f04f 0300 	mov.w	r3, #0
 8003922:	e9c7 2300 	strd	r2, r3, [r7]
  PeriphClkInitStruct.PLL2.PLL2M = 4;
 8003926:	2304      	movs	r3, #4
 8003928:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.PLL2.PLL2N = 24;
 800392a:	2318      	movs	r3, #24
 800392c:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLL2.PLL2P = 8;
 800392e:	2308      	movs	r3, #8
 8003930:	613b      	str	r3, [r7, #16]
  PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8003932:	2302      	movs	r3, #2
 8003934:	617b      	str	r3, [r7, #20]
  PeriphClkInitStruct.PLL2.PLL2R = 2;
 8003936:	2302      	movs	r3, #2
 8003938:	61bb      	str	r3, [r7, #24]
  PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_2;
 800393a:	2380      	movs	r3, #128	; 0x80
 800393c:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOMEDIUM;
 800393e:	2320      	movs	r3, #32
 8003940:	623b      	str	r3, [r7, #32]
  PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 8003942:	2300      	movs	r3, #0
 8003944:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 8003946:	2300      	movs	r3, #0
 8003948:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800394c:	463b      	mov	r3, r7
 800394e:	4618      	mov	r0, r3
 8003950:	f00b fcea 	bl	800f328 <HAL_RCCEx_PeriphCLKConfig>
 8003954:	4603      	mov	r3, r0
 8003956:	2b00      	cmp	r3, #0
 8003958:	d001      	beq.n	800395e <PeriphCommonClock_Config+0x56>
  {
    Error_Handler();
 800395a:	f000 f907 	bl	8003b6c <Error_Handler>
  }
}
 800395e:	bf00      	nop
 8003960:	37c0      	adds	r7, #192	; 0xc0
 8003962:	46bd      	mov	sp, r7
 8003964:	bd80      	pop	{r7, pc}
	...

08003968 <system_setup>:

/* USER CODE BEGIN 4 */
void system_setup() {
 8003968:	b580      	push	{r7, lr}
 800396a:	af00      	add	r7, sp, #0
	// 6 -- Init ADC DMA
	// 7 -- Start UART receive interrupts



	packet_event_flags = osEventFlagsNew(NULL);
 800396c:	2000      	movs	r0, #0
 800396e:	f013 fe5a 	bl	8017626 <osEventFlagsNew>
 8003972:	4603      	mov	r3, r0
 8003974:	4a1b      	ldr	r2, [pc, #108]	; (80039e4 <system_setup+0x7c>)
 8003976:	6013      	str	r3, [r2, #0]
    if (packet_event_flags == NULL) {
 8003978:	4b1a      	ldr	r3, [pc, #104]	; (80039e4 <system_setup+0x7c>)
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	2b00      	cmp	r3, #0
 800397e:	d100      	bne.n	8003982 <system_setup+0x1a>
        while (1);
 8003980:	e7fe      	b.n	8003980 <system_setup+0x18>
    }

    utility_event_flags = osEventFlagsNew(NULL);
 8003982:	2000      	movs	r0, #0
 8003984:	f013 fe4f 	bl	8017626 <osEventFlagsNew>
 8003988:	4603      	mov	r3, r0
 800398a:	4a17      	ldr	r2, [pc, #92]	; (80039e8 <system_setup+0x80>)
 800398c:	6013      	str	r3, [r2, #0]
    if (utility_event_flags == NULL) {
 800398e:	4b16      	ldr	r3, [pc, #88]	; (80039e8 <system_setup+0x80>)
 8003990:	681b      	ldr	r3, [r3, #0]
 8003992:	2b00      	cmp	r3, #0
 8003994:	d100      	bne.n	8003998 <system_setup+0x30>
        while (1);
 8003996:	e7fe      	b.n	8003996 <system_setup+0x2e>
    }

    mode_event_flags = osEventFlagsNew(NULL);
 8003998:	2000      	movs	r0, #0
 800399a:	f013 fe44 	bl	8017626 <osEventFlagsNew>
 800399e:	4603      	mov	r3, r0
 80039a0:	4a12      	ldr	r2, [pc, #72]	; (80039ec <system_setup+0x84>)
 80039a2:	6013      	str	r3, [r2, #0]
    if (mode_event_flags == NULL) {
 80039a4:	4b11      	ldr	r3, [pc, #68]	; (80039ec <system_setup+0x84>)
 80039a6:	681b      	ldr	r3, [r3, #0]
 80039a8:	2b00      	cmp	r3, #0
 80039aa:	d100      	bne.n	80039ae <system_setup+0x46>
        while (1);
 80039ac:	e7fe      	b.n	80039ac <system_setup+0x44>
    }

    TIM2->CCR4 = 0;
 80039ae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80039b2:	2200      	movs	r2, #0
 80039b4:	641a      	str	r2, [r3, #64]	; 0x40
	HAL_TIM_OC_Start_IT(&htim2, TIM_CHANNEL_4);
 80039b6:	210c      	movs	r1, #12
 80039b8:	480d      	ldr	r0, [pc, #52]	; (80039f0 <system_setup+0x88>)
 80039ba:	f00f fb43 	bl	8013044 <HAL_TIM_OC_Start_IT>

	if (!voltage_monitor_init()) {
 80039be:	f001 fee7 	bl	8005790 <voltage_monitor_init>
 80039c2:	4603      	mov	r3, r0
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	d100      	bne.n	80039ca <system_setup+0x62>
		while (1);
 80039c8:	e7fe      	b.n	80039c8 <system_setup+0x60>
	}

	if (!init_adc_dma()) {
 80039ca:	f000 fb6d 	bl	80040a8 <init_adc_dma>
 80039ce:	4603      	mov	r3, r0
 80039d0:	2b00      	cmp	r3, #0
 80039d2:	d100      	bne.n	80039d6 <system_setup+0x6e>
		while (1);
 80039d4:	e7fe      	b.n	80039d4 <system_setup+0x6c>
	}

	HAL_UART_Receive_IT(&huart1, UART_RX_BUFFER, 1);
 80039d6:	2201      	movs	r2, #1
 80039d8:	4906      	ldr	r1, [pc, #24]	; (80039f4 <system_setup+0x8c>)
 80039da:	4807      	ldr	r0, [pc, #28]	; (80039f8 <system_setup+0x90>)
 80039dc:	f011 f812 	bl	8014a04 <HAL_UART_Receive_IT>


}
 80039e0:	bf00      	nop
 80039e2:	bd80      	pop	{r7, pc}
 80039e4:	24001a90 	.word	0x24001a90
 80039e8:	24001a94 	.word	0x24001a94
 80039ec:	24001a98 	.word	0x24001a98
 80039f0:	24001df0 	.word	0x24001df0
 80039f4:	24001a9c 	.word	0x24001a9c
 80039f8:	24001e3c 	.word	0x24001e3c

080039fc <sync>:

void sync() {
 80039fc:	b580      	push	{r7, lr}
 80039fe:	b082      	sub	sp, #8
 8003a00:	af00      	add	r7, sp, #0
	send_ACK();
 8003a02:	f000 f821 	bl	8003a48 <send_ACK>

	uint8_t key;

	// Wait for 0xFF to be received
	HAL_UART_AbortReceive(&huart1);
 8003a06:	480e      	ldr	r0, [pc, #56]	; (8003a40 <sync+0x44>)
 8003a08:	f011 f848 	bl	8014a9c <HAL_UART_AbortReceive>
	do {
		HAL_UART_Receive(&huart1, UART_RX_BUFFER, 9, 100);
 8003a0c:	2364      	movs	r3, #100	; 0x64
 8003a0e:	2209      	movs	r2, #9
 8003a10:	490c      	ldr	r1, [pc, #48]	; (8003a44 <sync+0x48>)
 8003a12:	480b      	ldr	r0, [pc, #44]	; (8003a40 <sync+0x44>)
 8003a14:	f010 ff2e 	bl	8014874 <HAL_UART_Receive>
		key = UART_RX_BUFFER[0];
 8003a18:	4b0a      	ldr	r3, [pc, #40]	; (8003a44 <sync+0x48>)
 8003a1a:	781b      	ldrb	r3, [r3, #0]
 8003a1c:	71fb      	strb	r3, [r7, #7]
	} while (key != 0xFF);
 8003a1e:	79fb      	ldrb	r3, [r7, #7]
 8003a20:	2bff      	cmp	r3, #255	; 0xff
 8003a22:	d1f3      	bne.n	8003a0c <sync+0x10>

	calibrateRTC(UART_RX_BUFFER); // TODO: calibrate rtc
 8003a24:	4807      	ldr	r0, [pc, #28]	; (8003a44 <sync+0x48>)
 8003a26:	f001 fce7 	bl	80053f8 <calibrateRTC>
	HAL_UART_Receive_IT(&huart1, UART_RX_BUFFER, 1);
 8003a2a:	2201      	movs	r2, #1
 8003a2c:	4905      	ldr	r1, [pc, #20]	; (8003a44 <sync+0x48>)
 8003a2e:	4804      	ldr	r0, [pc, #16]	; (8003a40 <sync+0x44>)
 8003a30:	f010 ffe8 	bl	8014a04 <HAL_UART_Receive_IT>
	send_error_counter_packet();
 8003a34:	f7fe fbbc 	bl	80021b0 <send_error_counter_packet>
}
 8003a38:	bf00      	nop
 8003a3a:	3708      	adds	r7, #8
 8003a3c:	46bd      	mov	sp, r7
 8003a3e:	bd80      	pop	{r7, pc}
 8003a40:	24001e3c 	.word	0x24001e3c
 8003a44:	24001a9c 	.word	0x24001a9c

08003a48 <send_ACK>:

void send_ACK() {
 8003a48:	b580      	push	{r7, lr}
 8003a4a:	af00      	add	r7, sp, #0
	static uint8_t tx_buffer[1];

	tx_buffer[0] = ACK;
 8003a4c:	4b05      	ldr	r3, [pc, #20]	; (8003a64 <send_ACK+0x1c>)
 8003a4e:	22ff      	movs	r2, #255	; 0xff
 8003a50:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(&huart1, tx_buffer, 1, 100);
 8003a52:	2364      	movs	r3, #100	; 0x64
 8003a54:	2201      	movs	r2, #1
 8003a56:	4903      	ldr	r1, [pc, #12]	; (8003a64 <send_ACK+0x1c>)
 8003a58:	4803      	ldr	r0, [pc, #12]	; (8003a68 <send_ACK+0x20>)
 8003a5a:	f010 fe7d 	bl	8014758 <HAL_UART_Transmit>
}
 8003a5e:	bf00      	nop
 8003a60:	bd80      	pop	{r7, pc}
 8003a62:	bf00      	nop
 8003a64:	24001ae8 	.word	0x24001ae8
 8003a68:	24001e3c 	.word	0x24001e3c

08003a6c <get_current_step>:
	tx_buffer[0] = NACK;
	HAL_UART_Transmit(&huart1, tx_buffer, 1, 100);

}

uint8_t get_current_step() {
 8003a6c:	b480      	push	{r7}
 8003a6e:	b083      	sub	sp, #12
 8003a70:	af00      	add	r7, sp, #0
	int dac_value;

	dac_value = DAC1->DHR12R1;
 8003a72:	4b2e      	ldr	r3, [pc, #184]	; (8003b2c <get_current_step+0xc0>)
 8003a74:	689b      	ldr	r3, [r3, #8]
 8003a76:	607b      	str	r3, [r7, #4]

	switch (dac_value) {
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	f640 72ff 	movw	r2, #4095	; 0xfff
 8003a7e:	4293      	cmp	r3, r2
 8003a80:	d04a      	beq.n	8003b18 <get_current_step+0xac>
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003a88:	da48      	bge.n	8003b1c <get_current_step+0xb0>
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	f640 628b 	movw	r2, #3723	; 0xe8b
 8003a90:	4293      	cmp	r3, r2
 8003a92:	d03f      	beq.n	8003b14 <get_current_step+0xa8>
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	f640 628b 	movw	r2, #3723	; 0xe8b
 8003a9a:	4293      	cmp	r3, r2
 8003a9c:	dc3e      	bgt.n	8003b1c <get_current_step+0xb0>
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	f640 421f 	movw	r2, #3103	; 0xc1f
 8003aa4:	4293      	cmp	r3, r2
 8003aa6:	d033      	beq.n	8003b10 <get_current_step+0xa4>
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	f5b3 6f42 	cmp.w	r3, #3104	; 0xc20
 8003aae:	da35      	bge.n	8003b1c <get_current_step+0xb0>
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	f640 12b2 	movw	r2, #2482	; 0x9b2
 8003ab6:	4293      	cmp	r3, r2
 8003ab8:	d028      	beq.n	8003b0c <get_current_step+0xa0>
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	f640 12b2 	movw	r2, #2482	; 0x9b2
 8003ac0:	4293      	cmp	r3, r2
 8003ac2:	dc2b      	bgt.n	8003b1c <get_current_step+0xb0>
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	f240 7245 	movw	r2, #1861	; 0x745
 8003aca:	4293      	cmp	r3, r2
 8003acc:	d01c      	beq.n	8003b08 <get_current_step+0x9c>
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	f240 7245 	movw	r2, #1861	; 0x745
 8003ad4:	4293      	cmp	r3, r2
 8003ad6:	dc21      	bgt.n	8003b1c <get_current_step+0xb0>
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	f240 42d9 	movw	r2, #1241	; 0x4d9
 8003ade:	4293      	cmp	r3, r2
 8003ae0:	d010      	beq.n	8003b04 <get_current_step+0x98>
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	f240 42d9 	movw	r2, #1241	; 0x4d9
 8003ae8:	4293      	cmp	r3, r2
 8003aea:	dc17      	bgt.n	8003b1c <get_current_step+0xb0>
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	d004      	beq.n	8003afc <get_current_step+0x90>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	f5b3 7f1b 	cmp.w	r3, #620	; 0x26c
 8003af8:	d002      	beq.n	8003b00 <get_current_step+0x94>
 8003afa:	e00f      	b.n	8003b1c <get_current_step+0xb0>
	case 0:
		return 0;
 8003afc:	2300      	movs	r3, #0
 8003afe:	e00e      	b.n	8003b1e <get_current_step+0xb2>
	case 620:
		return 1;
 8003b00:	2301      	movs	r3, #1
 8003b02:	e00c      	b.n	8003b1e <get_current_step+0xb2>
	case 1241:
		return 2;
 8003b04:	2302      	movs	r3, #2
 8003b06:	e00a      	b.n	8003b1e <get_current_step+0xb2>
	case 1861:
		return 3;
 8003b08:	2303      	movs	r3, #3
 8003b0a:	e008      	b.n	8003b1e <get_current_step+0xb2>
	case 2482:
		return 4;
 8003b0c:	2304      	movs	r3, #4
 8003b0e:	e006      	b.n	8003b1e <get_current_step+0xb2>
	case 3103:
		return 5;
 8003b10:	2305      	movs	r3, #5
 8003b12:	e004      	b.n	8003b1e <get_current_step+0xb2>
	case 3723:
		return 6;
 8003b14:	2306      	movs	r3, #6
 8003b16:	e002      	b.n	8003b1e <get_current_step+0xb2>
	case 4095:
		return 7;
 8003b18:	2307      	movs	r3, #7
 8003b1a:	e000      	b.n	8003b1e <get_current_step+0xb2>
	default:
		return -1;
 8003b1c:	23ff      	movs	r3, #255	; 0xff
	}
}
 8003b1e:	4618      	mov	r0, r3
 8003b20:	370c      	adds	r7, #12
 8003b22:	46bd      	mov	sp, r7
 8003b24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b28:	4770      	bx	lr
 8003b2a:	bf00      	nop
 8003b2c:	40007400 	.word	0x40007400

08003b30 <enter_stop>:

void enter_stop() {
 8003b30:	b580      	push	{r7, lr}
 8003b32:	af00      	add	r7, sp, #0
	  send_ACK();
 8003b34:	f7ff ff88 	bl	8003a48 <send_ACK>

	  vTaskSuspendAll();
 8003b38:	f015 fa12 	bl	8018f60 <vTaskSuspendAll>
	  HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI);
 8003b3c:	2101      	movs	r1, #1
 8003b3e:	2001      	movs	r0, #1
 8003b40:	f00a fb54 	bl	800e1ec <HAL_PWR_EnterSTOPMode>

		// When MCU is triggered to wake up, it resumes right here.
		// That's why it looks like we enter stop mode and then instantly
		// configure the clock and resume tasks, but in reality the MCU
		// just stops right here.
	  NVIC_SystemReset();
 8003b44:	f7ff f910 	bl	8002d68 <__NVIC_SystemReset>

08003b48 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003b48:	b580      	push	{r7, lr}
 8003b4a:	b082      	sub	sp, #8
 8003b4c:	af00      	add	r7, sp, #0
 8003b4e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	4a04      	ldr	r2, [pc, #16]	; (8003b68 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8003b56:	4293      	cmp	r3, r2
 8003b58:	d101      	bne.n	8003b5e <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8003b5a:	f002 fb35 	bl	80061c8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8003b5e:	bf00      	nop
 8003b60:	3708      	adds	r7, #8
 8003b62:	46bd      	mov	sp, r7
 8003b64:	bd80      	pop	{r7, pc}
 8003b66:	bf00      	nop
 8003b68:	40001000 	.word	0x40001000

08003b6c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003b6c:	b580      	push	{r7, lr}
 8003b6e:	b082      	sub	sp, #8
 8003b70:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	ERROR_STRUCT error;
	error.category = EC_peripheral;
 8003b72:	2302      	movs	r3, #2
 8003b74:	703b      	strb	r3, [r7, #0]
	error.detail = ED_UNDEFINED;
 8003b76:	231a      	movs	r3, #26
 8003b78:	707b      	strb	r3, [r7, #1]
	handle_error(error);
 8003b7a:	463b      	mov	r3, r7
 8003b7c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8003b80:	f7fe f9ec 	bl	8001f5c <handle_error>
  /* USER CODE END Error_Handler_Debug */
}
 8003b84:	bf00      	nop
 8003b86:	3708      	adds	r7, #8
 8003b88:	46bd      	mov	sp, r7
 8003b8a:	bd80      	pop	{r7, pc}

08003b8c <create_pmt_packet>:
uint32_t erpa_seq = 0;
uint16_t hk_seq = 0;



void create_pmt_packet() {
 8003b8c:	b580      	push	{r7, lr}
 8003b8e:	b086      	sub	sp, #24
 8003b90:	af00      	add	r7, sp, #0
	while (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8)) {
 8003b92:	bf00      	nop
 8003b94:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003b98:	481c      	ldr	r0, [pc, #112]	; (8003c0c <create_pmt_packet+0x80>)
 8003b9a:	f007 ff31 	bl	800ba00 <HAL_GPIO_ReadPin>
 8003b9e:	4603      	mov	r3, r0
 8003ba0:	2b00      	cmp	r3, #0
 8003ba2:	d1f7      	bne.n	8003b94 <create_pmt_packet+0x8>
	}
	uint8_t buffer[PMT_DATA_SIZE];
	uint8_t pmt_spi[2];
	uint8_t uptime[UPTIME_SIZE];

	get_uptime(uptime);
 8003ba4:	1d3b      	adds	r3, r7, #4
 8003ba6:	4618      	mov	r0, r3
 8003ba8:	f001 fa9c 	bl	80050e4 <get_uptime>
	sample_pmt_spi(pmt_spi);
 8003bac:	f107 0308 	add.w	r3, r7, #8
 8003bb0:	4618      	mov	r0, r3
 8003bb2:	f000 facd 	bl	8004150 <sample_pmt_spi>

	buffer[0] = PMT_SYNC;
 8003bb6:	23ff      	movs	r3, #255	; 0xff
 8003bb8:	733b      	strb	r3, [r7, #12]
	buffer[1] = PMT_SYNC;
 8003bba:	23ff      	movs	r3, #255	; 0xff
 8003bbc:	737b      	strb	r3, [r7, #13]
	buffer[2] = ((pmt_seq & 0xFF00) >> 8);
 8003bbe:	4b14      	ldr	r3, [pc, #80]	; (8003c10 <create_pmt_packet+0x84>)
 8003bc0:	881b      	ldrh	r3, [r3, #0]
 8003bc2:	0a1b      	lsrs	r3, r3, #8
 8003bc4:	b29b      	uxth	r3, r3
 8003bc6:	b2db      	uxtb	r3, r3
 8003bc8:	73bb      	strb	r3, [r7, #14]
	buffer[3] = (pmt_seq & 0xFF);
 8003bca:	4b11      	ldr	r3, [pc, #68]	; (8003c10 <create_pmt_packet+0x84>)
 8003bcc:	881b      	ldrh	r3, [r3, #0]
 8003bce:	b2db      	uxtb	r3, r3
 8003bd0:	73fb      	strb	r3, [r7, #15]
	buffer[4] = pmt_spi[0];
 8003bd2:	7a3b      	ldrb	r3, [r7, #8]
 8003bd4:	743b      	strb	r3, [r7, #16]
	buffer[5] = pmt_spi[1];
 8003bd6:	7a7b      	ldrb	r3, [r7, #9]
 8003bd8:	747b      	strb	r3, [r7, #17]
	buffer[6] = uptime[0];
 8003bda:	793b      	ldrb	r3, [r7, #4]
 8003bdc:	74bb      	strb	r3, [r7, #18]
	buffer[7] = uptime[1];
 8003bde:	797b      	ldrb	r3, [r7, #5]
 8003be0:	74fb      	strb	r3, [r7, #19]
	buffer[8] = uptime[2];
 8003be2:	79bb      	ldrb	r3, [r7, #6]
 8003be4:	753b      	strb	r3, [r7, #20]
	buffer[9] = uptime[3];
 8003be6:	79fb      	ldrb	r3, [r7, #7]
 8003be8:	757b      	strb	r3, [r7, #21]

	HAL_UART_Transmit(&huart1, buffer, PMT_DATA_SIZE, 100);
 8003bea:	f107 010c 	add.w	r1, r7, #12
 8003bee:	2364      	movs	r3, #100	; 0x64
 8003bf0:	220a      	movs	r2, #10
 8003bf2:	4808      	ldr	r0, [pc, #32]	; (8003c14 <create_pmt_packet+0x88>)
 8003bf4:	f010 fdb0 	bl	8014758 <HAL_UART_Transmit>

	pmt_seq++;
 8003bf8:	4b05      	ldr	r3, [pc, #20]	; (8003c10 <create_pmt_packet+0x84>)
 8003bfa:	881b      	ldrh	r3, [r3, #0]
 8003bfc:	3301      	adds	r3, #1
 8003bfe:	b29a      	uxth	r2, r3
 8003c00:	4b03      	ldr	r3, [pc, #12]	; (8003c10 <create_pmt_packet+0x84>)
 8003c02:	801a      	strh	r2, [r3, #0]
}
 8003c04:	bf00      	nop
 8003c06:	3718      	adds	r7, #24
 8003c08:	46bd      	mov	sp, r7
 8003c0a:	bd80      	pop	{r7, pc}
 8003c0c:	58020000 	.word	0x58020000
 8003c10:	24001aea 	.word	0x24001aea
 8003c14:	24001e3c 	.word	0x24001e3c

08003c18 <create_erpa_packet>:


void create_erpa_packet() {
 8003c18:	b580      	push	{r7, lr}
 8003c1a:	b088      	sub	sp, #32
 8003c1c:	af00      	add	r7, sp, #0
	while (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_11)) {
 8003c1e:	bf00      	nop
 8003c20:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003c24:	4828      	ldr	r0, [pc, #160]	; (8003cc8 <create_erpa_packet+0xb0>)
 8003c26:	f007 feeb 	bl	800ba00 <HAL_GPIO_ReadPin>
 8003c2a:	4603      	mov	r3, r0
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d1f7      	bne.n	8003c20 <create_erpa_packet+0x8>

	uint8_t buffer[ERPA_DATA_SIZE];
	uint8_t erpa_spi[2];
	uint16_t erpa_adc[1];
	uint8_t uptime[UPTIME_SIZE];
	uint8_t sweep_step = -1;
 8003c30:	23ff      	movs	r3, #255	; 0xff
 8003c32:	77fb      	strb	r3, [r7, #31]

	get_uptime(uptime);
 8003c34:	1d3b      	adds	r3, r7, #4
 8003c36:	4618      	mov	r0, r3
 8003c38:	f001 fa54 	bl	80050e4 <get_uptime>
	sweep_step = get_current_step();
 8003c3c:	f7ff ff16 	bl	8003a6c <get_current_step>
 8003c40:	4603      	mov	r3, r0
 8003c42:	77fb      	strb	r3, [r7, #31]

	sample_erpa_spi(erpa_spi);
 8003c44:	f107 030c 	add.w	r3, r7, #12
 8003c48:	4618      	mov	r0, r3
 8003c4a:	f000 faa1 	bl	8004190 <sample_erpa_spi>
	sample_erpa_adc(erpa_adc);
 8003c4e:	f107 0308 	add.w	r3, r7, #8
 8003c52:	4618      	mov	r0, r3
 8003c54:	f000 fabc 	bl	80041d0 <sample_erpa_adc>

	buffer[0] = ERPA_SYNC;
 8003c58:	23ee      	movs	r3, #238	; 0xee
 8003c5a:	743b      	strb	r3, [r7, #16]
	buffer[1] = ERPA_SYNC;
 8003c5c:	23ee      	movs	r3, #238	; 0xee
 8003c5e:	747b      	strb	r3, [r7, #17]
	buffer[2] = ((erpa_seq >> 16) & 0xFF);
 8003c60:	4b1a      	ldr	r3, [pc, #104]	; (8003ccc <create_erpa_packet+0xb4>)
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	0c1b      	lsrs	r3, r3, #16
 8003c66:	b2db      	uxtb	r3, r3
 8003c68:	74bb      	strb	r3, [r7, #18]
	buffer[3] = ((erpa_seq >> 8) & 0xFF);
 8003c6a:	4b18      	ldr	r3, [pc, #96]	; (8003ccc <create_erpa_packet+0xb4>)
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	0a1b      	lsrs	r3, r3, #8
 8003c70:	b2db      	uxtb	r3, r3
 8003c72:	74fb      	strb	r3, [r7, #19]
	buffer[4] = erpa_seq & 0xFF;
 8003c74:	4b15      	ldr	r3, [pc, #84]	; (8003ccc <create_erpa_packet+0xb4>)
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	b2db      	uxtb	r3, r3
 8003c7a:	753b      	strb	r3, [r7, #20]
	buffer[5] = sweep_step;
 8003c7c:	7ffb      	ldrb	r3, [r7, #31]
 8003c7e:	757b      	strb	r3, [r7, #21]
	buffer[6] = ((erpa_adc[0] & 0xFF00) >> 8);	// SWP Monitored MSB
 8003c80:	893b      	ldrh	r3, [r7, #8]
 8003c82:	0a1b      	lsrs	r3, r3, #8
 8003c84:	b29b      	uxth	r3, r3
 8003c86:	b2db      	uxtb	r3, r3
 8003c88:	75bb      	strb	r3, [r7, #22]
	buffer[7] = (erpa_adc[0] & 0xFF);           // SWP Monitored LSB
 8003c8a:	893b      	ldrh	r3, [r7, #8]
 8003c8c:	b2db      	uxtb	r3, r3
 8003c8e:	75fb      	strb	r3, [r7, #23]
	buffer[8] = erpa_spi[0];					// ERPA eADC MSB
 8003c90:	7b3b      	ldrb	r3, [r7, #12]
 8003c92:	763b      	strb	r3, [r7, #24]
	buffer[9] = erpa_spi[1];					// ERPA eADC LSB
 8003c94:	7b7b      	ldrb	r3, [r7, #13]
 8003c96:	767b      	strb	r3, [r7, #25]
	buffer[10] = uptime[0];
 8003c98:	793b      	ldrb	r3, [r7, #4]
 8003c9a:	76bb      	strb	r3, [r7, #26]
	buffer[11] = uptime[1];
 8003c9c:	797b      	ldrb	r3, [r7, #5]
 8003c9e:	76fb      	strb	r3, [r7, #27]
	buffer[12] = uptime[2];
 8003ca0:	79bb      	ldrb	r3, [r7, #6]
 8003ca2:	773b      	strb	r3, [r7, #28]
	buffer[13] = uptime[3];
 8003ca4:	79fb      	ldrb	r3, [r7, #7]
 8003ca6:	777b      	strb	r3, [r7, #29]

	HAL_UART_Transmit(&huart1, buffer, ERPA_DATA_SIZE, 100);
 8003ca8:	f107 0110 	add.w	r1, r7, #16
 8003cac:	2364      	movs	r3, #100	; 0x64
 8003cae:	220e      	movs	r2, #14
 8003cb0:	4807      	ldr	r0, [pc, #28]	; (8003cd0 <create_erpa_packet+0xb8>)
 8003cb2:	f010 fd51 	bl	8014758 <HAL_UART_Transmit>

	erpa_seq++;
 8003cb6:	4b05      	ldr	r3, [pc, #20]	; (8003ccc <create_erpa_packet+0xb4>)
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	3301      	adds	r3, #1
 8003cbc:	4a03      	ldr	r2, [pc, #12]	; (8003ccc <create_erpa_packet+0xb4>)
 8003cbe:	6013      	str	r3, [r2, #0]
}
 8003cc0:	bf00      	nop
 8003cc2:	3720      	adds	r7, #32
 8003cc4:	46bd      	mov	sp, r7
 8003cc6:	bd80      	pop	{r7, pc}
 8003cc8:	58020400 	.word	0x58020400
 8003ccc:	24001aec 	.word	0x24001aec
 8003cd0:	24001e3c 	.word	0x24001e3c

08003cd4 <create_hk_packet>:


void create_hk_packet() {
 8003cd4:	b580      	push	{r7, lr}
 8003cd6:	b092      	sub	sp, #72	; 0x48
 8003cd8:	af00      	add	r7, sp, #0
	VOLTAGE_RAIL *rail_monitor_ptr;
	uint8_t buffer[HK_DATA_SIZE];
	uint8_t timestamp[TIMESTAMP_SIZE];
	uint8_t uptime[UPTIME_SIZE];

	get_uptime(uptime);
 8003cda:	1d3b      	adds	r3, r7, #4
 8003cdc:	4618      	mov	r0, r3
 8003cde:	f001 fa01 	bl	80050e4 <get_uptime>
	get_unix_time(timestamp);
 8003ce2:	f107 0308 	add.w	r3, r7, #8
 8003ce6:	4618      	mov	r0, r3
 8003ce8:	f001 fa4c 	bl	8005184 <get_unix_time>
	rail_monitor_ptr = get_rail_monitor();
 8003cec:	f002 f866 	bl	8005dbc <get_rail_monitor>
 8003cf0:	6478      	str	r0, [r7, #68]	; 0x44


	buffer[0] = HK_SYNC;                     	// HK SYNC 0xCC MSB
 8003cf2:	23dd      	movs	r3, #221	; 0xdd
 8003cf4:	743b      	strb	r3, [r7, #16]
	buffer[1] = HK_SYNC;                     	// HK SYNC 0xCC LSB
 8003cf6:	23dd      	movs	r3, #221	; 0xdd
 8003cf8:	747b      	strb	r3, [r7, #17]
	buffer[2] = ((hk_seq & 0xFF00) >> 8);    	// HK SEQ # MSB
 8003cfa:	4b95      	ldr	r3, [pc, #596]	; (8003f50 <create_hk_packet+0x27c>)
 8003cfc:	881b      	ldrh	r3, [r3, #0]
 8003cfe:	0a1b      	lsrs	r3, r3, #8
 8003d00:	b29b      	uxth	r3, r3
 8003d02:	b2db      	uxtb	r3, r3
 8003d04:	74bb      	strb	r3, [r7, #18]
	buffer[3] = (hk_seq & 0xFF);             	// HK SEQ # LSB
 8003d06:	4b92      	ldr	r3, [pc, #584]	; (8003f50 <create_hk_packet+0x27c>)
 8003d08:	881b      	ldrh	r3, [r3, #0]
 8003d0a:	b2db      	uxtb	r3, r3
 8003d0c:	74fb      	strb	r3, [r7, #19]
	buffer[4] = ((rail_monitor_ptr[RAIL_vsense].data & 0xFF00) >> 8);		// HK vsense MSB
 8003d0e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d10:	889b      	ldrh	r3, [r3, #4]
 8003d12:	0a1b      	lsrs	r3, r3, #8
 8003d14:	b29b      	uxth	r3, r3
 8003d16:	b2db      	uxtb	r3, r3
 8003d18:	753b      	strb	r3, [r7, #20]
	buffer[5] = (rail_monitor_ptr[RAIL_vsense].data & 0xFF);				// HK vsense LSB
 8003d1a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d1c:	889b      	ldrh	r3, [r3, #4]
 8003d1e:	b2db      	uxtb	r3, r3
 8003d20:	757b      	strb	r3, [r7, #21]
	buffer[6] = ((rail_monitor_ptr[RAIL_vrefint].data & 0xFF00) >> 8);		// HK vrefint MSB
 8003d22:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d24:	3310      	adds	r3, #16
 8003d26:	889b      	ldrh	r3, [r3, #4]
 8003d28:	0a1b      	lsrs	r3, r3, #8
 8003d2a:	b29b      	uxth	r3, r3
 8003d2c:	b2db      	uxtb	r3, r3
 8003d2e:	75bb      	strb	r3, [r7, #22]
	buffer[7] = (rail_monitor_ptr[RAIL_vrefint].data & 0xFF);				// HK vrefint LSB
 8003d30:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d32:	3310      	adds	r3, #16
 8003d34:	889b      	ldrh	r3, [r3, #4]
 8003d36:	b2db      	uxtb	r3, r3
 8003d38:	75fb      	strb	r3, [r7, #23]
	buffer[8] = ((rail_monitor_ptr[RAIL_TEMP1].data & 0xFF00) >> 8);	// HK TEMP1 MSB
 8003d3a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d3c:	3320      	adds	r3, #32
 8003d3e:	889b      	ldrh	r3, [r3, #4]
 8003d40:	0a1b      	lsrs	r3, r3, #8
 8003d42:	b29b      	uxth	r3, r3
 8003d44:	b2db      	uxtb	r3, r3
 8003d46:	763b      	strb	r3, [r7, #24]
	buffer[9] = (rail_monitor_ptr[RAIL_TEMP1].data & 0xFF);				// HK TEMP1 LSB
 8003d48:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d4a:	3320      	adds	r3, #32
 8003d4c:	889b      	ldrh	r3, [r3, #4]
 8003d4e:	b2db      	uxtb	r3, r3
 8003d50:	767b      	strb	r3, [r7, #25]
	buffer[10] = ((rail_monitor_ptr[RAIL_TEMP2].data & 0xFF00) >> 8);	// HK TEMP2 MSB
 8003d52:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d54:	3330      	adds	r3, #48	; 0x30
 8003d56:	889b      	ldrh	r3, [r3, #4]
 8003d58:	0a1b      	lsrs	r3, r3, #8
 8003d5a:	b29b      	uxth	r3, r3
 8003d5c:	b2db      	uxtb	r3, r3
 8003d5e:	76bb      	strb	r3, [r7, #26]
	buffer[11] = (rail_monitor_ptr[RAIL_TEMP2].data & 0xFF);			// HK TEMP2 LSB
 8003d60:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d62:	3330      	adds	r3, #48	; 0x30
 8003d64:	889b      	ldrh	r3, [r3, #4]
 8003d66:	b2db      	uxtb	r3, r3
 8003d68:	76fb      	strb	r3, [r7, #27]
	buffer[12] = ((rail_monitor_ptr[RAIL_TEMP3].data & 0xFF00) >> 8);	// HK TEMP3 MSB
 8003d6a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d6c:	3340      	adds	r3, #64	; 0x40
 8003d6e:	889b      	ldrh	r3, [r3, #4]
 8003d70:	0a1b      	lsrs	r3, r3, #8
 8003d72:	b29b      	uxth	r3, r3
 8003d74:	b2db      	uxtb	r3, r3
 8003d76:	773b      	strb	r3, [r7, #28]
	buffer[13] = (rail_monitor_ptr[RAIL_TEMP3].data & 0xFF);			// HK TEMP3 LSB
 8003d78:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d7a:	3340      	adds	r3, #64	; 0x40
 8003d7c:	889b      	ldrh	r3, [r3, #4]
 8003d7e:	b2db      	uxtb	r3, r3
 8003d80:	777b      	strb	r3, [r7, #29]
	buffer[14] = ((rail_monitor_ptr[RAIL_TEMP4].data & 0xFF00) >> 8);	// HK TEMP4 MSB
 8003d82:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d84:	3350      	adds	r3, #80	; 0x50
 8003d86:	889b      	ldrh	r3, [r3, #4]
 8003d88:	0a1b      	lsrs	r3, r3, #8
 8003d8a:	b29b      	uxth	r3, r3
 8003d8c:	b2db      	uxtb	r3, r3
 8003d8e:	77bb      	strb	r3, [r7, #30]
	buffer[15] = (rail_monitor_ptr[RAIL_TEMP4].data & 0xFF);			// HK TEMP4 LSB
 8003d90:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d92:	3350      	adds	r3, #80	; 0x50
 8003d94:	889b      	ldrh	r3, [r3, #4]
 8003d96:	b2db      	uxtb	r3, r3
 8003d98:	77fb      	strb	r3, [r7, #31]
	buffer[16] = ((rail_monitor_ptr[RAIL_busvmon].data & 0xFF00) >> 8);	// HK BUSvmon MSB
 8003d9a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003d9c:	3360      	adds	r3, #96	; 0x60
 8003d9e:	889b      	ldrh	r3, [r3, #4]
 8003da0:	0a1b      	lsrs	r3, r3, #8
 8003da2:	b29b      	uxth	r3, r3
 8003da4:	b2db      	uxtb	r3, r3
 8003da6:	f887 3020 	strb.w	r3, [r7, #32]
	buffer[17] = (rail_monitor_ptr[RAIL_busvmon].data & 0xFF);				// HK BUSvmon LSB
 8003daa:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003dac:	3360      	adds	r3, #96	; 0x60
 8003dae:	889b      	ldrh	r3, [r3, #4]
 8003db0:	b2db      	uxtb	r3, r3
 8003db2:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	buffer[18] = ((rail_monitor_ptr[RAIL_busimon].data & 0xFF00) >> 8);	// HK BUSimon MSB
 8003db6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003db8:	3370      	adds	r3, #112	; 0x70
 8003dba:	889b      	ldrh	r3, [r3, #4]
 8003dbc:	0a1b      	lsrs	r3, r3, #8
 8003dbe:	b29b      	uxth	r3, r3
 8003dc0:	b2db      	uxtb	r3, r3
 8003dc2:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	buffer[19] = (rail_monitor_ptr[RAIL_busimon].data & 0xFF);				// HK BUSimon LSB
 8003dc6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003dc8:	3370      	adds	r3, #112	; 0x70
 8003dca:	889b      	ldrh	r3, [r3, #4]
 8003dcc:	b2db      	uxtb	r3, r3
 8003dce:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	buffer[20] = ((rail_monitor_ptr[RAIL_2v5].data & 0xFF00) >> 8);		// HK 2v5mon MSB
 8003dd2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003dd4:	3380      	adds	r3, #128	; 0x80
 8003dd6:	889b      	ldrh	r3, [r3, #4]
 8003dd8:	0a1b      	lsrs	r3, r3, #8
 8003dda:	b29b      	uxth	r3, r3
 8003ddc:	b2db      	uxtb	r3, r3
 8003dde:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	buffer[21] = (rail_monitor_ptr[RAIL_2v5].data & 0xFF);					// HK 2v5mon LSB
 8003de2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003de4:	3380      	adds	r3, #128	; 0x80
 8003de6:	889b      	ldrh	r3, [r3, #4]
 8003de8:	b2db      	uxtb	r3, r3
 8003dea:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
	buffer[22] = ((rail_monitor_ptr[RAIL_3v3].data & 0xFF00) >> 8);		// HK 3v3mon MSB
 8003dee:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003df0:	3390      	adds	r3, #144	; 0x90
 8003df2:	889b      	ldrh	r3, [r3, #4]
 8003df4:	0a1b      	lsrs	r3, r3, #8
 8003df6:	b29b      	uxth	r3, r3
 8003df8:	b2db      	uxtb	r3, r3
 8003dfa:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	buffer[23] = (rail_monitor_ptr[RAIL_3v3].data & 0xFF);					// HK 3v3mon LSB
 8003dfe:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e00:	3390      	adds	r3, #144	; 0x90
 8003e02:	889b      	ldrh	r3, [r3, #4]
 8003e04:	b2db      	uxtb	r3, r3
 8003e06:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	buffer[24] = ((rail_monitor_ptr[RAIL_5v].data & 0xFF00) >> 8);			// HK 5vmon MSB
 8003e0a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e0c:	33a0      	adds	r3, #160	; 0xa0
 8003e0e:	889b      	ldrh	r3, [r3, #4]
 8003e10:	0a1b      	lsrs	r3, r3, #8
 8003e12:	b29b      	uxth	r3, r3
 8003e14:	b2db      	uxtb	r3, r3
 8003e16:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	buffer[25] = (rail_monitor_ptr[RAIL_5v].data & 0xFF);					// HK 5vmon LSB
 8003e1a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e1c:	33a0      	adds	r3, #160	; 0xa0
 8003e1e:	889b      	ldrh	r3, [r3, #4]
 8003e20:	b2db      	uxtb	r3, r3
 8003e22:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
	buffer[26] = ((rail_monitor_ptr[RAIL_n3v3].data & 0xFF00) >> 8);		// HK n3v3mon MSB
 8003e26:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e28:	33b0      	adds	r3, #176	; 0xb0
 8003e2a:	889b      	ldrh	r3, [r3, #4]
 8003e2c:	0a1b      	lsrs	r3, r3, #8
 8003e2e:	b29b      	uxth	r3, r3
 8003e30:	b2db      	uxtb	r3, r3
 8003e32:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	buffer[27] = (rail_monitor_ptr[RAIL_n3v3].data & 0xFF);				// HK n3v3mon LSB
 8003e36:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e38:	33b0      	adds	r3, #176	; 0xb0
 8003e3a:	889b      	ldrh	r3, [r3, #4]
 8003e3c:	b2db      	uxtb	r3, r3
 8003e3e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
	buffer[28] = ((rail_monitor_ptr[RAIL_n5v].data & 0xFF00) >> 8);		// HK n5vmon MSB
 8003e42:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e44:	33c0      	adds	r3, #192	; 0xc0
 8003e46:	889b      	ldrh	r3, [r3, #4]
 8003e48:	0a1b      	lsrs	r3, r3, #8
 8003e4a:	b29b      	uxth	r3, r3
 8003e4c:	b2db      	uxtb	r3, r3
 8003e4e:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
	buffer[29] = (rail_monitor_ptr[RAIL_n5v].data & 0xFF);					// HK n5vmon LSB
 8003e52:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e54:	33c0      	adds	r3, #192	; 0xc0
 8003e56:	889b      	ldrh	r3, [r3, #4]
 8003e58:	b2db      	uxtb	r3, r3
 8003e5a:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
	buffer[30] = ((rail_monitor_ptr[RAIL_15v].data & 0xFF00) >> 8);		// HK 15vmon MSB
 8003e5e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e60:	33d0      	adds	r3, #208	; 0xd0
 8003e62:	889b      	ldrh	r3, [r3, #4]
 8003e64:	0a1b      	lsrs	r3, r3, #8
 8003e66:	b29b      	uxth	r3, r3
 8003e68:	b2db      	uxtb	r3, r3
 8003e6a:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
	buffer[31] = (rail_monitor_ptr[RAIL_15v].data & 0xFF);					// HK 15vmon LSB
 8003e6e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e70:	33d0      	adds	r3, #208	; 0xd0
 8003e72:	889b      	ldrh	r3, [r3, #4]
 8003e74:	b2db      	uxtb	r3, r3
 8003e76:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	buffer[32] = ((rail_monitor_ptr[RAIL_5vref].data & 0xFF00) >> 8);		// HK 5vrefmon MSB
 8003e7a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e7c:	33e0      	adds	r3, #224	; 0xe0
 8003e7e:	889b      	ldrh	r3, [r3, #4]
 8003e80:	0a1b      	lsrs	r3, r3, #8
 8003e82:	b29b      	uxth	r3, r3
 8003e84:	b2db      	uxtb	r3, r3
 8003e86:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
	buffer[33] = (rail_monitor_ptr[RAIL_5vref].data & 0xFF);				// HK 5vrefmon LSB
 8003e8a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e8c:	33e0      	adds	r3, #224	; 0xe0
 8003e8e:	889b      	ldrh	r3, [r3, #4]
 8003e90:	b2db      	uxtb	r3, r3
 8003e92:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
	buffer[34] = ((rail_monitor_ptr[RAIL_n200v].data & 0xFF00) >> 8);		// HK n150vmon MSB
 8003e96:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e98:	33f0      	adds	r3, #240	; 0xf0
 8003e9a:	889b      	ldrh	r3, [r3, #4]
 8003e9c:	0a1b      	lsrs	r3, r3, #8
 8003e9e:	b29b      	uxth	r3, r3
 8003ea0:	b2db      	uxtb	r3, r3
 8003ea2:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
	buffer[35] = (rail_monitor_ptr[RAIL_n200v].data & 0xFF);				// HK n150vmon LSB
 8003ea6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003ea8:	33f0      	adds	r3, #240	; 0xf0
 8003eaa:	889b      	ldrh	r3, [r3, #4]
 8003eac:	b2db      	uxtb	r3, r3
 8003eae:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
	buffer[36] = ((rail_monitor_ptr[RAIL_n800v].data & 0xFF00) >> 8);		// HK n800vmon MSB
 8003eb2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003eb4:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003eb8:	889b      	ldrh	r3, [r3, #4]
 8003eba:	0a1b      	lsrs	r3, r3, #8
 8003ebc:	b29b      	uxth	r3, r3
 8003ebe:	b2db      	uxtb	r3, r3
 8003ec0:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
	buffer[37] = (rail_monitor_ptr[RAIL_n800v].data & 0xFF);				// HK n800vmon LSB
 8003ec4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003ec6:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8003eca:	889b      	ldrh	r3, [r3, #4]
 8003ecc:	b2db      	uxtb	r3, r3
 8003ece:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
	buffer[38] = ((rail_monitor_ptr[RAIL_TMP1].data & 0xFF00) >> 8);  // TEMPURATURE 1 MSB
 8003ed2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003ed4:	f503 7388 	add.w	r3, r3, #272	; 0x110
 8003ed8:	889b      	ldrh	r3, [r3, #4]
 8003eda:	0a1b      	lsrs	r3, r3, #8
 8003edc:	b29b      	uxth	r3, r3
 8003ede:	b2db      	uxtb	r3, r3
 8003ee0:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
	buffer[39] = (rail_monitor_ptr[RAIL_TMP1].data & 0xFF);           // TEMPURATURE 1 LSB
 8003ee4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003ee6:	f503 7388 	add.w	r3, r3, #272	; 0x110
 8003eea:	889b      	ldrh	r3, [r3, #4]
 8003eec:	b2db      	uxtb	r3, r3
 8003eee:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
	buffer[40] = timestamp[0];
 8003ef2:	7a3b      	ldrb	r3, [r7, #8]
 8003ef4:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
	buffer[41] = timestamp[1];
 8003ef8:	7a7b      	ldrb	r3, [r7, #9]
 8003efa:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
	buffer[42] = timestamp[2];
 8003efe:	7abb      	ldrb	r3, [r7, #10]
 8003f00:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
	buffer[43] = timestamp[3];
 8003f04:	7afb      	ldrb	r3, [r7, #11]
 8003f06:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
	buffer[44] = timestamp[4];
 8003f0a:	7b3b      	ldrb	r3, [r7, #12]
 8003f0c:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
	buffer[45] = timestamp[5];
 8003f10:	7b7b      	ldrb	r3, [r7, #13]
 8003f12:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
	buffer[46] = uptime[0];
 8003f16:	793b      	ldrb	r3, [r7, #4]
 8003f18:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
	buffer[47] = uptime[1];
 8003f1c:	797b      	ldrb	r3, [r7, #5]
 8003f1e:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
	buffer[48] = uptime[2];
 8003f22:	79bb      	ldrb	r3, [r7, #6]
 8003f24:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
	buffer[49] = uptime[3];
 8003f28:	79fb      	ldrb	r3, [r7, #7]
 8003f2a:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41

	HAL_UART_Transmit(&huart1, buffer, HK_DATA_SIZE, 100);
 8003f2e:	f107 0110 	add.w	r1, r7, #16
 8003f32:	2364      	movs	r3, #100	; 0x64
 8003f34:	2232      	movs	r2, #50	; 0x32
 8003f36:	4807      	ldr	r0, [pc, #28]	; (8003f54 <create_hk_packet+0x280>)
 8003f38:	f010 fc0e 	bl	8014758 <HAL_UART_Transmit>

	hk_seq++;
 8003f3c:	4b04      	ldr	r3, [pc, #16]	; (8003f50 <create_hk_packet+0x27c>)
 8003f3e:	881b      	ldrh	r3, [r3, #0]
 8003f40:	3301      	adds	r3, #1
 8003f42:	b29a      	uxth	r2, r3
 8003f44:	4b02      	ldr	r3, [pc, #8]	; (8003f50 <create_hk_packet+0x27c>)
 8003f46:	801a      	strh	r2, [r3, #0]
}
 8003f48:	bf00      	nop
 8003f4a:	3748      	adds	r7, #72	; 0x48
 8003f4c:	46bd      	mov	sp, r7
 8003f4e:	bd80      	pop	{r7, pc}
 8003f50:	24001af0 	.word	0x24001af0
 8003f54:	24001e3c 	.word	0x24001e3c

08003f58 <reset_packet_sequence_numbers>:

void reset_packet_sequence_numbers() {
 8003f58:	b480      	push	{r7}
 8003f5a:	af00      	add	r7, sp, #0
	pmt_seq = 0;
 8003f5c:	4b06      	ldr	r3, [pc, #24]	; (8003f78 <reset_packet_sequence_numbers+0x20>)
 8003f5e:	2200      	movs	r2, #0
 8003f60:	801a      	strh	r2, [r3, #0]
	erpa_seq = 0;
 8003f62:	4b06      	ldr	r3, [pc, #24]	; (8003f7c <reset_packet_sequence_numbers+0x24>)
 8003f64:	2200      	movs	r2, #0
 8003f66:	601a      	str	r2, [r3, #0]
	hk_seq = 0;
 8003f68:	4b05      	ldr	r3, [pc, #20]	; (8003f80 <reset_packet_sequence_numbers+0x28>)
 8003f6a:	2200      	movs	r2, #0
 8003f6c:	801a      	strh	r2, [r3, #0]
}
 8003f6e:	bf00      	nop
 8003f70:	46bd      	mov	sp, r7
 8003f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f76:	4770      	bx	lr
 8003f78:	24001aea 	.word	0x24001aea
 8003f7c:	24001aec 	.word	0x24001aec
 8003f80:	24001af0 	.word	0x24001af0

08003f84 <MX_RTC_Init>:

RTC_HandleTypeDef hrtc;

/* RTC init function */
void MX_RTC_Init(void)
{
 8003f84:	b580      	push	{r7, lr}
 8003f86:	b086      	sub	sp, #24
 8003f88:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_TimeTypeDef sTime = {0};
 8003f8a:	1d3b      	adds	r3, r7, #4
 8003f8c:	2200      	movs	r2, #0
 8003f8e:	601a      	str	r2, [r3, #0]
 8003f90:	605a      	str	r2, [r3, #4]
 8003f92:	609a      	str	r2, [r3, #8]
 8003f94:	60da      	str	r2, [r3, #12]
 8003f96:	611a      	str	r2, [r3, #16]
  RTC_DateTypeDef sDate = {0};
 8003f98:	2300      	movs	r3, #0
 8003f9a:	603b      	str	r3, [r7, #0]

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8003f9c:	4b26      	ldr	r3, [pc, #152]	; (8004038 <MX_RTC_Init+0xb4>)
 8003f9e:	4a27      	ldr	r2, [pc, #156]	; (800403c <MX_RTC_Init+0xb8>)
 8003fa0:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8003fa2:	4b25      	ldr	r3, [pc, #148]	; (8004038 <MX_RTC_Init+0xb4>)
 8003fa4:	2200      	movs	r2, #0
 8003fa6:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 100-1;
 8003fa8:	4b23      	ldr	r3, [pc, #140]	; (8004038 <MX_RTC_Init+0xb4>)
 8003faa:	2263      	movs	r2, #99	; 0x63
 8003fac:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 10000-1;
 8003fae:	4b22      	ldr	r3, [pc, #136]	; (8004038 <MX_RTC_Init+0xb4>)
 8003fb0:	f242 720f 	movw	r2, #9999	; 0x270f
 8003fb4:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8003fb6:	4b20      	ldr	r3, [pc, #128]	; (8004038 <MX_RTC_Init+0xb4>)
 8003fb8:	2200      	movs	r2, #0
 8003fba:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8003fbc:	4b1e      	ldr	r3, [pc, #120]	; (8004038 <MX_RTC_Init+0xb4>)
 8003fbe:	2200      	movs	r2, #0
 8003fc0:	619a      	str	r2, [r3, #24]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8003fc2:	4b1d      	ldr	r3, [pc, #116]	; (8004038 <MX_RTC_Init+0xb4>)
 8003fc4:	2200      	movs	r2, #0
 8003fc6:	61da      	str	r2, [r3, #28]
  hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 8003fc8:	4b1b      	ldr	r3, [pc, #108]	; (8004038 <MX_RTC_Init+0xb4>)
 8003fca:	2200      	movs	r2, #0
 8003fcc:	615a      	str	r2, [r3, #20]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8003fce:	481a      	ldr	r0, [pc, #104]	; (8004038 <MX_RTC_Init+0xb4>)
 8003fd0:	f00d fea8 	bl	8011d24 <HAL_RTC_Init>
 8003fd4:	4603      	mov	r3, r0
 8003fd6:	2b00      	cmp	r3, #0
 8003fd8:	d001      	beq.n	8003fde <MX_RTC_Init+0x5a>
  {
    Error_Handler();
 8003fda:	f7ff fdc7 	bl	8003b6c <Error_Handler>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 8003fde:	2300      	movs	r3, #0
 8003fe0:	713b      	strb	r3, [r7, #4]
  sTime.Minutes = 0x0;
 8003fe2:	2300      	movs	r3, #0
 8003fe4:	717b      	strb	r3, [r7, #5]
  sTime.Seconds = 0x0;
 8003fe6:	2300      	movs	r3, #0
 8003fe8:	71bb      	strb	r3, [r7, #6]
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8003fea:	2300      	movs	r3, #0
 8003fec:	613b      	str	r3, [r7, #16]
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8003fee:	2300      	movs	r3, #0
 8003ff0:	617b      	str	r3, [r7, #20]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8003ff2:	1d3b      	adds	r3, r7, #4
 8003ff4:	2201      	movs	r2, #1
 8003ff6:	4619      	mov	r1, r3
 8003ff8:	480f      	ldr	r0, [pc, #60]	; (8004038 <MX_RTC_Init+0xb4>)
 8003ffa:	f00d ff15 	bl	8011e28 <HAL_RTC_SetTime>
 8003ffe:	4603      	mov	r3, r0
 8004000:	2b00      	cmp	r3, #0
 8004002:	d001      	beq.n	8004008 <MX_RTC_Init+0x84>
  {
    Error_Handler();
 8004004:	f7ff fdb2 	bl	8003b6c <Error_Handler>
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 8004008:	2301      	movs	r3, #1
 800400a:	703b      	strb	r3, [r7, #0]
  sDate.Month = RTC_MONTH_JANUARY;
 800400c:	2301      	movs	r3, #1
 800400e:	707b      	strb	r3, [r7, #1]
  sDate.Date = 0x1;
 8004010:	2301      	movs	r3, #1
 8004012:	70bb      	strb	r3, [r7, #2]
  sDate.Year = 0x0;
 8004014:	2300      	movs	r3, #0
 8004016:	70fb      	strb	r3, [r7, #3]

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 8004018:	463b      	mov	r3, r7
 800401a:	2201      	movs	r2, #1
 800401c:	4619      	mov	r1, r3
 800401e:	4806      	ldr	r0, [pc, #24]	; (8004038 <MX_RTC_Init+0xb4>)
 8004020:	f00d fffc 	bl	801201c <HAL_RTC_SetDate>
 8004024:	4603      	mov	r3, r0
 8004026:	2b00      	cmp	r3, #0
 8004028:	d001      	beq.n	800402e <MX_RTC_Init+0xaa>
  {
    Error_Handler();
 800402a:	f7ff fd9f 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 800402e:	bf00      	nop
 8004030:	3718      	adds	r7, #24
 8004032:	46bd      	mov	sp, r7
 8004034:	bd80      	pop	{r7, pc}
 8004036:	bf00      	nop
 8004038:	24001af4 	.word	0x24001af4
 800403c:	58004000 	.word	0x58004000

08004040 <HAL_RTC_MspInit>:

void HAL_RTC_MspInit(RTC_HandleTypeDef* rtcHandle)
{
 8004040:	b580      	push	{r7, lr}
 8004042:	b0b2      	sub	sp, #200	; 0xc8
 8004044:	af00      	add	r7, sp, #0
 8004046:	6078      	str	r0, [r7, #4]

  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8004048:	f107 0308 	add.w	r3, r7, #8
 800404c:	22c0      	movs	r2, #192	; 0xc0
 800404e:	2100      	movs	r1, #0
 8004050:	4618      	mov	r0, r3
 8004052:	f016 fcf3 	bl	801aa3c <memset>
  if(rtcHandle->Instance==RTC)
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	681b      	ldr	r3, [r3, #0]
 800405a:	4a10      	ldr	r2, [pc, #64]	; (800409c <HAL_RTC_MspInit+0x5c>)
 800405c:	4293      	cmp	r3, r2
 800405e:	d118      	bne.n	8004092 <HAL_RTC_MspInit+0x52>

  /* USER CODE END RTC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 8004060:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8004064:	f04f 0300 	mov.w	r3, #0
 8004068:	e9c7 2302 	strd	r2, r3, [r7, #8]
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_HSE_DIV25;
 800406c:	4b0c      	ldr	r3, [pc, #48]	; (80040a0 <HAL_RTC_MspInit+0x60>)
 800406e:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8004072:	f107 0308 	add.w	r3, r7, #8
 8004076:	4618      	mov	r0, r3
 8004078:	f00b f956 	bl	800f328 <HAL_RCCEx_PeriphCLKConfig>
 800407c:	4603      	mov	r3, r0
 800407e:	2b00      	cmp	r3, #0
 8004080:	d001      	beq.n	8004086 <HAL_RTC_MspInit+0x46>
    {
      Error_Handler();
 8004082:	f7ff fd73 	bl	8003b6c <Error_Handler>
    }

    /* RTC clock enable */
    __HAL_RCC_RTC_ENABLE();
 8004086:	4b07      	ldr	r3, [pc, #28]	; (80040a4 <HAL_RTC_MspInit+0x64>)
 8004088:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800408a:	4a06      	ldr	r2, [pc, #24]	; (80040a4 <HAL_RTC_MspInit+0x64>)
 800408c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004090:	6713      	str	r3, [r2, #112]	; 0x70
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }
}
 8004092:	bf00      	nop
 8004094:	37c8      	adds	r7, #200	; 0xc8
 8004096:	46bd      	mov	sp, r7
 8004098:	bd80      	pop	{r7, pc}
 800409a:	bf00      	nop
 800409c:	58004000 	.word	0x58004000
 80040a0:	00019300 	.word	0x00019300
 80040a4:	58024400 	.word	0x58024400

080040a8 <init_adc_dma>:
static uint16_t erpa_spi_raw_data[1];
static uint16_t pmt_spi_raw_data[1];
static uint8_t raw_i2c[2];

// Public Functions
uint8_t init_adc_dma() {
 80040a8:	b580      	push	{r7, lr}
 80040aa:	b082      	sub	sp, #8
 80040ac:	af00      	add	r7, sp, #0
	uint8_t status = 0;
 80040ae:	2300      	movs	r3, #0
 80040b0:	71fb      	strb	r3, [r7, #7]

	if (HAL_ADCEx_Calibration_Start(&hadc1, ADC_CALIB_OFFSET_LINEARITY,
 80040b2:	f240 72ff 	movw	r2, #2047	; 0x7ff
 80040b6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80040ba:	481f      	ldr	r0, [pc, #124]	; (8004138 <init_adc_dma+0x90>)
 80040bc:	f003 fb98 	bl	80077f0 <HAL_ADCEx_Calibration_Start>
 80040c0:	4603      	mov	r3, r0
 80040c2:	2b00      	cmp	r3, #0
 80040c4:	d001      	beq.n	80040ca <init_adc_dma+0x22>
	ADC_SINGLE_ENDED) != HAL_OK) {
		Error_Handler();
 80040c6:	f7ff fd51 	bl	8003b6c <Error_Handler>
	}

	if (HAL_ADC_Start_DMA(&hadc1, (uint32_t*) ADC1_raw_data,
 80040ca:	220b      	movs	r2, #11
 80040cc:	491b      	ldr	r1, [pc, #108]	; (800413c <init_adc_dma+0x94>)
 80040ce:	481a      	ldr	r0, [pc, #104]	; (8004138 <init_adc_dma+0x90>)
 80040d0:	f002 fc6c 	bl	80069ac <HAL_ADC_Start_DMA>
 80040d4:	4603      	mov	r3, r0
 80040d6:	2b00      	cmp	r3, #0
 80040d8:	d001      	beq.n	80040de <init_adc_dma+0x36>
	ADC1_NUM_CHANNELS) != HAL_OK) {
		Error_Handler();
 80040da:	f7ff fd47 	bl	8003b6c <Error_Handler>
	}

	if (HAL_ADCEx_Calibration_Start(&hadc3, ADC_CALIB_OFFSET_LINEARITY,
 80040de:	f240 72ff 	movw	r2, #2047	; 0x7ff
 80040e2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80040e6:	4816      	ldr	r0, [pc, #88]	; (8004140 <init_adc_dma+0x98>)
 80040e8:	f003 fb82 	bl	80077f0 <HAL_ADCEx_Calibration_Start>
 80040ec:	4603      	mov	r3, r0
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	d001      	beq.n	80040f6 <init_adc_dma+0x4e>
	ADC_SINGLE_ENDED) != HAL_OK) {
		Error_Handler();
 80040f2:	f7ff fd3b 	bl	8003b6c <Error_Handler>
	}

	if (HAL_ADC_Start_DMA(&hadc3, (uint32_t*) ADC3_raw_data,
 80040f6:	2204      	movs	r2, #4
 80040f8:	4912      	ldr	r1, [pc, #72]	; (8004144 <init_adc_dma+0x9c>)
 80040fa:	4811      	ldr	r0, [pc, #68]	; (8004140 <init_adc_dma+0x98>)
 80040fc:	f002 fc56 	bl	80069ac <HAL_ADC_Start_DMA>
 8004100:	4603      	mov	r3, r0
 8004102:	2b00      	cmp	r3, #0
 8004104:	d001      	beq.n	800410a <init_adc_dma+0x62>
	ADC3_NUM_CHANNELS) != HAL_OK) {
		Error_Handler();
 8004106:	f7ff fd31 	bl	8003b6c <Error_Handler>
	}
	hspi2.Instance->CR1 |= 1 << 10;
 800410a:	4b0f      	ldr	r3, [pc, #60]	; (8004148 <init_adc_dma+0xa0>)
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	681a      	ldr	r2, [r3, #0]
 8004110:	4b0d      	ldr	r3, [pc, #52]	; (8004148 <init_adc_dma+0xa0>)
 8004112:	681b      	ldr	r3, [r3, #0]
 8004114:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004118:	601a      	str	r2, [r3, #0]
	hspi1.Instance->CR1 |= 1 << 10;
 800411a:	4b0c      	ldr	r3, [pc, #48]	; (800414c <init_adc_dma+0xa4>)
 800411c:	681b      	ldr	r3, [r3, #0]
 800411e:	681a      	ldr	r2, [r3, #0]
 8004120:	4b0a      	ldr	r3, [pc, #40]	; (800414c <init_adc_dma+0xa4>)
 8004122:	681b      	ldr	r3, [r3, #0]
 8004124:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004128:	601a      	str	r2, [r3, #0]


	status = 1;
 800412a:	2301      	movs	r3, #1
 800412c:	71fb      	strb	r3, [r7, #7]

	return status;
 800412e:	79fb      	ldrb	r3, [r7, #7]
}
 8004130:	4618      	mov	r0, r3
 8004132:	3708      	adds	r7, #8
 8004134:	46bd      	mov	sp, r7
 8004136:	bd80      	pop	{r7, pc}
 8004138:	2400015c 	.word	0x2400015c
 800413c:	24001b20 	.word	0x24001b20
 8004140:	240001c0 	.word	0x240001c0
 8004144:	24001b40 	.word	0x24001b40
 8004148:	24001bdc 	.word	0x24001bdc
 800414c:	24001b54 	.word	0x24001b54

08004150 <sample_pmt_spi>:
//{
//	HAL_SPI_Receive_IT(&hspi2, (uint8_t*) erpa_spi_raw_data, 1);
//
//}

void sample_pmt_spi(uint8_t *buffer) {
 8004150:	b580      	push	{r7, lr}
 8004152:	b084      	sub	sp, #16
 8004154:	af00      	add	r7, sp, #0
 8004156:	6078      	str	r0, [r7, #4]
	uint8_t spi_MSB;
	uint8_t spi_LSB;

	HAL_SPI_Receive_DMA(&hspi1, (uint8_t*) pmt_spi_raw_data, 1);
 8004158:	2201      	movs	r2, #1
 800415a:	490b      	ldr	r1, [pc, #44]	; (8004188 <sample_pmt_spi+0x38>)
 800415c:	480b      	ldr	r0, [pc, #44]	; (800418c <sample_pmt_spi+0x3c>)
 800415e:	f00e fa27 	bl	80125b0 <HAL_SPI_Receive_DMA>

	spi_LSB = ((pmt_spi_raw_data[0] & 0xFF00) >> 8);
 8004162:	4b09      	ldr	r3, [pc, #36]	; (8004188 <sample_pmt_spi+0x38>)
 8004164:	881b      	ldrh	r3, [r3, #0]
 8004166:	0a1b      	lsrs	r3, r3, #8
 8004168:	b29b      	uxth	r3, r3
 800416a:	73fb      	strb	r3, [r7, #15]
	spi_MSB = (pmt_spi_raw_data[0] & 0xFF);
 800416c:	4b06      	ldr	r3, [pc, #24]	; (8004188 <sample_pmt_spi+0x38>)
 800416e:	881b      	ldrh	r3, [r3, #0]
 8004170:	73bb      	strb	r3, [r7, #14]


	buffer[0] = spi_LSB;
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	7bfa      	ldrb	r2, [r7, #15]
 8004176:	701a      	strb	r2, [r3, #0]
	buffer[1] = spi_MSB;
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	3301      	adds	r3, #1
 800417c:	7bba      	ldrb	r2, [r7, #14]
 800417e:	701a      	strb	r2, [r3, #0]
}
 8004180:	bf00      	nop
 8004182:	3710      	adds	r7, #16
 8004184:	46bd      	mov	sp, r7
 8004186:	bd80      	pop	{r7, pc}
 8004188:	24001b4c 	.word	0x24001b4c
 800418c:	24001b54 	.word	0x24001b54

08004190 <sample_erpa_spi>:


void sample_erpa_spi(uint8_t *buffer) {
 8004190:	b580      	push	{r7, lr}
 8004192:	b084      	sub	sp, #16
 8004194:	af00      	add	r7, sp, #0
 8004196:	6078      	str	r0, [r7, #4]
	uint8_t spi_MSB;
	uint8_t spi_LSB;
	HAL_SPI_Receive_DMA(&hspi2, (uint8_t*) erpa_spi_raw_data, 1);
 8004198:	2201      	movs	r2, #1
 800419a:	490b      	ldr	r1, [pc, #44]	; (80041c8 <sample_erpa_spi+0x38>)
 800419c:	480b      	ldr	r0, [pc, #44]	; (80041cc <sample_erpa_spi+0x3c>)
 800419e:	f00e fa07 	bl	80125b0 <HAL_SPI_Receive_DMA>

	spi_LSB = ((erpa_spi_raw_data[0] & 0xFF00) >> 8);
 80041a2:	4b09      	ldr	r3, [pc, #36]	; (80041c8 <sample_erpa_spi+0x38>)
 80041a4:	881b      	ldrh	r3, [r3, #0]
 80041a6:	0a1b      	lsrs	r3, r3, #8
 80041a8:	b29b      	uxth	r3, r3
 80041aa:	73fb      	strb	r3, [r7, #15]
	spi_MSB = (erpa_spi_raw_data[0] & 0xFF);
 80041ac:	4b06      	ldr	r3, [pc, #24]	; (80041c8 <sample_erpa_spi+0x38>)
 80041ae:	881b      	ldrh	r3, [r3, #0]
 80041b0:	73bb      	strb	r3, [r7, #14]


	buffer[0] = spi_LSB;
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	7bfa      	ldrb	r2, [r7, #15]
 80041b6:	701a      	strb	r2, [r3, #0]
	buffer[1] = spi_MSB;
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	3301      	adds	r3, #1
 80041bc:	7bba      	ldrb	r2, [r7, #14]
 80041be:	701a      	strb	r2, [r3, #0]
}
 80041c0:	bf00      	nop
 80041c2:	3710      	adds	r7, #16
 80041c4:	46bd      	mov	sp, r7
 80041c6:	bd80      	pop	{r7, pc}
 80041c8:	24001b48 	.word	0x24001b48
 80041cc:	24001bdc 	.word	0x24001bdc

080041d0 <sample_erpa_adc>:




void sample_erpa_adc(uint16_t *buffer) {
 80041d0:	b480      	push	{r7}
 80041d2:	b085      	sub	sp, #20
 80041d4:	af00      	add	r7, sp, #0
 80041d6:	6078      	str	r0, [r7, #4]
	uint16_t PC4 = ADC1_raw_data[1];
 80041d8:	4b05      	ldr	r3, [pc, #20]	; (80041f0 <sample_erpa_adc+0x20>)
 80041da:	885b      	ldrh	r3, [r3, #2]
 80041dc:	81fb      	strh	r3, [r7, #14]

	buffer[0] = PC4;
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	89fa      	ldrh	r2, [r7, #14]
 80041e2:	801a      	strh	r2, [r3, #0]
}
 80041e4:	bf00      	nop
 80041e6:	3714      	adds	r7, #20
 80041e8:	46bd      	mov	sp, r7
 80041ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041ee:	4770      	bx	lr
 80041f0:	24001b20 	.word	0x24001b20

080041f4 <sample_hk_i2c>:

void sample_hk_i2c(int16_t *buffer) {
 80041f4:	b580      	push	{r7, lr}
 80041f6:	b084      	sub	sp, #16
 80041f8:	af00      	add	r7, sp, #0
 80041fa:	6078      	str	r0, [r7, #4]
	int16_t output1 = poll_i2c_sensor(ADT7410_1);
 80041fc:	2390      	movs	r3, #144	; 0x90
 80041fe:	4618      	mov	r0, r3
 8004200:	f000 f8a2 	bl	8004348 <poll_i2c_sensor>
 8004204:	4603      	mov	r3, r0
 8004206:	81fb      	strh	r3, [r7, #14]
	int16_t output2 = poll_i2c_sensor(ADT7410_2);
 8004208:	2394      	movs	r3, #148	; 0x94
 800420a:	4618      	mov	r0, r3
 800420c:	f000 f89c 	bl	8004348 <poll_i2c_sensor>
 8004210:	4603      	mov	r3, r0
 8004212:	81bb      	strh	r3, [r7, #12]
	int16_t output3 = poll_i2c_sensor(ADT7410_3);
 8004214:	2392      	movs	r3, #146	; 0x92
 8004216:	4618      	mov	r0, r3
 8004218:	f000 f896 	bl	8004348 <poll_i2c_sensor>
 800421c:	4603      	mov	r3, r0
 800421e:	817b      	strh	r3, [r7, #10]
	int16_t output4 = poll_i2c_sensor(ADT7410_4);
 8004220:	2396      	movs	r3, #150	; 0x96
 8004222:	4618      	mov	r0, r3
 8004224:	f000 f890 	bl	8004348 <poll_i2c_sensor>
 8004228:	4603      	mov	r3, r0
 800422a:	813b      	strh	r3, [r7, #8]

	buffer[0] = output1;
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	89fa      	ldrh	r2, [r7, #14]
 8004230:	801a      	strh	r2, [r3, #0]
	buffer[1] = output2;
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	3302      	adds	r3, #2
 8004236:	89ba      	ldrh	r2, [r7, #12]
 8004238:	801a      	strh	r2, [r3, #0]
	buffer[2] = output3;
 800423a:	687b      	ldr	r3, [r7, #4]
 800423c:	3304      	adds	r3, #4
 800423e:	897a      	ldrh	r2, [r7, #10]
 8004240:	801a      	strh	r2, [r3, #0]
	buffer[3] = output4;
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	3306      	adds	r3, #6
 8004246:	893a      	ldrh	r2, [r7, #8]
 8004248:	801a      	strh	r2, [r3, #0]
}
 800424a:	bf00      	nop
 800424c:	3710      	adds	r7, #16
 800424e:	46bd      	mov	sp, r7
 8004250:	bd80      	pop	{r7, pc}
	...

08004254 <sample_hk_adc1>:

void sample_hk_adc1(uint16_t *buffer) {
 8004254:	b480      	push	{r7}
 8004256:	b089      	sub	sp, #36	; 0x24
 8004258:	af00      	add	r7, sp, #0
 800425a:	6078      	str	r0, [r7, #4]
	uint16_t PA1 = ADC1_raw_data[10];
 800425c:	4b25      	ldr	r3, [pc, #148]	; (80042f4 <sample_hk_adc1+0xa0>)
 800425e:	8a9b      	ldrh	r3, [r3, #20]
 8004260:	83fb      	strh	r3, [r7, #30]
	uint16_t PA2 = ADC1_raw_data[8];
 8004262:	4b24      	ldr	r3, [pc, #144]	; (80042f4 <sample_hk_adc1+0xa0>)
 8004264:	8a1b      	ldrh	r3, [r3, #16]
 8004266:	83bb      	strh	r3, [r7, #28]
	uint16_t PC0 = ADC1_raw_data[6];
 8004268:	4b22      	ldr	r3, [pc, #136]	; (80042f4 <sample_hk_adc1+0xa0>)
 800426a:	899b      	ldrh	r3, [r3, #12]
 800426c:	837b      	strh	r3, [r7, #26]
	uint16_t PA3 = ADC1_raw_data[9];
 800426e:	4b21      	ldr	r3, [pc, #132]	; (80042f4 <sample_hk_adc1+0xa0>)
 8004270:	8a5b      	ldrh	r3, [r3, #18]
 8004272:	833b      	strh	r3, [r7, #24]
	uint16_t PB1 = ADC1_raw_data[2];
 8004274:	4b1f      	ldr	r3, [pc, #124]	; (80042f4 <sample_hk_adc1+0xa0>)
 8004276:	889b      	ldrh	r3, [r3, #4]
 8004278:	82fb      	strh	r3, [r7, #22]
	uint16_t PA7 = ADC1_raw_data[3];
 800427a:	4b1e      	ldr	r3, [pc, #120]	; (80042f4 <sample_hk_adc1+0xa0>)
 800427c:	88db      	ldrh	r3, [r3, #6]
 800427e:	82bb      	strh	r3, [r7, #20]
	uint16_t PC1 = ADC1_raw_data[7];
 8004280:	4b1c      	ldr	r3, [pc, #112]	; (80042f4 <sample_hk_adc1+0xa0>)
 8004282:	89db      	ldrh	r3, [r3, #14]
 8004284:	827b      	strh	r3, [r7, #18]
	uint16_t PC5 = ADC1_raw_data[4];
 8004286:	4b1b      	ldr	r3, [pc, #108]	; (80042f4 <sample_hk_adc1+0xa0>)
 8004288:	891b      	ldrh	r3, [r3, #8]
 800428a:	823b      	strh	r3, [r7, #16]
	uint16_t PA6 = ADC1_raw_data[0];
 800428c:	4b19      	ldr	r3, [pc, #100]	; (80042f4 <sample_hk_adc1+0xa0>)
 800428e:	881b      	ldrh	r3, [r3, #0]
 8004290:	81fb      	strh	r3, [r7, #14]
	uint16_t PB0 = ADC1_raw_data[5];
 8004292:	4b18      	ldr	r3, [pc, #96]	; (80042f4 <sample_hk_adc1+0xa0>)
 8004294:	895b      	ldrh	r3, [r3, #10]
 8004296:	81bb      	strh	r3, [r7, #12]

	buffer[0] = PA1;
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	8bfa      	ldrh	r2, [r7, #30]
 800429c:	801a      	strh	r2, [r3, #0]
	buffer[1] = PA2;
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	3302      	adds	r3, #2
 80042a2:	8bba      	ldrh	r2, [r7, #28]
 80042a4:	801a      	strh	r2, [r3, #0]
	buffer[2] = PC0;
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	3304      	adds	r3, #4
 80042aa:	8b7a      	ldrh	r2, [r7, #26]
 80042ac:	801a      	strh	r2, [r3, #0]
	buffer[3] = PA3;
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	3306      	adds	r3, #6
 80042b2:	8b3a      	ldrh	r2, [r7, #24]
 80042b4:	801a      	strh	r2, [r3, #0]
	buffer[4] = PB1;
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	3308      	adds	r3, #8
 80042ba:	8afa      	ldrh	r2, [r7, #22]
 80042bc:	801a      	strh	r2, [r3, #0]
	buffer[5] = PA7;
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	330a      	adds	r3, #10
 80042c2:	8aba      	ldrh	r2, [r7, #20]
 80042c4:	801a      	strh	r2, [r3, #0]
	buffer[6] = PC1;
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	330c      	adds	r3, #12
 80042ca:	8a7a      	ldrh	r2, [r7, #18]
 80042cc:	801a      	strh	r2, [r3, #0]
	buffer[7] = PC5;
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	330e      	adds	r3, #14
 80042d2:	8a3a      	ldrh	r2, [r7, #16]
 80042d4:	801a      	strh	r2, [r3, #0]
	buffer[8] = PA6;
 80042d6:	687b      	ldr	r3, [r7, #4]
 80042d8:	3310      	adds	r3, #16
 80042da:	89fa      	ldrh	r2, [r7, #14]
 80042dc:	801a      	strh	r2, [r3, #0]
	buffer[9] = PB0;
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	3312      	adds	r3, #18
 80042e2:	89ba      	ldrh	r2, [r7, #12]
 80042e4:	801a      	strh	r2, [r3, #0]
}
 80042e6:	bf00      	nop
 80042e8:	3724      	adds	r7, #36	; 0x24
 80042ea:	46bd      	mov	sp, r7
 80042ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042f0:	4770      	bx	lr
 80042f2:	bf00      	nop
 80042f4:	24001b20 	.word	0x24001b20

080042f8 <sample_hk_adc3>:

void sample_hk_adc3(uint16_t *buffer) {
 80042f8:	b480      	push	{r7}
 80042fa:	b085      	sub	sp, #20
 80042fc:	af00      	add	r7, sp, #0
 80042fe:	6078      	str	r0, [r7, #4]
	uint16_t vrefint = ADC3_raw_data[0];
 8004300:	4b10      	ldr	r3, [pc, #64]	; (8004344 <sample_hk_adc3+0x4c>)
 8004302:	881b      	ldrh	r3, [r3, #0]
 8004304:	81fb      	strh	r3, [r7, #14]
	uint16_t vsense = ADC3_raw_data[1];
 8004306:	4b0f      	ldr	r3, [pc, #60]	; (8004344 <sample_hk_adc3+0x4c>)
 8004308:	885b      	ldrh	r3, [r3, #2]
 800430a:	81bb      	strh	r3, [r7, #12]
	uint16_t PC2 = ADC3_raw_data[2];
 800430c:	4b0d      	ldr	r3, [pc, #52]	; (8004344 <sample_hk_adc3+0x4c>)
 800430e:	889b      	ldrh	r3, [r3, #4]
 8004310:	817b      	strh	r3, [r7, #10]
	uint16_t PC3 = ADC3_raw_data[3];
 8004312:	4b0c      	ldr	r3, [pc, #48]	; (8004344 <sample_hk_adc3+0x4c>)
 8004314:	88db      	ldrh	r3, [r3, #6]
 8004316:	813b      	strh	r3, [r7, #8]

	buffer[0] = vrefint;
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	89fa      	ldrh	r2, [r7, #14]
 800431c:	801a      	strh	r2, [r3, #0]
	buffer[1] = vsense;
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	3302      	adds	r3, #2
 8004322:	89ba      	ldrh	r2, [r7, #12]
 8004324:	801a      	strh	r2, [r3, #0]
	buffer[2] = PC2;
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	3304      	adds	r3, #4
 800432a:	897a      	ldrh	r2, [r7, #10]
 800432c:	801a      	strh	r2, [r3, #0]
	buffer[3] = PC3;
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	3306      	adds	r3, #6
 8004332:	893a      	ldrh	r2, [r7, #8]
 8004334:	801a      	strh	r2, [r3, #0]
}
 8004336:	bf00      	nop
 8004338:	3714      	adds	r7, #20
 800433a:	46bd      	mov	sp, r7
 800433c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004340:	4770      	bx	lr
 8004342:	bf00      	nop
 8004344:	24001b40 	.word	0x24001b40

08004348 <poll_i2c_sensor>:


int16_t poll_i2c_sensor(const uint8_t TEMP_ADDR) {
 8004348:	b580      	push	{r7, lr}
 800434a:	b084      	sub	sp, #16
 800434c:	af00      	add	r7, sp, #0
 800434e:	4603      	mov	r3, r0
 8004350:	71fb      	strb	r3, [r7, #7]
	int16_t output;
	HAL_StatusTypeDef ret;
	raw_i2c[0] = REG_TEMP;
 8004352:	2200      	movs	r2, #0
 8004354:	4b20      	ldr	r3, [pc, #128]	; (80043d8 <poll_i2c_sensor+0x90>)
 8004356:	701a      	strb	r2, [r3, #0]


	ret = HAL_I2C_Master_Transmit_DMA(&hi2c1, TEMP_ADDR, (uint8_t*) raw_i2c, 1);
 8004358:	79fb      	ldrb	r3, [r7, #7]
 800435a:	b299      	uxth	r1, r3
 800435c:	2301      	movs	r3, #1
 800435e:	4a1e      	ldr	r2, [pc, #120]	; (80043d8 <poll_i2c_sensor+0x90>)
 8004360:	481e      	ldr	r0, [pc, #120]	; (80043dc <poll_i2c_sensor+0x94>)
 8004362:	f007 fc1b 	bl	800bb9c <HAL_I2C_Master_Transmit_DMA>
 8004366:	4603      	mov	r3, r0
 8004368:	737b      	strb	r3, [r7, #13]
	if (ret != HAL_OK) {
 800436a:	7b7b      	ldrb	r3, [r7, #13]
 800436c:	2b00      	cmp	r3, #0
 800436e:	d003      	beq.n	8004378 <poll_i2c_sensor+0x30>
		printf("I2C TX Error\n");
 8004370:	481b      	ldr	r0, [pc, #108]	; (80043e0 <poll_i2c_sensor+0x98>)
 8004372:	f016 fbd9 	bl	801ab28 <puts>
 8004376:	e028      	b.n	80043ca <poll_i2c_sensor+0x82>
	} else {
		/* Read 2 bytes from the temperature register */
		while (HAL_I2C_GetState(&hi2c1) != HAL_I2C_STATE_READY) {};
 8004378:	bf00      	nop
 800437a:	4818      	ldr	r0, [pc, #96]	; (80043dc <poll_i2c_sensor+0x94>)
 800437c:	f007 fef5 	bl	800c16a <HAL_I2C_GetState>
 8004380:	4603      	mov	r3, r0
 8004382:	2b20      	cmp	r3, #32
 8004384:	d1f9      	bne.n	800437a <poll_i2c_sensor+0x32>
		ret = HAL_I2C_Master_Receive_DMA(&hi2c1, TEMP_ADDR, (uint8_t*) raw_i2c, 2);
 8004386:	79fb      	ldrb	r3, [r7, #7]
 8004388:	b299      	uxth	r1, r3
 800438a:	2302      	movs	r3, #2
 800438c:	4a12      	ldr	r2, [pc, #72]	; (80043d8 <poll_i2c_sensor+0x90>)
 800438e:	4813      	ldr	r0, [pc, #76]	; (80043dc <poll_i2c_sensor+0x94>)
 8004390:	f007 fd18 	bl	800bdc4 <HAL_I2C_Master_Receive_DMA>
 8004394:	4603      	mov	r3, r0
 8004396:	737b      	strb	r3, [r7, #13]
		if (ret != HAL_OK) {
 8004398:	7b7b      	ldrb	r3, [r7, #13]
 800439a:	2b00      	cmp	r3, #0
 800439c:	d003      	beq.n	80043a6 <poll_i2c_sensor+0x5e>
			printf("I2C RX Error\n");
 800439e:	4811      	ldr	r0, [pc, #68]	; (80043e4 <poll_i2c_sensor+0x9c>)
 80043a0:	f016 fbc2 	bl	801ab28 <puts>
 80043a4:	e011      	b.n	80043ca <poll_i2c_sensor+0x82>
		} else {
			while (HAL_I2C_GetState(&hi2c1) != HAL_I2C_STATE_READY) {};
 80043a6:	bf00      	nop
 80043a8:	480c      	ldr	r0, [pc, #48]	; (80043dc <poll_i2c_sensor+0x94>)
 80043aa:	f007 fede 	bl	800c16a <HAL_I2C_GetState>
 80043ae:	4603      	mov	r3, r0
 80043b0:	2b20      	cmp	r3, #32
 80043b2:	d1f9      	bne.n	80043a8 <poll_i2c_sensor+0x60>
			output = (int16_t) (raw_i2c[0] << 8);
 80043b4:	4b08      	ldr	r3, [pc, #32]	; (80043d8 <poll_i2c_sensor+0x90>)
 80043b6:	781b      	ldrb	r3, [r3, #0]
 80043b8:	021b      	lsls	r3, r3, #8
 80043ba:	81fb      	strh	r3, [r7, #14]
			output = (output | raw_i2c[1]) >> 3;
 80043bc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80043c0:	4a05      	ldr	r2, [pc, #20]	; (80043d8 <poll_i2c_sensor+0x90>)
 80043c2:	7852      	ldrb	r2, [r2, #1]
 80043c4:	4313      	orrs	r3, r2
 80043c6:	10db      	asrs	r3, r3, #3
 80043c8:	81fb      	strh	r3, [r7, #14]
		}
	}
	return output;
 80043ca:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
}
 80043ce:	4618      	mov	r0, r3
 80043d0:	3710      	adds	r7, #16
 80043d2:	46bd      	mov	sp, r7
 80043d4:	bd80      	pop	{r7, pc}
 80043d6:	bf00      	nop
 80043d8:	24001b50 	.word	0x24001b50
 80043dc:	2400193c 	.word	0x2400193c
 80043e0:	0801b690 	.word	0x0801b690
 80043e4:	0801b6a0 	.word	0x0801b6a0

080043e8 <MX_SPI1_Init>:
DMA_HandleTypeDef hdma_spi1_rx;
DMA_HandleTypeDef hdma_spi2_rx;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 80043e8:	b580      	push	{r7, lr}
 80043ea:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 80043ec:	4b28      	ldr	r3, [pc, #160]	; (8004490 <MX_SPI1_Init+0xa8>)
 80043ee:	4a29      	ldr	r2, [pc, #164]	; (8004494 <MX_SPI1_Init+0xac>)
 80043f0:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80043f2:	4b27      	ldr	r3, [pc, #156]	; (8004490 <MX_SPI1_Init+0xa8>)
 80043f4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80043f8:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 80043fa:	4b25      	ldr	r3, [pc, #148]	; (8004490 <MX_SPI1_Init+0xa8>)
 80043fc:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8004400:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 8004402:	4b23      	ldr	r3, [pc, #140]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004404:	220f      	movs	r2, #15
 8004406:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8004408:	4b21      	ldr	r3, [pc, #132]	; (8004490 <MX_SPI1_Init+0xa8>)
 800440a:	2200      	movs	r2, #0
 800440c:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800440e:	4b20      	ldr	r3, [pc, #128]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004410:	2200      	movs	r2, #0
 8004412:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8004414:	4b1e      	ldr	r3, [pc, #120]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004416:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800441a:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 800441c:	4b1c      	ldr	r3, [pc, #112]	; (8004490 <MX_SPI1_Init+0xa8>)
 800441e:	f04f 42e0 	mov.w	r2, #1879048192	; 0x70000000
 8004422:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8004424:	4b1a      	ldr	r3, [pc, #104]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004426:	2200      	movs	r2, #0
 8004428:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800442a:	4b19      	ldr	r3, [pc, #100]	; (8004490 <MX_SPI1_Init+0xa8>)
 800442c:	2200      	movs	r2, #0
 800442e:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004430:	4b17      	ldr	r3, [pc, #92]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004432:	2200      	movs	r2, #0
 8004434:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 0x0;
 8004436:	4b16      	ldr	r3, [pc, #88]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004438:	2200      	movs	r2, #0
 800443a:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 800443c:	4b14      	ldr	r3, [pc, #80]	; (8004490 <MX_SPI1_Init+0xa8>)
 800443e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004442:	635a      	str	r2, [r3, #52]	; 0x34
  hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8004444:	4b12      	ldr	r3, [pc, #72]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004446:	2200      	movs	r2, #0
 8004448:	639a      	str	r2, [r3, #56]	; 0x38
  hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 800444a:	4b11      	ldr	r3, [pc, #68]	; (8004490 <MX_SPI1_Init+0xa8>)
 800444c:	2200      	movs	r2, #0
 800444e:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8004450:	4b0f      	ldr	r3, [pc, #60]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004452:	2200      	movs	r2, #0
 8004454:	641a      	str	r2, [r3, #64]	; 0x40
  hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8004456:	4b0e      	ldr	r3, [pc, #56]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004458:	2200      	movs	r2, #0
 800445a:	645a      	str	r2, [r3, #68]	; 0x44
  hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 800445c:	4b0c      	ldr	r3, [pc, #48]	; (8004490 <MX_SPI1_Init+0xa8>)
 800445e:	2200      	movs	r2, #0
 8004460:	649a      	str	r2, [r3, #72]	; 0x48
  hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8004462:	4b0b      	ldr	r3, [pc, #44]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004464:	2200      	movs	r2, #0
 8004466:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8004468:	4b09      	ldr	r3, [pc, #36]	; (8004490 <MX_SPI1_Init+0xa8>)
 800446a:	2200      	movs	r2, #0
 800446c:	651a      	str	r2, [r3, #80]	; 0x50
  hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 800446e:	4b08      	ldr	r3, [pc, #32]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004470:	2200      	movs	r2, #0
 8004472:	655a      	str	r2, [r3, #84]	; 0x54
  hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8004474:	4b06      	ldr	r3, [pc, #24]	; (8004490 <MX_SPI1_Init+0xa8>)
 8004476:	2200      	movs	r2, #0
 8004478:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800447a:	4805      	ldr	r0, [pc, #20]	; (8004490 <MX_SPI1_Init+0xa8>)
 800447c:	f00d ff74 	bl	8012368 <HAL_SPI_Init>
 8004480:	4603      	mov	r3, r0
 8004482:	2b00      	cmp	r3, #0
 8004484:	d001      	beq.n	800448a <MX_SPI1_Init+0xa2>
  {
    Error_Handler();
 8004486:	f7ff fb71 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 800448a:	bf00      	nop
 800448c:	bd80      	pop	{r7, pc}
 800448e:	bf00      	nop
 8004490:	24001b54 	.word	0x24001b54
 8004494:	40013000 	.word	0x40013000

08004498 <MX_SPI2_Init>:
/* SPI2 init function */
void MX_SPI2_Init(void)
{
 8004498:	b580      	push	{r7, lr}
 800449a:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 800449c:	4b28      	ldr	r3, [pc, #160]	; (8004540 <MX_SPI2_Init+0xa8>)
 800449e:	4a29      	ldr	r2, [pc, #164]	; (8004544 <MX_SPI2_Init+0xac>)
 80044a0:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80044a2:	4b27      	ldr	r3, [pc, #156]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044a4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80044a8:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 80044aa:	4b25      	ldr	r3, [pc, #148]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044ac:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80044b0:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 80044b2:	4b23      	ldr	r3, [pc, #140]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044b4:	220f      	movs	r2, #15
 80044b6:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 80044b8:	4b21      	ldr	r3, [pc, #132]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044ba:	2200      	movs	r2, #0
 80044bc:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80044be:	4b20      	ldr	r3, [pc, #128]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044c0:	2200      	movs	r2, #0
 80044c2:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80044c4:	4b1e      	ldr	r3, [pc, #120]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044c6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80044ca:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 80044cc:	4b1c      	ldr	r3, [pc, #112]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044ce:	f04f 42e0 	mov.w	r2, #1879048192	; 0x70000000
 80044d2:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80044d4:	4b1a      	ldr	r3, [pc, #104]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044d6:	2200      	movs	r2, #0
 80044d8:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80044da:	4b19      	ldr	r3, [pc, #100]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044dc:	2200      	movs	r2, #0
 80044de:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80044e0:	4b17      	ldr	r3, [pc, #92]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044e2:	2200      	movs	r2, #0
 80044e4:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 0x0;
 80044e6:	4b16      	ldr	r3, [pc, #88]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044e8:	2200      	movs	r2, #0
 80044ea:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 80044ec:	4b14      	ldr	r3, [pc, #80]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044ee:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80044f2:	635a      	str	r2, [r3, #52]	; 0x34
  hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 80044f4:	4b12      	ldr	r3, [pc, #72]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044f6:	2200      	movs	r2, #0
 80044f8:	639a      	str	r2, [r3, #56]	; 0x38
  hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 80044fa:	4b11      	ldr	r3, [pc, #68]	; (8004540 <MX_SPI2_Init+0xa8>)
 80044fc:	2200      	movs	r2, #0
 80044fe:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8004500:	4b0f      	ldr	r3, [pc, #60]	; (8004540 <MX_SPI2_Init+0xa8>)
 8004502:	2200      	movs	r2, #0
 8004504:	641a      	str	r2, [r3, #64]	; 0x40
  hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8004506:	4b0e      	ldr	r3, [pc, #56]	; (8004540 <MX_SPI2_Init+0xa8>)
 8004508:	2200      	movs	r2, #0
 800450a:	645a      	str	r2, [r3, #68]	; 0x44
  hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 800450c:	4b0c      	ldr	r3, [pc, #48]	; (8004540 <MX_SPI2_Init+0xa8>)
 800450e:	2200      	movs	r2, #0
 8004510:	649a      	str	r2, [r3, #72]	; 0x48
  hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8004512:	4b0b      	ldr	r3, [pc, #44]	; (8004540 <MX_SPI2_Init+0xa8>)
 8004514:	2200      	movs	r2, #0
 8004516:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8004518:	4b09      	ldr	r3, [pc, #36]	; (8004540 <MX_SPI2_Init+0xa8>)
 800451a:	2200      	movs	r2, #0
 800451c:	651a      	str	r2, [r3, #80]	; 0x50
  hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 800451e:	4b08      	ldr	r3, [pc, #32]	; (8004540 <MX_SPI2_Init+0xa8>)
 8004520:	2200      	movs	r2, #0
 8004522:	655a      	str	r2, [r3, #84]	; 0x54
  hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8004524:	4b06      	ldr	r3, [pc, #24]	; (8004540 <MX_SPI2_Init+0xa8>)
 8004526:	2200      	movs	r2, #0
 8004528:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 800452a:	4805      	ldr	r0, [pc, #20]	; (8004540 <MX_SPI2_Init+0xa8>)
 800452c:	f00d ff1c 	bl	8012368 <HAL_SPI_Init>
 8004530:	4603      	mov	r3, r0
 8004532:	2b00      	cmp	r3, #0
 8004534:	d001      	beq.n	800453a <MX_SPI2_Init+0xa2>
  {
    Error_Handler();
 8004536:	f7ff fb19 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 800453a:	bf00      	nop
 800453c:	bd80      	pop	{r7, pc}
 800453e:	bf00      	nop
 8004540:	24001bdc 	.word	0x24001bdc
 8004544:	40003800 	.word	0x40003800

08004548 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8004548:	b580      	push	{r7, lr}
 800454a:	b0bc      	sub	sp, #240	; 0xf0
 800454c:	af00      	add	r7, sp, #0
 800454e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004550:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8004554:	2200      	movs	r2, #0
 8004556:	601a      	str	r2, [r3, #0]
 8004558:	605a      	str	r2, [r3, #4]
 800455a:	609a      	str	r2, [r3, #8]
 800455c:	60da      	str	r2, [r3, #12]
 800455e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8004560:	f107 0318 	add.w	r3, r7, #24
 8004564:	22c0      	movs	r2, #192	; 0xc0
 8004566:	2100      	movs	r1, #0
 8004568:	4618      	mov	r0, r3
 800456a:	f016 fa67 	bl	801aa3c <memset>
  if(spiHandle->Instance==SPI1)
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	681b      	ldr	r3, [r3, #0]
 8004572:	4a83      	ldr	r2, [pc, #524]	; (8004780 <HAL_SPI_MspInit+0x238>)
 8004574:	4293      	cmp	r3, r2
 8004576:	d17c      	bne.n	8004672 <HAL_SPI_MspInit+0x12a>

  /* USER CODE END SPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI1;
 8004578:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800457c:	f04f 0300 	mov.w	r3, #0
 8004580:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL;
 8004584:	2300      	movs	r3, #0
 8004586:	67bb      	str	r3, [r7, #120]	; 0x78
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8004588:	f107 0318 	add.w	r3, r7, #24
 800458c:	4618      	mov	r0, r3
 800458e:	f00a fecb 	bl	800f328 <HAL_RCCEx_PeriphCLKConfig>
 8004592:	4603      	mov	r3, r0
 8004594:	2b00      	cmp	r3, #0
 8004596:	d001      	beq.n	800459c <HAL_SPI_MspInit+0x54>
    {
      Error_Handler();
 8004598:	f7ff fae8 	bl	8003b6c <Error_Handler>
    }

    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 800459c:	4b79      	ldr	r3, [pc, #484]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 800459e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 80045a2:	4a78      	ldr	r2, [pc, #480]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80045a4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80045a8:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 80045ac:	4b75      	ldr	r3, [pc, #468]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80045ae:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 80045b2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80045b6:	617b      	str	r3, [r7, #20]
 80045b8:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80045ba:	4b72      	ldr	r3, [pc, #456]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80045bc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80045c0:	4a70      	ldr	r2, [pc, #448]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80045c2:	f043 0302 	orr.w	r3, r3, #2
 80045c6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80045ca:	4b6e      	ldr	r3, [pc, #440]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80045cc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80045d0:	f003 0302 	and.w	r3, r3, #2
 80045d4:	613b      	str	r3, [r7, #16]
 80045d6:	693b      	ldr	r3, [r7, #16]
    /**SPI1 GPIO Configuration
    PB3 (JTDO/TRACESWO)     ------> SPI1_SCK
    PB4 (NJTRST)     ------> SPI1_MISO
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
 80045d8:	2318      	movs	r3, #24
 80045da:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80045de:	2302      	movs	r3, #2
 80045e0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80045e4:	2300      	movs	r3, #0
 80045e6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80045ea:	2300      	movs	r3, #0
 80045ec:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80045f0:	2305      	movs	r3, #5
 80045f2:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80045f6:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80045fa:	4619      	mov	r1, r3
 80045fc:	4862      	ldr	r0, [pc, #392]	; (8004788 <HAL_SPI_MspInit+0x240>)
 80045fe:	f007 f84f 	bl	800b6a0 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_RX Init */
    hdma_spi1_rx.Instance = DMA1_Stream4;
 8004602:	4b62      	ldr	r3, [pc, #392]	; (800478c <HAL_SPI_MspInit+0x244>)
 8004604:	4a62      	ldr	r2, [pc, #392]	; (8004790 <HAL_SPI_MspInit+0x248>)
 8004606:	601a      	str	r2, [r3, #0]
    hdma_spi1_rx.Init.Request = DMA_REQUEST_SPI1_RX;
 8004608:	4b60      	ldr	r3, [pc, #384]	; (800478c <HAL_SPI_MspInit+0x244>)
 800460a:	2225      	movs	r2, #37	; 0x25
 800460c:	605a      	str	r2, [r3, #4]
    hdma_spi1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800460e:	4b5f      	ldr	r3, [pc, #380]	; (800478c <HAL_SPI_MspInit+0x244>)
 8004610:	2200      	movs	r2, #0
 8004612:	609a      	str	r2, [r3, #8]
    hdma_spi1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8004614:	4b5d      	ldr	r3, [pc, #372]	; (800478c <HAL_SPI_MspInit+0x244>)
 8004616:	2200      	movs	r2, #0
 8004618:	60da      	str	r2, [r3, #12]
    hdma_spi1_rx.Init.MemInc = DMA_MINC_ENABLE;
 800461a:	4b5c      	ldr	r3, [pc, #368]	; (800478c <HAL_SPI_MspInit+0x244>)
 800461c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004620:	611a      	str	r2, [r3, #16]
    hdma_spi1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8004622:	4b5a      	ldr	r3, [pc, #360]	; (800478c <HAL_SPI_MspInit+0x244>)
 8004624:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004628:	615a      	str	r2, [r3, #20]
    hdma_spi1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800462a:	4b58      	ldr	r3, [pc, #352]	; (800478c <HAL_SPI_MspInit+0x244>)
 800462c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004630:	619a      	str	r2, [r3, #24]
    hdma_spi1_rx.Init.Mode = DMA_NORMAL;
 8004632:	4b56      	ldr	r3, [pc, #344]	; (800478c <HAL_SPI_MspInit+0x244>)
 8004634:	2200      	movs	r2, #0
 8004636:	61da      	str	r2, [r3, #28]
    hdma_spi1_rx.Init.Priority = DMA_PRIORITY_LOW;
 8004638:	4b54      	ldr	r3, [pc, #336]	; (800478c <HAL_SPI_MspInit+0x244>)
 800463a:	2200      	movs	r2, #0
 800463c:	621a      	str	r2, [r3, #32]
    hdma_spi1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 800463e:	4b53      	ldr	r3, [pc, #332]	; (800478c <HAL_SPI_MspInit+0x244>)
 8004640:	2200      	movs	r2, #0
 8004642:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi1_rx) != HAL_OK)
 8004644:	4851      	ldr	r0, [pc, #324]	; (800478c <HAL_SPI_MspInit+0x244>)
 8004646:	f003 fefb 	bl	8008440 <HAL_DMA_Init>
 800464a:	4603      	mov	r3, r0
 800464c:	2b00      	cmp	r3, #0
 800464e:	d001      	beq.n	8004654 <HAL_SPI_MspInit+0x10c>
    {
      Error_Handler();
 8004650:	f7ff fa8c 	bl	8003b6c <Error_Handler>
    }

    __HAL_LINKDMA(spiHandle,hdmarx,hdma_spi1_rx);
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	4a4d      	ldr	r2, [pc, #308]	; (800478c <HAL_SPI_MspInit+0x244>)
 8004658:	67da      	str	r2, [r3, #124]	; 0x7c
 800465a:	4a4c      	ldr	r2, [pc, #304]	; (800478c <HAL_SPI_MspInit+0x244>)
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	6393      	str	r3, [r2, #56]	; 0x38

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 5, 0);
 8004660:	2200      	movs	r2, #0
 8004662:	2105      	movs	r1, #5
 8004664:	2023      	movs	r0, #35	; 0x23
 8004666:	f003 fabd 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 800466a:	2023      	movs	r0, #35	; 0x23
 800466c:	f003 fad4 	bl	8007c18 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 8004670:	e081      	b.n	8004776 <HAL_SPI_MspInit+0x22e>
  else if(spiHandle->Instance==SPI2)
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	4a47      	ldr	r2, [pc, #284]	; (8004794 <HAL_SPI_MspInit+0x24c>)
 8004678:	4293      	cmp	r3, r2
 800467a:	d17c      	bne.n	8004776 <HAL_SPI_MspInit+0x22e>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI2;
 800467c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8004680:	f04f 0300 	mov.w	r3, #0
 8004684:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL;
 8004688:	2300      	movs	r3, #0
 800468a:	67bb      	str	r3, [r7, #120]	; 0x78
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800468c:	f107 0318 	add.w	r3, r7, #24
 8004690:	4618      	mov	r0, r3
 8004692:	f00a fe49 	bl	800f328 <HAL_RCCEx_PeriphCLKConfig>
 8004696:	4603      	mov	r3, r0
 8004698:	2b00      	cmp	r3, #0
 800469a:	d001      	beq.n	80046a0 <HAL_SPI_MspInit+0x158>
      Error_Handler();
 800469c:	f7ff fa66 	bl	8003b6c <Error_Handler>
    __HAL_RCC_SPI2_CLK_ENABLE();
 80046a0:	4b38      	ldr	r3, [pc, #224]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80046a2:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80046a6:	4a37      	ldr	r2, [pc, #220]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80046a8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80046ac:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 80046b0:	4b34      	ldr	r3, [pc, #208]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80046b2:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80046b6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80046ba:	60fb      	str	r3, [r7, #12]
 80046bc:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80046be:	4b31      	ldr	r3, [pc, #196]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80046c0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80046c4:	4a2f      	ldr	r2, [pc, #188]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80046c6:	f043 0302 	orr.w	r3, r3, #2
 80046ca:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80046ce:	4b2d      	ldr	r3, [pc, #180]	; (8004784 <HAL_SPI_MspInit+0x23c>)
 80046d0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80046d4:	f003 0302 	and.w	r3, r3, #2
 80046d8:	60bb      	str	r3, [r7, #8]
 80046da:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 80046dc:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 80046e0:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80046e4:	2302      	movs	r3, #2
 80046e6:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80046ea:	2300      	movs	r3, #0
 80046ec:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80046f0:	2300      	movs	r3, #0
 80046f2:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80046f6:	2305      	movs	r3, #5
 80046f8:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80046fc:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8004700:	4619      	mov	r1, r3
 8004702:	4821      	ldr	r0, [pc, #132]	; (8004788 <HAL_SPI_MspInit+0x240>)
 8004704:	f006 ffcc 	bl	800b6a0 <HAL_GPIO_Init>
    hdma_spi2_rx.Instance = DMA1_Stream3;
 8004708:	4b23      	ldr	r3, [pc, #140]	; (8004798 <HAL_SPI_MspInit+0x250>)
 800470a:	4a24      	ldr	r2, [pc, #144]	; (800479c <HAL_SPI_MspInit+0x254>)
 800470c:	601a      	str	r2, [r3, #0]
    hdma_spi2_rx.Init.Request = DMA_REQUEST_SPI2_RX;
 800470e:	4b22      	ldr	r3, [pc, #136]	; (8004798 <HAL_SPI_MspInit+0x250>)
 8004710:	2227      	movs	r2, #39	; 0x27
 8004712:	605a      	str	r2, [r3, #4]
    hdma_spi2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8004714:	4b20      	ldr	r3, [pc, #128]	; (8004798 <HAL_SPI_MspInit+0x250>)
 8004716:	2200      	movs	r2, #0
 8004718:	609a      	str	r2, [r3, #8]
    hdma_spi2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 800471a:	4b1f      	ldr	r3, [pc, #124]	; (8004798 <HAL_SPI_MspInit+0x250>)
 800471c:	2200      	movs	r2, #0
 800471e:	60da      	str	r2, [r3, #12]
    hdma_spi2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8004720:	4b1d      	ldr	r3, [pc, #116]	; (8004798 <HAL_SPI_MspInit+0x250>)
 8004722:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004726:	611a      	str	r2, [r3, #16]
    hdma_spi2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8004728:	4b1b      	ldr	r3, [pc, #108]	; (8004798 <HAL_SPI_MspInit+0x250>)
 800472a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800472e:	615a      	str	r2, [r3, #20]
    hdma_spi2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8004730:	4b19      	ldr	r3, [pc, #100]	; (8004798 <HAL_SPI_MspInit+0x250>)
 8004732:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004736:	619a      	str	r2, [r3, #24]
    hdma_spi2_rx.Init.Mode = DMA_NORMAL;
 8004738:	4b17      	ldr	r3, [pc, #92]	; (8004798 <HAL_SPI_MspInit+0x250>)
 800473a:	2200      	movs	r2, #0
 800473c:	61da      	str	r2, [r3, #28]
    hdma_spi2_rx.Init.Priority = DMA_PRIORITY_LOW;
 800473e:	4b16      	ldr	r3, [pc, #88]	; (8004798 <HAL_SPI_MspInit+0x250>)
 8004740:	2200      	movs	r2, #0
 8004742:	621a      	str	r2, [r3, #32]
    hdma_spi2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8004744:	4b14      	ldr	r3, [pc, #80]	; (8004798 <HAL_SPI_MspInit+0x250>)
 8004746:	2200      	movs	r2, #0
 8004748:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi2_rx) != HAL_OK)
 800474a:	4813      	ldr	r0, [pc, #76]	; (8004798 <HAL_SPI_MspInit+0x250>)
 800474c:	f003 fe78 	bl	8008440 <HAL_DMA_Init>
 8004750:	4603      	mov	r3, r0
 8004752:	2b00      	cmp	r3, #0
 8004754:	d001      	beq.n	800475a <HAL_SPI_MspInit+0x212>
      Error_Handler();
 8004756:	f7ff fa09 	bl	8003b6c <Error_Handler>
    __HAL_LINKDMA(spiHandle,hdmarx,hdma_spi2_rx);
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	4a0e      	ldr	r2, [pc, #56]	; (8004798 <HAL_SPI_MspInit+0x250>)
 800475e:	67da      	str	r2, [r3, #124]	; 0x7c
 8004760:	4a0d      	ldr	r2, [pc, #52]	; (8004798 <HAL_SPI_MspInit+0x250>)
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_NVIC_SetPriority(SPI2_IRQn, 5, 0);
 8004766:	2200      	movs	r2, #0
 8004768:	2105      	movs	r1, #5
 800476a:	2024      	movs	r0, #36	; 0x24
 800476c:	f003 fa3a 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8004770:	2024      	movs	r0, #36	; 0x24
 8004772:	f003 fa51 	bl	8007c18 <HAL_NVIC_EnableIRQ>
}
 8004776:	bf00      	nop
 8004778:	37f0      	adds	r7, #240	; 0xf0
 800477a:	46bd      	mov	sp, r7
 800477c:	bd80      	pop	{r7, pc}
 800477e:	bf00      	nop
 8004780:	40013000 	.word	0x40013000
 8004784:	58024400 	.word	0x58024400
 8004788:	58020400 	.word	0x58020400
 800478c:	24001c64 	.word	0x24001c64
 8004790:	40020070 	.word	0x40020070
 8004794:	40003800 	.word	0x40003800
 8004798:	24001cdc 	.word	0x24001cdc
 800479c:	40020058 	.word	0x40020058

080047a0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80047a0:	b580      	push	{r7, lr}
 80047a2:	b082      	sub	sp, #8
 80047a4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80047a6:	4b0c      	ldr	r3, [pc, #48]	; (80047d8 <HAL_MspInit+0x38>)
 80047a8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80047ac:	4a0a      	ldr	r2, [pc, #40]	; (80047d8 <HAL_MspInit+0x38>)
 80047ae:	f043 0302 	orr.w	r3, r3, #2
 80047b2:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 80047b6:	4b08      	ldr	r3, [pc, #32]	; (80047d8 <HAL_MspInit+0x38>)
 80047b8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80047bc:	f003 0302 	and.w	r3, r3, #2
 80047c0:	607b      	str	r3, [r7, #4]
 80047c2:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80047c4:	2200      	movs	r2, #0
 80047c6:	210f      	movs	r1, #15
 80047c8:	f06f 0001 	mvn.w	r0, #1
 80047cc:	f003 fa0a 	bl	8007be4 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80047d0:	bf00      	nop
 80047d2:	3708      	adds	r7, #8
 80047d4:	46bd      	mov	sp, r7
 80047d6:	bd80      	pop	{r7, pc}
 80047d8:	58024400 	.word	0x58024400

080047dc <HAL_InitTick>:
 80047dc:	b580      	push	{r7, lr}
 80047de:	b090      	sub	sp, #64	; 0x40
 80047e0:	af00      	add	r7, sp, #0
 80047e2:	6078      	str	r0, [r7, #4]
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	2b0f      	cmp	r3, #15
 80047e8:	d827      	bhi.n	800483a <HAL_InitTick+0x5e>
 80047ea:	2200      	movs	r2, #0
 80047ec:	6879      	ldr	r1, [r7, #4]
 80047ee:	2036      	movs	r0, #54	; 0x36
 80047f0:	f003 f9f8 	bl	8007be4 <HAL_NVIC_SetPriority>
 80047f4:	2036      	movs	r0, #54	; 0x36
 80047f6:	f003 fa0f 	bl	8007c18 <HAL_NVIC_EnableIRQ>
 80047fa:	4a29      	ldr	r2, [pc, #164]	; (80048a0 <HAL_InitTick+0xc4>)
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	6013      	str	r3, [r2, #0]
 8004800:	4b28      	ldr	r3, [pc, #160]	; (80048a4 <HAL_InitTick+0xc8>)
 8004802:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004806:	4a27      	ldr	r2, [pc, #156]	; (80048a4 <HAL_InitTick+0xc8>)
 8004808:	f043 0310 	orr.w	r3, r3, #16
 800480c:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8004810:	4b24      	ldr	r3, [pc, #144]	; (80048a4 <HAL_InitTick+0xc8>)
 8004812:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004816:	f003 0310 	and.w	r3, r3, #16
 800481a:	60fb      	str	r3, [r7, #12]
 800481c:	68fb      	ldr	r3, [r7, #12]
 800481e:	f107 0210 	add.w	r2, r7, #16
 8004822:	f107 0314 	add.w	r3, r7, #20
 8004826:	4611      	mov	r1, r2
 8004828:	4618      	mov	r0, r3
 800482a:	f00a fd3b 	bl	800f2a4 <HAL_RCC_GetClockConfig>
 800482e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004830:	63bb      	str	r3, [r7, #56]	; 0x38
 8004832:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004834:	2b00      	cmp	r3, #0
 8004836:	d106      	bne.n	8004846 <HAL_InitTick+0x6a>
 8004838:	e001      	b.n	800483e <HAL_InitTick+0x62>
 800483a:	2301      	movs	r3, #1
 800483c:	e02b      	b.n	8004896 <HAL_InitTick+0xba>
 800483e:	f00a fd05 	bl	800f24c <HAL_RCC_GetPCLK1Freq>
 8004842:	63f8      	str	r0, [r7, #60]	; 0x3c
 8004844:	e004      	b.n	8004850 <HAL_InitTick+0x74>
 8004846:	f00a fd01 	bl	800f24c <HAL_RCC_GetPCLK1Freq>
 800484a:	4603      	mov	r3, r0
 800484c:	005b      	lsls	r3, r3, #1
 800484e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004850:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004852:	4a15      	ldr	r2, [pc, #84]	; (80048a8 <HAL_InitTick+0xcc>)
 8004854:	fba2 2303 	umull	r2, r3, r2, r3
 8004858:	0c9b      	lsrs	r3, r3, #18
 800485a:	3b01      	subs	r3, #1
 800485c:	637b      	str	r3, [r7, #52]	; 0x34
 800485e:	4b13      	ldr	r3, [pc, #76]	; (80048ac <HAL_InitTick+0xd0>)
 8004860:	4a13      	ldr	r2, [pc, #76]	; (80048b0 <HAL_InitTick+0xd4>)
 8004862:	601a      	str	r2, [r3, #0]
 8004864:	4b11      	ldr	r3, [pc, #68]	; (80048ac <HAL_InitTick+0xd0>)
 8004866:	f240 32e7 	movw	r2, #999	; 0x3e7
 800486a:	60da      	str	r2, [r3, #12]
 800486c:	4a0f      	ldr	r2, [pc, #60]	; (80048ac <HAL_InitTick+0xd0>)
 800486e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004870:	6053      	str	r3, [r2, #4]
 8004872:	4b0e      	ldr	r3, [pc, #56]	; (80048ac <HAL_InitTick+0xd0>)
 8004874:	2200      	movs	r2, #0
 8004876:	611a      	str	r2, [r3, #16]
 8004878:	4b0c      	ldr	r3, [pc, #48]	; (80048ac <HAL_InitTick+0xd0>)
 800487a:	2200      	movs	r2, #0
 800487c:	609a      	str	r2, [r3, #8]
 800487e:	480b      	ldr	r0, [pc, #44]	; (80048ac <HAL_InitTick+0xd0>)
 8004880:	f00e fb11 	bl	8012ea6 <HAL_TIM_Base_Init>
 8004884:	4603      	mov	r3, r0
 8004886:	2b00      	cmp	r3, #0
 8004888:	d104      	bne.n	8004894 <HAL_InitTick+0xb8>
 800488a:	4808      	ldr	r0, [pc, #32]	; (80048ac <HAL_InitTick+0xd0>)
 800488c:	f00e fb62 	bl	8012f54 <HAL_TIM_Base_Start_IT>
 8004890:	4603      	mov	r3, r0
 8004892:	e000      	b.n	8004896 <HAL_InitTick+0xba>
 8004894:	2301      	movs	r3, #1
 8004896:	4618      	mov	r0, r3
 8004898:	3740      	adds	r7, #64	; 0x40
 800489a:	46bd      	mov	sp, r7
 800489c:	bd80      	pop	{r7, pc}
 800489e:	bf00      	nop
 80048a0:	240000cc 	.word	0x240000cc
 80048a4:	58024400 	.word	0x58024400
 80048a8:	431bde83 	.word	0x431bde83
 80048ac:	24001d54 	.word	0x24001d54
 80048b0:	40001000 	.word	0x40001000

080048b4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80048b4:	b480      	push	{r7}
 80048b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
	while (1) {
 80048b8:	e7fe      	b.n	80048b8 <NMI_Handler+0x4>

080048ba <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80048ba:	b480      	push	{r7}
 80048bc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80048be:	e7fe      	b.n	80048be <HardFault_Handler+0x4>

080048c0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80048c0:	b480      	push	{r7}
 80048c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80048c4:	e7fe      	b.n	80048c4 <MemManage_Handler+0x4>

080048c6 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80048c6:	b480      	push	{r7}
 80048c8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80048ca:	e7fe      	b.n	80048ca <BusFault_Handler+0x4>

080048cc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80048cc:	b480      	push	{r7}
 80048ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80048d0:	e7fe      	b.n	80048d0 <UsageFault_Handler+0x4>

080048d2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80048d2:	b480      	push	{r7}
 80048d4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80048d6:	bf00      	nop
 80048d8:	46bd      	mov	sp, r7
 80048da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048de:	4770      	bx	lr

080048e0 <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 80048e0:	b580      	push	{r7, lr}
 80048e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 80048e4:	4802      	ldr	r0, [pc, #8]	; (80048f0 <DMA1_Stream0_IRQHandler+0x10>)
 80048e6:	f005 f8d5 	bl	8009a94 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 80048ea:	bf00      	nop
 80048ec:	bd80      	pop	{r7, pc}
 80048ee:	bf00      	nop
 80048f0:	24000224 	.word	0x24000224

080048f4 <DMA1_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
 80048f4:	b580      	push	{r7, lr}
 80048f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc3);
 80048f8:	4802      	ldr	r0, [pc, #8]	; (8004904 <DMA1_Stream1_IRQHandler+0x10>)
 80048fa:	f005 f8cb 	bl	8009a94 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}
 80048fe:	bf00      	nop
 8004900:	bd80      	pop	{r7, pc}
 8004902:	bf00      	nop
 8004904:	2400029c 	.word	0x2400029c

08004908 <DMA1_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA1 stream2 global interrupt.
  */
void DMA1_Stream2_IRQHandler(void)
{
 8004908:	b580      	push	{r7, lr}
 800490a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */

  /* USER CODE END DMA1_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 800490c:	4802      	ldr	r0, [pc, #8]	; (8004918 <DMA1_Stream2_IRQHandler+0x10>)
 800490e:	f005 f8c1 	bl	8009a94 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */

  /* USER CODE END DMA1_Stream2_IRQn 1 */
}
 8004912:	bf00      	nop
 8004914:	bd80      	pop	{r7, pc}
 8004916:	bf00      	nop
 8004918:	24001ed0 	.word	0x24001ed0

0800491c <DMA1_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA1 stream3 global interrupt.
  */
void DMA1_Stream3_IRQHandler(void)
{
 800491c:	b580      	push	{r7, lr}
 800491e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */

  /* USER CODE END DMA1_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_rx);
 8004920:	4802      	ldr	r0, [pc, #8]	; (800492c <DMA1_Stream3_IRQHandler+0x10>)
 8004922:	f005 f8b7 	bl	8009a94 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */

  /* USER CODE END DMA1_Stream3_IRQn 1 */
}
 8004926:	bf00      	nop
 8004928:	bd80      	pop	{r7, pc}
 800492a:	bf00      	nop
 800492c:	24001cdc 	.word	0x24001cdc

08004930 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8004930:	b580      	push	{r7, lr}
 8004932:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_rx);
 8004934:	4802      	ldr	r0, [pc, #8]	; (8004940 <DMA1_Stream4_IRQHandler+0x10>)
 8004936:	f005 f8ad 	bl	8009a94 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 800493a:	bf00      	nop
 800493c:	bd80      	pop	{r7, pc}
 800493e:	bf00      	nop
 8004940:	24001c64 	.word	0x24001c64

08004944 <DMA1_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
 8004944:	b580      	push	{r7, lr}
 8004946:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_dac1_ch1);
 8004948:	4802      	ldr	r0, [pc, #8]	; (8004954 <DMA1_Stream5_IRQHandler+0x10>)
 800494a:	f005 f8a3 	bl	8009a94 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}
 800494e:	bf00      	nop
 8004950:	bd80      	pop	{r7, pc}
 8004952:	bf00      	nop
 8004954:	24000328 	.word	0x24000328

08004958 <DMA1_Stream6_IRQHandler>:

/**
  * @brief This function handles DMA1 stream6 global interrupt.
  */
void DMA1_Stream6_IRQHandler(void)
{
 8004958:	b580      	push	{r7, lr}
 800495a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */

  /* USER CODE END DMA1_Stream6_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 800495c:	4802      	ldr	r0, [pc, #8]	; (8004968 <DMA1_Stream6_IRQHandler+0x10>)
 800495e:	f005 f899 	bl	8009a94 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */

  /* USER CODE END DMA1_Stream6_IRQn 1 */
}
 8004962:	bf00      	nop
 8004964:	bd80      	pop	{r7, pc}
 8004966:	bf00      	nop
 8004968:	24001990 	.word	0x24001990

0800496c <TIM1_BRK_IRQHandler>:

/**
  * @brief This function handles TIM1 break interrupt.
  */
void TIM1_BRK_IRQHandler(void)
{
 800496c:	b580      	push	{r7, lr}
 800496e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_BRK_IRQn 0 */

  /* USER CODE END TIM1_BRK_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8004970:	4802      	ldr	r0, [pc, #8]	; (800497c <TIM1_BRK_IRQHandler+0x10>)
 8004972:	f00e fe06 	bl	8013582 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_BRK_IRQn 1 */

  /* USER CODE END TIM1_BRK_IRQn 1 */
}
 8004976:	bf00      	nop
 8004978:	bd80      	pop	{r7, pc}
 800497a:	bf00      	nop
 800497c:	24001da4 	.word	0x24001da4

08004980 <TIM1_UP_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt.
  */
void TIM1_UP_IRQHandler(void)
{
 8004980:	b580      	push	{r7, lr}
 8004982:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_IRQn 0 */

  /* USER CODE END TIM1_UP_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8004984:	4802      	ldr	r0, [pc, #8]	; (8004990 <TIM1_UP_IRQHandler+0x10>)
 8004986:	f00e fdfc 	bl	8013582 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_IRQn 1 */

  /* USER CODE END TIM1_UP_IRQn 1 */
}
 800498a:	bf00      	nop
 800498c:	bd80      	pop	{r7, pc}
 800498e:	bf00      	nop
 8004990:	24001da4 	.word	0x24001da4

08004994 <TIM1_TRG_COM_IRQHandler>:

/**
  * @brief This function handles TIM1 trigger and commutation interrupts.
  */
void TIM1_TRG_COM_IRQHandler(void)
{
 8004994:	b580      	push	{r7, lr}
 8004996:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_TRG_COM_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8004998:	4802      	ldr	r0, [pc, #8]	; (80049a4 <TIM1_TRG_COM_IRQHandler+0x10>)
 800499a:	f00e fdf2 	bl	8013582 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_TRG_COM_IRQn 1 */

  /* USER CODE END TIM1_TRG_COM_IRQn 1 */
}
 800499e:	bf00      	nop
 80049a0:	bd80      	pop	{r7, pc}
 80049a2:	bf00      	nop
 80049a4:	24001da4 	.word	0x24001da4

080049a8 <TIM1_CC_IRQHandler>:

/**
  * @brief This function handles TIM1 capture compare interrupt.
  */
void TIM1_CC_IRQHandler(void)
{
 80049a8:	b580      	push	{r7, lr}
 80049aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_CC_IRQn 0 */

  /* USER CODE END TIM1_CC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80049ac:	4802      	ldr	r0, [pc, #8]	; (80049b8 <TIM1_CC_IRQHandler+0x10>)
 80049ae:	f00e fde8 	bl	8013582 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_CC_IRQn 1 */

  /* USER CODE END TIM1_CC_IRQn 1 */
}
 80049b2:	bf00      	nop
 80049b4:	bd80      	pop	{r7, pc}
 80049b6:	bf00      	nop
 80049b8:	24001da4 	.word	0x24001da4

080049bc <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 80049bc:	b580      	push	{r7, lr}
 80049be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80049c0:	4802      	ldr	r0, [pc, #8]	; (80049cc <TIM2_IRQHandler+0x10>)
 80049c2:	f00e fdde 	bl	8013582 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80049c6:	bf00      	nop
 80049c8:	bd80      	pop	{r7, pc}
 80049ca:	bf00      	nop
 80049cc:	24001df0 	.word	0x24001df0

080049d0 <I2C1_EV_IRQHandler>:

/**
  * @brief This function handles I2C1 event interrupt.
  */
void I2C1_EV_IRQHandler(void)
{
 80049d0:	b580      	push	{r7, lr}
 80049d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C1_EV_IRQn 0 */

  /* USER CODE END I2C1_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c1);
 80049d4:	4802      	ldr	r0, [pc, #8]	; (80049e0 <I2C1_EV_IRQHandler+0x10>)
 80049d6:	f007 fae5 	bl	800bfa4 <HAL_I2C_EV_IRQHandler>
  /* USER CODE BEGIN I2C1_EV_IRQn 1 */

  /* USER CODE END I2C1_EV_IRQn 1 */
}
 80049da:	bf00      	nop
 80049dc:	bd80      	pop	{r7, pc}
 80049de:	bf00      	nop
 80049e0:	2400193c 	.word	0x2400193c

080049e4 <I2C1_ER_IRQHandler>:

/**
  * @brief This function handles I2C1 error interrupt.
  */
void I2C1_ER_IRQHandler(void)
{
 80049e4:	b580      	push	{r7, lr}
 80049e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C1_ER_IRQn 0 */

  /* USER CODE END I2C1_ER_IRQn 0 */
  HAL_I2C_ER_IRQHandler(&hi2c1);
 80049e8:	4802      	ldr	r0, [pc, #8]	; (80049f4 <I2C1_ER_IRQHandler+0x10>)
 80049ea:	f007 faf5 	bl	800bfd8 <HAL_I2C_ER_IRQHandler>
  /* USER CODE BEGIN I2C1_ER_IRQn 1 */

  /* USER CODE END I2C1_ER_IRQn 1 */
}
 80049ee:	bf00      	nop
 80049f0:	bd80      	pop	{r7, pc}
 80049f2:	bf00      	nop
 80049f4:	2400193c 	.word	0x2400193c

080049f8 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 80049f8:	b580      	push	{r7, lr}
 80049fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 80049fc:	4802      	ldr	r0, [pc, #8]	; (8004a08 <SPI1_IRQHandler+0x10>)
 80049fe:	f00d ff1f 	bl	8012840 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8004a02:	bf00      	nop
 8004a04:	bd80      	pop	{r7, pc}
 8004a06:	bf00      	nop
 8004a08:	24001b54 	.word	0x24001b54

08004a0c <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8004a0c:	b580      	push	{r7, lr}
 8004a0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8004a10:	4802      	ldr	r0, [pc, #8]	; (8004a1c <SPI2_IRQHandler+0x10>)
 8004a12:	f00d ff15 	bl	8012840 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8004a16:	bf00      	nop
 8004a18:	bd80      	pop	{r7, pc}
 8004a1a:	bf00      	nop
 8004a1c:	24001bdc 	.word	0x24001bdc

08004a20 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8004a20:	b580      	push	{r7, lr}
 8004a22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8004a24:	4802      	ldr	r0, [pc, #8]	; (8004a30 <USART1_IRQHandler+0x10>)
 8004a26:	f010 f8ef 	bl	8014c08 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8004a2a:	bf00      	nop
 8004a2c:	bd80      	pop	{r7, pc}
 8004a2e:	bf00      	nop
 8004a30:	24001e3c 	.word	0x24001e3c

08004a34 <DMA1_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA1 stream7 global interrupt.
  */
void DMA1_Stream7_IRQHandler(void)
{
 8004a34:	b580      	push	{r7, lr}
 8004a36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */

  /* USER CODE END DMA1_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 8004a38:	4802      	ldr	r0, [pc, #8]	; (8004a44 <DMA1_Stream7_IRQHandler+0x10>)
 8004a3a:	f005 f82b 	bl	8009a94 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */

  /* USER CODE END DMA1_Stream7_IRQn 1 */
}
 8004a3e:	bf00      	nop
 8004a40:	bd80      	pop	{r7, pc}
 8004a42:	bf00      	nop
 8004a44:	24001a08 	.word	0x24001a08

08004a48 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1_CH1 and DAC1_CH2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 8004a48:	b580      	push	{r7, lr}
 8004a4a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  if (hdac1.State != HAL_DAC_STATE_RESET) {
 8004a4c:	4b06      	ldr	r3, [pc, #24]	; (8004a68 <TIM6_DAC_IRQHandler+0x20>)
 8004a4e:	791b      	ldrb	r3, [r3, #4]
 8004a50:	b2db      	uxtb	r3, r3
 8004a52:	2b00      	cmp	r3, #0
 8004a54:	d002      	beq.n	8004a5c <TIM6_DAC_IRQHandler+0x14>
    HAL_DAC_IRQHandler(&hdac1);
 8004a56:	4804      	ldr	r0, [pc, #16]	; (8004a68 <TIM6_DAC_IRQHandler+0x20>)
 8004a58:	f003 fa73 	bl	8007f42 <HAL_DAC_IRQHandler>
  }
  HAL_TIM_IRQHandler(&htim6);
 8004a5c:	4803      	ldr	r0, [pc, #12]	; (8004a6c <TIM6_DAC_IRQHandler+0x24>)
 8004a5e:	f00e fd90 	bl	8013582 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8004a62:	bf00      	nop
 8004a64:	bd80      	pop	{r7, pc}
 8004a66:	bf00      	nop
 8004a68:	24000314 	.word	0x24000314
 8004a6c:	24001d54 	.word	0x24001d54

08004a70 <ITM_SendChar>:
 8004a70:	b480      	push	{r7}
 8004a72:	b083      	sub	sp, #12
 8004a74:	af00      	add	r7, sp, #0
 8004a76:	4603      	mov	r3, r0
 8004a78:	71fb      	strb	r3, [r7, #7]
 8004a7a:	4b0f      	ldr	r3, [pc, #60]	; (8004ab8 <ITM_SendChar+0x48>)
 8004a7c:	681b      	ldr	r3, [r3, #0]
 8004a7e:	4a0e      	ldr	r2, [pc, #56]	; (8004ab8 <ITM_SendChar+0x48>)
 8004a80:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004a84:	6013      	str	r3, [r2, #0]
 8004a86:	4b0d      	ldr	r3, [pc, #52]	; (8004abc <ITM_SendChar+0x4c>)
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	4a0c      	ldr	r2, [pc, #48]	; (8004abc <ITM_SendChar+0x4c>)
 8004a8c:	f043 0301 	orr.w	r3, r3, #1
 8004a90:	6013      	str	r3, [r2, #0]
 8004a92:	bf00      	nop
 8004a94:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	f003 0301 	and.w	r3, r3, #1
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d0f8      	beq.n	8004a94 <ITM_SendChar+0x24>
 8004aa2:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8004aa6:	79fb      	ldrb	r3, [r7, #7]
 8004aa8:	6013      	str	r3, [r2, #0]
 8004aaa:	bf00      	nop
 8004aac:	370c      	adds	r7, #12
 8004aae:	46bd      	mov	sp, r7
 8004ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ab4:	4770      	bx	lr
 8004ab6:	bf00      	nop
 8004ab8:	e000edfc 	.word	0xe000edfc
 8004abc:	e0000e00 	.word	0xe0000e00

08004ac0 <_read>:
 8004ac0:	b580      	push	{r7, lr}
 8004ac2:	b086      	sub	sp, #24
 8004ac4:	af00      	add	r7, sp, #0
 8004ac6:	60f8      	str	r0, [r7, #12]
 8004ac8:	60b9      	str	r1, [r7, #8]
 8004aca:	607a      	str	r2, [r7, #4]
 8004acc:	2300      	movs	r3, #0
 8004ace:	617b      	str	r3, [r7, #20]
 8004ad0:	e00a      	b.n	8004ae8 <_read+0x28>
 8004ad2:	f3af 8000 	nop.w
 8004ad6:	4601      	mov	r1, r0
 8004ad8:	68bb      	ldr	r3, [r7, #8]
 8004ada:	1c5a      	adds	r2, r3, #1
 8004adc:	60ba      	str	r2, [r7, #8]
 8004ade:	b2ca      	uxtb	r2, r1
 8004ae0:	701a      	strb	r2, [r3, #0]
 8004ae2:	697b      	ldr	r3, [r7, #20]
 8004ae4:	3301      	adds	r3, #1
 8004ae6:	617b      	str	r3, [r7, #20]
 8004ae8:	697a      	ldr	r2, [r7, #20]
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	429a      	cmp	r2, r3
 8004aee:	dbf0      	blt.n	8004ad2 <_read+0x12>
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	4618      	mov	r0, r3
 8004af4:	3718      	adds	r7, #24
 8004af6:	46bd      	mov	sp, r7
 8004af8:	bd80      	pop	{r7, pc}

08004afa <_write>:
 8004afa:	b580      	push	{r7, lr}
 8004afc:	b086      	sub	sp, #24
 8004afe:	af00      	add	r7, sp, #0
 8004b00:	60f8      	str	r0, [r7, #12]
 8004b02:	60b9      	str	r1, [r7, #8]
 8004b04:	607a      	str	r2, [r7, #4]
 8004b06:	2300      	movs	r3, #0
 8004b08:	617b      	str	r3, [r7, #20]
 8004b0a:	e009      	b.n	8004b20 <_write+0x26>
 8004b0c:	68bb      	ldr	r3, [r7, #8]
 8004b0e:	1c5a      	adds	r2, r3, #1
 8004b10:	60ba      	str	r2, [r7, #8]
 8004b12:	781b      	ldrb	r3, [r3, #0]
 8004b14:	4618      	mov	r0, r3
 8004b16:	f7ff ffab 	bl	8004a70 <ITM_SendChar>
 8004b1a:	697b      	ldr	r3, [r7, #20]
 8004b1c:	3301      	adds	r3, #1
 8004b1e:	617b      	str	r3, [r7, #20]
 8004b20:	697a      	ldr	r2, [r7, #20]
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	429a      	cmp	r2, r3
 8004b26:	dbf1      	blt.n	8004b0c <_write+0x12>
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	4618      	mov	r0, r3
 8004b2c:	3718      	adds	r7, #24
 8004b2e:	46bd      	mov	sp, r7
 8004b30:	bd80      	pop	{r7, pc}

08004b32 <_close>:
 8004b32:	b480      	push	{r7}
 8004b34:	b083      	sub	sp, #12
 8004b36:	af00      	add	r7, sp, #0
 8004b38:	6078      	str	r0, [r7, #4]
 8004b3a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004b3e:	4618      	mov	r0, r3
 8004b40:	370c      	adds	r7, #12
 8004b42:	46bd      	mov	sp, r7
 8004b44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b48:	4770      	bx	lr

08004b4a <_fstat>:
 8004b4a:	b480      	push	{r7}
 8004b4c:	b083      	sub	sp, #12
 8004b4e:	af00      	add	r7, sp, #0
 8004b50:	6078      	str	r0, [r7, #4]
 8004b52:	6039      	str	r1, [r7, #0]
 8004b54:	683b      	ldr	r3, [r7, #0]
 8004b56:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004b5a:	605a      	str	r2, [r3, #4]
 8004b5c:	2300      	movs	r3, #0
 8004b5e:	4618      	mov	r0, r3
 8004b60:	370c      	adds	r7, #12
 8004b62:	46bd      	mov	sp, r7
 8004b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b68:	4770      	bx	lr

08004b6a <_isatty>:
 8004b6a:	b480      	push	{r7}
 8004b6c:	b083      	sub	sp, #12
 8004b6e:	af00      	add	r7, sp, #0
 8004b70:	6078      	str	r0, [r7, #4]
 8004b72:	2301      	movs	r3, #1
 8004b74:	4618      	mov	r0, r3
 8004b76:	370c      	adds	r7, #12
 8004b78:	46bd      	mov	sp, r7
 8004b7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b7e:	4770      	bx	lr

08004b80 <_lseek>:
 8004b80:	b480      	push	{r7}
 8004b82:	b085      	sub	sp, #20
 8004b84:	af00      	add	r7, sp, #0
 8004b86:	60f8      	str	r0, [r7, #12]
 8004b88:	60b9      	str	r1, [r7, #8]
 8004b8a:	607a      	str	r2, [r7, #4]
 8004b8c:	2300      	movs	r3, #0
 8004b8e:	4618      	mov	r0, r3
 8004b90:	3714      	adds	r7, #20
 8004b92:	46bd      	mov	sp, r7
 8004b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b98:	4770      	bx	lr
	...

08004b9c <_sbrk>:
 8004b9c:	b580      	push	{r7, lr}
 8004b9e:	b086      	sub	sp, #24
 8004ba0:	af00      	add	r7, sp, #0
 8004ba2:	6078      	str	r0, [r7, #4]
 8004ba4:	4a14      	ldr	r2, [pc, #80]	; (8004bf8 <_sbrk+0x5c>)
 8004ba6:	4b15      	ldr	r3, [pc, #84]	; (8004bfc <_sbrk+0x60>)
 8004ba8:	1ad3      	subs	r3, r2, r3
 8004baa:	617b      	str	r3, [r7, #20]
 8004bac:	697b      	ldr	r3, [r7, #20]
 8004bae:	613b      	str	r3, [r7, #16]
 8004bb0:	4b13      	ldr	r3, [pc, #76]	; (8004c00 <_sbrk+0x64>)
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d102      	bne.n	8004bbe <_sbrk+0x22>
 8004bb8:	4b11      	ldr	r3, [pc, #68]	; (8004c00 <_sbrk+0x64>)
 8004bba:	4a12      	ldr	r2, [pc, #72]	; (8004c04 <_sbrk+0x68>)
 8004bbc:	601a      	str	r2, [r3, #0]
 8004bbe:	4b10      	ldr	r3, [pc, #64]	; (8004c00 <_sbrk+0x64>)
 8004bc0:	681a      	ldr	r2, [r3, #0]
 8004bc2:	687b      	ldr	r3, [r7, #4]
 8004bc4:	4413      	add	r3, r2
 8004bc6:	693a      	ldr	r2, [r7, #16]
 8004bc8:	429a      	cmp	r2, r3
 8004bca:	d207      	bcs.n	8004bdc <_sbrk+0x40>
 8004bcc:	f015 fefe 	bl	801a9cc <__errno>
 8004bd0:	4603      	mov	r3, r0
 8004bd2:	220c      	movs	r2, #12
 8004bd4:	601a      	str	r2, [r3, #0]
 8004bd6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004bda:	e009      	b.n	8004bf0 <_sbrk+0x54>
 8004bdc:	4b08      	ldr	r3, [pc, #32]	; (8004c00 <_sbrk+0x64>)
 8004bde:	681b      	ldr	r3, [r3, #0]
 8004be0:	60fb      	str	r3, [r7, #12]
 8004be2:	4b07      	ldr	r3, [pc, #28]	; (8004c00 <_sbrk+0x64>)
 8004be4:	681a      	ldr	r2, [r3, #0]
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	4413      	add	r3, r2
 8004bea:	4a05      	ldr	r2, [pc, #20]	; (8004c00 <_sbrk+0x64>)
 8004bec:	6013      	str	r3, [r2, #0]
 8004bee:	68fb      	ldr	r3, [r7, #12]
 8004bf0:	4618      	mov	r0, r3
 8004bf2:	3718      	adds	r7, #24
 8004bf4:	46bd      	mov	sp, r7
 8004bf6:	bd80      	pop	{r7, pc}
 8004bf8:	24080000 	.word	0x24080000
 8004bfc:	00000400 	.word	0x00000400
 8004c00:	24001da0 	.word	0x24001da0
 8004c04:	240069e8 	.word	0x240069e8

08004c08 <SystemInit>:
 8004c08:	b480      	push	{r7}
 8004c0a:	af00      	add	r7, sp, #0
 8004c0c:	4b37      	ldr	r3, [pc, #220]	; (8004cec <SystemInit+0xe4>)
 8004c0e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004c12:	4a36      	ldr	r2, [pc, #216]	; (8004cec <SystemInit+0xe4>)
 8004c14:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004c18:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004c1c:	4b34      	ldr	r3, [pc, #208]	; (8004cf0 <SystemInit+0xe8>)
 8004c1e:	681b      	ldr	r3, [r3, #0]
 8004c20:	f003 030f 	and.w	r3, r3, #15
 8004c24:	2b06      	cmp	r3, #6
 8004c26:	d807      	bhi.n	8004c38 <SystemInit+0x30>
 8004c28:	4b31      	ldr	r3, [pc, #196]	; (8004cf0 <SystemInit+0xe8>)
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	f023 030f 	bic.w	r3, r3, #15
 8004c30:	4a2f      	ldr	r2, [pc, #188]	; (8004cf0 <SystemInit+0xe8>)
 8004c32:	f043 0307 	orr.w	r3, r3, #7
 8004c36:	6013      	str	r3, [r2, #0]
 8004c38:	4b2e      	ldr	r3, [pc, #184]	; (8004cf4 <SystemInit+0xec>)
 8004c3a:	681b      	ldr	r3, [r3, #0]
 8004c3c:	4a2d      	ldr	r2, [pc, #180]	; (8004cf4 <SystemInit+0xec>)
 8004c3e:	f043 0301 	orr.w	r3, r3, #1
 8004c42:	6013      	str	r3, [r2, #0]
 8004c44:	4b2b      	ldr	r3, [pc, #172]	; (8004cf4 <SystemInit+0xec>)
 8004c46:	2200      	movs	r2, #0
 8004c48:	611a      	str	r2, [r3, #16]
 8004c4a:	4b2a      	ldr	r3, [pc, #168]	; (8004cf4 <SystemInit+0xec>)
 8004c4c:	681a      	ldr	r2, [r3, #0]
 8004c4e:	4929      	ldr	r1, [pc, #164]	; (8004cf4 <SystemInit+0xec>)
 8004c50:	4b29      	ldr	r3, [pc, #164]	; (8004cf8 <SystemInit+0xf0>)
 8004c52:	4013      	ands	r3, r2
 8004c54:	600b      	str	r3, [r1, #0]
 8004c56:	4b26      	ldr	r3, [pc, #152]	; (8004cf0 <SystemInit+0xe8>)
 8004c58:	681b      	ldr	r3, [r3, #0]
 8004c5a:	f003 0308 	and.w	r3, r3, #8
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	d007      	beq.n	8004c72 <SystemInit+0x6a>
 8004c62:	4b23      	ldr	r3, [pc, #140]	; (8004cf0 <SystemInit+0xe8>)
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	f023 030f 	bic.w	r3, r3, #15
 8004c6a:	4a21      	ldr	r2, [pc, #132]	; (8004cf0 <SystemInit+0xe8>)
 8004c6c:	f043 0307 	orr.w	r3, r3, #7
 8004c70:	6013      	str	r3, [r2, #0]
 8004c72:	4b20      	ldr	r3, [pc, #128]	; (8004cf4 <SystemInit+0xec>)
 8004c74:	2200      	movs	r2, #0
 8004c76:	619a      	str	r2, [r3, #24]
 8004c78:	4b1e      	ldr	r3, [pc, #120]	; (8004cf4 <SystemInit+0xec>)
 8004c7a:	2200      	movs	r2, #0
 8004c7c:	61da      	str	r2, [r3, #28]
 8004c7e:	4b1d      	ldr	r3, [pc, #116]	; (8004cf4 <SystemInit+0xec>)
 8004c80:	2200      	movs	r2, #0
 8004c82:	621a      	str	r2, [r3, #32]
 8004c84:	4b1b      	ldr	r3, [pc, #108]	; (8004cf4 <SystemInit+0xec>)
 8004c86:	4a1d      	ldr	r2, [pc, #116]	; (8004cfc <SystemInit+0xf4>)
 8004c88:	629a      	str	r2, [r3, #40]	; 0x28
 8004c8a:	4b1a      	ldr	r3, [pc, #104]	; (8004cf4 <SystemInit+0xec>)
 8004c8c:	4a1c      	ldr	r2, [pc, #112]	; (8004d00 <SystemInit+0xf8>)
 8004c8e:	62da      	str	r2, [r3, #44]	; 0x2c
 8004c90:	4b18      	ldr	r3, [pc, #96]	; (8004cf4 <SystemInit+0xec>)
 8004c92:	4a1c      	ldr	r2, [pc, #112]	; (8004d04 <SystemInit+0xfc>)
 8004c94:	631a      	str	r2, [r3, #48]	; 0x30
 8004c96:	4b17      	ldr	r3, [pc, #92]	; (8004cf4 <SystemInit+0xec>)
 8004c98:	2200      	movs	r2, #0
 8004c9a:	635a      	str	r2, [r3, #52]	; 0x34
 8004c9c:	4b15      	ldr	r3, [pc, #84]	; (8004cf4 <SystemInit+0xec>)
 8004c9e:	4a19      	ldr	r2, [pc, #100]	; (8004d04 <SystemInit+0xfc>)
 8004ca0:	639a      	str	r2, [r3, #56]	; 0x38
 8004ca2:	4b14      	ldr	r3, [pc, #80]	; (8004cf4 <SystemInit+0xec>)
 8004ca4:	2200      	movs	r2, #0
 8004ca6:	63da      	str	r2, [r3, #60]	; 0x3c
 8004ca8:	4b12      	ldr	r3, [pc, #72]	; (8004cf4 <SystemInit+0xec>)
 8004caa:	4a16      	ldr	r2, [pc, #88]	; (8004d04 <SystemInit+0xfc>)
 8004cac:	641a      	str	r2, [r3, #64]	; 0x40
 8004cae:	4b11      	ldr	r3, [pc, #68]	; (8004cf4 <SystemInit+0xec>)
 8004cb0:	2200      	movs	r2, #0
 8004cb2:	645a      	str	r2, [r3, #68]	; 0x44
 8004cb4:	4b0f      	ldr	r3, [pc, #60]	; (8004cf4 <SystemInit+0xec>)
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	4a0e      	ldr	r2, [pc, #56]	; (8004cf4 <SystemInit+0xec>)
 8004cba:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004cbe:	6013      	str	r3, [r2, #0]
 8004cc0:	4b0c      	ldr	r3, [pc, #48]	; (8004cf4 <SystemInit+0xec>)
 8004cc2:	2200      	movs	r2, #0
 8004cc4:	661a      	str	r2, [r3, #96]	; 0x60
 8004cc6:	4b10      	ldr	r3, [pc, #64]	; (8004d08 <SystemInit+0x100>)
 8004cc8:	681a      	ldr	r2, [r3, #0]
 8004cca:	4b10      	ldr	r3, [pc, #64]	; (8004d0c <SystemInit+0x104>)
 8004ccc:	4013      	ands	r3, r2
 8004cce:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004cd2:	d202      	bcs.n	8004cda <SystemInit+0xd2>
 8004cd4:	4b0e      	ldr	r3, [pc, #56]	; (8004d10 <SystemInit+0x108>)
 8004cd6:	2201      	movs	r2, #1
 8004cd8:	601a      	str	r2, [r3, #0]
 8004cda:	4b0e      	ldr	r3, [pc, #56]	; (8004d14 <SystemInit+0x10c>)
 8004cdc:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8004ce0:	601a      	str	r2, [r3, #0]
 8004ce2:	bf00      	nop
 8004ce4:	46bd      	mov	sp, r7
 8004ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cea:	4770      	bx	lr
 8004cec:	e000ed00 	.word	0xe000ed00
 8004cf0:	52002000 	.word	0x52002000
 8004cf4:	58024400 	.word	0x58024400
 8004cf8:	eaf6ed7f 	.word	0xeaf6ed7f
 8004cfc:	02020200 	.word	0x02020200
 8004d00:	01ff0000 	.word	0x01ff0000
 8004d04:	01010280 	.word	0x01010280
 8004d08:	5c001000 	.word	0x5c001000
 8004d0c:	ffff0000 	.word	0xffff0000
 8004d10:	51008108 	.word	0x51008108
 8004d14:	52004000 	.word	0x52004000

08004d18 <MX_TIM1_Init>:
TIM_HandleTypeDef htim1;
TIM_HandleTypeDef htim2;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8004d18:	b580      	push	{r7, lr}
 8004d1a:	b09a      	sub	sp, #104	; 0x68
 8004d1c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004d1e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8004d22:	2200      	movs	r2, #0
 8004d24:	601a      	str	r2, [r3, #0]
 8004d26:	605a      	str	r2, [r3, #4]
 8004d28:	609a      	str	r2, [r3, #8]
 8004d2a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004d2c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004d30:	2200      	movs	r2, #0
 8004d32:	601a      	str	r2, [r3, #0]
 8004d34:	605a      	str	r2, [r3, #4]
 8004d36:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8004d38:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8004d3c:	2200      	movs	r2, #0
 8004d3e:	601a      	str	r2, [r3, #0]
 8004d40:	605a      	str	r2, [r3, #4]
 8004d42:	609a      	str	r2, [r3, #8]
 8004d44:	60da      	str	r2, [r3, #12]
 8004d46:	611a      	str	r2, [r3, #16]
 8004d48:	615a      	str	r2, [r3, #20]
 8004d4a:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8004d4c:	1d3b      	adds	r3, r7, #4
 8004d4e:	222c      	movs	r2, #44	; 0x2c
 8004d50:	2100      	movs	r1, #0
 8004d52:	4618      	mov	r0, r3
 8004d54:	f015 fe72 	bl	801aa3c <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8004d58:	4b44      	ldr	r3, [pc, #272]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004d5a:	4a45      	ldr	r2, [pc, #276]	; (8004e70 <MX_TIM1_Init+0x158>)
 8004d5c:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 75-1;
 8004d5e:	4b43      	ldr	r3, [pc, #268]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004d60:	224a      	movs	r2, #74	; 0x4a
 8004d62:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004d64:	4b41      	ldr	r3, [pc, #260]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004d66:	2200      	movs	r2, #0
 8004d68:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 62500-1;
 8004d6a:	4b40      	ldr	r3, [pc, #256]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004d6c:	f24f 4223 	movw	r2, #62499	; 0xf423
 8004d70:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004d72:	4b3e      	ldr	r3, [pc, #248]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004d74:	2200      	movs	r2, #0
 8004d76:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8004d78:	4b3c      	ldr	r3, [pc, #240]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004d7a:	2200      	movs	r2, #0
 8004d7c:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004d7e:	4b3b      	ldr	r3, [pc, #236]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004d80:	2200      	movs	r2, #0
 8004d82:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8004d84:	4839      	ldr	r0, [pc, #228]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004d86:	f00e f88e 	bl	8012ea6 <HAL_TIM_Base_Init>
 8004d8a:	4603      	mov	r3, r0
 8004d8c:	2b00      	cmp	r3, #0
 8004d8e:	d001      	beq.n	8004d94 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 8004d90:	f7fe feec 	bl	8003b6c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004d94:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004d98:	65bb      	str	r3, [r7, #88]	; 0x58
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8004d9a:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8004d9e:	4619      	mov	r1, r3
 8004da0:	4832      	ldr	r0, [pc, #200]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004da2:	f00e fe09 	bl	80139b8 <HAL_TIM_ConfigClockSource>
 8004da6:	4603      	mov	r3, r0
 8004da8:	2b00      	cmp	r3, #0
 8004daa:	d001      	beq.n	8004db0 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8004dac:	f7fe fede 	bl	8003b6c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8004db0:	482e      	ldr	r0, [pc, #184]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004db2:	f00e fb85 	bl	80134c0 <HAL_TIM_PWM_Init>
 8004db6:	4603      	mov	r3, r0
 8004db8:	2b00      	cmp	r3, #0
 8004dba:	d001      	beq.n	8004dc0 <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8004dbc:	f7fe fed6 	bl	8003b6c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004dc0:	2300      	movs	r3, #0
 8004dc2:	64fb      	str	r3, [r7, #76]	; 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8004dc4:	2300      	movs	r3, #0
 8004dc6:	653b      	str	r3, [r7, #80]	; 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004dc8:	2300      	movs	r3, #0
 8004dca:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8004dcc:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004dd0:	4619      	mov	r1, r3
 8004dd2:	4826      	ldr	r0, [pc, #152]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004dd4:	f00f fb46 	bl	8014464 <HAL_TIMEx_MasterConfigSynchronization>
 8004dd8:	4603      	mov	r3, r0
 8004dda:	2b00      	cmp	r3, #0
 8004ddc:	d001      	beq.n	8004de2 <MX_TIM1_Init+0xca>
  {
    Error_Handler();
 8004dde:	f7fe fec5 	bl	8003b6c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8004de2:	2360      	movs	r3, #96	; 0x60
 8004de4:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.Pulse = 480-1;
 8004de6:	f240 13df 	movw	r3, #479	; 0x1df
 8004dea:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004dec:	2300      	movs	r3, #0
 8004dee:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8004df0:	2300      	movs	r3, #0
 8004df2:	63fb      	str	r3, [r7, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8004df4:	2300      	movs	r3, #0
 8004df6:	643b      	str	r3, [r7, #64]	; 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8004df8:	2300      	movs	r3, #0
 8004dfa:	647b      	str	r3, [r7, #68]	; 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8004dfc:	2300      	movs	r3, #0
 8004dfe:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8004e00:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8004e04:	2200      	movs	r2, #0
 8004e06:	4619      	mov	r1, r3
 8004e08:	4818      	ldr	r0, [pc, #96]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004e0a:	f00e fcc1 	bl	8013790 <HAL_TIM_PWM_ConfigChannel>
 8004e0e:	4603      	mov	r3, r0
 8004e10:	2b00      	cmp	r3, #0
 8004e12:	d001      	beq.n	8004e18 <MX_TIM1_Init+0x100>
  {
    Error_Handler();
 8004e14:	f7fe feaa 	bl	8003b6c <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8004e18:	2300      	movs	r3, #0
 8004e1a:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8004e1c:	2300      	movs	r3, #0
 8004e1e:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8004e20:	2300      	movs	r3, #0
 8004e22:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8004e24:	2300      	movs	r3, #0
 8004e26:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8004e28:	2300      	movs	r3, #0
 8004e2a:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8004e2c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8004e30:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 8004e32:	2300      	movs	r3, #0
 8004e34:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8004e36:	2300      	movs	r3, #0
 8004e38:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8004e3a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004e3e:	627b      	str	r3, [r7, #36]	; 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 8004e40:	2300      	movs	r3, #0
 8004e42:	62bb      	str	r3, [r7, #40]	; 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8004e44:	2300      	movs	r3, #0
 8004e46:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8004e48:	1d3b      	adds	r3, r7, #4
 8004e4a:	4619      	mov	r1, r3
 8004e4c:	4807      	ldr	r0, [pc, #28]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004e4e:	f00f fb97 	bl	8014580 <HAL_TIMEx_ConfigBreakDeadTime>
 8004e52:	4603      	mov	r3, r0
 8004e54:	2b00      	cmp	r3, #0
 8004e56:	d001      	beq.n	8004e5c <MX_TIM1_Init+0x144>
  {
    Error_Handler();
 8004e58:	f7fe fe88 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8004e5c:	4803      	ldr	r0, [pc, #12]	; (8004e6c <MX_TIM1_Init+0x154>)
 8004e5e:	f000 f8dd 	bl	800501c <HAL_TIM_MspPostInit>

}
 8004e62:	bf00      	nop
 8004e64:	3768      	adds	r7, #104	; 0x68
 8004e66:	46bd      	mov	sp, r7
 8004e68:	bd80      	pop	{r7, pc}
 8004e6a:	bf00      	nop
 8004e6c:	24001da4 	.word	0x24001da4
 8004e70:	40010000 	.word	0x40010000

08004e74 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8004e74:	b580      	push	{r7, lr}
 8004e76:	b08e      	sub	sp, #56	; 0x38
 8004e78:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004e7a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8004e7e:	2200      	movs	r2, #0
 8004e80:	601a      	str	r2, [r3, #0]
 8004e82:	605a      	str	r2, [r3, #4]
 8004e84:	609a      	str	r2, [r3, #8]
 8004e86:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004e88:	f107 031c 	add.w	r3, r7, #28
 8004e8c:	2200      	movs	r2, #0
 8004e8e:	601a      	str	r2, [r3, #0]
 8004e90:	605a      	str	r2, [r3, #4]
 8004e92:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8004e94:	463b      	mov	r3, r7
 8004e96:	2200      	movs	r2, #0
 8004e98:	601a      	str	r2, [r3, #0]
 8004e9a:	605a      	str	r2, [r3, #4]
 8004e9c:	609a      	str	r2, [r3, #8]
 8004e9e:	60da      	str	r2, [r3, #12]
 8004ea0:	611a      	str	r2, [r3, #16]
 8004ea2:	615a      	str	r2, [r3, #20]
 8004ea4:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8004ea6:	4b2d      	ldr	r3, [pc, #180]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004ea8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004eac:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 75-1;
 8004eae:	4b2b      	ldr	r3, [pc, #172]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004eb0:	224a      	movs	r2, #74	; 0x4a
 8004eb2:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004eb4:	4b29      	ldr	r3, [pc, #164]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004eb6:	2200      	movs	r2, #0
 8004eb8:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 3125-1;
 8004eba:	4b28      	ldr	r3, [pc, #160]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004ebc:	f640 4234 	movw	r2, #3124	; 0xc34
 8004ec0:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004ec2:	4b26      	ldr	r3, [pc, #152]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004ec4:	2200      	movs	r2, #0
 8004ec6:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8004ec8:	4b24      	ldr	r3, [pc, #144]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004eca:	2280      	movs	r2, #128	; 0x80
 8004ecc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8004ece:	4823      	ldr	r0, [pc, #140]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004ed0:	f00d ffe9 	bl	8012ea6 <HAL_TIM_Base_Init>
 8004ed4:	4603      	mov	r3, r0
 8004ed6:	2b00      	cmp	r3, #0
 8004ed8:	d001      	beq.n	8004ede <MX_TIM2_Init+0x6a>
  {
    Error_Handler();
 8004eda:	f7fe fe47 	bl	8003b6c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004ede:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004ee2:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8004ee4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8004ee8:	4619      	mov	r1, r3
 8004eea:	481c      	ldr	r0, [pc, #112]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004eec:	f00e fd64 	bl	80139b8 <HAL_TIM_ConfigClockSource>
 8004ef0:	4603      	mov	r3, r0
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d001      	beq.n	8004efa <MX_TIM2_Init+0x86>
  {
    Error_Handler();
 8004ef6:	f7fe fe39 	bl	8003b6c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8004efa:	4818      	ldr	r0, [pc, #96]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004efc:	f00e fae0 	bl	80134c0 <HAL_TIM_PWM_Init>
 8004f00:	4603      	mov	r3, r0
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	d001      	beq.n	8004f0a <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 8004f06:	f7fe fe31 	bl	8003b6c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8004f0a:	2320      	movs	r3, #32
 8004f0c:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004f0e:	2300      	movs	r3, #0
 8004f10:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8004f12:	f107 031c 	add.w	r3, r7, #28
 8004f16:	4619      	mov	r1, r3
 8004f18:	4810      	ldr	r0, [pc, #64]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004f1a:	f00f faa3 	bl	8014464 <HAL_TIMEx_MasterConfigSynchronization>
 8004f1e:	4603      	mov	r3, r0
 8004f20:	2b00      	cmp	r3, #0
 8004f22:	d001      	beq.n	8004f28 <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 8004f24:	f7fe fe22 	bl	8003b6c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8004f28:	2360      	movs	r3, #96	; 0x60
 8004f2a:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 8004f2c:	2300      	movs	r3, #0
 8004f2e:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004f30:	2300      	movs	r3, #0
 8004f32:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8004f34:	2300      	movs	r3, #0
 8004f36:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8004f38:	463b      	mov	r3, r7
 8004f3a:	220c      	movs	r2, #12
 8004f3c:	4619      	mov	r1, r3
 8004f3e:	4807      	ldr	r0, [pc, #28]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004f40:	f00e fc26 	bl	8013790 <HAL_TIM_PWM_ConfigChannel>
 8004f44:	4603      	mov	r3, r0
 8004f46:	2b00      	cmp	r3, #0
 8004f48:	d001      	beq.n	8004f4e <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8004f4a:	f7fe fe0f 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8004f4e:	4803      	ldr	r0, [pc, #12]	; (8004f5c <MX_TIM2_Init+0xe8>)
 8004f50:	f000 f864 	bl	800501c <HAL_TIM_MspPostInit>

}
 8004f54:	bf00      	nop
 8004f56:	3738      	adds	r7, #56	; 0x38
 8004f58:	46bd      	mov	sp, r7
 8004f5a:	bd80      	pop	{r7, pc}
 8004f5c:	24001df0 	.word	0x24001df0

08004f60 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8004f60:	b580      	push	{r7, lr}
 8004f62:	b084      	sub	sp, #16
 8004f64:	af00      	add	r7, sp, #0
 8004f66:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	681b      	ldr	r3, [r3, #0]
 8004f6c:	4a29      	ldr	r2, [pc, #164]	; (8005014 <HAL_TIM_Base_MspInit+0xb4>)
 8004f6e:	4293      	cmp	r3, r2
 8004f70:	d12f      	bne.n	8004fd2 <HAL_TIM_Base_MspInit+0x72>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8004f72:	4b29      	ldr	r3, [pc, #164]	; (8005018 <HAL_TIM_Base_MspInit+0xb8>)
 8004f74:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8004f78:	4a27      	ldr	r2, [pc, #156]	; (8005018 <HAL_TIM_Base_MspInit+0xb8>)
 8004f7a:	f043 0301 	orr.w	r3, r3, #1
 8004f7e:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8004f82:	4b25      	ldr	r3, [pc, #148]	; (8005018 <HAL_TIM_Base_MspInit+0xb8>)
 8004f84:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8004f88:	f003 0301 	and.w	r3, r3, #1
 8004f8c:	60fb      	str	r3, [r7, #12]
 8004f8e:	68fb      	ldr	r3, [r7, #12]

    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_BRK_IRQn, 5, 0);
 8004f90:	2200      	movs	r2, #0
 8004f92:	2105      	movs	r1, #5
 8004f94:	2018      	movs	r0, #24
 8004f96:	f002 fe25 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_BRK_IRQn);
 8004f9a:	2018      	movs	r0, #24
 8004f9c:	f002 fe3c 	bl	8007c18 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM1_UP_IRQn, 5, 0);
 8004fa0:	2200      	movs	r2, #0
 8004fa2:	2105      	movs	r1, #5
 8004fa4:	2019      	movs	r0, #25
 8004fa6:	f002 fe1d 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
 8004faa:	2019      	movs	r0, #25
 8004fac:	f002 fe34 	bl	8007c18 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM1_TRG_COM_IRQn, 5, 0);
 8004fb0:	2200      	movs	r2, #0
 8004fb2:	2105      	movs	r1, #5
 8004fb4:	201a      	movs	r0, #26
 8004fb6:	f002 fe15 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_IRQn);
 8004fba:	201a      	movs	r0, #26
 8004fbc:	f002 fe2c 	bl	8007c18 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM1_CC_IRQn, 5, 0);
 8004fc0:	2200      	movs	r2, #0
 8004fc2:	2105      	movs	r1, #5
 8004fc4:	201b      	movs	r0, #27
 8004fc6:	f002 fe0d 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 8004fca:	201b      	movs	r0, #27
 8004fcc:	f002 fe24 	bl	8007c18 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 8004fd0:	e01b      	b.n	800500a <HAL_TIM_Base_MspInit+0xaa>
  else if(tim_baseHandle->Instance==TIM2)
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004fda:	d116      	bne.n	800500a <HAL_TIM_Base_MspInit+0xaa>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8004fdc:	4b0e      	ldr	r3, [pc, #56]	; (8005018 <HAL_TIM_Base_MspInit+0xb8>)
 8004fde:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004fe2:	4a0d      	ldr	r2, [pc, #52]	; (8005018 <HAL_TIM_Base_MspInit+0xb8>)
 8004fe4:	f043 0301 	orr.w	r3, r3, #1
 8004fe8:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8004fec:	4b0a      	ldr	r3, [pc, #40]	; (8005018 <HAL_TIM_Base_MspInit+0xb8>)
 8004fee:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004ff2:	f003 0301 	and.w	r3, r3, #1
 8004ff6:	60bb      	str	r3, [r7, #8]
 8004ff8:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8004ffa:	2200      	movs	r2, #0
 8004ffc:	2105      	movs	r1, #5
 8004ffe:	201c      	movs	r0, #28
 8005000:	f002 fdf0 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8005004:	201c      	movs	r0, #28
 8005006:	f002 fe07 	bl	8007c18 <HAL_NVIC_EnableIRQ>
}
 800500a:	bf00      	nop
 800500c:	3710      	adds	r7, #16
 800500e:	46bd      	mov	sp, r7
 8005010:	bd80      	pop	{r7, pc}
 8005012:	bf00      	nop
 8005014:	40010000 	.word	0x40010000
 8005018:	58024400 	.word	0x58024400

0800501c <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 800501c:	b580      	push	{r7, lr}
 800501e:	b08a      	sub	sp, #40	; 0x28
 8005020:	af00      	add	r7, sp, #0
 8005022:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005024:	f107 0314 	add.w	r3, r7, #20
 8005028:	2200      	movs	r2, #0
 800502a:	601a      	str	r2, [r3, #0]
 800502c:	605a      	str	r2, [r3, #4]
 800502e:	609a      	str	r2, [r3, #8]
 8005030:	60da      	str	r2, [r3, #12]
 8005032:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM1)
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	681b      	ldr	r3, [r3, #0]
 8005038:	4a26      	ldr	r2, [pc, #152]	; (80050d4 <HAL_TIM_MspPostInit+0xb8>)
 800503a:	4293      	cmp	r3, r2
 800503c:	d120      	bne.n	8005080 <HAL_TIM_MspPostInit+0x64>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800503e:	4b26      	ldr	r3, [pc, #152]	; (80050d8 <HAL_TIM_MspPostInit+0xbc>)
 8005040:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005044:	4a24      	ldr	r2, [pc, #144]	; (80050d8 <HAL_TIM_MspPostInit+0xbc>)
 8005046:	f043 0301 	orr.w	r3, r3, #1
 800504a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800504e:	4b22      	ldr	r3, [pc, #136]	; (80050d8 <HAL_TIM_MspPostInit+0xbc>)
 8005050:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005054:	f003 0301 	and.w	r3, r3, #1
 8005058:	613b      	str	r3, [r7, #16]
 800505a:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800505c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005060:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005062:	2302      	movs	r3, #2
 8005064:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005066:	2300      	movs	r3, #0
 8005068:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800506a:	2300      	movs	r3, #0
 800506c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 800506e:	2301      	movs	r3, #1
 8005070:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8005072:	f107 0314 	add.w	r3, r7, #20
 8005076:	4619      	mov	r1, r3
 8005078:	4818      	ldr	r0, [pc, #96]	; (80050dc <HAL_TIM_MspPostInit+0xc0>)
 800507a:	f006 fb11 	bl	800b6a0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 800507e:	e024      	b.n	80050ca <HAL_TIM_MspPostInit+0xae>
  else if(timHandle->Instance==TIM2)
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	681b      	ldr	r3, [r3, #0]
 8005084:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005088:	d11f      	bne.n	80050ca <HAL_TIM_MspPostInit+0xae>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800508a:	4b13      	ldr	r3, [pc, #76]	; (80050d8 <HAL_TIM_MspPostInit+0xbc>)
 800508c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005090:	4a11      	ldr	r2, [pc, #68]	; (80050d8 <HAL_TIM_MspPostInit+0xbc>)
 8005092:	f043 0302 	orr.w	r3, r3, #2
 8005096:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800509a:	4b0f      	ldr	r3, [pc, #60]	; (80050d8 <HAL_TIM_MspPostInit+0xbc>)
 800509c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80050a0:	f003 0302 	and.w	r3, r3, #2
 80050a4:	60fb      	str	r3, [r7, #12]
 80050a6:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 80050a8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80050ac:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80050ae:	2302      	movs	r3, #2
 80050b0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80050b2:	2300      	movs	r3, #0
 80050b4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80050b6:	2300      	movs	r3, #0
 80050b8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80050ba:	2301      	movs	r3, #1
 80050bc:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80050be:	f107 0314 	add.w	r3, r7, #20
 80050c2:	4619      	mov	r1, r3
 80050c4:	4806      	ldr	r0, [pc, #24]	; (80050e0 <HAL_TIM_MspPostInit+0xc4>)
 80050c6:	f006 faeb 	bl	800b6a0 <HAL_GPIO_Init>
}
 80050ca:	bf00      	nop
 80050cc:	3728      	adds	r7, #40	; 0x28
 80050ce:	46bd      	mov	sp, r7
 80050d0:	bd80      	pop	{r7, pc}
 80050d2:	bf00      	nop
 80050d4:	40010000 	.word	0x40010000
 80050d8:	58024400 	.word	0x58024400
 80050dc:	58020000 	.word	0x58020000
 80050e0:	58020400 	.word	0x58020400

080050e4 <get_uptime>:
 *      Author: 3ucubed
 */

#include "time_tagging.h"

void get_uptime(uint8_t *buffer) {
 80050e4:	b480      	push	{r7}
 80050e6:	b087      	sub	sp, #28
 80050e8:	af00      	add	r7, sp, #0
 80050ea:	6078      	str	r0, [r7, #4]
	uint32_t uptime = 0;
 80050ec:	2300      	movs	r3, #0
 80050ee:	617b      	str	r3, [r7, #20]
	uint32_t ms = uptime_millis;
 80050f0:	4b21      	ldr	r3, [pc, #132]	; (8005178 <get_uptime+0x94>)
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	613b      	str	r3, [r7, #16]
	uint32_t st = SysTick->VAL;
 80050f6:	4b21      	ldr	r3, [pc, #132]	; (800517c <get_uptime+0x98>)
 80050f8:	689b      	ldr	r3, [r3, #8]
 80050fa:	60fb      	str	r3, [r7, #12]

	// Did uptime_millis rollover while reading SysTick->VAL?
	if (ms != uptime_millis) {
 80050fc:	4b1e      	ldr	r3, [pc, #120]	; (8005178 <get_uptime+0x94>)
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	693a      	ldr	r2, [r7, #16]
 8005102:	429a      	cmp	r2, r3
 8005104:	d005      	beq.n	8005112 <get_uptime+0x2e>
		ms = uptime_millis;
 8005106:	4b1c      	ldr	r3, [pc, #112]	; (8005178 <get_uptime+0x94>)
 8005108:	681b      	ldr	r3, [r3, #0]
 800510a:	613b      	str	r3, [r7, #16]
		st = SysTick->VAL;
 800510c:	4b1b      	ldr	r3, [pc, #108]	; (800517c <get_uptime+0x98>)
 800510e:	689b      	ldr	r3, [r3, #8]
 8005110:	60fb      	str	r3, [r7, #12]
	}
	uptime = ms * 1000 - st / ((SysTick->LOAD + 1) / 1000);
 8005112:	693b      	ldr	r3, [r7, #16]
 8005114:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005118:	fb03 f202 	mul.w	r2, r3, r2
 800511c:	4b17      	ldr	r3, [pc, #92]	; (800517c <get_uptime+0x98>)
 800511e:	685b      	ldr	r3, [r3, #4]
 8005120:	3301      	adds	r3, #1
 8005122:	4917      	ldr	r1, [pc, #92]	; (8005180 <get_uptime+0x9c>)
 8005124:	fba1 1303 	umull	r1, r3, r1, r3
 8005128:	099b      	lsrs	r3, r3, #6
 800512a:	68f9      	ldr	r1, [r7, #12]
 800512c:	fbb1 f3f3 	udiv	r3, r1, r3
 8005130:	1ad3      	subs	r3, r2, r3
 8005132:	617b      	str	r3, [r7, #20]

	if (ms == 0){
 8005134:	693b      	ldr	r3, [r7, #16]
 8005136:	2b00      	cmp	r3, #0
 8005138:	d101      	bne.n	800513e <get_uptime+0x5a>
		uptime = 0;
 800513a:	2300      	movs	r3, #0
 800513c:	617b      	str	r3, [r7, #20]
	}

	buffer[0] = ((uptime >> 24) & 0xFF);
 800513e:	697b      	ldr	r3, [r7, #20]
 8005140:	0e1b      	lsrs	r3, r3, #24
 8005142:	b2da      	uxtb	r2, r3
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	701a      	strb	r2, [r3, #0]
	buffer[1] = ((uptime >> 16) & 0xFF);
 8005148:	697b      	ldr	r3, [r7, #20]
 800514a:	0c1a      	lsrs	r2, r3, #16
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	3301      	adds	r3, #1
 8005150:	b2d2      	uxtb	r2, r2
 8005152:	701a      	strb	r2, [r3, #0]
	buffer[2] = ((uptime >> 8) & 0xFF);
 8005154:	697b      	ldr	r3, [r7, #20]
 8005156:	0a1a      	lsrs	r2, r3, #8
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	3302      	adds	r3, #2
 800515c:	b2d2      	uxtb	r2, r2
 800515e:	701a      	strb	r2, [r3, #0]
	buffer[3] = uptime & 0xFF;
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	3303      	adds	r3, #3
 8005164:	697a      	ldr	r2, [r7, #20]
 8005166:	b2d2      	uxtb	r2, r2
 8005168:	701a      	strb	r2, [r3, #0]
}
 800516a:	bf00      	nop
 800516c:	371c      	adds	r7, #28
 800516e:	46bd      	mov	sp, r7
 8005170:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005174:	4770      	bx	lr
 8005176:	bf00      	nop
 8005178:	24001ae0 	.word	0x24001ae0
 800517c:	e000e010 	.word	0xe000e010
 8005180:	10624dd3 	.word	0x10624dd3

08005184 <get_unix_time>:

void get_unix_time(uint8_t* buffer) {
 8005184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005188:	b09d      	sub	sp, #116	; 0x74
 800518a:	af00      	add	r7, sp, #0
 800518c:	63f8      	str	r0, [r7, #60]	; 0x3c
	#define DAYS_IN_SECONDS   (24U * SECONDS_IN_1_HOUR)

	RTC_TimeTypeDef current_time;
	RTC_DateTypeDef current_date;

	HAL_RTC_GetTime(&hrtc, &current_time, RTC_FORMAT_BIN);
 800518e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8005192:	2200      	movs	r2, #0
 8005194:	4619      	mov	r1, r3
 8005196:	4893      	ldr	r0, [pc, #588]	; (80053e4 <get_unix_time+0x260>)
 8005198:	f00c fee4 	bl	8011f64 <HAL_RTC_GetTime>
	HAL_RTC_GetDate(&hrtc, &current_date, RTC_FORMAT_BIN);
 800519c:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80051a0:	2200      	movs	r2, #0
 80051a2:	4619      	mov	r1, r3
 80051a4:	488f      	ldr	r0, [pc, #572]	; (80053e4 <get_unix_time+0x260>)
 80051a6:	f00c ffc1 	bl	801212c <HAL_RTC_GetDate>
	uint16_t milliseconds = (10000 - (current_time.SubSeconds)) / 10;
 80051aa:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80051ac:	f242 7210 	movw	r2, #10000	; 0x2710
 80051b0:	1ad2      	subs	r2, r2, r3
 80051b2:	4b8d      	ldr	r3, [pc, #564]	; (80053e8 <get_unix_time+0x264>)
 80051b4:	fba3 2302 	umull	r2, r3, r3, r2
 80051b8:	08db      	lsrs	r3, r3, #3
 80051ba:	f8a7 306a 	strh.w	r3, [r7, #106]	; 0x6a

	uint16_t y;
	uint8_t m;
	uint8_t d;
	uint64_t unix_tm_val = 0;
 80051be:	f04f 0200 	mov.w	r2, #0
 80051c2:	f04f 0300 	mov.w	r3, #0
 80051c6:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60


	y = current_date.Year + 2000;
 80051ca:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80051ce:	b29b      	uxth	r3, r3
 80051d0:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
 80051d4:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
	m = current_date.Month;
 80051d8:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 80051dc:	f887 306d 	strb.w	r3, [r7, #109]	; 0x6d
	d = current_date.Date;
 80051e0:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 80051e4:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
	// January and February are counted as months 13 and 14 of the previous year
	if (m <= 2)
 80051e8:	f897 306d 	ldrb.w	r3, [r7, #109]	; 0x6d
 80051ec:	2b02      	cmp	r3, #2
 80051ee:	d809      	bhi.n	8005204 <get_unix_time+0x80>
	{
		m += 12;
 80051f0:	f897 306d 	ldrb.w	r3, [r7, #109]	; 0x6d
 80051f4:	330c      	adds	r3, #12
 80051f6:	f887 306d 	strb.w	r3, [r7, #109]	; 0x6d
		y -= 1;
 80051fa:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 80051fe:	3b01      	subs	r3, #1
 8005200:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
	}
	// convert years to days
	unix_tm_val = (365 * y) + (y / 4) - (y / 100) + (y / 400);
 8005204:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 8005208:	f240 136d 	movw	r3, #365	; 0x16d
 800520c:	fb03 f202 	mul.w	r2, r3, r2
 8005210:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 8005214:	089b      	lsrs	r3, r3, #2
 8005216:	b29b      	uxth	r3, r3
 8005218:	18d1      	adds	r1, r2, r3
 800521a:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800521e:	4b73      	ldr	r3, [pc, #460]	; (80053ec <get_unix_time+0x268>)
 8005220:	fba3 2302 	umull	r2, r3, r3, r2
 8005224:	095b      	lsrs	r3, r3, #5
 8005226:	b29b      	uxth	r3, r3
 8005228:	1ac9      	subs	r1, r1, r3
 800522a:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800522e:	4b6f      	ldr	r3, [pc, #444]	; (80053ec <get_unix_time+0x268>)
 8005230:	fba3 2302 	umull	r2, r3, r3, r2
 8005234:	09db      	lsrs	r3, r3, #7
 8005236:	b29b      	uxth	r3, r3
 8005238:	440b      	add	r3, r1
 800523a:	17da      	asrs	r2, r3, #31
 800523c:	623b      	str	r3, [r7, #32]
 800523e:	627a      	str	r2, [r7, #36]	; 0x24
 8005240:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8005244:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
	// convert months to days
	unix_tm_val += (30 * m) + (3 * (m + 1) / 5) + d;
 8005248:	f897 206d 	ldrb.w	r2, [r7, #109]	; 0x6d
 800524c:	4613      	mov	r3, r2
 800524e:	011b      	lsls	r3, r3, #4
 8005250:	1a9b      	subs	r3, r3, r2
 8005252:	005b      	lsls	r3, r3, #1
 8005254:	4618      	mov	r0, r3
 8005256:	f897 306d 	ldrb.w	r3, [r7, #109]	; 0x6d
 800525a:	1c5a      	adds	r2, r3, #1
 800525c:	4613      	mov	r3, r2
 800525e:	005b      	lsls	r3, r3, #1
 8005260:	1899      	adds	r1, r3, r2
 8005262:	4b63      	ldr	r3, [pc, #396]	; (80053f0 <get_unix_time+0x26c>)
 8005264:	fb83 2301 	smull	r2, r3, r3, r1
 8005268:	105a      	asrs	r2, r3, #1
 800526a:	17cb      	asrs	r3, r1, #31
 800526c:	1ad3      	subs	r3, r2, r3
 800526e:	18c2      	adds	r2, r0, r3
 8005270:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8005274:	4413      	add	r3, r2
 8005276:	17da      	asrs	r2, r3, #31
 8005278:	633b      	str	r3, [r7, #48]	; 0x30
 800527a:	637a      	str	r2, [r7, #52]	; 0x34
 800527c:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8005280:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005282:	1851      	adds	r1, r2, r1
 8005284:	61b9      	str	r1, [r7, #24]
 8005286:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8005288:	eb43 0101 	adc.w	r1, r3, r1
 800528c:	61f9      	str	r1, [r7, #28]
 800528e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005292:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
	// Unix time starts on January 1st, 1970
	unix_tm_val -= UNIX_TIME_CONST;
 8005296:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800529a:	4956      	ldr	r1, [pc, #344]	; (80053f4 <get_unix_time+0x270>)
 800529c:	1851      	adds	r1, r2, r1
 800529e:	6139      	str	r1, [r7, #16]
 80052a0:	f143 33ff 	adc.w	r3, r3, #4294967295	; 0xffffffff
 80052a4:	617b      	str	r3, [r7, #20]
 80052a6:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80052aa:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
	// convert days to seconds
	unix_tm_val *= DAYS_IN_SECONDS;
 80052ae:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 80052b2:	4602      	mov	r2, r0
 80052b4:	460b      	mov	r3, r1
 80052b6:	1896      	adds	r6, r2, r2
 80052b8:	60be      	str	r6, [r7, #8]
 80052ba:	415b      	adcs	r3, r3
 80052bc:	60fb      	str	r3, [r7, #12]
 80052be:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80052c2:	eb12 0800 	adds.w	r8, r2, r0
 80052c6:	eb43 0901 	adc.w	r9, r3, r1
 80052ca:	f04f 0200 	mov.w	r2, #0
 80052ce:	f04f 0300 	mov.w	r3, #0
 80052d2:	ea4f 1309 	mov.w	r3, r9, lsl #4
 80052d6:	ea43 7318 	orr.w	r3, r3, r8, lsr #28
 80052da:	ea4f 1208 	mov.w	r2, r8, lsl #4
 80052de:	ebb2 0408 	subs.w	r4, r2, r8
 80052e2:	eb63 0509 	sbc.w	r5, r3, r9
 80052e6:	f04f 0200 	mov.w	r2, #0
 80052ea:	f04f 0300 	mov.w	r3, #0
 80052ee:	012b      	lsls	r3, r5, #4
 80052f0:	ea43 7314 	orr.w	r3, r3, r4, lsr #28
 80052f4:	0122      	lsls	r2, r4, #4
 80052f6:	ebb2 0a04 	subs.w	sl, r2, r4
 80052fa:	eb63 0b05 	sbc.w	fp, r3, r5
 80052fe:	f04f 0200 	mov.w	r2, #0
 8005302:	f04f 0300 	mov.w	r3, #0
 8005306:	ea4f 13cb 	mov.w	r3, fp, lsl #7
 800530a:	ea43 635a 	orr.w	r3, r3, sl, lsr #25
 800530e:	ea4f 12ca 	mov.w	r2, sl, lsl #7
 8005312:	4692      	mov	sl, r2
 8005314:	469b      	mov	fp, r3
 8005316:	e9c7 ab18 	strd	sl, fp, [r7, #96]	; 0x60
	//Add hours, minutes and seconds
	unix_tm_val += (SECONDS_IN_1_HOUR * current_time.Hours) + (SECONDS_IN_1_MIN * current_time.Minutes) + current_time.Seconds;
 800531a:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 800531e:	461a      	mov	r2, r3
 8005320:	f44f 6361 	mov.w	r3, #3600	; 0xe10
 8005324:	fb03 f202 	mul.w	r2, r3, r2
 8005328:	f897 3049 	ldrb.w	r3, [r7, #73]	; 0x49
 800532c:	4619      	mov	r1, r3
 800532e:	460b      	mov	r3, r1
 8005330:	011b      	lsls	r3, r3, #4
 8005332:	1a5b      	subs	r3, r3, r1
 8005334:	009b      	lsls	r3, r3, #2
 8005336:	4413      	add	r3, r2
 8005338:	f897 204a 	ldrb.w	r2, [r7, #74]	; 0x4a
 800533c:	4413      	add	r3, r2
 800533e:	2200      	movs	r2, #0
 8005340:	62bb      	str	r3, [r7, #40]	; 0x28
 8005342:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005344:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8005348:	e9d7 450a 	ldrd	r4, r5, [r7, #40]	; 0x28
 800534c:	4621      	mov	r1, r4
 800534e:	1851      	adds	r1, r2, r1
 8005350:	6039      	str	r1, [r7, #0]
 8005352:	4629      	mov	r1, r5
 8005354:	eb43 0101 	adc.w	r1, r3, r1
 8005358:	6079      	str	r1, [r7, #4]
 800535a:	e9d7 3400 	ldrd	r3, r4, [r7]
 800535e:	e9c7 3418 	strd	r3, r4, [r7, #96]	; 0x60

	buffer[0] = ((unix_tm_val >> 24) & 0xFF);
 8005362:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 8005366:	f04f 0200 	mov.w	r2, #0
 800536a:	f04f 0300 	mov.w	r3, #0
 800536e:	0e02      	lsrs	r2, r0, #24
 8005370:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005374:	0e0b      	lsrs	r3, r1, #24
 8005376:	b2d2      	uxtb	r2, r2
 8005378:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800537a:	701a      	strb	r2, [r3, #0]
	buffer[1] = ((unix_tm_val >> 16) & 0xFF);
 800537c:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 8005380:	f04f 0200 	mov.w	r2, #0
 8005384:	f04f 0300 	mov.w	r3, #0
 8005388:	0c02      	lsrs	r2, r0, #16
 800538a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800538e:	0c0b      	lsrs	r3, r1, #16
 8005390:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8005392:	3101      	adds	r1, #1
 8005394:	b2d3      	uxtb	r3, r2
 8005396:	700b      	strb	r3, [r1, #0]
	buffer[2] = ((unix_tm_val >> 8) & 0xFF);
 8005398:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800539c:	f04f 0200 	mov.w	r2, #0
 80053a0:	f04f 0300 	mov.w	r3, #0
 80053a4:	0a02      	lsrs	r2, r0, #8
 80053a6:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 80053aa:	0a0b      	lsrs	r3, r1, #8
 80053ac:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80053ae:	3102      	adds	r1, #2
 80053b0:	b2d3      	uxtb	r3, r2
 80053b2:	700b      	strb	r3, [r1, #0]
	buffer[3] = unix_tm_val & 0xFF;
 80053b4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80053b6:	3303      	adds	r3, #3
 80053b8:	f897 2060 	ldrb.w	r2, [r7, #96]	; 0x60
 80053bc:	701a      	strb	r2, [r3, #0]
	buffer[4] = ((milliseconds >> 8) & 0xFF);
 80053be:	f8b7 306a 	ldrh.w	r3, [r7, #106]	; 0x6a
 80053c2:	0a1b      	lsrs	r3, r3, #8
 80053c4:	b29a      	uxth	r2, r3
 80053c6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80053c8:	3304      	adds	r3, #4
 80053ca:	b2d2      	uxtb	r2, r2
 80053cc:	701a      	strb	r2, [r3, #0]
	buffer[5] = milliseconds & 0xFF;
 80053ce:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80053d0:	3305      	adds	r3, #5
 80053d2:	f8b7 206a 	ldrh.w	r2, [r7, #106]	; 0x6a
 80053d6:	b2d2      	uxtb	r2, r2
 80053d8:	701a      	strb	r2, [r3, #0]
}
 80053da:	bf00      	nop
 80053dc:	3774      	adds	r7, #116	; 0x74
 80053de:	46bd      	mov	sp, r7
 80053e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80053e4:	24001af4 	.word	0x24001af4
 80053e8:	cccccccd 	.word	0xcccccccd
 80053ec:	51eb851f 	.word	0x51eb851f
 80053f0:	66666667 	.word	0x66666667
 80053f4:	fff50537 	.word	0xfff50537

080053f8 <calibrateRTC>:

void calibrateRTC(uint8_t *buffer) {
 80053f8:	b580      	push	{r7, lr}
 80053fa:	b08c      	sub	sp, #48	; 0x30
 80053fc:	af00      	add	r7, sp, #0
 80053fe:	6078      	str	r0, [r7, #4]
	//    [0]     [1]     [2]     [3]     [4]     [5]     [6]     [7]     [8]
	//    0xFF    Year   Month    Day     Hour   Minute  Second  ms MSB  ms LSB

	RTC_DateTypeDef date_struct;
	RTC_TimeTypeDef time_struct;
	uint8_t year = buffer[1];
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	785b      	ldrb	r3, [r3, #1]
 8005404:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	uint8_t month = buffer[2];
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	789b      	ldrb	r3, [r3, #2]
 800540c:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
	uint8_t day = buffer[3];
 8005410:	687b      	ldr	r3, [r7, #4]
 8005412:	78db      	ldrb	r3, [r3, #3]
 8005414:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
	uint8_t hour = buffer[4];
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	791b      	ldrb	r3, [r3, #4]
 800541c:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
	uint8_t minute = buffer[5];
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	795b      	ldrb	r3, [r3, #5]
 8005424:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
	uint8_t second = buffer[6];
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	799b      	ldrb	r3, [r3, #6]
 800542c:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	uint16_t milliseconds = (buffer[7] << 8) | buffer[8];
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	3307      	adds	r3, #7
 8005434:	781b      	ldrb	r3, [r3, #0]
 8005436:	021b      	lsls	r3, r3, #8
 8005438:	b21a      	sxth	r2, r3
 800543a:	687b      	ldr	r3, [r7, #4]
 800543c:	3308      	adds	r3, #8
 800543e:	781b      	ldrb	r3, [r3, #0]
 8005440:	b21b      	sxth	r3, r3
 8005442:	4313      	orrs	r3, r2
 8005444:	b21b      	sxth	r3, r3
 8005446:	853b      	strh	r3, [r7, #40]	; 0x28

	date_struct.Year = year;
 8005448:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800544c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	date_struct.Month = month;
 8005450:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8005454:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	date_struct.Date = day;
 8005458:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800545c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22

	time_struct.Hours = hour;
 8005460:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8005464:	733b      	strb	r3, [r7, #12]
	time_struct.Minutes = minute;
 8005466:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800546a:	737b      	strb	r3, [r7, #13]
	time_struct.Seconds = second;
 800546c:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 8005470:	73bb      	strb	r3, [r7, #14]
	time_struct.SubSeconds = milliseconds;
 8005472:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8005474:	613b      	str	r3, [r7, #16]

	HAL_StatusTypeDef status;

	status = HAL_RTC_SetDate(&hrtc, &date_struct, RTC_FORMAT_BIN);
 8005476:	f107 0320 	add.w	r3, r7, #32
 800547a:	2200      	movs	r2, #0
 800547c:	4619      	mov	r1, r3
 800547e:	480b      	ldr	r0, [pc, #44]	; (80054ac <calibrateRTC+0xb4>)
 8005480:	f00c fdcc 	bl	801201c <HAL_RTC_SetDate>
 8005484:	4603      	mov	r3, r0
 8005486:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	if (status != HAL_OK) {
 800548a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800548e:	2b00      	cmp	r3, #0
 8005490:	d001      	beq.n	8005496 <calibrateRTC+0x9e>
		Error_Handler();
 8005492:	f7fe fb6b 	bl	8003b6c <Error_Handler>
	}
	RTC_SetTime(&hrtc, &time_struct, RTC_FORMAT_BIN);
 8005496:	f107 030c 	add.w	r3, r7, #12
 800549a:	2200      	movs	r2, #0
 800549c:	4619      	mov	r1, r3
 800549e:	4803      	ldr	r0, [pc, #12]	; (80054ac <calibrateRTC+0xb4>)
 80054a0:	f000 f806 	bl	80054b0 <RTC_SetTime>
}
 80054a4:	bf00      	nop
 80054a6:	3730      	adds	r7, #48	; 0x30
 80054a8:	46bd      	mov	sp, r7
 80054aa:	bd80      	pop	{r7, pc}
 80054ac:	24001af4 	.word	0x24001af4

080054b0 <RTC_SetTime>:


HAL_StatusTypeDef RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime,
		uint32_t Format) {
 80054b0:	b590      	push	{r4, r7, lr}
 80054b2:	b087      	sub	sp, #28
 80054b4:	af00      	add	r7, sp, #0
 80054b6:	60f8      	str	r0, [r7, #12]
 80054b8:	60b9      	str	r1, [r7, #8]
 80054ba:	607a      	str	r2, [r7, #4]
	uint32_t tmpreg;
	HAL_StatusTypeDef status;

	/* Process Locked */
	__HAL_LOCK(hrtc);
 80054bc:	68fb      	ldr	r3, [r7, #12]
 80054be:	f893 3020 	ldrb.w	r3, [r3, #32]
 80054c2:	2b01      	cmp	r3, #1
 80054c4:	d101      	bne.n	80054ca <RTC_SetTime+0x1a>
 80054c6:	2302      	movs	r3, #2
 80054c8:	e051      	b.n	800556e <RTC_SetTime+0xbe>
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	2201      	movs	r2, #1
 80054ce:	f883 2020 	strb.w	r2, [r3, #32]

	hrtc->State = HAL_RTC_STATE_BUSY;
 80054d2:	68fb      	ldr	r3, [r7, #12]
 80054d4:	2202      	movs	r2, #2
 80054d6:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21

	/* Disable the write protection for RTC registers */
	__HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 80054da:	68fb      	ldr	r3, [r7, #12]
 80054dc:	681b      	ldr	r3, [r3, #0]
 80054de:	22ca      	movs	r2, #202	; 0xca
 80054e0:	625a      	str	r2, [r3, #36]	; 0x24
 80054e2:	68fb      	ldr	r3, [r7, #12]
 80054e4:	681b      	ldr	r3, [r3, #0]
 80054e6:	2253      	movs	r2, #83	; 0x53
 80054e8:	625a      	str	r2, [r3, #36]	; 0x24
	/* Enter Initialization mode */
	status = RTC_EnterInitMode(hrtc);
 80054ea:	68f8      	ldr	r0, [r7, #12]
 80054ec:	f00c fe90 	bl	8012210 <RTC_EnterInitMode>
 80054f0:	4603      	mov	r3, r0
 80054f2:	75fb      	strb	r3, [r7, #23]
	if (status == HAL_OK) {
 80054f4:	7dfb      	ldrb	r3, [r7, #23]
 80054f6:	2b00      	cmp	r3, #0
 80054f8:	d129      	bne.n	800554e <RTC_SetTime+0x9e>

		sTime->TimeFormat = 0x00U;
 80054fa:	68bb      	ldr	r3, [r7, #8]
 80054fc:	2200      	movs	r2, #0
 80054fe:	70da      	strb	r2, [r3, #3]
		assert_param(IS_RTC_HOUR24(sTime->Hours));

		assert_param(IS_RTC_MINUTES(sTime->Minutes));
		assert_param(IS_RTC_SECONDS(sTime->Seconds));

		tmpreg = (uint32_t) (((uint32_t) RTC_ByteToBcd2(sTime->Hours)
 8005500:	68bb      	ldr	r3, [r7, #8]
 8005502:	781b      	ldrb	r3, [r3, #0]
 8005504:	4618      	mov	r0, r3
 8005506:	f00c fef5 	bl	80122f4 <RTC_ByteToBcd2>
 800550a:	4603      	mov	r3, r0
				<< RTC_TR_HU_Pos)
 800550c:	041c      	lsls	r4, r3, #16
				| ((uint32_t) RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos)
 800550e:	68bb      	ldr	r3, [r7, #8]
 8005510:	785b      	ldrb	r3, [r3, #1]
 8005512:	4618      	mov	r0, r3
 8005514:	f00c feee 	bl	80122f4 <RTC_ByteToBcd2>
 8005518:	4603      	mov	r3, r0
 800551a:	021b      	lsls	r3, r3, #8
 800551c:	431c      	orrs	r4, r3
				| ((uint32_t) RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos)
 800551e:	68bb      	ldr	r3, [r7, #8]
 8005520:	789b      	ldrb	r3, [r3, #2]
 8005522:	4618      	mov	r0, r3
 8005524:	f00c fee6 	bl	80122f4 <RTC_ByteToBcd2>
 8005528:	4603      	mov	r3, r0
 800552a:	ea44 0203 	orr.w	r2, r4, r3
				| (((uint32_t) sTime->TimeFormat) << RTC_TR_PM_Pos));
 800552e:	68bb      	ldr	r3, [r7, #8]
 8005530:	78db      	ldrb	r3, [r3, #3]
 8005532:	059b      	lsls	r3, r3, #22
		tmpreg = (uint32_t) (((uint32_t) RTC_ByteToBcd2(sTime->Hours)
 8005534:	4313      	orrs	r3, r2
 8005536:	613b      	str	r3, [r7, #16]

		/* Set the RTC_TR register */
		hrtc->Instance->TR = (uint32_t) (tmpreg & RTC_TR_RESERVED_MASK);
 8005538:	68fb      	ldr	r3, [r7, #12]
 800553a:	681a      	ldr	r2, [r3, #0]
 800553c:	6939      	ldr	r1, [r7, #16]
 800553e:	4b0e      	ldr	r3, [pc, #56]	; (8005578 <RTC_SetTime+0xc8>)
 8005540:	400b      	ands	r3, r1
 8005542:	6013      	str	r3, [r2, #0]

		/* Exit Initialization mode */
		status = RTC_ExitInitMode(hrtc);
 8005544:	68f8      	ldr	r0, [r7, #12]
 8005546:	f00c fe97 	bl	8012278 <RTC_ExitInitMode>
 800554a:	4603      	mov	r3, r0
 800554c:	75fb      	strb	r3, [r7, #23]
	}

	/* Enable the write protection for RTC registers */
	__HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	22ff      	movs	r2, #255	; 0xff
 8005554:	625a      	str	r2, [r3, #36]	; 0x24

	if (status == HAL_OK) {
 8005556:	7dfb      	ldrb	r3, [r7, #23]
 8005558:	2b00      	cmp	r3, #0
 800555a:	d103      	bne.n	8005564 <RTC_SetTime+0xb4>
		hrtc->State = HAL_RTC_STATE_READY;
 800555c:	68fb      	ldr	r3, [r7, #12]
 800555e:	2201      	movs	r2, #1
 8005560:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
	}

	/* Process Unlocked */
	__HAL_UNLOCK(hrtc);
 8005564:	68fb      	ldr	r3, [r7, #12]
 8005566:	2200      	movs	r2, #0
 8005568:	f883 2020 	strb.w	r2, [r3, #32]
	return status;
 800556c:	7dfb      	ldrb	r3, [r7, #23]

}
 800556e:	4618      	mov	r0, r3
 8005570:	371c      	adds	r7, #28
 8005572:	46bd      	mov	sp, r7
 8005574:	bd90      	pop	{r4, r7, pc}
 8005576:	bf00      	nop
 8005578:	007f7f7f 	.word	0x007f7f7f

0800557c <MX_USART1_UART_Init>:
DMA_HandleTypeDef hdma_usart1_tx;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 800557c:	b580      	push	{r7, lr}
 800557e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8005580:	4b30      	ldr	r3, [pc, #192]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 8005582:	4a31      	ldr	r2, [pc, #196]	; (8005648 <MX_USART1_UART_Init+0xcc>)
 8005584:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 460800;
 8005586:	4b2f      	ldr	r3, [pc, #188]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 8005588:	f44f 22e1 	mov.w	r2, #460800	; 0x70800
 800558c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800558e:	4b2d      	ldr	r3, [pc, #180]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 8005590:	2200      	movs	r2, #0
 8005592:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8005594:	4b2b      	ldr	r3, [pc, #172]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 8005596:	2200      	movs	r2, #0
 8005598:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800559a:	4b2a      	ldr	r3, [pc, #168]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 800559c:	2200      	movs	r2, #0
 800559e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80055a0:	4b28      	ldr	r3, [pc, #160]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055a2:	220c      	movs	r2, #12
 80055a4:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80055a6:	4b27      	ldr	r3, [pc, #156]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055a8:	2200      	movs	r2, #0
 80055aa:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80055ac:	4b25      	ldr	r3, [pc, #148]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055ae:	2200      	movs	r2, #0
 80055b0:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80055b2:	4b24      	ldr	r3, [pc, #144]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055b4:	2200      	movs	r2, #0
 80055b6:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80055b8:	4b22      	ldr	r3, [pc, #136]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055ba:	2200      	movs	r2, #0
 80055bc:	625a      	str	r2, [r3, #36]	; 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80055be:	4b21      	ldr	r3, [pc, #132]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055c0:	2200      	movs	r2, #0
 80055c2:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80055c4:	481f      	ldr	r0, [pc, #124]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055c6:	f00f f877 	bl	80146b8 <HAL_UART_Init>
 80055ca:	4603      	mov	r3, r0
 80055cc:	2b00      	cmp	r3, #0
 80055ce:	d001      	beq.n	80055d4 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 80055d0:	f7fe facc 	bl	8003b6c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80055d4:	2100      	movs	r1, #0
 80055d6:	481b      	ldr	r0, [pc, #108]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055d8:	f011 fdbd 	bl	8017156 <HAL_UARTEx_SetTxFifoThreshold>
 80055dc:	4603      	mov	r3, r0
 80055de:	2b00      	cmp	r3, #0
 80055e0:	d001      	beq.n	80055e6 <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 80055e2:	f7fe fac3 	bl	8003b6c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80055e6:	2100      	movs	r1, #0
 80055e8:	4816      	ldr	r0, [pc, #88]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055ea:	f011 fdf2 	bl	80171d2 <HAL_UARTEx_SetRxFifoThreshold>
 80055ee:	4603      	mov	r3, r0
 80055f0:	2b00      	cmp	r3, #0
 80055f2:	d001      	beq.n	80055f8 <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 80055f4:	f7fe faba 	bl	8003b6c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 80055f8:	4812      	ldr	r0, [pc, #72]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 80055fa:	f011 fd73 	bl	80170e4 <HAL_UARTEx_DisableFifoMode>
 80055fe:	4603      	mov	r3, r0
 8005600:	2b00      	cmp	r3, #0
 8005602:	d001      	beq.n	8005608 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8005604:	f7fe fab2 	bl	8003b6c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */
	/* Set the RXFIFO threshold */
	HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_4);
 8005608:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 800560c:	480d      	ldr	r0, [pc, #52]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 800560e:	f011 fde0 	bl	80171d2 <HAL_UARTEx_SetRxFifoThreshold>

	/* Enable the FIFO mode */
	HAL_UARTEx_EnableFifoMode(&huart1);
 8005612:	480c      	ldr	r0, [pc, #48]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 8005614:	f011 fd2b 	bl	801706e <HAL_UARTEx_EnableFifoMode>

	/* Enable MCU wakeup by UART */
	HAL_UARTEx_EnableStopMode(&huart1);
 8005618:	480a      	ldr	r0, [pc, #40]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 800561a:	f011 fcf5 	bl	8017008 <HAL_UARTEx_EnableStopMode>

	/* Enable the UART RX FIFO threshold interrupt */
	__HAL_UART_ENABLE_IT(&huart1, UART_IT_RXFT);
 800561e:	4b09      	ldr	r3, [pc, #36]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	689a      	ldr	r2, [r3, #8]
 8005624:	4b07      	ldr	r3, [pc, #28]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 8005626:	681b      	ldr	r3, [r3, #0]
 8005628:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800562c:	609a      	str	r2, [r3, #8]

	/* Enable the UART wakeup from stop mode interrupt */
	__HAL_UART_ENABLE_IT(&huart1, UART_IT_WUF);
 800562e:	4b05      	ldr	r3, [pc, #20]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 8005630:	681b      	ldr	r3, [r3, #0]
 8005632:	689a      	ldr	r2, [r3, #8]
 8005634:	4b03      	ldr	r3, [pc, #12]	; (8005644 <MX_USART1_UART_Init+0xc8>)
 8005636:	681b      	ldr	r3, [r3, #0]
 8005638:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800563c:	609a      	str	r2, [r3, #8]

  /* USER CODE END USART1_Init 2 */

}
 800563e:	bf00      	nop
 8005640:	bd80      	pop	{r7, pc}
 8005642:	bf00      	nop
 8005644:	24001e3c 	.word	0x24001e3c
 8005648:	40011000 	.word	0x40011000

0800564c <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 800564c:	b580      	push	{r7, lr}
 800564e:	b0ba      	sub	sp, #232	; 0xe8
 8005650:	af00      	add	r7, sp, #0
 8005652:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005654:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8005658:	2200      	movs	r2, #0
 800565a:	601a      	str	r2, [r3, #0]
 800565c:	605a      	str	r2, [r3, #4]
 800565e:	609a      	str	r2, [r3, #8]
 8005660:	60da      	str	r2, [r3, #12]
 8005662:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8005664:	f107 0310 	add.w	r3, r7, #16
 8005668:	22c0      	movs	r2, #192	; 0xc0
 800566a:	2100      	movs	r1, #0
 800566c:	4618      	mov	r0, r3
 800566e:	f015 f9e5 	bl	801aa3c <memset>
  if(uartHandle->Instance==USART1)
 8005672:	687b      	ldr	r3, [r7, #4]
 8005674:	681b      	ldr	r3, [r3, #0]
 8005676:	4a41      	ldr	r2, [pc, #260]	; (800577c <HAL_UART_MspInit+0x130>)
 8005678:	4293      	cmp	r3, r2
 800567a:	d17b      	bne.n	8005774 <HAL_UART_MspInit+0x128>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 800567c:	f04f 0201 	mov.w	r2, #1
 8005680:	f04f 0300 	mov.w	r3, #0
 8005684:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16CLKSOURCE_HSI;
 8005688:	2318      	movs	r3, #24
 800568a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800568e:	f107 0310 	add.w	r3, r7, #16
 8005692:	4618      	mov	r0, r3
 8005694:	f009 fe48 	bl	800f328 <HAL_RCCEx_PeriphCLKConfig>
 8005698:	4603      	mov	r3, r0
 800569a:	2b00      	cmp	r3, #0
 800569c:	d001      	beq.n	80056a2 <HAL_UART_MspInit+0x56>
    {
      Error_Handler();
 800569e:	f7fe fa65 	bl	8003b6c <Error_Handler>
    }

    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80056a2:	4b37      	ldr	r3, [pc, #220]	; (8005780 <HAL_UART_MspInit+0x134>)
 80056a4:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 80056a8:	4a35      	ldr	r2, [pc, #212]	; (8005780 <HAL_UART_MspInit+0x134>)
 80056aa:	f043 0310 	orr.w	r3, r3, #16
 80056ae:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 80056b2:	4b33      	ldr	r3, [pc, #204]	; (8005780 <HAL_UART_MspInit+0x134>)
 80056b4:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 80056b8:	f003 0310 	and.w	r3, r3, #16
 80056bc:	60fb      	str	r3, [r7, #12]
 80056be:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80056c0:	4b2f      	ldr	r3, [pc, #188]	; (8005780 <HAL_UART_MspInit+0x134>)
 80056c2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80056c6:	4a2e      	ldr	r2, [pc, #184]	; (8005780 <HAL_UART_MspInit+0x134>)
 80056c8:	f043 0301 	orr.w	r3, r3, #1
 80056cc:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80056d0:	4b2b      	ldr	r3, [pc, #172]	; (8005780 <HAL_UART_MspInit+0x134>)
 80056d2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80056d6:	f003 0301 	and.w	r3, r3, #1
 80056da:	60bb      	str	r3, [r7, #8]
 80056dc:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80056de:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80056e2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80056e6:	2302      	movs	r3, #2
 80056e8:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80056ec:	2300      	movs	r3, #0
 80056ee:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80056f2:	2300      	movs	r3, #0
 80056f4:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80056f8:	2307      	movs	r3, #7
 80056fa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80056fe:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8005702:	4619      	mov	r1, r3
 8005704:	481f      	ldr	r0, [pc, #124]	; (8005784 <HAL_UART_MspInit+0x138>)
 8005706:	f005 ffcb 	bl	800b6a0 <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA1_Stream2;
 800570a:	4b1f      	ldr	r3, [pc, #124]	; (8005788 <HAL_UART_MspInit+0x13c>)
 800570c:	4a1f      	ldr	r2, [pc, #124]	; (800578c <HAL_UART_MspInit+0x140>)
 800570e:	601a      	str	r2, [r3, #0]
    hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 8005710:	4b1d      	ldr	r3, [pc, #116]	; (8005788 <HAL_UART_MspInit+0x13c>)
 8005712:	222a      	movs	r2, #42	; 0x2a
 8005714:	605a      	str	r2, [r3, #4]
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8005716:	4b1c      	ldr	r3, [pc, #112]	; (8005788 <HAL_UART_MspInit+0x13c>)
 8005718:	2240      	movs	r2, #64	; 0x40
 800571a:	609a      	str	r2, [r3, #8]
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800571c:	4b1a      	ldr	r3, [pc, #104]	; (8005788 <HAL_UART_MspInit+0x13c>)
 800571e:	2200      	movs	r2, #0
 8005720:	60da      	str	r2, [r3, #12]
    hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8005722:	4b19      	ldr	r3, [pc, #100]	; (8005788 <HAL_UART_MspInit+0x13c>)
 8005724:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8005728:	611a      	str	r2, [r3, #16]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800572a:	4b17      	ldr	r3, [pc, #92]	; (8005788 <HAL_UART_MspInit+0x13c>)
 800572c:	2200      	movs	r2, #0
 800572e:	615a      	str	r2, [r3, #20]
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8005730:	4b15      	ldr	r3, [pc, #84]	; (8005788 <HAL_UART_MspInit+0x13c>)
 8005732:	2200      	movs	r2, #0
 8005734:	619a      	str	r2, [r3, #24]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 8005736:	4b14      	ldr	r3, [pc, #80]	; (8005788 <HAL_UART_MspInit+0x13c>)
 8005738:	2200      	movs	r2, #0
 800573a:	61da      	str	r2, [r3, #28]
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 800573c:	4b12      	ldr	r3, [pc, #72]	; (8005788 <HAL_UART_MspInit+0x13c>)
 800573e:	2200      	movs	r2, #0
 8005740:	621a      	str	r2, [r3, #32]
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8005742:	4b11      	ldr	r3, [pc, #68]	; (8005788 <HAL_UART_MspInit+0x13c>)
 8005744:	2200      	movs	r2, #0
 8005746:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 8005748:	480f      	ldr	r0, [pc, #60]	; (8005788 <HAL_UART_MspInit+0x13c>)
 800574a:	f002 fe79 	bl	8008440 <HAL_DMA_Init>
 800574e:	4603      	mov	r3, r0
 8005750:	2b00      	cmp	r3, #0
 8005752:	d001      	beq.n	8005758 <HAL_UART_MspInit+0x10c>
    {
      Error_Handler();
 8005754:	f7fe fa0a 	bl	8003b6c <Error_Handler>
    }

    __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	4a0b      	ldr	r2, [pc, #44]	; (8005788 <HAL_UART_MspInit+0x13c>)
 800575c:	67da      	str	r2, [r3, #124]	; 0x7c
 800575e:	4a0a      	ldr	r2, [pc, #40]	; (8005788 <HAL_UART_MspInit+0x13c>)
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	6393      	str	r3, [r2, #56]	; 0x38

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8005764:	2200      	movs	r2, #0
 8005766:	2105      	movs	r1, #5
 8005768:	2025      	movs	r0, #37	; 0x25
 800576a:	f002 fa3b 	bl	8007be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 800576e:	2025      	movs	r0, #37	; 0x25
 8005770:	f002 fa52 	bl	8007c18 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8005774:	bf00      	nop
 8005776:	37e8      	adds	r7, #232	; 0xe8
 8005778:	46bd      	mov	sp, r7
 800577a:	bd80      	pop	{r7, pc}
 800577c:	40011000 	.word	0x40011000
 8005780:	58024400 	.word	0x58024400
 8005784:	58020000 	.word	0x58020000
 8005788:	24001ed0 	.word	0x24001ed0
 800578c:	40020040 	.word	0x40020040

08005790 <voltage_monitor_init>:

#include "voltage_monitor.h"

VOLTAGE_RAIL rail_monitor[NUM_VOLTAGE_RAILS];

uint8_t voltage_monitor_init() {
 8005790:	b480      	push	{r7}
 8005792:	b083      	sub	sp, #12
 8005794:	af00      	add	r7, sp, #0
	uint8_t status = 0;
 8005796:	2300      	movs	r3, #0
 8005798:	71fb      	strb	r3, [r7, #7]

	rail_monitor[RAIL_vsense].name = RAIL_vsense;
 800579a:	4bc0      	ldr	r3, [pc, #768]	; (8005a9c <voltage_monitor_init+0x30c>)
 800579c:	2200      	movs	r2, #0
 800579e:	701a      	strb	r2, [r3, #0]
	rail_monitor[RAIL_vsense].error_count = 0;
 80057a0:	4bbe      	ldr	r3, [pc, #760]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057a2:	2200      	movs	r2, #0
 80057a4:	705a      	strb	r2, [r3, #1]
	rail_monitor[RAIL_vsense].is_enabled = 1;
 80057a6:	4bbd      	ldr	r3, [pc, #756]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057a8:	2201      	movs	r2, #1
 80057aa:	709a      	strb	r2, [r3, #2]
	rail_monitor[RAIL_vsense].data = 0;
 80057ac:	4bbb      	ldr	r3, [pc, #748]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057ae:	2200      	movs	r2, #0
 80057b0:	809a      	strh	r2, [r3, #4]
	rail_monitor[RAIL_vsense].max_voltage = 10000; // TODO: Get actual range from Sanj
 80057b2:	4bba      	ldr	r3, [pc, #744]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057b4:	f242 7210 	movw	r2, #10000	; 0x2710
 80057b8:	80da      	strh	r2, [r3, #6]
	rail_monitor[RAIL_vsense].min_voltage = 0;
 80057ba:	4bb8      	ldr	r3, [pc, #736]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057bc:	2200      	movs	r2, #0
 80057be:	811a      	strh	r2, [r3, #8]
	rail_monitor[RAIL_vsense].OOB_1 = 0;
 80057c0:	4bb6      	ldr	r3, [pc, #728]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057c2:	2200      	movs	r2, #0
 80057c4:	815a      	strh	r2, [r3, #10]
	rail_monitor[RAIL_vsense].OOB_2 = 0;
 80057c6:	4bb5      	ldr	r3, [pc, #724]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057c8:	2200      	movs	r2, #0
 80057ca:	819a      	strh	r2, [r3, #12]
	rail_monitor[RAIL_vsense].OOB_3 = 0;
 80057cc:	4bb3      	ldr	r3, [pc, #716]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057ce:	2200      	movs	r2, #0
 80057d0:	81da      	strh	r2, [r3, #14]


	rail_monitor[RAIL_vrefint].name = RAIL_vrefint;
 80057d2:	4bb2      	ldr	r3, [pc, #712]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057d4:	2201      	movs	r2, #1
 80057d6:	741a      	strb	r2, [r3, #16]
	rail_monitor[RAIL_vrefint].error_count = 0;
 80057d8:	4bb0      	ldr	r3, [pc, #704]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057da:	2200      	movs	r2, #0
 80057dc:	745a      	strb	r2, [r3, #17]
	rail_monitor[RAIL_vrefint].is_enabled = 1;
 80057de:	4baf      	ldr	r3, [pc, #700]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057e0:	2201      	movs	r2, #1
 80057e2:	749a      	strb	r2, [r3, #18]
	rail_monitor[RAIL_vrefint].data = 0;
 80057e4:	4bad      	ldr	r3, [pc, #692]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057e6:	2200      	movs	r2, #0
 80057e8:	829a      	strh	r2, [r3, #20]
	rail_monitor[RAIL_vrefint].max_voltage = 10000; // TODO: Get actual range from Sanj
 80057ea:	4bac      	ldr	r3, [pc, #688]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057ec:	f242 7210 	movw	r2, #10000	; 0x2710
 80057f0:	82da      	strh	r2, [r3, #22]
	rail_monitor[RAIL_vrefint].min_voltage = 0;
 80057f2:	4baa      	ldr	r3, [pc, #680]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057f4:	2200      	movs	r2, #0
 80057f6:	831a      	strh	r2, [r3, #24]
	rail_monitor[RAIL_vrefint].OOB_1 = 0;
 80057f8:	4ba8      	ldr	r3, [pc, #672]	; (8005a9c <voltage_monitor_init+0x30c>)
 80057fa:	2200      	movs	r2, #0
 80057fc:	835a      	strh	r2, [r3, #26]
	rail_monitor[RAIL_vrefint].OOB_2 = 0;
 80057fe:	4ba7      	ldr	r3, [pc, #668]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005800:	2200      	movs	r2, #0
 8005802:	839a      	strh	r2, [r3, #28]
	rail_monitor[RAIL_vrefint].OOB_3 = 0;
 8005804:	4ba5      	ldr	r3, [pc, #660]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005806:	2200      	movs	r2, #0
 8005808:	83da      	strh	r2, [r3, #30]

	rail_monitor[RAIL_TEMP1].name = RAIL_TEMP1;
 800580a:	4ba4      	ldr	r3, [pc, #656]	; (8005a9c <voltage_monitor_init+0x30c>)
 800580c:	2202      	movs	r2, #2
 800580e:	f883 2020 	strb.w	r2, [r3, #32]
	rail_monitor[RAIL_TEMP1].error_count = 0;
 8005812:	4ba2      	ldr	r3, [pc, #648]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005814:	2200      	movs	r2, #0
 8005816:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
	rail_monitor[RAIL_TEMP1].is_enabled = 1;
 800581a:	4ba0      	ldr	r3, [pc, #640]	; (8005a9c <voltage_monitor_init+0x30c>)
 800581c:	2201      	movs	r2, #1
 800581e:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
	rail_monitor[RAIL_TEMP1].data = 0;
 8005822:	4b9e      	ldr	r3, [pc, #632]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005824:	2200      	movs	r2, #0
 8005826:	849a      	strh	r2, [r3, #36]	; 0x24
	rail_monitor[RAIL_TEMP1].max_voltage = 10000; // TODO: Get actual range from Sanj
 8005828:	4b9c      	ldr	r3, [pc, #624]	; (8005a9c <voltage_monitor_init+0x30c>)
 800582a:	f242 7210 	movw	r2, #10000	; 0x2710
 800582e:	84da      	strh	r2, [r3, #38]	; 0x26
	rail_monitor[RAIL_TEMP1].min_voltage = 0;
 8005830:	4b9a      	ldr	r3, [pc, #616]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005832:	2200      	movs	r2, #0
 8005834:	851a      	strh	r2, [r3, #40]	; 0x28
	rail_monitor[RAIL_TEMP1].OOB_1 = 0;
 8005836:	4b99      	ldr	r3, [pc, #612]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005838:	2200      	movs	r2, #0
 800583a:	855a      	strh	r2, [r3, #42]	; 0x2a
	rail_monitor[RAIL_TEMP1].OOB_2 = 0;
 800583c:	4b97      	ldr	r3, [pc, #604]	; (8005a9c <voltage_monitor_init+0x30c>)
 800583e:	2200      	movs	r2, #0
 8005840:	859a      	strh	r2, [r3, #44]	; 0x2c
	rail_monitor[RAIL_TEMP1].OOB_3 = 0;
 8005842:	4b96      	ldr	r3, [pc, #600]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005844:	2200      	movs	r2, #0
 8005846:	85da      	strh	r2, [r3, #46]	; 0x2e

	rail_monitor[RAIL_TEMP2].name = RAIL_TEMP2;
 8005848:	4b94      	ldr	r3, [pc, #592]	; (8005a9c <voltage_monitor_init+0x30c>)
 800584a:	2203      	movs	r2, #3
 800584c:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	rail_monitor[RAIL_TEMP2].error_count = 0;
 8005850:	4b92      	ldr	r3, [pc, #584]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005852:	2200      	movs	r2, #0
 8005854:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
	rail_monitor[RAIL_TEMP2].is_enabled = 1;
 8005858:	4b90      	ldr	r3, [pc, #576]	; (8005a9c <voltage_monitor_init+0x30c>)
 800585a:	2201      	movs	r2, #1
 800585c:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
	rail_monitor[RAIL_TEMP2].data = 0;
 8005860:	4b8e      	ldr	r3, [pc, #568]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005862:	2200      	movs	r2, #0
 8005864:	869a      	strh	r2, [r3, #52]	; 0x34
	rail_monitor[RAIL_TEMP2].max_voltage = 10000; // TODO: Get actual range from Sanj
 8005866:	4b8d      	ldr	r3, [pc, #564]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005868:	f242 7210 	movw	r2, #10000	; 0x2710
 800586c:	86da      	strh	r2, [r3, #54]	; 0x36
	rail_monitor[RAIL_TEMP2].min_voltage = 0;
 800586e:	4b8b      	ldr	r3, [pc, #556]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005870:	2200      	movs	r2, #0
 8005872:	871a      	strh	r2, [r3, #56]	; 0x38
	rail_monitor[RAIL_TEMP2].OOB_1 = 0;
 8005874:	4b89      	ldr	r3, [pc, #548]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005876:	2200      	movs	r2, #0
 8005878:	875a      	strh	r2, [r3, #58]	; 0x3a
	rail_monitor[RAIL_TEMP2].OOB_2 = 0;
 800587a:	4b88      	ldr	r3, [pc, #544]	; (8005a9c <voltage_monitor_init+0x30c>)
 800587c:	2200      	movs	r2, #0
 800587e:	879a      	strh	r2, [r3, #60]	; 0x3c
	rail_monitor[RAIL_TEMP2].OOB_3 = 0;
 8005880:	4b86      	ldr	r3, [pc, #536]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005882:	2200      	movs	r2, #0
 8005884:	87da      	strh	r2, [r3, #62]	; 0x3e

	rail_monitor[RAIL_TEMP3].name = RAIL_TEMP3;
 8005886:	4b85      	ldr	r3, [pc, #532]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005888:	2204      	movs	r2, #4
 800588a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
	rail_monitor[RAIL_TEMP3].error_count = 0;
 800588e:	4b83      	ldr	r3, [pc, #524]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005890:	2200      	movs	r2, #0
 8005892:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
	rail_monitor[RAIL_TEMP3].is_enabled = 1;
 8005896:	4b81      	ldr	r3, [pc, #516]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005898:	2201      	movs	r2, #1
 800589a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
	rail_monitor[RAIL_TEMP3].data = 0;
 800589e:	4b7f      	ldr	r3, [pc, #508]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058a0:	2200      	movs	r2, #0
 80058a2:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
	rail_monitor[RAIL_TEMP3].max_voltage = 10000; // TODO: Get actual range from Sanj
 80058a6:	4b7d      	ldr	r3, [pc, #500]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058a8:	f242 7210 	movw	r2, #10000	; 0x2710
 80058ac:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
	rail_monitor[RAIL_TEMP3].min_voltage = 0;
 80058b0:	4b7a      	ldr	r3, [pc, #488]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058b2:	2200      	movs	r2, #0
 80058b4:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
	rail_monitor[RAIL_TEMP3].OOB_1 = 0;
 80058b8:	4b78      	ldr	r3, [pc, #480]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058ba:	2200      	movs	r2, #0
 80058bc:	f8a3 204a 	strh.w	r2, [r3, #74]	; 0x4a
	rail_monitor[RAIL_TEMP3].OOB_2 = 0;
 80058c0:	4b76      	ldr	r3, [pc, #472]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058c2:	2200      	movs	r2, #0
 80058c4:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
	rail_monitor[RAIL_TEMP3].OOB_3 = 0;
 80058c8:	4b74      	ldr	r3, [pc, #464]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058ca:	2200      	movs	r2, #0
 80058cc:	f8a3 204e 	strh.w	r2, [r3, #78]	; 0x4e

	rail_monitor[RAIL_TEMP4].name = RAIL_TEMP4;
 80058d0:	4b72      	ldr	r3, [pc, #456]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058d2:	2205      	movs	r2, #5
 80058d4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
	rail_monitor[RAIL_TEMP4].error_count = 0;
 80058d8:	4b70      	ldr	r3, [pc, #448]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058da:	2200      	movs	r2, #0
 80058dc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
	rail_monitor[RAIL_TEMP4].is_enabled = 1;
 80058e0:	4b6e      	ldr	r3, [pc, #440]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058e2:	2201      	movs	r2, #1
 80058e4:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
	rail_monitor[RAIL_TEMP4].data = 0;
 80058e8:	4b6c      	ldr	r3, [pc, #432]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058ea:	2200      	movs	r2, #0
 80058ec:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
	rail_monitor[RAIL_TEMP4].max_voltage = 10000; // TODO: Get actual range from Sanj
 80058f0:	4b6a      	ldr	r3, [pc, #424]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058f2:	f242 7210 	movw	r2, #10000	; 0x2710
 80058f6:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
	rail_monitor[RAIL_TEMP4].min_voltage = 0;
 80058fa:	4b68      	ldr	r3, [pc, #416]	; (8005a9c <voltage_monitor_init+0x30c>)
 80058fc:	2200      	movs	r2, #0
 80058fe:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
	rail_monitor[RAIL_TEMP4].OOB_1 = 0;
 8005902:	4b66      	ldr	r3, [pc, #408]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005904:	2200      	movs	r2, #0
 8005906:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
	rail_monitor[RAIL_TEMP4].OOB_2 = 0;
 800590a:	4b64      	ldr	r3, [pc, #400]	; (8005a9c <voltage_monitor_init+0x30c>)
 800590c:	2200      	movs	r2, #0
 800590e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
	rail_monitor[RAIL_TEMP4].OOB_3 = 0;
 8005912:	4b62      	ldr	r3, [pc, #392]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005914:	2200      	movs	r2, #0
 8005916:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e

	rail_monitor[RAIL_busvmon].name = RAIL_busvmon;
 800591a:	4b60      	ldr	r3, [pc, #384]	; (8005a9c <voltage_monitor_init+0x30c>)
 800591c:	2206      	movs	r2, #6
 800591e:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
	rail_monitor[RAIL_busvmon].error_count = 0;
 8005922:	4b5e      	ldr	r3, [pc, #376]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005924:	2200      	movs	r2, #0
 8005926:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
	rail_monitor[RAIL_busvmon].is_enabled = 0;
 800592a:	4b5c      	ldr	r3, [pc, #368]	; (8005a9c <voltage_monitor_init+0x30c>)
 800592c:	2200      	movs	r2, #0
 800592e:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
	rail_monitor[RAIL_busvmon].data = 0;
 8005932:	4b5a      	ldr	r3, [pc, #360]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005934:	2200      	movs	r2, #0
 8005936:	f8a3 2064 	strh.w	r2, [r3, #100]	; 0x64
	rail_monitor[RAIL_busvmon].max_voltage = 10000; // TODO: Get actual range from Sanj
 800593a:	4b58      	ldr	r3, [pc, #352]	; (8005a9c <voltage_monitor_init+0x30c>)
 800593c:	f242 7210 	movw	r2, #10000	; 0x2710
 8005940:	f8a3 2066 	strh.w	r2, [r3, #102]	; 0x66
	rail_monitor[RAIL_busvmon].min_voltage = 0;
 8005944:	4b55      	ldr	r3, [pc, #340]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005946:	2200      	movs	r2, #0
 8005948:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
	rail_monitor[RAIL_busvmon].OOB_1 = 0;
 800594c:	4b53      	ldr	r3, [pc, #332]	; (8005a9c <voltage_monitor_init+0x30c>)
 800594e:	2200      	movs	r2, #0
 8005950:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
	rail_monitor[RAIL_busvmon].OOB_2 = 0;
 8005954:	4b51      	ldr	r3, [pc, #324]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005956:	2200      	movs	r2, #0
 8005958:	f8a3 206c 	strh.w	r2, [r3, #108]	; 0x6c
	rail_monitor[RAIL_busvmon].OOB_3 = 0;
 800595c:	4b4f      	ldr	r3, [pc, #316]	; (8005a9c <voltage_monitor_init+0x30c>)
 800595e:	2200      	movs	r2, #0
 8005960:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e

	rail_monitor[RAIL_busimon].name = RAIL_busimon;
 8005964:	4b4d      	ldr	r3, [pc, #308]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005966:	2207      	movs	r2, #7
 8005968:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
	rail_monitor[RAIL_busimon].error_count = 0;
 800596c:	4b4b      	ldr	r3, [pc, #300]	; (8005a9c <voltage_monitor_init+0x30c>)
 800596e:	2200      	movs	r2, #0
 8005970:	f883 2071 	strb.w	r2, [r3, #113]	; 0x71
	rail_monitor[RAIL_busimon].is_enabled = 0;
 8005974:	4b49      	ldr	r3, [pc, #292]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005976:	2200      	movs	r2, #0
 8005978:	f883 2072 	strb.w	r2, [r3, #114]	; 0x72
	rail_monitor[RAIL_busimon].data = 0;
 800597c:	4b47      	ldr	r3, [pc, #284]	; (8005a9c <voltage_monitor_init+0x30c>)
 800597e:	2200      	movs	r2, #0
 8005980:	f8a3 2074 	strh.w	r2, [r3, #116]	; 0x74
	rail_monitor[RAIL_busimon].max_voltage = 10000; // TODO: Get actual range from Sanj
 8005984:	4b45      	ldr	r3, [pc, #276]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005986:	f242 7210 	movw	r2, #10000	; 0x2710
 800598a:	f8a3 2076 	strh.w	r2, [r3, #118]	; 0x76
	rail_monitor[RAIL_busimon].min_voltage = 0;
 800598e:	4b43      	ldr	r3, [pc, #268]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005990:	2200      	movs	r2, #0
 8005992:	f8a3 2078 	strh.w	r2, [r3, #120]	; 0x78
	rail_monitor[RAIL_busimon].OOB_1 = 0;
 8005996:	4b41      	ldr	r3, [pc, #260]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005998:	2200      	movs	r2, #0
 800599a:	f8a3 207a 	strh.w	r2, [r3, #122]	; 0x7a
	rail_monitor[RAIL_busimon].OOB_2 = 0;
 800599e:	4b3f      	ldr	r3, [pc, #252]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059a0:	2200      	movs	r2, #0
 80059a2:	f8a3 207c 	strh.w	r2, [r3, #124]	; 0x7c
	rail_monitor[RAIL_busimon].OOB_3 = 0;
 80059a6:	4b3d      	ldr	r3, [pc, #244]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059a8:	2200      	movs	r2, #0
 80059aa:	f8a3 207e 	strh.w	r2, [r3, #126]	; 0x7e

	rail_monitor[RAIL_2v5].name = RAIL_2v5;
 80059ae:	4b3b      	ldr	r3, [pc, #236]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059b0:	2208      	movs	r2, #8
 80059b2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
	rail_monitor[RAIL_2v5].error_count = 0;
 80059b6:	4b39      	ldr	r3, [pc, #228]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059b8:	2200      	movs	r2, #0
 80059ba:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
	rail_monitor[RAIL_2v5].is_enabled = 0;
 80059be:	4b37      	ldr	r3, [pc, #220]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059c0:	2200      	movs	r2, #0
 80059c2:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
	rail_monitor[RAIL_2v5].data = 0;
 80059c6:	4b35      	ldr	r3, [pc, #212]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059c8:	2200      	movs	r2, #0
 80059ca:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
	rail_monitor[RAIL_2v5].max_voltage = 3257;
 80059ce:	4b33      	ldr	r3, [pc, #204]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059d0:	f640 42b9 	movw	r2, #3257	; 0xcb9
 80059d4:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
	rail_monitor[RAIL_2v5].min_voltage = 2947;
 80059d8:	4b30      	ldr	r3, [pc, #192]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059da:	f640 3283 	movw	r2, #2947	; 0xb83
 80059de:	f8a3 2088 	strh.w	r2, [r3, #136]	; 0x88
	rail_monitor[RAIL_2v5].OOB_1 = 0;
 80059e2:	4b2e      	ldr	r3, [pc, #184]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059e4:	2200      	movs	r2, #0
 80059e6:	f8a3 208a 	strh.w	r2, [r3, #138]	; 0x8a
	rail_monitor[RAIL_2v5].OOB_2 = 0;
 80059ea:	4b2c      	ldr	r3, [pc, #176]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059ec:	2200      	movs	r2, #0
 80059ee:	f8a3 208c 	strh.w	r2, [r3, #140]	; 0x8c
	rail_monitor[RAIL_2v5].OOB_3 = 0;
 80059f2:	4b2a      	ldr	r3, [pc, #168]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059f4:	2200      	movs	r2, #0
 80059f6:	f8a3 208e 	strh.w	r2, [r3, #142]	; 0x8e


	rail_monitor[RAIL_3v3].name = RAIL_3v3;
 80059fa:	4b28      	ldr	r3, [pc, #160]	; (8005a9c <voltage_monitor_init+0x30c>)
 80059fc:	2209      	movs	r2, #9
 80059fe:	f883 2090 	strb.w	r2, [r3, #144]	; 0x90
	rail_monitor[RAIL_3v3].error_count = 0;
 8005a02:	4b26      	ldr	r3, [pc, #152]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a04:	2200      	movs	r2, #0
 8005a06:	f883 2091 	strb.w	r2, [r3, #145]	; 0x91
	rail_monitor[RAIL_3v3].is_enabled = 0;
 8005a0a:	4b24      	ldr	r3, [pc, #144]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a0c:	2200      	movs	r2, #0
 8005a0e:	f883 2092 	strb.w	r2, [r3, #146]	; 0x92
	rail_monitor[RAIL_3v3].data = 0;
 8005a12:	4b22      	ldr	r3, [pc, #136]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a14:	2200      	movs	r2, #0
 8005a16:	f8a3 2094 	strh.w	r2, [r3, #148]	; 0x94
	rail_monitor[RAIL_3v3].max_voltage = 3909;
 8005a1a:	4b20      	ldr	r3, [pc, #128]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a1c:	f640 7245 	movw	r2, #3909	; 0xf45
 8005a20:	f8a3 2096 	strh.w	r2, [r3, #150]	; 0x96
	//rail_monitor[RAIL_3v3].min_voltage = 3537;
	rail_monitor[RAIL_3v3].min_voltage = 0;
 8005a24:	4b1d      	ldr	r3, [pc, #116]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a26:	2200      	movs	r2, #0
 8005a28:	f8a3 2098 	strh.w	r2, [r3, #152]	; 0x98
	rail_monitor[RAIL_3v3].OOB_1 = 0;
 8005a2c:	4b1b      	ldr	r3, [pc, #108]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a2e:	2200      	movs	r2, #0
 8005a30:	f8a3 209a 	strh.w	r2, [r3, #154]	; 0x9a
	rail_monitor[RAIL_3v3].OOB_2 = 0;
 8005a34:	4b19      	ldr	r3, [pc, #100]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a36:	2200      	movs	r2, #0
 8005a38:	f8a3 209c 	strh.w	r2, [r3, #156]	; 0x9c
	rail_monitor[RAIL_3v3].OOB_3 = 0;
 8005a3c:	4b17      	ldr	r3, [pc, #92]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a3e:	2200      	movs	r2, #0
 8005a40:	f8a3 209e 	strh.w	r2, [r3, #158]	; 0x9e


	rail_monitor[RAIL_5v].name = RAIL_5v;
 8005a44:	4b15      	ldr	r3, [pc, #84]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a46:	220a      	movs	r2, #10
 8005a48:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
	rail_monitor[RAIL_5v].error_count = 0;
 8005a4c:	4b13      	ldr	r3, [pc, #76]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a4e:	2200      	movs	r2, #0
 8005a50:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
	rail_monitor[RAIL_5v].is_enabled = 0;
 8005a54:	4b11      	ldr	r3, [pc, #68]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a56:	2200      	movs	r2, #0
 8005a58:	f883 20a2 	strb.w	r2, [r3, #162]	; 0xa2
	rail_monitor[RAIL_5v].data = 0;
 8005a5c:	4b0f      	ldr	r3, [pc, #60]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a5e:	2200      	movs	r2, #0
 8005a60:	f8a3 20a4 	strh.w	r2, [r3, #164]	; 0xa4
	rail_monitor[RAIL_5v].max_voltage = 3909;
 8005a64:	4b0d      	ldr	r3, [pc, #52]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a66:	f640 7245 	movw	r2, #3909	; 0xf45
 8005a6a:	f8a3 20a6 	strh.w	r2, [r3, #166]	; 0xa6
	rail_monitor[RAIL_5v].min_voltage = 3537;
 8005a6e:	4b0b      	ldr	r3, [pc, #44]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a70:	f640 52d1 	movw	r2, #3537	; 0xdd1
 8005a74:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
	rail_monitor[RAIL_5v].OOB_1 = 0;
 8005a78:	4b08      	ldr	r3, [pc, #32]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a7a:	2200      	movs	r2, #0
 8005a7c:	f8a3 20aa 	strh.w	r2, [r3, #170]	; 0xaa
	rail_monitor[RAIL_5v].OOB_2 = 0;
 8005a80:	4b06      	ldr	r3, [pc, #24]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a82:	2200      	movs	r2, #0
 8005a84:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
	rail_monitor[RAIL_5v].OOB_3 = 0;
 8005a88:	4b04      	ldr	r3, [pc, #16]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a8a:	2200      	movs	r2, #0
 8005a8c:	f8a3 20ae 	strh.w	r2, [r3, #174]	; 0xae

	rail_monitor[RAIL_n3v3].name = RAIL_n3v3;
 8005a90:	4b02      	ldr	r3, [pc, #8]	; (8005a9c <voltage_monitor_init+0x30c>)
 8005a92:	220b      	movs	r2, #11
 8005a94:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8005a98:	e002      	b.n	8005aa0 <voltage_monitor_init+0x310>
 8005a9a:	bf00      	nop
 8005a9c:	24001f48 	.word	0x24001f48
	rail_monitor[RAIL_n3v3].error_count = 0;
 8005aa0:	4b85      	ldr	r3, [pc, #532]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005aa2:	2200      	movs	r2, #0
 8005aa4:	f883 20b1 	strb.w	r2, [r3, #177]	; 0xb1
	rail_monitor[RAIL_n3v3].is_enabled = 0;
 8005aa8:	4b83      	ldr	r3, [pc, #524]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005aaa:	2200      	movs	r2, #0
 8005aac:	f883 20b2 	strb.w	r2, [r3, #178]	; 0xb2
	rail_monitor[RAIL_n3v3].data = 0;
 8005ab0:	4b81      	ldr	r3, [pc, #516]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005ab2:	2200      	movs	r2, #0
 8005ab4:	f8a3 20b4 	strh.w	r2, [r3, #180]	; 0xb4
	rail_monitor[RAIL_n3v3].max_voltage = 4091;
 8005ab8:	4b7f      	ldr	r3, [pc, #508]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005aba:	f640 72fb 	movw	r2, #4091	; 0xffb
 8005abe:	f8a3 20b6 	strh.w	r2, [r3, #182]	; 0xb6
	rail_monitor[RAIL_n3v3].min_voltage = 3702;
 8005ac2:	4b7d      	ldr	r3, [pc, #500]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005ac4:	f640 6276 	movw	r2, #3702	; 0xe76
 8005ac8:	f8a3 20b8 	strh.w	r2, [r3, #184]	; 0xb8
	rail_monitor[RAIL_n3v3].OOB_1 = 0;
 8005acc:	4b7a      	ldr	r3, [pc, #488]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005ace:	2200      	movs	r2, #0
 8005ad0:	f8a3 20ba 	strh.w	r2, [r3, #186]	; 0xba
	rail_monitor[RAIL_n3v3].OOB_2 = 0;
 8005ad4:	4b78      	ldr	r3, [pc, #480]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005ad6:	2200      	movs	r2, #0
 8005ad8:	f8a3 20bc 	strh.w	r2, [r3, #188]	; 0xbc
	rail_monitor[RAIL_n3v3].OOB_3 = 0;
 8005adc:	4b76      	ldr	r3, [pc, #472]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005ade:	2200      	movs	r2, #0
 8005ae0:	f8a3 20be 	strh.w	r2, [r3, #190]	; 0xbe

	rail_monitor[RAIL_n5v].name = RAIL_n5v;
 8005ae4:	4b74      	ldr	r3, [pc, #464]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005ae6:	220c      	movs	r2, #12
 8005ae8:	f883 20c0 	strb.w	r2, [r3, #192]	; 0xc0
	rail_monitor[RAIL_n5v].error_count = 0;
 8005aec:	4b72      	ldr	r3, [pc, #456]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005aee:	2200      	movs	r2, #0
 8005af0:	f883 20c1 	strb.w	r2, [r3, #193]	; 0xc1
	rail_monitor[RAIL_n5v].is_enabled = 0;
 8005af4:	4b70      	ldr	r3, [pc, #448]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005af6:	2200      	movs	r2, #0
 8005af8:	f883 20c2 	strb.w	r2, [r3, #194]	; 0xc2
	rail_monitor[RAIL_n5v].data = 0;
 8005afc:	4b6e      	ldr	r3, [pc, #440]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005afe:	2200      	movs	r2, #0
 8005b00:	f8a3 20c4 	strh.w	r2, [r3, #196]	; 0xc4
	rail_monitor[RAIL_n5v].max_voltage = 4000;
 8005b04:	4b6c      	ldr	r3, [pc, #432]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b06:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 8005b0a:	f8a3 20c6 	strh.w	r2, [r3, #198]	; 0xc6
	//rail_monitor[RAIL_n5v].min_voltage = 3619;
	rail_monitor[RAIL_n5v].min_voltage = 0;
 8005b0e:	4b6a      	ldr	r3, [pc, #424]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b10:	2200      	movs	r2, #0
 8005b12:	f8a3 20c8 	strh.w	r2, [r3, #200]	; 0xc8
	rail_monitor[RAIL_n5v].OOB_1 = 0;
 8005b16:	4b68      	ldr	r3, [pc, #416]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b18:	2200      	movs	r2, #0
 8005b1a:	f8a3 20ca 	strh.w	r2, [r3, #202]	; 0xca
	rail_monitor[RAIL_n5v].OOB_2 = 0;
 8005b1e:	4b66      	ldr	r3, [pc, #408]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b20:	2200      	movs	r2, #0
 8005b22:	f8a3 20cc 	strh.w	r2, [r3, #204]	; 0xcc
	rail_monitor[RAIL_n5v].OOB_3 = 0;
 8005b26:	4b64      	ldr	r3, [pc, #400]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b28:	2200      	movs	r2, #0
 8005b2a:	f8a3 20ce 	strh.w	r2, [r3, #206]	; 0xce

	rail_monitor[RAIL_15v].name = RAIL_15v;
 8005b2e:	4b62      	ldr	r3, [pc, #392]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b30:	220d      	movs	r2, #13
 8005b32:	f883 20d0 	strb.w	r2, [r3, #208]	; 0xd0
	rail_monitor[RAIL_15v].error_count = 0;
 8005b36:	4b60      	ldr	r3, [pc, #384]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b38:	2200      	movs	r2, #0
 8005b3a:	f883 20d1 	strb.w	r2, [r3, #209]	; 0xd1
	rail_monitor[RAIL_15v].is_enabled = 0;
 8005b3e:	4b5e      	ldr	r3, [pc, #376]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b40:	2200      	movs	r2, #0
 8005b42:	f883 20d2 	strb.w	r2, [r3, #210]	; 0xd2
	rail_monitor[RAIL_15v].data = 0;
 8005b46:	4b5c      	ldr	r3, [pc, #368]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b48:	2200      	movs	r2, #0
 8005b4a:	f8a3 20d4 	strh.w	r2, [r3, #212]	; 0xd4
	rail_monitor[RAIL_15v].max_voltage = 3896;
 8005b4e:	4b5a      	ldr	r3, [pc, #360]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b50:	f640 7238 	movw	r2, #3896	; 0xf38
 8005b54:	f8a3 20d6 	strh.w	r2, [r3, #214]	; 0xd6
	rail_monitor[RAIL_15v].min_voltage = 3525;
 8005b58:	4b57      	ldr	r3, [pc, #348]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b5a:	f640 52c5 	movw	r2, #3525	; 0xdc5
 8005b5e:	f8a3 20d8 	strh.w	r2, [r3, #216]	; 0xd8
	rail_monitor[RAIL_15v].OOB_1 = 0;
 8005b62:	4b55      	ldr	r3, [pc, #340]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b64:	2200      	movs	r2, #0
 8005b66:	f8a3 20da 	strh.w	r2, [r3, #218]	; 0xda
	rail_monitor[RAIL_15v].OOB_2 = 0;
 8005b6a:	4b53      	ldr	r3, [pc, #332]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b6c:	2200      	movs	r2, #0
 8005b6e:	f8a3 20dc 	strh.w	r2, [r3, #220]	; 0xdc
	rail_monitor[RAIL_15v].OOB_3 = 0;
 8005b72:	4b51      	ldr	r3, [pc, #324]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b74:	2200      	movs	r2, #0
 8005b76:	f8a3 20de 	strh.w	r2, [r3, #222]	; 0xde

	rail_monitor[RAIL_5vref].name = RAIL_5vref;
 8005b7a:	4b4f      	ldr	r3, [pc, #316]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b7c:	220e      	movs	r2, #14
 8005b7e:	f883 20e0 	strb.w	r2, [r3, #224]	; 0xe0
	rail_monitor[RAIL_5vref].error_count = 0;
 8005b82:	4b4d      	ldr	r3, [pc, #308]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b84:	2200      	movs	r2, #0
 8005b86:	f883 20e1 	strb.w	r2, [r3, #225]	; 0xe1
	rail_monitor[RAIL_5vref].is_enabled = 0;
 8005b8a:	4b4b      	ldr	r3, [pc, #300]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b8c:	2200      	movs	r2, #0
 8005b8e:	f883 20e2 	strb.w	r2, [r3, #226]	; 0xe2
	rail_monitor[RAIL_5vref].data = 0;
 8005b92:	4b49      	ldr	r3, [pc, #292]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b94:	2200      	movs	r2, #0
 8005b96:	f8a3 20e4 	strh.w	r2, [r3, #228]	; 0xe4
	rail_monitor[RAIL_5vref].max_voltage = 3909;
 8005b9a:	4b47      	ldr	r3, [pc, #284]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005b9c:	f640 7245 	movw	r2, #3909	; 0xf45
 8005ba0:	f8a3 20e6 	strh.w	r2, [r3, #230]	; 0xe6
	rail_monitor[RAIL_5vref].min_voltage = 3537;
 8005ba4:	4b44      	ldr	r3, [pc, #272]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005ba6:	f640 52d1 	movw	r2, #3537	; 0xdd1
 8005baa:	f8a3 20e8 	strh.w	r2, [r3, #232]	; 0xe8
	rail_monitor[RAIL_5vref].OOB_1 = 0;
 8005bae:	4b42      	ldr	r3, [pc, #264]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005bb0:	2200      	movs	r2, #0
 8005bb2:	f8a3 20ea 	strh.w	r2, [r3, #234]	; 0xea
	rail_monitor[RAIL_5vref].OOB_2 = 0;
 8005bb6:	4b40      	ldr	r3, [pc, #256]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005bb8:	2200      	movs	r2, #0
 8005bba:	f8a3 20ec 	strh.w	r2, [r3, #236]	; 0xec
	rail_monitor[RAIL_5vref].OOB_3 = 0;
 8005bbe:	4b3e      	ldr	r3, [pc, #248]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005bc0:	2200      	movs	r2, #0
 8005bc2:	f8a3 20ee 	strh.w	r2, [r3, #238]	; 0xee

	rail_monitor[RAIL_n200v].name = RAIL_n200v;
 8005bc6:	4b3c      	ldr	r3, [pc, #240]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005bc8:	220f      	movs	r2, #15
 8005bca:	f883 20f0 	strb.w	r2, [r3, #240]	; 0xf0
	rail_monitor[RAIL_n200v].error_count = 0;
 8005bce:	4b3a      	ldr	r3, [pc, #232]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005bd0:	2200      	movs	r2, #0
 8005bd2:	f883 20f1 	strb.w	r2, [r3, #241]	; 0xf1
	rail_monitor[RAIL_n200v].is_enabled = 0;
 8005bd6:	4b38      	ldr	r3, [pc, #224]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005bd8:	2200      	movs	r2, #0
 8005bda:	f883 20f2 	strb.w	r2, [r3, #242]	; 0xf2
	rail_monitor[RAIL_n200v].data = 0;
 8005bde:	4b36      	ldr	r3, [pc, #216]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005be0:	2200      	movs	r2, #0
 8005be2:	f8a3 20f4 	strh.w	r2, [r3, #244]	; 0xf4
	rail_monitor[RAIL_n200v].max_voltage = 4196;
 8005be6:	4b34      	ldr	r3, [pc, #208]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005be8:	f241 0264 	movw	r2, #4196	; 0x1064
 8005bec:	f8a3 20f6 	strh.w	r2, [r3, #246]	; 0xf6
	//rail_monitor[RAIL_n200v].min_voltage = 3796;
	rail_monitor[RAIL_n200v].min_voltage = 0;		// TODO: Currently set to 0, kept triggering because it has been reading ~3351
 8005bf0:	4b31      	ldr	r3, [pc, #196]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005bf2:	2200      	movs	r2, #0
 8005bf4:	f8a3 20f8 	strh.w	r2, [r3, #248]	; 0xf8
	rail_monitor[RAIL_n200v].OOB_1 = 0;
 8005bf8:	4b2f      	ldr	r3, [pc, #188]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005bfa:	2200      	movs	r2, #0
 8005bfc:	f8a3 20fa 	strh.w	r2, [r3, #250]	; 0xfa
	rail_monitor[RAIL_n200v].OOB_2 = 0;
 8005c00:	4b2d      	ldr	r3, [pc, #180]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c02:	2200      	movs	r2, #0
 8005c04:	f8a3 20fc 	strh.w	r2, [r3, #252]	; 0xfc
	rail_monitor[RAIL_n200v].OOB_3 = 0;
 8005c08:	4b2b      	ldr	r3, [pc, #172]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c0a:	2200      	movs	r2, #0
 8005c0c:	f8a3 20fe 	strh.w	r2, [r3, #254]	; 0xfe


	rail_monitor[RAIL_n800v].name = RAIL_n800v;
 8005c10:	4b29      	ldr	r3, [pc, #164]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c12:	2210      	movs	r2, #16
 8005c14:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
	rail_monitor[RAIL_n800v].error_count = 0;
 8005c18:	4b27      	ldr	r3, [pc, #156]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c1a:	2200      	movs	r2, #0
 8005c1c:	f883 2101 	strb.w	r2, [r3, #257]	; 0x101
	rail_monitor[RAIL_n800v].is_enabled = 0;
 8005c20:	4b25      	ldr	r3, [pc, #148]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c22:	2200      	movs	r2, #0
 8005c24:	f883 2102 	strb.w	r2, [r3, #258]	; 0x102
	rail_monitor[RAIL_n800v].data = 0;
 8005c28:	4b23      	ldr	r3, [pc, #140]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c2a:	2200      	movs	r2, #0
 8005c2c:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
	rail_monitor[RAIL_n800v].max_voltage = 3336;
 8005c30:	4b21      	ldr	r3, [pc, #132]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c32:	f640 5208 	movw	r2, #3336	; 0xd08
 8005c36:	f8a3 2106 	strh.w	r2, [r3, #262]	; 0x106
	rail_monitor[RAIL_n800v].min_voltage = 3018;
 8005c3a:	4b1f      	ldr	r3, [pc, #124]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c3c:	f640 32ca 	movw	r2, #3018	; 0xbca
 8005c40:	f8a3 2108 	strh.w	r2, [r3, #264]	; 0x108
	rail_monitor[RAIL_n800v].OOB_1 = 0;
 8005c44:	4b1c      	ldr	r3, [pc, #112]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c46:	2200      	movs	r2, #0
 8005c48:	f8a3 210a 	strh.w	r2, [r3, #266]	; 0x10a
	rail_monitor[RAIL_n800v].OOB_2 = 0;
 8005c4c:	4b1a      	ldr	r3, [pc, #104]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c4e:	2200      	movs	r2, #0
 8005c50:	f8a3 210c 	strh.w	r2, [r3, #268]	; 0x10c
	rail_monitor[RAIL_n800v].OOB_3 = 0;
 8005c54:	4b18      	ldr	r3, [pc, #96]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c56:	2200      	movs	r2, #0
 8005c58:	f8a3 210e 	strh.w	r2, [r3, #270]	; 0x10e

	rail_monitor[RAIL_TMP1].name = RAIL_TMP1;
 8005c5c:	4b16      	ldr	r3, [pc, #88]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c5e:	2211      	movs	r2, #17
 8005c60:	f883 2110 	strb.w	r2, [r3, #272]	; 0x110
	rail_monitor[RAIL_TMP1].error_count = 0;
 8005c64:	4b14      	ldr	r3, [pc, #80]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c66:	2200      	movs	r2, #0
 8005c68:	f883 2111 	strb.w	r2, [r3, #273]	; 0x111
	rail_monitor[RAIL_TMP1].is_enabled = 1;
 8005c6c:	4b12      	ldr	r3, [pc, #72]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c6e:	2201      	movs	r2, #1
 8005c70:	f883 2112 	strb.w	r2, [r3, #274]	; 0x112
	rail_monitor[RAIL_TMP1].data = 0;
 8005c74:	4b10      	ldr	r3, [pc, #64]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c76:	2200      	movs	r2, #0
 8005c78:	f8a3 2114 	strh.w	r2, [r3, #276]	; 0x114
	rail_monitor[RAIL_TMP1].max_voltage = 10000; // TODO: Get actual range from Sanj
 8005c7c:	4b0e      	ldr	r3, [pc, #56]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c7e:	f242 7210 	movw	r2, #10000	; 0x2710
 8005c82:	f8a3 2116 	strh.w	r2, [r3, #278]	; 0x116
	rail_monitor[RAIL_TMP1].min_voltage = 0;
 8005c86:	4b0c      	ldr	r3, [pc, #48]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c88:	2200      	movs	r2, #0
 8005c8a:	f8a3 2118 	strh.w	r2, [r3, #280]	; 0x118
	rail_monitor[RAIL_TMP1].OOB_1 = 0;
 8005c8e:	4b0a      	ldr	r3, [pc, #40]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c90:	2200      	movs	r2, #0
 8005c92:	f8a3 211a 	strh.w	r2, [r3, #282]	; 0x11a
	rail_monitor[RAIL_TMP1].OOB_2 = 0;
 8005c96:	4b08      	ldr	r3, [pc, #32]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005c98:	2200      	movs	r2, #0
 8005c9a:	f8a3 211c 	strh.w	r2, [r3, #284]	; 0x11c
	rail_monitor[RAIL_TMP1].OOB_3 = 0;
 8005c9e:	4b06      	ldr	r3, [pc, #24]	; (8005cb8 <voltage_monitor_init+0x528>)
 8005ca0:	2200      	movs	r2, #0
 8005ca2:	f8a3 211e 	strh.w	r2, [r3, #286]	; 0x11e

	status = 1;
 8005ca6:	2301      	movs	r3, #1
 8005ca8:	71fb      	strb	r3, [r7, #7]

	return status;
 8005caa:	79fb      	ldrb	r3, [r7, #7]
}
 8005cac:	4618      	mov	r0, r3
 8005cae:	370c      	adds	r7, #12
 8005cb0:	46bd      	mov	sp, r7
 8005cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cb6:	4770      	bx	lr
 8005cb8:	24001f48 	.word	0x24001f48

08005cbc <set_rail_monitor_enable>:


uint8_t set_rail_monitor_enable(VOLTAGE_RAIL_NAME rail_name, uint8_t enable_value) {
 8005cbc:	b480      	push	{r7}
 8005cbe:	b085      	sub	sp, #20
 8005cc0:	af00      	add	r7, sp, #0
 8005cc2:	4603      	mov	r3, r0
 8005cc4:	460a      	mov	r2, r1
 8005cc6:	71fb      	strb	r3, [r7, #7]
 8005cc8:	4613      	mov	r3, r2
 8005cca:	71bb      	strb	r3, [r7, #6]
	uint8_t status = 0;
 8005ccc:	2300      	movs	r3, #0
 8005cce:	73fb      	strb	r3, [r7, #15]
	rail_monitor[rail_name].is_enabled = enable_value;
 8005cd0:	79fb      	ldrb	r3, [r7, #7]
 8005cd2:	4a07      	ldr	r2, [pc, #28]	; (8005cf0 <set_rail_monitor_enable+0x34>)
 8005cd4:	011b      	lsls	r3, r3, #4
 8005cd6:	4413      	add	r3, r2
 8005cd8:	3302      	adds	r3, #2
 8005cda:	79ba      	ldrb	r2, [r7, #6]
 8005cdc:	701a      	strb	r2, [r3, #0]
	status = 1;
 8005cde:	2301      	movs	r3, #1
 8005ce0:	73fb      	strb	r3, [r7, #15]

	return status;
 8005ce2:	7bfb      	ldrb	r3, [r7, #15]
}
 8005ce4:	4618      	mov	r0, r3
 8005ce6:	3714      	adds	r7, #20
 8005ce8:	46bd      	mov	sp, r7
 8005cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cee:	4770      	bx	lr
 8005cf0:	24001f48 	.word	0x24001f48

08005cf4 <set_rail_monitor>:


uint8_t set_rail_monitor() {
 8005cf4:	b580      	push	{r7, lr}
 8005cf6:	b08a      	sub	sp, #40	; 0x28
 8005cf8:	af00      	add	r7, sp, #0
	uint8_t status = 0;
 8005cfa:	2300      	movs	r3, #0
 8005cfc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	uint16_t hk_adc1[10];
	uint16_t hk_adc3[4];
	int16_t hk_i2c[4];

	sample_hk_i2c(hk_i2c);
 8005d00:	463b      	mov	r3, r7
 8005d02:	4618      	mov	r0, r3
 8005d04:	f7fe fa76 	bl	80041f4 <sample_hk_i2c>
	sample_hk_adc1(hk_adc1);
 8005d08:	f107 0310 	add.w	r3, r7, #16
 8005d0c:	4618      	mov	r0, r3
 8005d0e:	f7fe faa1 	bl	8004254 <sample_hk_adc1>
	sample_hk_adc3(hk_adc3);
 8005d12:	f107 0308 	add.w	r3, r7, #8
 8005d16:	4618      	mov	r0, r3
 8005d18:	f7fe faee 	bl	80042f8 <sample_hk_adc3>
 8005d1c:	897a      	ldrh	r2, [r7, #10]

	memcpy(&rail_monitor[RAIL_vsense].data, &hk_adc3[1], sizeof(uint16_t));
 8005d1e:	4b26      	ldr	r3, [pc, #152]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d20:	809a      	strh	r2, [r3, #4]
 8005d22:	893a      	ldrh	r2, [r7, #8]
	memcpy(&rail_monitor[RAIL_vrefint].data, &hk_adc3[0], sizeof(uint16_t));
 8005d24:	4b24      	ldr	r3, [pc, #144]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d26:	829a      	strh	r2, [r3, #20]
 8005d28:	883a      	ldrh	r2, [r7, #0]
	memcpy(&rail_monitor[RAIL_TEMP1].data, &hk_i2c[0], sizeof(uint16_t));
 8005d2a:	4b23      	ldr	r3, [pc, #140]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d2c:	849a      	strh	r2, [r3, #36]	; 0x24
 8005d2e:	887a      	ldrh	r2, [r7, #2]
	memcpy(&rail_monitor[RAIL_TEMP2].data, &hk_i2c[1], sizeof(uint16_t));
 8005d30:	4b21      	ldr	r3, [pc, #132]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d32:	869a      	strh	r2, [r3, #52]	; 0x34
 8005d34:	88ba      	ldrh	r2, [r7, #4]
	memcpy(&rail_monitor[RAIL_TEMP3].data, &hk_i2c[2], sizeof(uint16_t));
 8005d36:	4b20      	ldr	r3, [pc, #128]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d38:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8005d3c:	88fa      	ldrh	r2, [r7, #6]
	memcpy(&rail_monitor[RAIL_TEMP4].data, &hk_i2c[3], sizeof(uint16_t));
 8005d3e:	4b1e      	ldr	r3, [pc, #120]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d40:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 8005d44:	8a3a      	ldrh	r2, [r7, #16]
	memcpy(&rail_monitor[RAIL_busvmon].data, &hk_adc1[0], sizeof(uint16_t));
 8005d46:	4b1c      	ldr	r3, [pc, #112]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d48:	f8a3 2064 	strh.w	r2, [r3, #100]	; 0x64
 8005d4c:	8a7a      	ldrh	r2, [r7, #18]
	memcpy(&rail_monitor[RAIL_busimon].data, &hk_adc1[1], sizeof(uint16_t));
 8005d4e:	4b1a      	ldr	r3, [pc, #104]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d50:	f8a3 2074 	strh.w	r2, [r3, #116]	; 0x74
 8005d54:	8aba      	ldrh	r2, [r7, #20]
	memcpy(&rail_monitor[RAIL_2v5].data, &hk_adc1[2], sizeof(uint16_t));
 8005d56:	4b18      	ldr	r3, [pc, #96]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d58:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8005d5c:	89fa      	ldrh	r2, [r7, #14]
	memcpy(&rail_monitor[RAIL_3v3].data, &hk_adc3[3], sizeof(uint16_t));
 8005d5e:	4b16      	ldr	r3, [pc, #88]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d60:	f8a3 2094 	strh.w	r2, [r3, #148]	; 0x94
 8005d64:	8bba      	ldrh	r2, [r7, #28]
	memcpy(&rail_monitor[RAIL_5v].data, &hk_adc1[6], sizeof(uint16_t));
 8005d66:	4b14      	ldr	r3, [pc, #80]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d68:	f8a3 20a4 	strh.w	r2, [r3, #164]	; 0xa4
 8005d6c:	8afa      	ldrh	r2, [r7, #22]
	memcpy(&rail_monitor[RAIL_n3v3].data, &hk_adc1[3], sizeof(uint16_t));
 8005d6e:	4b12      	ldr	r3, [pc, #72]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d70:	f8a3 20b4 	strh.w	r2, [r3, #180]	; 0xb4
 8005d74:	89ba      	ldrh	r2, [r7, #12]
	memcpy(&rail_monitor[RAIL_n5v].data, &hk_adc3[2], sizeof(uint16_t));
 8005d76:	4b10      	ldr	r3, [pc, #64]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d78:	f8a3 20c4 	strh.w	r2, [r3, #196]	; 0xc4
 8005d7c:	8bfa      	ldrh	r2, [r7, #30]
	memcpy(&rail_monitor[RAIL_15v].data, &hk_adc1[7], sizeof(uint16_t));
 8005d7e:	4b0e      	ldr	r3, [pc, #56]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d80:	f8a3 20d4 	strh.w	r2, [r3, #212]	; 0xd4
 8005d84:	8c3a      	ldrh	r2, [r7, #32]
	memcpy(&rail_monitor[RAIL_5vref].data, &hk_adc1[8], sizeof(uint16_t));
 8005d86:	4b0c      	ldr	r3, [pc, #48]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d88:	f8a3 20e4 	strh.w	r2, [r3, #228]	; 0xe4
 8005d8c:	8b3a      	ldrh	r2, [r7, #24]
	memcpy(&rail_monitor[RAIL_n200v].data, &hk_adc1[4], sizeof(uint16_t));
 8005d8e:	4b0a      	ldr	r3, [pc, #40]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d90:	f8a3 20f4 	strh.w	r2, [r3, #244]	; 0xf4
 8005d94:	8b7a      	ldrh	r2, [r7, #26]
	memcpy(&rail_monitor[RAIL_n800v].data, &hk_adc1[5], sizeof(uint16_t));
 8005d96:	4b08      	ldr	r3, [pc, #32]	; (8005db8 <set_rail_monitor+0xc4>)
 8005d98:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 8005d9c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
	memcpy(&rail_monitor[RAIL_TMP1].data, &hk_adc1[9], sizeof(uint16_t));
 8005d9e:	4b06      	ldr	r3, [pc, #24]	; (8005db8 <set_rail_monitor+0xc4>)
 8005da0:	f8a3 2114 	strh.w	r2, [r3, #276]	; 0x114

	status = 1;
 8005da4:	2301      	movs	r3, #1
 8005da6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

	return status;
 8005daa:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 8005dae:	4618      	mov	r0, r3
 8005db0:	3728      	adds	r7, #40	; 0x28
 8005db2:	46bd      	mov	sp, r7
 8005db4:	bd80      	pop	{r7, pc}
 8005db6:	bf00      	nop
 8005db8:	24001f48 	.word	0x24001f48

08005dbc <get_rail_monitor>:

VOLTAGE_RAIL* get_rail_monitor() {
 8005dbc:	b480      	push	{r7}
 8005dbe:	af00      	add	r7, sp, #0
	return rail_monitor;
 8005dc0:	4b02      	ldr	r3, [pc, #8]	; (8005dcc <get_rail_monitor+0x10>)
}
 8005dc2:	4618      	mov	r0, r3
 8005dc4:	46bd      	mov	sp, r7
 8005dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dca:	4770      	bx	lr
 8005dcc:	24001f48 	.word	0x24001f48

08005dd0 <in_range>:

uint8_t in_range(uint16_t raw, int min, int max) {
 8005dd0:	b480      	push	{r7}
 8005dd2:	b085      	sub	sp, #20
 8005dd4:	af00      	add	r7, sp, #0
 8005dd6:	4603      	mov	r3, r0
 8005dd8:	60b9      	str	r1, [r7, #8]
 8005dda:	607a      	str	r2, [r7, #4]
 8005ddc:	81fb      	strh	r3, [r7, #14]
	if (raw <= max && raw >= min) {
 8005dde:	89fb      	ldrh	r3, [r7, #14]
 8005de0:	687a      	ldr	r2, [r7, #4]
 8005de2:	429a      	cmp	r2, r3
 8005de4:	db05      	blt.n	8005df2 <in_range+0x22>
 8005de6:	89fb      	ldrh	r3, [r7, #14]
 8005de8:	68ba      	ldr	r2, [r7, #8]
 8005dea:	429a      	cmp	r2, r3
 8005dec:	dc01      	bgt.n	8005df2 <in_range+0x22>
		return 1;
 8005dee:	2301      	movs	r3, #1
 8005df0:	e000      	b.n	8005df4 <in_range+0x24>
	}
	return 0;
 8005df2:	2300      	movs	r3, #0
}
 8005df4:	4618      	mov	r0, r3
 8005df6:	3714      	adds	r7, #20
 8005df8:	46bd      	mov	sp, r7
 8005dfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dfe:	4770      	bx	lr

08005e00 <monitor_rails>:


void monitor_rails() {
 8005e00:	b580      	push	{r7, lr}
 8005e02:	b086      	sub	sp, #24
 8005e04:	af00      	add	r7, sp, #0
	// Iterate through all voltage rails
	for (int i = 0; i < NUM_VOLTAGE_RAILS; i++){
 8005e06:	2300      	movs	r3, #0
 8005e08:	617b      	str	r3, [r7, #20]
 8005e0a:	e10c      	b.n	8006026 <monitor_rails+0x226>
		if (rail_monitor[i].is_enabled){
 8005e0c:	4a8c      	ldr	r2, [pc, #560]	; (8006040 <monitor_rails+0x240>)
 8005e0e:	697b      	ldr	r3, [r7, #20]
 8005e10:	011b      	lsls	r3, r3, #4
 8005e12:	4413      	add	r3, r2
 8005e14:	3302      	adds	r3, #2
 8005e16:	781b      	ldrb	r3, [r3, #0]
 8005e18:	2b00      	cmp	r3, #0
 8005e1a:	d07e      	beq.n	8005f1a <monitor_rails+0x11a>
			// If current rail is not in range...
			if (!in_range(rail_monitor[i].data, rail_monitor[i].min_voltage, rail_monitor[i].max_voltage)){
 8005e1c:	4a88      	ldr	r2, [pc, #544]	; (8006040 <monitor_rails+0x240>)
 8005e1e:	697b      	ldr	r3, [r7, #20]
 8005e20:	011b      	lsls	r3, r3, #4
 8005e22:	4413      	add	r3, r2
 8005e24:	3304      	adds	r3, #4
 8005e26:	8818      	ldrh	r0, [r3, #0]
 8005e28:	4a85      	ldr	r2, [pc, #532]	; (8006040 <monitor_rails+0x240>)
 8005e2a:	697b      	ldr	r3, [r7, #20]
 8005e2c:	011b      	lsls	r3, r3, #4
 8005e2e:	4413      	add	r3, r2
 8005e30:	3308      	adds	r3, #8
 8005e32:	881b      	ldrh	r3, [r3, #0]
 8005e34:	4619      	mov	r1, r3
 8005e36:	4a82      	ldr	r2, [pc, #520]	; (8006040 <monitor_rails+0x240>)
 8005e38:	697b      	ldr	r3, [r7, #20]
 8005e3a:	011b      	lsls	r3, r3, #4
 8005e3c:	4413      	add	r3, r2
 8005e3e:	3306      	adds	r3, #6
 8005e40:	881b      	ldrh	r3, [r3, #0]
 8005e42:	461a      	mov	r2, r3
 8005e44:	f7ff ffc4 	bl	8005dd0 <in_range>
 8005e48:	4603      	mov	r3, r0
 8005e4a:	2b00      	cmp	r3, #0
 8005e4c:	f040 80e8 	bne.w	8006020 <monitor_rails+0x220>
				// Increase that rails error count
				rail_monitor[i].error_count++;
 8005e50:	4a7b      	ldr	r2, [pc, #492]	; (8006040 <monitor_rails+0x240>)
 8005e52:	697b      	ldr	r3, [r7, #20]
 8005e54:	011b      	lsls	r3, r3, #4
 8005e56:	4413      	add	r3, r2
 8005e58:	3301      	adds	r3, #1
 8005e5a:	781b      	ldrb	r3, [r3, #0]
 8005e5c:	3301      	adds	r3, #1
 8005e5e:	b2d9      	uxtb	r1, r3
 8005e60:	4a77      	ldr	r2, [pc, #476]	; (8006040 <monitor_rails+0x240>)
 8005e62:	697b      	ldr	r3, [r7, #20]
 8005e64:	011b      	lsls	r3, r3, #4
 8005e66:	4413      	add	r3, r2
 8005e68:	3301      	adds	r3, #1
 8005e6a:	460a      	mov	r2, r1
 8005e6c:	701a      	strb	r2, [r3, #0]

				// Store the voltage each time a rail goes out of bounds
				switch (rail_monitor[i].error_count) {
 8005e6e:	4a74      	ldr	r2, [pc, #464]	; (8006040 <monitor_rails+0x240>)
 8005e70:	697b      	ldr	r3, [r7, #20]
 8005e72:	011b      	lsls	r3, r3, #4
 8005e74:	4413      	add	r3, r2
 8005e76:	3301      	adds	r3, #1
 8005e78:	781b      	ldrb	r3, [r3, #0]
 8005e7a:	2b03      	cmp	r3, #3
 8005e7c:	d022      	beq.n	8005ec4 <monitor_rails+0xc4>
 8005e7e:	2b03      	cmp	r3, #3
 8005e80:	dc2e      	bgt.n	8005ee0 <monitor_rails+0xe0>
 8005e82:	2b01      	cmp	r3, #1
 8005e84:	d002      	beq.n	8005e8c <monitor_rails+0x8c>
 8005e86:	2b02      	cmp	r3, #2
 8005e88:	d00e      	beq.n	8005ea8 <monitor_rails+0xa8>
					break;
				case 3:
					rail_monitor[i].OOB_3 = rail_monitor[i].data;
					break;
				default:
					break;
 8005e8a:	e029      	b.n	8005ee0 <monitor_rails+0xe0>
					rail_monitor[i].OOB_1 = rail_monitor[i].data;
 8005e8c:	4a6c      	ldr	r2, [pc, #432]	; (8006040 <monitor_rails+0x240>)
 8005e8e:	697b      	ldr	r3, [r7, #20]
 8005e90:	011b      	lsls	r3, r3, #4
 8005e92:	4413      	add	r3, r2
 8005e94:	3304      	adds	r3, #4
 8005e96:	8819      	ldrh	r1, [r3, #0]
 8005e98:	4a69      	ldr	r2, [pc, #420]	; (8006040 <monitor_rails+0x240>)
 8005e9a:	697b      	ldr	r3, [r7, #20]
 8005e9c:	011b      	lsls	r3, r3, #4
 8005e9e:	4413      	add	r3, r2
 8005ea0:	330a      	adds	r3, #10
 8005ea2:	460a      	mov	r2, r1
 8005ea4:	801a      	strh	r2, [r3, #0]
					break;
 8005ea6:	e01c      	b.n	8005ee2 <monitor_rails+0xe2>
					rail_monitor[i].OOB_2 = rail_monitor[i].data;
 8005ea8:	4a65      	ldr	r2, [pc, #404]	; (8006040 <monitor_rails+0x240>)
 8005eaa:	697b      	ldr	r3, [r7, #20]
 8005eac:	011b      	lsls	r3, r3, #4
 8005eae:	4413      	add	r3, r2
 8005eb0:	3304      	adds	r3, #4
 8005eb2:	8819      	ldrh	r1, [r3, #0]
 8005eb4:	4a62      	ldr	r2, [pc, #392]	; (8006040 <monitor_rails+0x240>)
 8005eb6:	697b      	ldr	r3, [r7, #20]
 8005eb8:	011b      	lsls	r3, r3, #4
 8005eba:	4413      	add	r3, r2
 8005ebc:	330c      	adds	r3, #12
 8005ebe:	460a      	mov	r2, r1
 8005ec0:	801a      	strh	r2, [r3, #0]
					break;
 8005ec2:	e00e      	b.n	8005ee2 <monitor_rails+0xe2>
					rail_monitor[i].OOB_3 = rail_monitor[i].data;
 8005ec4:	4a5e      	ldr	r2, [pc, #376]	; (8006040 <monitor_rails+0x240>)
 8005ec6:	697b      	ldr	r3, [r7, #20]
 8005ec8:	011b      	lsls	r3, r3, #4
 8005eca:	4413      	add	r3, r2
 8005ecc:	3304      	adds	r3, #4
 8005ece:	8819      	ldrh	r1, [r3, #0]
 8005ed0:	4a5b      	ldr	r2, [pc, #364]	; (8006040 <monitor_rails+0x240>)
 8005ed2:	697b      	ldr	r3, [r7, #20]
 8005ed4:	011b      	lsls	r3, r3, #4
 8005ed6:	4413      	add	r3, r2
 8005ed8:	330e      	adds	r3, #14
 8005eda:	460a      	mov	r2, r1
 8005edc:	801a      	strh	r2, [r3, #0]
					break;
 8005ede:	e000      	b.n	8005ee2 <monitor_rails+0xe2>
					break;
 8005ee0:	bf00      	nop
				}

				// If that rails' error count is at 3, proceed with error protocol for that rail
				if (rail_monitor[i].error_count == 3) {
 8005ee2:	4a57      	ldr	r2, [pc, #348]	; (8006040 <monitor_rails+0x240>)
 8005ee4:	697b      	ldr	r3, [r7, #20]
 8005ee6:	011b      	lsls	r3, r3, #4
 8005ee8:	4413      	add	r3, r2
 8005eea:	3301      	adds	r3, #1
 8005eec:	781b      	ldrb	r3, [r3, #0]
 8005eee:	2b03      	cmp	r3, #3
 8005ef0:	f040 8096 	bne.w	8006020 <monitor_rails+0x220>
					ERROR_STRUCT error;
					error.detail = get_rail_name_error_detail(rail_monitor[i].name);
 8005ef4:	4a52      	ldr	r2, [pc, #328]	; (8006040 <monitor_rails+0x240>)
 8005ef6:	697b      	ldr	r3, [r7, #20]
 8005ef8:	011b      	lsls	r3, r3, #4
 8005efa:	4413      	add	r3, r2
 8005efc:	781b      	ldrb	r3, [r3, #0]
 8005efe:	4618      	mov	r0, r3
 8005f00:	f000 f8a0 	bl	8006044 <get_rail_name_error_detail>
 8005f04:	4603      	mov	r3, r0
 8005f06:	727b      	strb	r3, [r7, #9]
					error.category = EC_power_supply_rail;
 8005f08:	2300      	movs	r3, #0
 8005f0a:	723b      	strb	r3, [r7, #8]
					handle_error(error);
 8005f0c:	f107 0308 	add.w	r3, r7, #8
 8005f10:	e893 0003 	ldmia.w	r3, {r0, r1}
 8005f14:	f7fc f822 	bl	8001f5c <handle_error>
 8005f18:	e082      	b.n	8006020 <monitor_rails+0x220>
			}
		}
		// If the rail monitor isn't enabled...
		else {
			uint16_t tolerance;
			tolerance = rail_monitor[i].max_voltage * 0.1;
 8005f1a:	4a49      	ldr	r2, [pc, #292]	; (8006040 <monitor_rails+0x240>)
 8005f1c:	697b      	ldr	r3, [r7, #20]
 8005f1e:	011b      	lsls	r3, r3, #4
 8005f20:	4413      	add	r3, r2
 8005f22:	3306      	adds	r3, #6
 8005f24:	881b      	ldrh	r3, [r3, #0]
 8005f26:	ee07 3a90 	vmov	s15, r3
 8005f2a:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 8005f2e:	ed9f 6b42 	vldr	d6, [pc, #264]	; 8006038 <monitor_rails+0x238>
 8005f32:	ee27 7b06 	vmul.f64	d7, d7, d6
 8005f36:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8005f3a:	ee17 3a90 	vmov	r3, s15
 8005f3e:	827b      	strh	r3, [r7, #18]

			// If it isn't within +10% of its max voltage from 0...
			if (!in_range(rail_monitor[i].data, 0, tolerance)) {
 8005f40:	4a3f      	ldr	r2, [pc, #252]	; (8006040 <monitor_rails+0x240>)
 8005f42:	697b      	ldr	r3, [r7, #20]
 8005f44:	011b      	lsls	r3, r3, #4
 8005f46:	4413      	add	r3, r2
 8005f48:	3304      	adds	r3, #4
 8005f4a:	881b      	ldrh	r3, [r3, #0]
 8005f4c:	8a7a      	ldrh	r2, [r7, #18]
 8005f4e:	2100      	movs	r1, #0
 8005f50:	4618      	mov	r0, r3
 8005f52:	f7ff ff3d 	bl	8005dd0 <in_range>
 8005f56:	4603      	mov	r3, r0
 8005f58:	2b00      	cmp	r3, #0
 8005f5a:	d161      	bne.n	8006020 <monitor_rails+0x220>
				// Increase that rails error count
				rail_monitor[i].error_count++;
 8005f5c:	4a38      	ldr	r2, [pc, #224]	; (8006040 <monitor_rails+0x240>)
 8005f5e:	697b      	ldr	r3, [r7, #20]
 8005f60:	011b      	lsls	r3, r3, #4
 8005f62:	4413      	add	r3, r2
 8005f64:	3301      	adds	r3, #1
 8005f66:	781b      	ldrb	r3, [r3, #0]
 8005f68:	3301      	adds	r3, #1
 8005f6a:	b2d9      	uxtb	r1, r3
 8005f6c:	4a34      	ldr	r2, [pc, #208]	; (8006040 <monitor_rails+0x240>)
 8005f6e:	697b      	ldr	r3, [r7, #20]
 8005f70:	011b      	lsls	r3, r3, #4
 8005f72:	4413      	add	r3, r2
 8005f74:	3301      	adds	r3, #1
 8005f76:	460a      	mov	r2, r1
 8005f78:	701a      	strb	r2, [r3, #0]

				// Store the voltage each time a rail goes out of bounds
				switch (rail_monitor[i].error_count) {
 8005f7a:	4a31      	ldr	r2, [pc, #196]	; (8006040 <monitor_rails+0x240>)
 8005f7c:	697b      	ldr	r3, [r7, #20]
 8005f7e:	011b      	lsls	r3, r3, #4
 8005f80:	4413      	add	r3, r2
 8005f82:	3301      	adds	r3, #1
 8005f84:	781b      	ldrb	r3, [r3, #0]
 8005f86:	2b03      	cmp	r3, #3
 8005f88:	d022      	beq.n	8005fd0 <monitor_rails+0x1d0>
 8005f8a:	2b03      	cmp	r3, #3
 8005f8c:	dc2e      	bgt.n	8005fec <monitor_rails+0x1ec>
 8005f8e:	2b01      	cmp	r3, #1
 8005f90:	d002      	beq.n	8005f98 <monitor_rails+0x198>
 8005f92:	2b02      	cmp	r3, #2
 8005f94:	d00e      	beq.n	8005fb4 <monitor_rails+0x1b4>
					break;
				case 3:
					rail_monitor[i].OOB_3 = rail_monitor[i].data;
					break;
				default:
					break;
 8005f96:	e029      	b.n	8005fec <monitor_rails+0x1ec>
					rail_monitor[i].OOB_1 = rail_monitor[i].data;
 8005f98:	4a29      	ldr	r2, [pc, #164]	; (8006040 <monitor_rails+0x240>)
 8005f9a:	697b      	ldr	r3, [r7, #20]
 8005f9c:	011b      	lsls	r3, r3, #4
 8005f9e:	4413      	add	r3, r2
 8005fa0:	3304      	adds	r3, #4
 8005fa2:	8819      	ldrh	r1, [r3, #0]
 8005fa4:	4a26      	ldr	r2, [pc, #152]	; (8006040 <monitor_rails+0x240>)
 8005fa6:	697b      	ldr	r3, [r7, #20]
 8005fa8:	011b      	lsls	r3, r3, #4
 8005faa:	4413      	add	r3, r2
 8005fac:	330a      	adds	r3, #10
 8005fae:	460a      	mov	r2, r1
 8005fb0:	801a      	strh	r2, [r3, #0]
					break;
 8005fb2:	e01c      	b.n	8005fee <monitor_rails+0x1ee>
					rail_monitor[i].OOB_2 = rail_monitor[i].data;
 8005fb4:	4a22      	ldr	r2, [pc, #136]	; (8006040 <monitor_rails+0x240>)
 8005fb6:	697b      	ldr	r3, [r7, #20]
 8005fb8:	011b      	lsls	r3, r3, #4
 8005fba:	4413      	add	r3, r2
 8005fbc:	3304      	adds	r3, #4
 8005fbe:	8819      	ldrh	r1, [r3, #0]
 8005fc0:	4a1f      	ldr	r2, [pc, #124]	; (8006040 <monitor_rails+0x240>)
 8005fc2:	697b      	ldr	r3, [r7, #20]
 8005fc4:	011b      	lsls	r3, r3, #4
 8005fc6:	4413      	add	r3, r2
 8005fc8:	330c      	adds	r3, #12
 8005fca:	460a      	mov	r2, r1
 8005fcc:	801a      	strh	r2, [r3, #0]
					break;
 8005fce:	e00e      	b.n	8005fee <monitor_rails+0x1ee>
					rail_monitor[i].OOB_3 = rail_monitor[i].data;
 8005fd0:	4a1b      	ldr	r2, [pc, #108]	; (8006040 <monitor_rails+0x240>)
 8005fd2:	697b      	ldr	r3, [r7, #20]
 8005fd4:	011b      	lsls	r3, r3, #4
 8005fd6:	4413      	add	r3, r2
 8005fd8:	3304      	adds	r3, #4
 8005fda:	8819      	ldrh	r1, [r3, #0]
 8005fdc:	4a18      	ldr	r2, [pc, #96]	; (8006040 <monitor_rails+0x240>)
 8005fde:	697b      	ldr	r3, [r7, #20]
 8005fe0:	011b      	lsls	r3, r3, #4
 8005fe2:	4413      	add	r3, r2
 8005fe4:	330e      	adds	r3, #14
 8005fe6:	460a      	mov	r2, r1
 8005fe8:	801a      	strh	r2, [r3, #0]
					break;
 8005fea:	e000      	b.n	8005fee <monitor_rails+0x1ee>
					break;
 8005fec:	bf00      	nop
				}

				// If that rails' error count is at 3, proceed with error protocol for that rail
				if (rail_monitor[i].error_count == 3) {
 8005fee:	4a14      	ldr	r2, [pc, #80]	; (8006040 <monitor_rails+0x240>)
 8005ff0:	697b      	ldr	r3, [r7, #20]
 8005ff2:	011b      	lsls	r3, r3, #4
 8005ff4:	4413      	add	r3, r2
 8005ff6:	3301      	adds	r3, #1
 8005ff8:	781b      	ldrb	r3, [r3, #0]
 8005ffa:	2b03      	cmp	r3, #3
 8005ffc:	d110      	bne.n	8006020 <monitor_rails+0x220>
					ERROR_STRUCT error;
					error.detail = get_rail_name_error_detail(rail_monitor[i].name);
 8005ffe:	4a10      	ldr	r2, [pc, #64]	; (8006040 <monitor_rails+0x240>)
 8006000:	697b      	ldr	r3, [r7, #20]
 8006002:	011b      	lsls	r3, r3, #4
 8006004:	4413      	add	r3, r2
 8006006:	781b      	ldrb	r3, [r3, #0]
 8006008:	4618      	mov	r0, r3
 800600a:	f000 f81b 	bl	8006044 <get_rail_name_error_detail>
 800600e:	4603      	mov	r3, r0
 8006010:	707b      	strb	r3, [r7, #1]
					error.category = EC_power_supply_rail;
 8006012:	2300      	movs	r3, #0
 8006014:	703b      	strb	r3, [r7, #0]
					handle_error(error);
 8006016:	463b      	mov	r3, r7
 8006018:	e893 0003 	ldmia.w	r3, {r0, r1}
 800601c:	f7fb ff9e 	bl	8001f5c <handle_error>
	for (int i = 0; i < NUM_VOLTAGE_RAILS; i++){
 8006020:	697b      	ldr	r3, [r7, #20]
 8006022:	3301      	adds	r3, #1
 8006024:	617b      	str	r3, [r7, #20]
 8006026:	697b      	ldr	r3, [r7, #20]
 8006028:	2b11      	cmp	r3, #17
 800602a:	f77f aeef 	ble.w	8005e0c <monitor_rails+0xc>
				}
			}
		}
	}
}
 800602e:	bf00      	nop
 8006030:	bf00      	nop
 8006032:	3718      	adds	r7, #24
 8006034:	46bd      	mov	sp, r7
 8006036:	bd80      	pop	{r7, pc}
 8006038:	9999999a 	.word	0x9999999a
 800603c:	3fb99999 	.word	0x3fb99999
 8006040:	24001f48 	.word	0x24001f48

08006044 <get_rail_name_error_detail>:

ERROR_DETAIL get_rail_name_error_detail(VOLTAGE_RAIL_NAME rail_name) {
 8006044:	b480      	push	{r7}
 8006046:	b083      	sub	sp, #12
 8006048:	af00      	add	r7, sp, #0
 800604a:	4603      	mov	r3, r0
 800604c:	71fb      	strb	r3, [r7, #7]
	switch (rail_name) {
 800604e:	79fb      	ldrb	r3, [r7, #7]
 8006050:	2b11      	cmp	r3, #17
 8006052:	d84b      	bhi.n	80060ec <get_rail_name_error_detail+0xa8>
 8006054:	a201      	add	r2, pc, #4	; (adr r2, 800605c <get_rail_name_error_detail+0x18>)
 8006056:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800605a:	bf00      	nop
 800605c:	080060a5 	.word	0x080060a5
 8006060:	080060a9 	.word	0x080060a9
 8006064:	080060ad 	.word	0x080060ad
 8006068:	080060b1 	.word	0x080060b1
 800606c:	080060b5 	.word	0x080060b5
 8006070:	080060b9 	.word	0x080060b9
 8006074:	080060bd 	.word	0x080060bd
 8006078:	080060c1 	.word	0x080060c1
 800607c:	080060c5 	.word	0x080060c5
 8006080:	080060c9 	.word	0x080060c9
 8006084:	080060cd 	.word	0x080060cd
 8006088:	080060d1 	.word	0x080060d1
 800608c:	080060d5 	.word	0x080060d5
 8006090:	080060d9 	.word	0x080060d9
 8006094:	080060dd 	.word	0x080060dd
 8006098:	080060e1 	.word	0x080060e1
 800609c:	080060e5 	.word	0x080060e5
 80060a0:	080060e9 	.word	0x080060e9
	case RAIL_vsense:
		return ED_vsense;
 80060a4:	2306      	movs	r3, #6
 80060a6:	e022      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_vrefint:
		return ED_vrefint;
 80060a8:	2307      	movs	r3, #7
 80060aa:	e020      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_TEMP1:
		return ED_TEMP1;
 80060ac:	2308      	movs	r3, #8
 80060ae:	e01e      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_TEMP2:
		return ED_TEMP2;
 80060b0:	2309      	movs	r3, #9
 80060b2:	e01c      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_TEMP3:
		return ED_TEMP3;
 80060b4:	230a      	movs	r3, #10
 80060b6:	e01a      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_TEMP4:
		return ED_TEMP4;
 80060b8:	230b      	movs	r3, #11
 80060ba:	e018      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_busvmon:
		return ED_busvmon;
 80060bc:	230c      	movs	r3, #12
 80060be:	e016      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_busimon:
		return ED_busimon;
 80060c0:	230d      	movs	r3, #13
 80060c2:	e014      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_2v5:
		return ED_2v5;
 80060c4:	230e      	movs	r3, #14
 80060c6:	e012      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_3v3:
		return ED_3v3;
 80060c8:	230f      	movs	r3, #15
 80060ca:	e010      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_5v:
		return ED_5v;
 80060cc:	2310      	movs	r3, #16
 80060ce:	e00e      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_n3v3:
		return ED_n3v3;
 80060d0:	2311      	movs	r3, #17
 80060d2:	e00c      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_n5v:
		return ED_n5v;
 80060d4:	2312      	movs	r3, #18
 80060d6:	e00a      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_15v:
		return ED_15v;
 80060d8:	2313      	movs	r3, #19
 80060da:	e008      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_5vref:
		return ED_5vref;
 80060dc:	2314      	movs	r3, #20
 80060de:	e006      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_n200v:
		return ED_n200v;
 80060e0:	2315      	movs	r3, #21
 80060e2:	e004      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_n800v:
		return ED_n800v;
 80060e4:	2316      	movs	r3, #22
 80060e6:	e002      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	case RAIL_TMP1:
		return ED_TMP1;
 80060e8:	2317      	movs	r3, #23
 80060ea:	e000      	b.n	80060ee <get_rail_name_error_detail+0xaa>

	default:
		return ED_UNDEFINED;
 80060ec:	231a      	movs	r3, #26
	}
}
 80060ee:	4618      	mov	r0, r3
 80060f0:	370c      	adds	r7, #12
 80060f2:	46bd      	mov	sp, r7
 80060f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060f8:	4770      	bx	lr
 80060fa:	bf00      	nop

080060fc <Reset_Handler>:
 80060fc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8006134 <LoopFillZerobss+0xe>
 8006100:	f7fe fd82 	bl	8004c08 <SystemInit>
 8006104:	480c      	ldr	r0, [pc, #48]	; (8006138 <LoopFillZerobss+0x12>)
 8006106:	490d      	ldr	r1, [pc, #52]	; (800613c <LoopFillZerobss+0x16>)
 8006108:	4a0d      	ldr	r2, [pc, #52]	; (8006140 <LoopFillZerobss+0x1a>)
 800610a:	2300      	movs	r3, #0
 800610c:	e002      	b.n	8006114 <LoopCopyDataInit>

0800610e <CopyDataInit>:
 800610e:	58d4      	ldr	r4, [r2, r3]
 8006110:	50c4      	str	r4, [r0, r3]
 8006112:	3304      	adds	r3, #4

08006114 <LoopCopyDataInit>:
 8006114:	18c4      	adds	r4, r0, r3
 8006116:	428c      	cmp	r4, r1
 8006118:	d3f9      	bcc.n	800610e <CopyDataInit>
 800611a:	4a0a      	ldr	r2, [pc, #40]	; (8006144 <LoopFillZerobss+0x1e>)
 800611c:	4c0a      	ldr	r4, [pc, #40]	; (8006148 <LoopFillZerobss+0x22>)
 800611e:	2300      	movs	r3, #0
 8006120:	e001      	b.n	8006126 <LoopFillZerobss>

08006122 <FillZerobss>:
 8006122:	6013      	str	r3, [r2, #0]
 8006124:	3204      	adds	r2, #4

08006126 <LoopFillZerobss>:
 8006126:	42a2      	cmp	r2, r4
 8006128:	d3fb      	bcc.n	8006122 <FillZerobss>
 800612a:	f014 fc55 	bl	801a9d8 <__libc_init_array>
 800612e:	f7fd fb39 	bl	80037a4 <main>
 8006132:	4770      	bx	lr
 8006134:	24080000 	.word	0x24080000
 8006138:	24000000 	.word	0x24000000
 800613c:	2400013c 	.word	0x2400013c
 8006140:	0801b908 	.word	0x0801b908
 8006144:	24000140 	.word	0x24000140
 8006148:	240069e8 	.word	0x240069e8

0800614c <ADC3_IRQHandler>:
 800614c:	e7fe      	b.n	800614c <ADC3_IRQHandler>
	...

08006150 <HAL_Init>:
 8006150:	b580      	push	{r7, lr}
 8006152:	b082      	sub	sp, #8
 8006154:	af00      	add	r7, sp, #0
 8006156:	2003      	movs	r0, #3
 8006158:	f001 fd39 	bl	8007bce <HAL_NVIC_SetPriorityGrouping>
 800615c:	f008 fecc 	bl	800eef8 <HAL_RCC_GetSysClockFreq>
 8006160:	4602      	mov	r2, r0
 8006162:	4b15      	ldr	r3, [pc, #84]	; (80061b8 <HAL_Init+0x68>)
 8006164:	699b      	ldr	r3, [r3, #24]
 8006166:	0a1b      	lsrs	r3, r3, #8
 8006168:	f003 030f 	and.w	r3, r3, #15
 800616c:	4913      	ldr	r1, [pc, #76]	; (80061bc <HAL_Init+0x6c>)
 800616e:	5ccb      	ldrb	r3, [r1, r3]
 8006170:	f003 031f 	and.w	r3, r3, #31
 8006174:	fa22 f303 	lsr.w	r3, r2, r3
 8006178:	607b      	str	r3, [r7, #4]
 800617a:	4b0f      	ldr	r3, [pc, #60]	; (80061b8 <HAL_Init+0x68>)
 800617c:	699b      	ldr	r3, [r3, #24]
 800617e:	f003 030f 	and.w	r3, r3, #15
 8006182:	4a0e      	ldr	r2, [pc, #56]	; (80061bc <HAL_Init+0x6c>)
 8006184:	5cd3      	ldrb	r3, [r2, r3]
 8006186:	f003 031f 	and.w	r3, r3, #31
 800618a:	687a      	ldr	r2, [r7, #4]
 800618c:	fa22 f303 	lsr.w	r3, r2, r3
 8006190:	4a0b      	ldr	r2, [pc, #44]	; (80061c0 <HAL_Init+0x70>)
 8006192:	6013      	str	r3, [r2, #0]
 8006194:	4a0b      	ldr	r2, [pc, #44]	; (80061c4 <HAL_Init+0x74>)
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	6013      	str	r3, [r2, #0]
 800619a:	2005      	movs	r0, #5
 800619c:	f7fe fb1e 	bl	80047dc <HAL_InitTick>
 80061a0:	4603      	mov	r3, r0
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d001      	beq.n	80061aa <HAL_Init+0x5a>
 80061a6:	2301      	movs	r3, #1
 80061a8:	e002      	b.n	80061b0 <HAL_Init+0x60>
 80061aa:	f7fe faf9 	bl	80047a0 <HAL_MspInit>
 80061ae:	2300      	movs	r3, #0
 80061b0:	4618      	mov	r0, r3
 80061b2:	3708      	adds	r7, #8
 80061b4:	46bd      	mov	sp, r7
 80061b6:	bd80      	pop	{r7, pc}
 80061b8:	58024400 	.word	0x58024400
 80061bc:	0801b854 	.word	0x0801b854
 80061c0:	240000c8 	.word	0x240000c8
 80061c4:	240000c4 	.word	0x240000c4

080061c8 <HAL_IncTick>:
 80061c8:	b480      	push	{r7}
 80061ca:	af00      	add	r7, sp, #0
 80061cc:	4b06      	ldr	r3, [pc, #24]	; (80061e8 <HAL_IncTick+0x20>)
 80061ce:	781b      	ldrb	r3, [r3, #0]
 80061d0:	461a      	mov	r2, r3
 80061d2:	4b06      	ldr	r3, [pc, #24]	; (80061ec <HAL_IncTick+0x24>)
 80061d4:	681b      	ldr	r3, [r3, #0]
 80061d6:	4413      	add	r3, r2
 80061d8:	4a04      	ldr	r2, [pc, #16]	; (80061ec <HAL_IncTick+0x24>)
 80061da:	6013      	str	r3, [r2, #0]
 80061dc:	bf00      	nop
 80061de:	46bd      	mov	sp, r7
 80061e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061e4:	4770      	bx	lr
 80061e6:	bf00      	nop
 80061e8:	240000d0 	.word	0x240000d0
 80061ec:	24002068 	.word	0x24002068

080061f0 <HAL_GetTick>:
 80061f0:	b480      	push	{r7}
 80061f2:	af00      	add	r7, sp, #0
 80061f4:	4b03      	ldr	r3, [pc, #12]	; (8006204 <HAL_GetTick+0x14>)
 80061f6:	681b      	ldr	r3, [r3, #0]
 80061f8:	4618      	mov	r0, r3
 80061fa:	46bd      	mov	sp, r7
 80061fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006200:	4770      	bx	lr
 8006202:	bf00      	nop
 8006204:	24002068 	.word	0x24002068

08006208 <HAL_GetREVID>:
 8006208:	b480      	push	{r7}
 800620a:	af00      	add	r7, sp, #0
 800620c:	4b03      	ldr	r3, [pc, #12]	; (800621c <HAL_GetREVID+0x14>)
 800620e:	681b      	ldr	r3, [r3, #0]
 8006210:	0c1b      	lsrs	r3, r3, #16
 8006212:	4618      	mov	r0, r3
 8006214:	46bd      	mov	sp, r7
 8006216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800621a:	4770      	bx	lr
 800621c:	5c001000 	.word	0x5c001000

08006220 <HAL_SYSCFG_AnalogSwitchConfig>:
 8006220:	b480      	push	{r7}
 8006222:	b083      	sub	sp, #12
 8006224:	af00      	add	r7, sp, #0
 8006226:	6078      	str	r0, [r7, #4]
 8006228:	6039      	str	r1, [r7, #0]
 800622a:	4b07      	ldr	r3, [pc, #28]	; (8006248 <HAL_SYSCFG_AnalogSwitchConfig+0x28>)
 800622c:	685a      	ldr	r2, [r3, #4]
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	43db      	mvns	r3, r3
 8006232:	401a      	ands	r2, r3
 8006234:	4904      	ldr	r1, [pc, #16]	; (8006248 <HAL_SYSCFG_AnalogSwitchConfig+0x28>)
 8006236:	683b      	ldr	r3, [r7, #0]
 8006238:	4313      	orrs	r3, r2
 800623a:	604b      	str	r3, [r1, #4]
 800623c:	bf00      	nop
 800623e:	370c      	adds	r7, #12
 8006240:	46bd      	mov	sp, r7
 8006242:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006246:	4770      	bx	lr
 8006248:	58000400 	.word	0x58000400

0800624c <LL_ADC_SetCommonClock>:
 800624c:	b480      	push	{r7}
 800624e:	b083      	sub	sp, #12
 8006250:	af00      	add	r7, sp, #0
 8006252:	6078      	str	r0, [r7, #4]
 8006254:	6039      	str	r1, [r7, #0]
 8006256:	687b      	ldr	r3, [r7, #4]
 8006258:	689b      	ldr	r3, [r3, #8]
 800625a:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 800625e:	683b      	ldr	r3, [r7, #0]
 8006260:	431a      	orrs	r2, r3
 8006262:	687b      	ldr	r3, [r7, #4]
 8006264:	609a      	str	r2, [r3, #8]
 8006266:	bf00      	nop
 8006268:	370c      	adds	r7, #12
 800626a:	46bd      	mov	sp, r7
 800626c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006270:	4770      	bx	lr

08006272 <LL_ADC_SetCommonPathInternalCh>:
 8006272:	b480      	push	{r7}
 8006274:	b083      	sub	sp, #12
 8006276:	af00      	add	r7, sp, #0
 8006278:	6078      	str	r0, [r7, #4]
 800627a:	6039      	str	r1, [r7, #0]
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	689b      	ldr	r3, [r3, #8]
 8006280:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8006284:	683b      	ldr	r3, [r7, #0]
 8006286:	431a      	orrs	r2, r3
 8006288:	687b      	ldr	r3, [r7, #4]
 800628a:	609a      	str	r2, [r3, #8]
 800628c:	bf00      	nop
 800628e:	370c      	adds	r7, #12
 8006290:	46bd      	mov	sp, r7
 8006292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006296:	4770      	bx	lr

08006298 <LL_ADC_GetCommonPathInternalCh>:
 8006298:	b480      	push	{r7}
 800629a:	b083      	sub	sp, #12
 800629c:	af00      	add	r7, sp, #0
 800629e:	6078      	str	r0, [r7, #4]
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	689b      	ldr	r3, [r3, #8]
 80062a4:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
 80062a8:	4618      	mov	r0, r3
 80062aa:	370c      	adds	r7, #12
 80062ac:	46bd      	mov	sp, r7
 80062ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062b2:	4770      	bx	lr

080062b4 <LL_ADC_SetOffset>:
 80062b4:	b480      	push	{r7}
 80062b6:	b087      	sub	sp, #28
 80062b8:	af00      	add	r7, sp, #0
 80062ba:	60f8      	str	r0, [r7, #12]
 80062bc:	60b9      	str	r1, [r7, #8]
 80062be:	607a      	str	r2, [r7, #4]
 80062c0:	603b      	str	r3, [r7, #0]
 80062c2:	68fb      	ldr	r3, [r7, #12]
 80062c4:	3360      	adds	r3, #96	; 0x60
 80062c6:	461a      	mov	r2, r3
 80062c8:	68bb      	ldr	r3, [r7, #8]
 80062ca:	009b      	lsls	r3, r3, #2
 80062cc:	4413      	add	r3, r2
 80062ce:	617b      	str	r3, [r7, #20]
 80062d0:	697b      	ldr	r3, [r7, #20]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	f003 4200 	and.w	r2, r3, #2147483648	; 0x80000000
 80062d8:	687b      	ldr	r3, [r7, #4]
 80062da:	f003 41f8 	and.w	r1, r3, #2080374784	; 0x7c000000
 80062de:	683b      	ldr	r3, [r7, #0]
 80062e0:	430b      	orrs	r3, r1
 80062e2:	431a      	orrs	r2, r3
 80062e4:	697b      	ldr	r3, [r7, #20]
 80062e6:	601a      	str	r2, [r3, #0]
 80062e8:	bf00      	nop
 80062ea:	371c      	adds	r7, #28
 80062ec:	46bd      	mov	sp, r7
 80062ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062f2:	4770      	bx	lr

080062f4 <LL_ADC_SetDataRightShift>:
 80062f4:	b480      	push	{r7}
 80062f6:	b085      	sub	sp, #20
 80062f8:	af00      	add	r7, sp, #0
 80062fa:	60f8      	str	r0, [r7, #12]
 80062fc:	60b9      	str	r1, [r7, #8]
 80062fe:	607a      	str	r2, [r7, #4]
 8006300:	68fb      	ldr	r3, [r7, #12]
 8006302:	691b      	ldr	r3, [r3, #16]
 8006304:	f423 42f0 	bic.w	r2, r3, #30720	; 0x7800
 8006308:	68bb      	ldr	r3, [r7, #8]
 800630a:	f003 031f 	and.w	r3, r3, #31
 800630e:	6879      	ldr	r1, [r7, #4]
 8006310:	fa01 f303 	lsl.w	r3, r1, r3
 8006314:	431a      	orrs	r2, r3
 8006316:	68fb      	ldr	r3, [r7, #12]
 8006318:	611a      	str	r2, [r3, #16]
 800631a:	bf00      	nop
 800631c:	3714      	adds	r7, #20
 800631e:	46bd      	mov	sp, r7
 8006320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006324:	4770      	bx	lr

08006326 <LL_ADC_SetOffsetSignedSaturation>:
 8006326:	b480      	push	{r7}
 8006328:	b087      	sub	sp, #28
 800632a:	af00      	add	r7, sp, #0
 800632c:	60f8      	str	r0, [r7, #12]
 800632e:	60b9      	str	r1, [r7, #8]
 8006330:	607a      	str	r2, [r7, #4]
 8006332:	68fb      	ldr	r3, [r7, #12]
 8006334:	3360      	adds	r3, #96	; 0x60
 8006336:	461a      	mov	r2, r3
 8006338:	68bb      	ldr	r3, [r7, #8]
 800633a:	009b      	lsls	r3, r3, #2
 800633c:	4413      	add	r3, r2
 800633e:	617b      	str	r3, [r7, #20]
 8006340:	697b      	ldr	r3, [r7, #20]
 8006342:	681b      	ldr	r3, [r3, #0]
 8006344:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8006348:	687b      	ldr	r3, [r7, #4]
 800634a:	431a      	orrs	r2, r3
 800634c:	697b      	ldr	r3, [r7, #20]
 800634e:	601a      	str	r2, [r3, #0]
 8006350:	bf00      	nop
 8006352:	371c      	adds	r7, #28
 8006354:	46bd      	mov	sp, r7
 8006356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800635a:	4770      	bx	lr

0800635c <LL_ADC_REG_IsTriggerSourceSWStart>:
 800635c:	b480      	push	{r7}
 800635e:	b083      	sub	sp, #12
 8006360:	af00      	add	r7, sp, #0
 8006362:	6078      	str	r0, [r7, #4]
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	68db      	ldr	r3, [r3, #12]
 8006368:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800636c:	2b00      	cmp	r3, #0
 800636e:	d101      	bne.n	8006374 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8006370:	2301      	movs	r3, #1
 8006372:	e000      	b.n	8006376 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8006374:	2300      	movs	r3, #0
 8006376:	4618      	mov	r0, r3
 8006378:	370c      	adds	r7, #12
 800637a:	46bd      	mov	sp, r7
 800637c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006380:	4770      	bx	lr

08006382 <LL_ADC_REG_SetSequencerRanks>:
 8006382:	b480      	push	{r7}
 8006384:	b087      	sub	sp, #28
 8006386:	af00      	add	r7, sp, #0
 8006388:	60f8      	str	r0, [r7, #12]
 800638a:	60b9      	str	r1, [r7, #8]
 800638c:	607a      	str	r2, [r7, #4]
 800638e:	68fb      	ldr	r3, [r7, #12]
 8006390:	3330      	adds	r3, #48	; 0x30
 8006392:	461a      	mov	r2, r3
 8006394:	68bb      	ldr	r3, [r7, #8]
 8006396:	0a1b      	lsrs	r3, r3, #8
 8006398:	009b      	lsls	r3, r3, #2
 800639a:	f003 030c 	and.w	r3, r3, #12
 800639e:	4413      	add	r3, r2
 80063a0:	617b      	str	r3, [r7, #20]
 80063a2:	697b      	ldr	r3, [r7, #20]
 80063a4:	681a      	ldr	r2, [r3, #0]
 80063a6:	68bb      	ldr	r3, [r7, #8]
 80063a8:	f003 031f 	and.w	r3, r3, #31
 80063ac:	211f      	movs	r1, #31
 80063ae:	fa01 f303 	lsl.w	r3, r1, r3
 80063b2:	43db      	mvns	r3, r3
 80063b4:	401a      	ands	r2, r3
 80063b6:	687b      	ldr	r3, [r7, #4]
 80063b8:	0e9b      	lsrs	r3, r3, #26
 80063ba:	f003 011f 	and.w	r1, r3, #31
 80063be:	68bb      	ldr	r3, [r7, #8]
 80063c0:	f003 031f 	and.w	r3, r3, #31
 80063c4:	fa01 f303 	lsl.w	r3, r1, r3
 80063c8:	431a      	orrs	r2, r3
 80063ca:	697b      	ldr	r3, [r7, #20]
 80063cc:	601a      	str	r2, [r3, #0]
 80063ce:	bf00      	nop
 80063d0:	371c      	adds	r7, #28
 80063d2:	46bd      	mov	sp, r7
 80063d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063d8:	4770      	bx	lr

080063da <LL_ADC_REG_SetDataTransferMode>:
 80063da:	b480      	push	{r7}
 80063dc:	b083      	sub	sp, #12
 80063de:	af00      	add	r7, sp, #0
 80063e0:	6078      	str	r0, [r7, #4]
 80063e2:	6039      	str	r1, [r7, #0]
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	68db      	ldr	r3, [r3, #12]
 80063e8:	f023 0203 	bic.w	r2, r3, #3
 80063ec:	683b      	ldr	r3, [r7, #0]
 80063ee:	431a      	orrs	r2, r3
 80063f0:	687b      	ldr	r3, [r7, #4]
 80063f2:	60da      	str	r2, [r3, #12]
 80063f4:	bf00      	nop
 80063f6:	370c      	adds	r7, #12
 80063f8:	46bd      	mov	sp, r7
 80063fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063fe:	4770      	bx	lr

08006400 <LL_ADC_SetChannelSamplingTime>:
 8006400:	b480      	push	{r7}
 8006402:	b087      	sub	sp, #28
 8006404:	af00      	add	r7, sp, #0
 8006406:	60f8      	str	r0, [r7, #12]
 8006408:	60b9      	str	r1, [r7, #8]
 800640a:	607a      	str	r2, [r7, #4]
 800640c:	68fb      	ldr	r3, [r7, #12]
 800640e:	3314      	adds	r3, #20
 8006410:	461a      	mov	r2, r3
 8006412:	68bb      	ldr	r3, [r7, #8]
 8006414:	0e5b      	lsrs	r3, r3, #25
 8006416:	009b      	lsls	r3, r3, #2
 8006418:	f003 0304 	and.w	r3, r3, #4
 800641c:	4413      	add	r3, r2
 800641e:	617b      	str	r3, [r7, #20]
 8006420:	697b      	ldr	r3, [r7, #20]
 8006422:	681a      	ldr	r2, [r3, #0]
 8006424:	68bb      	ldr	r3, [r7, #8]
 8006426:	0d1b      	lsrs	r3, r3, #20
 8006428:	f003 031f 	and.w	r3, r3, #31
 800642c:	2107      	movs	r1, #7
 800642e:	fa01 f303 	lsl.w	r3, r1, r3
 8006432:	43db      	mvns	r3, r3
 8006434:	401a      	ands	r2, r3
 8006436:	68bb      	ldr	r3, [r7, #8]
 8006438:	0d1b      	lsrs	r3, r3, #20
 800643a:	f003 031f 	and.w	r3, r3, #31
 800643e:	6879      	ldr	r1, [r7, #4]
 8006440:	fa01 f303 	lsl.w	r3, r1, r3
 8006444:	431a      	orrs	r2, r3
 8006446:	697b      	ldr	r3, [r7, #20]
 8006448:	601a      	str	r2, [r3, #0]
 800644a:	bf00      	nop
 800644c:	371c      	adds	r7, #28
 800644e:	46bd      	mov	sp, r7
 8006450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006454:	4770      	bx	lr
	...

08006458 <LL_ADC_SetChannelSingleDiff>:
 8006458:	b480      	push	{r7}
 800645a:	b085      	sub	sp, #20
 800645c:	af00      	add	r7, sp, #0
 800645e:	60f8      	str	r0, [r7, #12]
 8006460:	60b9      	str	r1, [r7, #8]
 8006462:	607a      	str	r2, [r7, #4]
 8006464:	68fb      	ldr	r3, [r7, #12]
 8006466:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800646a:	68bb      	ldr	r3, [r7, #8]
 800646c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006470:	43db      	mvns	r3, r3
 8006472:	401a      	ands	r2, r3
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	f003 0318 	and.w	r3, r3, #24
 800647a:	4908      	ldr	r1, [pc, #32]	; (800649c <LL_ADC_SetChannelSingleDiff+0x44>)
 800647c:	40d9      	lsrs	r1, r3
 800647e:	68bb      	ldr	r3, [r7, #8]
 8006480:	400b      	ands	r3, r1
 8006482:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006486:	431a      	orrs	r2, r3
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800648e:	bf00      	nop
 8006490:	3714      	adds	r7, #20
 8006492:	46bd      	mov	sp, r7
 8006494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006498:	4770      	bx	lr
 800649a:	bf00      	nop
 800649c:	000fffff 	.word	0x000fffff

080064a0 <LL_ADC_GetMultimode>:
 80064a0:	b480      	push	{r7}
 80064a2:	b083      	sub	sp, #12
 80064a4:	af00      	add	r7, sp, #0
 80064a6:	6078      	str	r0, [r7, #4]
 80064a8:	687b      	ldr	r3, [r7, #4]
 80064aa:	689b      	ldr	r3, [r3, #8]
 80064ac:	f003 031f 	and.w	r3, r3, #31
 80064b0:	4618      	mov	r0, r3
 80064b2:	370c      	adds	r7, #12
 80064b4:	46bd      	mov	sp, r7
 80064b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064ba:	4770      	bx	lr

080064bc <LL_ADC_DisableDeepPowerDown>:
 80064bc:	b480      	push	{r7}
 80064be:	b083      	sub	sp, #12
 80064c0:	af00      	add	r7, sp, #0
 80064c2:	6078      	str	r0, [r7, #4]
 80064c4:	687b      	ldr	r3, [r7, #4]
 80064c6:	689a      	ldr	r2, [r3, #8]
 80064c8:	4b04      	ldr	r3, [pc, #16]	; (80064dc <LL_ADC_DisableDeepPowerDown+0x20>)
 80064ca:	4013      	ands	r3, r2
 80064cc:	687a      	ldr	r2, [r7, #4]
 80064ce:	6093      	str	r3, [r2, #8]
 80064d0:	bf00      	nop
 80064d2:	370c      	adds	r7, #12
 80064d4:	46bd      	mov	sp, r7
 80064d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064da:	4770      	bx	lr
 80064dc:	5fffffc0 	.word	0x5fffffc0

080064e0 <LL_ADC_IsDeepPowerDownEnabled>:
 80064e0:	b480      	push	{r7}
 80064e2:	b083      	sub	sp, #12
 80064e4:	af00      	add	r7, sp, #0
 80064e6:	6078      	str	r0, [r7, #4]
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	689b      	ldr	r3, [r3, #8]
 80064ec:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80064f0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80064f4:	d101      	bne.n	80064fa <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 80064f6:	2301      	movs	r3, #1
 80064f8:	e000      	b.n	80064fc <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 80064fa:	2300      	movs	r3, #0
 80064fc:	4618      	mov	r0, r3
 80064fe:	370c      	adds	r7, #12
 8006500:	46bd      	mov	sp, r7
 8006502:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006506:	4770      	bx	lr

08006508 <LL_ADC_EnableInternalRegulator>:
 8006508:	b480      	push	{r7}
 800650a:	b083      	sub	sp, #12
 800650c:	af00      	add	r7, sp, #0
 800650e:	6078      	str	r0, [r7, #4]
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	689a      	ldr	r2, [r3, #8]
 8006514:	4b05      	ldr	r3, [pc, #20]	; (800652c <LL_ADC_EnableInternalRegulator+0x24>)
 8006516:	4013      	ands	r3, r2
 8006518:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 800651c:	687b      	ldr	r3, [r7, #4]
 800651e:	609a      	str	r2, [r3, #8]
 8006520:	bf00      	nop
 8006522:	370c      	adds	r7, #12
 8006524:	46bd      	mov	sp, r7
 8006526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800652a:	4770      	bx	lr
 800652c:	6fffffc0 	.word	0x6fffffc0

08006530 <LL_ADC_IsInternalRegulatorEnabled>:
 8006530:	b480      	push	{r7}
 8006532:	b083      	sub	sp, #12
 8006534:	af00      	add	r7, sp, #0
 8006536:	6078      	str	r0, [r7, #4]
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	689b      	ldr	r3, [r3, #8]
 800653c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006540:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8006544:	d101      	bne.n	800654a <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8006546:	2301      	movs	r3, #1
 8006548:	e000      	b.n	800654c <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 800654a:	2300      	movs	r3, #0
 800654c:	4618      	mov	r0, r3
 800654e:	370c      	adds	r7, #12
 8006550:	46bd      	mov	sp, r7
 8006552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006556:	4770      	bx	lr

08006558 <LL_ADC_Enable>:
 8006558:	b480      	push	{r7}
 800655a:	b083      	sub	sp, #12
 800655c:	af00      	add	r7, sp, #0
 800655e:	6078      	str	r0, [r7, #4]
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	689a      	ldr	r2, [r3, #8]
 8006564:	4b05      	ldr	r3, [pc, #20]	; (800657c <LL_ADC_Enable+0x24>)
 8006566:	4013      	ands	r3, r2
 8006568:	f043 0201 	orr.w	r2, r3, #1
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	609a      	str	r2, [r3, #8]
 8006570:	bf00      	nop
 8006572:	370c      	adds	r7, #12
 8006574:	46bd      	mov	sp, r7
 8006576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800657a:	4770      	bx	lr
 800657c:	7fffffc0 	.word	0x7fffffc0

08006580 <LL_ADC_Disable>:
 8006580:	b480      	push	{r7}
 8006582:	b083      	sub	sp, #12
 8006584:	af00      	add	r7, sp, #0
 8006586:	6078      	str	r0, [r7, #4]
 8006588:	687b      	ldr	r3, [r7, #4]
 800658a:	689a      	ldr	r2, [r3, #8]
 800658c:	4b05      	ldr	r3, [pc, #20]	; (80065a4 <LL_ADC_Disable+0x24>)
 800658e:	4013      	ands	r3, r2
 8006590:	f043 0202 	orr.w	r2, r3, #2
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	609a      	str	r2, [r3, #8]
 8006598:	bf00      	nop
 800659a:	370c      	adds	r7, #12
 800659c:	46bd      	mov	sp, r7
 800659e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065a2:	4770      	bx	lr
 80065a4:	7fffffc0 	.word	0x7fffffc0

080065a8 <LL_ADC_IsEnabled>:
 80065a8:	b480      	push	{r7}
 80065aa:	b083      	sub	sp, #12
 80065ac:	af00      	add	r7, sp, #0
 80065ae:	6078      	str	r0, [r7, #4]
 80065b0:	687b      	ldr	r3, [r7, #4]
 80065b2:	689b      	ldr	r3, [r3, #8]
 80065b4:	f003 0301 	and.w	r3, r3, #1
 80065b8:	2b01      	cmp	r3, #1
 80065ba:	d101      	bne.n	80065c0 <LL_ADC_IsEnabled+0x18>
 80065bc:	2301      	movs	r3, #1
 80065be:	e000      	b.n	80065c2 <LL_ADC_IsEnabled+0x1a>
 80065c0:	2300      	movs	r3, #0
 80065c2:	4618      	mov	r0, r3
 80065c4:	370c      	adds	r7, #12
 80065c6:	46bd      	mov	sp, r7
 80065c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065cc:	4770      	bx	lr

080065ce <LL_ADC_IsDisableOngoing>:
 80065ce:	b480      	push	{r7}
 80065d0:	b083      	sub	sp, #12
 80065d2:	af00      	add	r7, sp, #0
 80065d4:	6078      	str	r0, [r7, #4]
 80065d6:	687b      	ldr	r3, [r7, #4]
 80065d8:	689b      	ldr	r3, [r3, #8]
 80065da:	f003 0302 	and.w	r3, r3, #2
 80065de:	2b02      	cmp	r3, #2
 80065e0:	d101      	bne.n	80065e6 <LL_ADC_IsDisableOngoing+0x18>
 80065e2:	2301      	movs	r3, #1
 80065e4:	e000      	b.n	80065e8 <LL_ADC_IsDisableOngoing+0x1a>
 80065e6:	2300      	movs	r3, #0
 80065e8:	4618      	mov	r0, r3
 80065ea:	370c      	adds	r7, #12
 80065ec:	46bd      	mov	sp, r7
 80065ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065f2:	4770      	bx	lr

080065f4 <LL_ADC_REG_StartConversion>:
 80065f4:	b480      	push	{r7}
 80065f6:	b083      	sub	sp, #12
 80065f8:	af00      	add	r7, sp, #0
 80065fa:	6078      	str	r0, [r7, #4]
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	689a      	ldr	r2, [r3, #8]
 8006600:	4b05      	ldr	r3, [pc, #20]	; (8006618 <LL_ADC_REG_StartConversion+0x24>)
 8006602:	4013      	ands	r3, r2
 8006604:	f043 0204 	orr.w	r2, r3, #4
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	609a      	str	r2, [r3, #8]
 800660c:	bf00      	nop
 800660e:	370c      	adds	r7, #12
 8006610:	46bd      	mov	sp, r7
 8006612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006616:	4770      	bx	lr
 8006618:	7fffffc0 	.word	0x7fffffc0

0800661c <LL_ADC_REG_IsConversionOngoing>:
 800661c:	b480      	push	{r7}
 800661e:	b083      	sub	sp, #12
 8006620:	af00      	add	r7, sp, #0
 8006622:	6078      	str	r0, [r7, #4]
 8006624:	687b      	ldr	r3, [r7, #4]
 8006626:	689b      	ldr	r3, [r3, #8]
 8006628:	f003 0304 	and.w	r3, r3, #4
 800662c:	2b04      	cmp	r3, #4
 800662e:	d101      	bne.n	8006634 <LL_ADC_REG_IsConversionOngoing+0x18>
 8006630:	2301      	movs	r3, #1
 8006632:	e000      	b.n	8006636 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8006634:	2300      	movs	r3, #0
 8006636:	4618      	mov	r0, r3
 8006638:	370c      	adds	r7, #12
 800663a:	46bd      	mov	sp, r7
 800663c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006640:	4770      	bx	lr

08006642 <LL_ADC_INJ_IsConversionOngoing>:
 8006642:	b480      	push	{r7}
 8006644:	b083      	sub	sp, #12
 8006646:	af00      	add	r7, sp, #0
 8006648:	6078      	str	r0, [r7, #4]
 800664a:	687b      	ldr	r3, [r7, #4]
 800664c:	689b      	ldr	r3, [r3, #8]
 800664e:	f003 0308 	and.w	r3, r3, #8
 8006652:	2b08      	cmp	r3, #8
 8006654:	d101      	bne.n	800665a <LL_ADC_INJ_IsConversionOngoing+0x18>
 8006656:	2301      	movs	r3, #1
 8006658:	e000      	b.n	800665c <LL_ADC_INJ_IsConversionOngoing+0x1a>
 800665a:	2300      	movs	r3, #0
 800665c:	4618      	mov	r0, r3
 800665e:	370c      	adds	r7, #12
 8006660:	46bd      	mov	sp, r7
 8006662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006666:	4770      	bx	lr

08006668 <HAL_ADC_Init>:
 8006668:	b590      	push	{r4, r7, lr}
 800666a:	b089      	sub	sp, #36	; 0x24
 800666c:	af00      	add	r7, sp, #0
 800666e:	6078      	str	r0, [r7, #4]
 8006670:	2300      	movs	r3, #0
 8006672:	77fb      	strb	r3, [r7, #31]
 8006674:	2300      	movs	r3, #0
 8006676:	60bb      	str	r3, [r7, #8]
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	2b00      	cmp	r3, #0
 800667c:	d101      	bne.n	8006682 <HAL_ADC_Init+0x1a>
 800667e:	2301      	movs	r3, #1
 8006680:	e18f      	b.n	80069a2 <HAL_ADC_Init+0x33a>
 8006682:	687b      	ldr	r3, [r7, #4]
 8006684:	68db      	ldr	r3, [r3, #12]
 8006686:	2b00      	cmp	r3, #0
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800668c:	2b00      	cmp	r3, #0
 800668e:	d109      	bne.n	80066a4 <HAL_ADC_Init+0x3c>
 8006690:	6878      	ldr	r0, [r7, #4]
 8006692:	f7fa f95b 	bl	800094c <HAL_ADC_MspInit>
 8006696:	687b      	ldr	r3, [r7, #4]
 8006698:	2200      	movs	r2, #0
 800669a:	659a      	str	r2, [r3, #88]	; 0x58
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	2200      	movs	r2, #0
 80066a0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	681b      	ldr	r3, [r3, #0]
 80066a8:	4618      	mov	r0, r3
 80066aa:	f7ff ff19 	bl	80064e0 <LL_ADC_IsDeepPowerDownEnabled>
 80066ae:	4603      	mov	r3, r0
 80066b0:	2b00      	cmp	r3, #0
 80066b2:	d004      	beq.n	80066be <HAL_ADC_Init+0x56>
 80066b4:	687b      	ldr	r3, [r7, #4]
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	4618      	mov	r0, r3
 80066ba:	f7ff feff 	bl	80064bc <LL_ADC_DisableDeepPowerDown>
 80066be:	687b      	ldr	r3, [r7, #4]
 80066c0:	681b      	ldr	r3, [r3, #0]
 80066c2:	4618      	mov	r0, r3
 80066c4:	f7ff ff34 	bl	8006530 <LL_ADC_IsInternalRegulatorEnabled>
 80066c8:	4603      	mov	r3, r0
 80066ca:	2b00      	cmp	r3, #0
 80066cc:	d114      	bne.n	80066f8 <HAL_ADC_Init+0x90>
 80066ce:	687b      	ldr	r3, [r7, #4]
 80066d0:	681b      	ldr	r3, [r3, #0]
 80066d2:	4618      	mov	r0, r3
 80066d4:	f7ff ff18 	bl	8006508 <LL_ADC_EnableInternalRegulator>
 80066d8:	4b87      	ldr	r3, [pc, #540]	; (80068f8 <HAL_ADC_Init+0x290>)
 80066da:	681b      	ldr	r3, [r3, #0]
 80066dc:	099b      	lsrs	r3, r3, #6
 80066de:	4a87      	ldr	r2, [pc, #540]	; (80068fc <HAL_ADC_Init+0x294>)
 80066e0:	fba2 2303 	umull	r2, r3, r2, r3
 80066e4:	099b      	lsrs	r3, r3, #6
 80066e6:	3301      	adds	r3, #1
 80066e8:	60bb      	str	r3, [r7, #8]
 80066ea:	e002      	b.n	80066f2 <HAL_ADC_Init+0x8a>
 80066ec:	68bb      	ldr	r3, [r7, #8]
 80066ee:	3b01      	subs	r3, #1
 80066f0:	60bb      	str	r3, [r7, #8]
 80066f2:	68bb      	ldr	r3, [r7, #8]
 80066f4:	2b00      	cmp	r3, #0
 80066f6:	d1f9      	bne.n	80066ec <HAL_ADC_Init+0x84>
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	4618      	mov	r0, r3
 80066fe:	f7ff ff17 	bl	8006530 <LL_ADC_IsInternalRegulatorEnabled>
 8006702:	4603      	mov	r3, r0
 8006704:	2b00      	cmp	r3, #0
 8006706:	d10d      	bne.n	8006724 <HAL_ADC_Init+0xbc>
 8006708:	687b      	ldr	r3, [r7, #4]
 800670a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800670c:	f043 0210 	orr.w	r2, r3, #16
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	655a      	str	r2, [r3, #84]	; 0x54
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006718:	f043 0201 	orr.w	r2, r3, #1
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	659a      	str	r2, [r3, #88]	; 0x58
 8006720:	2301      	movs	r3, #1
 8006722:	77fb      	strb	r3, [r7, #31]
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	681b      	ldr	r3, [r3, #0]
 8006728:	4618      	mov	r0, r3
 800672a:	f7ff ff77 	bl	800661c <LL_ADC_REG_IsConversionOngoing>
 800672e:	6178      	str	r0, [r7, #20]
 8006730:	687b      	ldr	r3, [r7, #4]
 8006732:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006734:	f003 0310 	and.w	r3, r3, #16
 8006738:	2b00      	cmp	r3, #0
 800673a:	f040 8129 	bne.w	8006990 <HAL_ADC_Init+0x328>
 800673e:	697b      	ldr	r3, [r7, #20]
 8006740:	2b00      	cmp	r3, #0
 8006742:	f040 8125 	bne.w	8006990 <HAL_ADC_Init+0x328>
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800674a:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 800674e:	f043 0202 	orr.w	r2, r3, #2
 8006752:	687b      	ldr	r3, [r7, #4]
 8006754:	655a      	str	r2, [r3, #84]	; 0x54
 8006756:	687b      	ldr	r3, [r7, #4]
 8006758:	681b      	ldr	r3, [r3, #0]
 800675a:	4618      	mov	r0, r3
 800675c:	f7ff ff24 	bl	80065a8 <LL_ADC_IsEnabled>
 8006760:	4603      	mov	r3, r0
 8006762:	2b00      	cmp	r3, #0
 8006764:	d136      	bne.n	80067d4 <HAL_ADC_Init+0x16c>
 8006766:	687b      	ldr	r3, [r7, #4]
 8006768:	681b      	ldr	r3, [r3, #0]
 800676a:	4a65      	ldr	r2, [pc, #404]	; (8006900 <HAL_ADC_Init+0x298>)
 800676c:	4293      	cmp	r3, r2
 800676e:	d004      	beq.n	800677a <HAL_ADC_Init+0x112>
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	681b      	ldr	r3, [r3, #0]
 8006774:	4a63      	ldr	r2, [pc, #396]	; (8006904 <HAL_ADC_Init+0x29c>)
 8006776:	4293      	cmp	r3, r2
 8006778:	d10e      	bne.n	8006798 <HAL_ADC_Init+0x130>
 800677a:	4861      	ldr	r0, [pc, #388]	; (8006900 <HAL_ADC_Init+0x298>)
 800677c:	f7ff ff14 	bl	80065a8 <LL_ADC_IsEnabled>
 8006780:	4604      	mov	r4, r0
 8006782:	4860      	ldr	r0, [pc, #384]	; (8006904 <HAL_ADC_Init+0x29c>)
 8006784:	f7ff ff10 	bl	80065a8 <LL_ADC_IsEnabled>
 8006788:	4603      	mov	r3, r0
 800678a:	4323      	orrs	r3, r4
 800678c:	2b00      	cmp	r3, #0
 800678e:	bf0c      	ite	eq
 8006790:	2301      	moveq	r3, #1
 8006792:	2300      	movne	r3, #0
 8006794:	b2db      	uxtb	r3, r3
 8006796:	e008      	b.n	80067aa <HAL_ADC_Init+0x142>
 8006798:	485b      	ldr	r0, [pc, #364]	; (8006908 <HAL_ADC_Init+0x2a0>)
 800679a:	f7ff ff05 	bl	80065a8 <LL_ADC_IsEnabled>
 800679e:	4603      	mov	r3, r0
 80067a0:	2b00      	cmp	r3, #0
 80067a2:	bf0c      	ite	eq
 80067a4:	2301      	moveq	r3, #1
 80067a6:	2300      	movne	r3, #0
 80067a8:	b2db      	uxtb	r3, r3
 80067aa:	2b00      	cmp	r3, #0
 80067ac:	d012      	beq.n	80067d4 <HAL_ADC_Init+0x16c>
 80067ae:	687b      	ldr	r3, [r7, #4]
 80067b0:	681b      	ldr	r3, [r3, #0]
 80067b2:	4a53      	ldr	r2, [pc, #332]	; (8006900 <HAL_ADC_Init+0x298>)
 80067b4:	4293      	cmp	r3, r2
 80067b6:	d004      	beq.n	80067c2 <HAL_ADC_Init+0x15a>
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	681b      	ldr	r3, [r3, #0]
 80067bc:	4a51      	ldr	r2, [pc, #324]	; (8006904 <HAL_ADC_Init+0x29c>)
 80067be:	4293      	cmp	r3, r2
 80067c0:	d101      	bne.n	80067c6 <HAL_ADC_Init+0x15e>
 80067c2:	4a52      	ldr	r2, [pc, #328]	; (800690c <HAL_ADC_Init+0x2a4>)
 80067c4:	e000      	b.n	80067c8 <HAL_ADC_Init+0x160>
 80067c6:	4a52      	ldr	r2, [pc, #328]	; (8006910 <HAL_ADC_Init+0x2a8>)
 80067c8:	687b      	ldr	r3, [r7, #4]
 80067ca:	685b      	ldr	r3, [r3, #4]
 80067cc:	4619      	mov	r1, r3
 80067ce:	4610      	mov	r0, r2
 80067d0:	f7ff fd3c 	bl	800624c <LL_ADC_SetCommonClock>
 80067d4:	f7ff fd18 	bl	8006208 <HAL_GetREVID>
 80067d8:	4603      	mov	r3, r0
 80067da:	f241 0203 	movw	r2, #4099	; 0x1003
 80067de:	4293      	cmp	r3, r2
 80067e0:	d914      	bls.n	800680c <HAL_ADC_Init+0x1a4>
 80067e2:	687b      	ldr	r3, [r7, #4]
 80067e4:	689b      	ldr	r3, [r3, #8]
 80067e6:	2b10      	cmp	r3, #16
 80067e8:	d110      	bne.n	800680c <HAL_ADC_Init+0x1a4>
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	7d5b      	ldrb	r3, [r3, #21]
 80067ee:	035a      	lsls	r2, r3, #13
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80067f4:	431a      	orrs	r2, r3
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	689b      	ldr	r3, [r3, #8]
 80067fa:	431a      	orrs	r2, r3
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	7f1b      	ldrb	r3, [r3, #28]
 8006800:	041b      	lsls	r3, r3, #16
 8006802:	4313      	orrs	r3, r2
 8006804:	f043 030c 	orr.w	r3, r3, #12
 8006808:	61bb      	str	r3, [r7, #24]
 800680a:	e00d      	b.n	8006828 <HAL_ADC_Init+0x1c0>
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	7d5b      	ldrb	r3, [r3, #21]
 8006810:	035a      	lsls	r2, r3, #13
 8006812:	687b      	ldr	r3, [r7, #4]
 8006814:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006816:	431a      	orrs	r2, r3
 8006818:	687b      	ldr	r3, [r7, #4]
 800681a:	689b      	ldr	r3, [r3, #8]
 800681c:	431a      	orrs	r2, r3
 800681e:	687b      	ldr	r3, [r7, #4]
 8006820:	7f1b      	ldrb	r3, [r3, #28]
 8006822:	041b      	lsls	r3, r3, #16
 8006824:	4313      	orrs	r3, r2
 8006826:	61bb      	str	r3, [r7, #24]
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	7f1b      	ldrb	r3, [r3, #28]
 800682c:	2b01      	cmp	r3, #1
 800682e:	d106      	bne.n	800683e <HAL_ADC_Init+0x1d6>
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	6a1b      	ldr	r3, [r3, #32]
 8006834:	3b01      	subs	r3, #1
 8006836:	045b      	lsls	r3, r3, #17
 8006838:	69ba      	ldr	r2, [r7, #24]
 800683a:	4313      	orrs	r3, r2
 800683c:	61bb      	str	r3, [r7, #24]
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006842:	2b00      	cmp	r3, #0
 8006844:	d009      	beq.n	800685a <HAL_ADC_Init+0x1f2>
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800684a:	f403 7278 	and.w	r2, r3, #992	; 0x3e0
 800684e:	687b      	ldr	r3, [r7, #4]
 8006850:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006852:	4313      	orrs	r3, r2
 8006854:	69ba      	ldr	r2, [r7, #24]
 8006856:	4313      	orrs	r3, r2
 8006858:	61bb      	str	r3, [r7, #24]
 800685a:	687b      	ldr	r3, [r7, #4]
 800685c:	681b      	ldr	r3, [r3, #0]
 800685e:	68da      	ldr	r2, [r3, #12]
 8006860:	4b2c      	ldr	r3, [pc, #176]	; (8006914 <HAL_ADC_Init+0x2ac>)
 8006862:	4013      	ands	r3, r2
 8006864:	687a      	ldr	r2, [r7, #4]
 8006866:	6812      	ldr	r2, [r2, #0]
 8006868:	69b9      	ldr	r1, [r7, #24]
 800686a:	430b      	orrs	r3, r1
 800686c:	60d3      	str	r3, [r2, #12]
 800686e:	687b      	ldr	r3, [r7, #4]
 8006870:	681b      	ldr	r3, [r3, #0]
 8006872:	4618      	mov	r0, r3
 8006874:	f7ff fed2 	bl	800661c <LL_ADC_REG_IsConversionOngoing>
 8006878:	6138      	str	r0, [r7, #16]
 800687a:	687b      	ldr	r3, [r7, #4]
 800687c:	681b      	ldr	r3, [r3, #0]
 800687e:	4618      	mov	r0, r3
 8006880:	f7ff fedf 	bl	8006642 <LL_ADC_INJ_IsConversionOngoing>
 8006884:	60f8      	str	r0, [r7, #12]
 8006886:	693b      	ldr	r3, [r7, #16]
 8006888:	2b00      	cmp	r3, #0
 800688a:	d15f      	bne.n	800694c <HAL_ADC_Init+0x2e4>
 800688c:	68fb      	ldr	r3, [r7, #12]
 800688e:	2b00      	cmp	r3, #0
 8006890:	d15c      	bne.n	800694c <HAL_ADC_Init+0x2e4>
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	7d1b      	ldrb	r3, [r3, #20]
 8006896:	039a      	lsls	r2, r3, #14
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800689c:	4313      	orrs	r3, r2
 800689e:	61bb      	str	r3, [r7, #24]
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	68da      	ldr	r2, [r3, #12]
 80068a6:	4b1c      	ldr	r3, [pc, #112]	; (8006918 <HAL_ADC_Init+0x2b0>)
 80068a8:	4013      	ands	r3, r2
 80068aa:	687a      	ldr	r2, [r7, #4]
 80068ac:	6812      	ldr	r2, [r2, #0]
 80068ae:	69b9      	ldr	r1, [r7, #24]
 80068b0:	430b      	orrs	r3, r1
 80068b2:	60d3      	str	r3, [r2, #12]
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80068ba:	2b01      	cmp	r3, #1
 80068bc:	d130      	bne.n	8006920 <HAL_ADC_Init+0x2b8>
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80068c2:	2b00      	cmp	r3, #0
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	681b      	ldr	r3, [r3, #0]
 80068c8:	691a      	ldr	r2, [r3, #16]
 80068ca:	4b14      	ldr	r3, [pc, #80]	; (800691c <HAL_ADC_Init+0x2b4>)
 80068cc:	4013      	ands	r3, r2
 80068ce:	687a      	ldr	r2, [r7, #4]
 80068d0:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80068d2:	3a01      	subs	r2, #1
 80068d4:	0411      	lsls	r1, r2, #16
 80068d6:	687a      	ldr	r2, [r7, #4]
 80068d8:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80068da:	4311      	orrs	r1, r2
 80068dc:	687a      	ldr	r2, [r7, #4]
 80068de:	6c52      	ldr	r2, [r2, #68]	; 0x44
 80068e0:	4311      	orrs	r1, r2
 80068e2:	687a      	ldr	r2, [r7, #4]
 80068e4:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80068e6:	430a      	orrs	r2, r1
 80068e8:	431a      	orrs	r2, r3
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	681b      	ldr	r3, [r3, #0]
 80068ee:	f042 0201 	orr.w	r2, r2, #1
 80068f2:	611a      	str	r2, [r3, #16]
 80068f4:	e01c      	b.n	8006930 <HAL_ADC_Init+0x2c8>
 80068f6:	bf00      	nop
 80068f8:	240000c4 	.word	0x240000c4
 80068fc:	053e2d63 	.word	0x053e2d63
 8006900:	40022000 	.word	0x40022000
 8006904:	40022100 	.word	0x40022100
 8006908:	58026000 	.word	0x58026000
 800690c:	40022300 	.word	0x40022300
 8006910:	58026300 	.word	0x58026300
 8006914:	fff0c003 	.word	0xfff0c003
 8006918:	ffffbffc 	.word	0xffffbffc
 800691c:	fc00f81e 	.word	0xfc00f81e
 8006920:	687b      	ldr	r3, [r7, #4]
 8006922:	681b      	ldr	r3, [r3, #0]
 8006924:	691a      	ldr	r2, [r3, #16]
 8006926:	687b      	ldr	r3, [r7, #4]
 8006928:	681b      	ldr	r3, [r3, #0]
 800692a:	f022 0201 	bic.w	r2, r2, #1
 800692e:	611a      	str	r2, [r3, #16]
 8006930:	687b      	ldr	r3, [r7, #4]
 8006932:	681b      	ldr	r3, [r3, #0]
 8006934:	691b      	ldr	r3, [r3, #16]
 8006936:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800693e:	687b      	ldr	r3, [r7, #4]
 8006940:	681b      	ldr	r3, [r3, #0]
 8006942:	430a      	orrs	r2, r1
 8006944:	611a      	str	r2, [r3, #16]
 8006946:	6878      	ldr	r0, [r7, #4]
 8006948:	f000 fdec 	bl	8007524 <ADC_ConfigureBoostMode>
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	68db      	ldr	r3, [r3, #12]
 8006950:	2b01      	cmp	r3, #1
 8006952:	d10c      	bne.n	800696e <HAL_ADC_Init+0x306>
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	681b      	ldr	r3, [r3, #0]
 8006958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800695a:	f023 010f 	bic.w	r1, r3, #15
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	699b      	ldr	r3, [r3, #24]
 8006962:	1e5a      	subs	r2, r3, #1
 8006964:	687b      	ldr	r3, [r7, #4]
 8006966:	681b      	ldr	r3, [r3, #0]
 8006968:	430a      	orrs	r2, r1
 800696a:	631a      	str	r2, [r3, #48]	; 0x30
 800696c:	e007      	b.n	800697e <HAL_ADC_Init+0x316>
 800696e:	687b      	ldr	r3, [r7, #4]
 8006970:	681b      	ldr	r3, [r3, #0]
 8006972:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006974:	687b      	ldr	r3, [r7, #4]
 8006976:	681b      	ldr	r3, [r3, #0]
 8006978:	f022 020f 	bic.w	r2, r2, #15
 800697c:	631a      	str	r2, [r3, #48]	; 0x30
 800697e:	687b      	ldr	r3, [r7, #4]
 8006980:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006982:	f023 0303 	bic.w	r3, r3, #3
 8006986:	f043 0201 	orr.w	r2, r3, #1
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	655a      	str	r2, [r3, #84]	; 0x54
 800698e:	e007      	b.n	80069a0 <HAL_ADC_Init+0x338>
 8006990:	687b      	ldr	r3, [r7, #4]
 8006992:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006994:	f043 0210 	orr.w	r2, r3, #16
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	655a      	str	r2, [r3, #84]	; 0x54
 800699c:	2301      	movs	r3, #1
 800699e:	77fb      	strb	r3, [r7, #31]
 80069a0:	7ffb      	ldrb	r3, [r7, #31]
 80069a2:	4618      	mov	r0, r3
 80069a4:	3724      	adds	r7, #36	; 0x24
 80069a6:	46bd      	mov	sp, r7
 80069a8:	bd90      	pop	{r4, r7, pc}
 80069aa:	bf00      	nop

080069ac <HAL_ADC_Start_DMA>:
 80069ac:	b580      	push	{r7, lr}
 80069ae:	b086      	sub	sp, #24
 80069b0:	af00      	add	r7, sp, #0
 80069b2:	60f8      	str	r0, [r7, #12]
 80069b4:	60b9      	str	r1, [r7, #8]
 80069b6:	607a      	str	r2, [r7, #4]
 80069b8:	68fb      	ldr	r3, [r7, #12]
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	4a55      	ldr	r2, [pc, #340]	; (8006b14 <HAL_ADC_Start_DMA+0x168>)
 80069be:	4293      	cmp	r3, r2
 80069c0:	d004      	beq.n	80069cc <HAL_ADC_Start_DMA+0x20>
 80069c2:	68fb      	ldr	r3, [r7, #12]
 80069c4:	681b      	ldr	r3, [r3, #0]
 80069c6:	4a54      	ldr	r2, [pc, #336]	; (8006b18 <HAL_ADC_Start_DMA+0x16c>)
 80069c8:	4293      	cmp	r3, r2
 80069ca:	d101      	bne.n	80069d0 <HAL_ADC_Start_DMA+0x24>
 80069cc:	4b53      	ldr	r3, [pc, #332]	; (8006b1c <HAL_ADC_Start_DMA+0x170>)
 80069ce:	e000      	b.n	80069d2 <HAL_ADC_Start_DMA+0x26>
 80069d0:	4b53      	ldr	r3, [pc, #332]	; (8006b20 <HAL_ADC_Start_DMA+0x174>)
 80069d2:	4618      	mov	r0, r3
 80069d4:	f7ff fd64 	bl	80064a0 <LL_ADC_GetMultimode>
 80069d8:	6138      	str	r0, [r7, #16]
 80069da:	68fb      	ldr	r3, [r7, #12]
 80069dc:	681b      	ldr	r3, [r3, #0]
 80069de:	4618      	mov	r0, r3
 80069e0:	f7ff fe1c 	bl	800661c <LL_ADC_REG_IsConversionOngoing>
 80069e4:	4603      	mov	r3, r0
 80069e6:	2b00      	cmp	r3, #0
 80069e8:	f040 808c 	bne.w	8006b04 <HAL_ADC_Start_DMA+0x158>
 80069ec:	68fb      	ldr	r3, [r7, #12]
 80069ee:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80069f2:	2b01      	cmp	r3, #1
 80069f4:	d101      	bne.n	80069fa <HAL_ADC_Start_DMA+0x4e>
 80069f6:	2302      	movs	r3, #2
 80069f8:	e087      	b.n	8006b0a <HAL_ADC_Start_DMA+0x15e>
 80069fa:	68fb      	ldr	r3, [r7, #12]
 80069fc:	2201      	movs	r2, #1
 80069fe:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006a02:	693b      	ldr	r3, [r7, #16]
 8006a04:	2b00      	cmp	r3, #0
 8006a06:	d005      	beq.n	8006a14 <HAL_ADC_Start_DMA+0x68>
 8006a08:	693b      	ldr	r3, [r7, #16]
 8006a0a:	2b05      	cmp	r3, #5
 8006a0c:	d002      	beq.n	8006a14 <HAL_ADC_Start_DMA+0x68>
 8006a0e:	693b      	ldr	r3, [r7, #16]
 8006a10:	2b09      	cmp	r3, #9
 8006a12:	d170      	bne.n	8006af6 <HAL_ADC_Start_DMA+0x14a>
 8006a14:	68f8      	ldr	r0, [r7, #12]
 8006a16:	f000 fc07 	bl	8007228 <ADC_Enable>
 8006a1a:	4603      	mov	r3, r0
 8006a1c:	75fb      	strb	r3, [r7, #23]
 8006a1e:	7dfb      	ldrb	r3, [r7, #23]
 8006a20:	2b00      	cmp	r3, #0
 8006a22:	d163      	bne.n	8006aec <HAL_ADC_Start_DMA+0x140>
 8006a24:	68fb      	ldr	r3, [r7, #12]
 8006a26:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8006a28:	4b3e      	ldr	r3, [pc, #248]	; (8006b24 <HAL_ADC_Start_DMA+0x178>)
 8006a2a:	4013      	ands	r3, r2
 8006a2c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8006a30:	68fb      	ldr	r3, [r7, #12]
 8006a32:	655a      	str	r2, [r3, #84]	; 0x54
 8006a34:	68fb      	ldr	r3, [r7, #12]
 8006a36:	681b      	ldr	r3, [r3, #0]
 8006a38:	4a37      	ldr	r2, [pc, #220]	; (8006b18 <HAL_ADC_Start_DMA+0x16c>)
 8006a3a:	4293      	cmp	r3, r2
 8006a3c:	d002      	beq.n	8006a44 <HAL_ADC_Start_DMA+0x98>
 8006a3e:	68fb      	ldr	r3, [r7, #12]
 8006a40:	681b      	ldr	r3, [r3, #0]
 8006a42:	e000      	b.n	8006a46 <HAL_ADC_Start_DMA+0x9a>
 8006a44:	4b33      	ldr	r3, [pc, #204]	; (8006b14 <HAL_ADC_Start_DMA+0x168>)
 8006a46:	68fa      	ldr	r2, [r7, #12]
 8006a48:	6812      	ldr	r2, [r2, #0]
 8006a4a:	4293      	cmp	r3, r2
 8006a4c:	d002      	beq.n	8006a54 <HAL_ADC_Start_DMA+0xa8>
 8006a4e:	693b      	ldr	r3, [r7, #16]
 8006a50:	2b00      	cmp	r3, #0
 8006a52:	d105      	bne.n	8006a60 <HAL_ADC_Start_DMA+0xb4>
 8006a54:	68fb      	ldr	r3, [r7, #12]
 8006a56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006a58:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 8006a5c:	68fb      	ldr	r3, [r7, #12]
 8006a5e:	655a      	str	r2, [r3, #84]	; 0x54
 8006a60:	68fb      	ldr	r3, [r7, #12]
 8006a62:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006a64:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006a68:	2b00      	cmp	r3, #0
 8006a6a:	d006      	beq.n	8006a7a <HAL_ADC_Start_DMA+0xce>
 8006a6c:	68fb      	ldr	r3, [r7, #12]
 8006a6e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006a70:	f023 0206 	bic.w	r2, r3, #6
 8006a74:	68fb      	ldr	r3, [r7, #12]
 8006a76:	659a      	str	r2, [r3, #88]	; 0x58
 8006a78:	e002      	b.n	8006a80 <HAL_ADC_Start_DMA+0xd4>
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	2200      	movs	r2, #0
 8006a7e:	659a      	str	r2, [r3, #88]	; 0x58
 8006a80:	68fb      	ldr	r3, [r7, #12]
 8006a82:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006a84:	4a28      	ldr	r2, [pc, #160]	; (8006b28 <HAL_ADC_Start_DMA+0x17c>)
 8006a86:	63da      	str	r2, [r3, #60]	; 0x3c
 8006a88:	68fb      	ldr	r3, [r7, #12]
 8006a8a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006a8c:	4a27      	ldr	r2, [pc, #156]	; (8006b2c <HAL_ADC_Start_DMA+0x180>)
 8006a8e:	641a      	str	r2, [r3, #64]	; 0x40
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006a94:	4a26      	ldr	r2, [pc, #152]	; (8006b30 <HAL_ADC_Start_DMA+0x184>)
 8006a96:	64da      	str	r2, [r3, #76]	; 0x4c
 8006a98:	68fb      	ldr	r3, [r7, #12]
 8006a9a:	681b      	ldr	r3, [r3, #0]
 8006a9c:	221c      	movs	r2, #28
 8006a9e:	601a      	str	r2, [r3, #0]
 8006aa0:	68fb      	ldr	r3, [r7, #12]
 8006aa2:	2200      	movs	r2, #0
 8006aa4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006aa8:	68fb      	ldr	r3, [r7, #12]
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	685a      	ldr	r2, [r3, #4]
 8006aae:	68fb      	ldr	r3, [r7, #12]
 8006ab0:	681b      	ldr	r3, [r3, #0]
 8006ab2:	f042 0210 	orr.w	r2, r2, #16
 8006ab6:	605a      	str	r2, [r3, #4]
 8006ab8:	68fb      	ldr	r3, [r7, #12]
 8006aba:	681a      	ldr	r2, [r3, #0]
 8006abc:	68fb      	ldr	r3, [r7, #12]
 8006abe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006ac0:	4619      	mov	r1, r3
 8006ac2:	4610      	mov	r0, r2
 8006ac4:	f7ff fc89 	bl	80063da <LL_ADC_REG_SetDataTransferMode>
 8006ac8:	68fb      	ldr	r3, [r7, #12]
 8006aca:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8006acc:	68fb      	ldr	r3, [r7, #12]
 8006ace:	681b      	ldr	r3, [r3, #0]
 8006ad0:	3340      	adds	r3, #64	; 0x40
 8006ad2:	4619      	mov	r1, r3
 8006ad4:	68ba      	ldr	r2, [r7, #8]
 8006ad6:	687b      	ldr	r3, [r7, #4]
 8006ad8:	f002 f80e 	bl	8008af8 <HAL_DMA_Start_IT>
 8006adc:	4603      	mov	r3, r0
 8006ade:	75fb      	strb	r3, [r7, #23]
 8006ae0:	68fb      	ldr	r3, [r7, #12]
 8006ae2:	681b      	ldr	r3, [r3, #0]
 8006ae4:	4618      	mov	r0, r3
 8006ae6:	f7ff fd85 	bl	80065f4 <LL_ADC_REG_StartConversion>
 8006aea:	e00d      	b.n	8006b08 <HAL_ADC_Start_DMA+0x15c>
 8006aec:	68fb      	ldr	r3, [r7, #12]
 8006aee:	2200      	movs	r2, #0
 8006af0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006af4:	e008      	b.n	8006b08 <HAL_ADC_Start_DMA+0x15c>
 8006af6:	2301      	movs	r3, #1
 8006af8:	75fb      	strb	r3, [r7, #23]
 8006afa:	68fb      	ldr	r3, [r7, #12]
 8006afc:	2200      	movs	r2, #0
 8006afe:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006b02:	e001      	b.n	8006b08 <HAL_ADC_Start_DMA+0x15c>
 8006b04:	2302      	movs	r3, #2
 8006b06:	75fb      	strb	r3, [r7, #23]
 8006b08:	7dfb      	ldrb	r3, [r7, #23]
 8006b0a:	4618      	mov	r0, r3
 8006b0c:	3718      	adds	r7, #24
 8006b0e:	46bd      	mov	sp, r7
 8006b10:	bd80      	pop	{r7, pc}
 8006b12:	bf00      	nop
 8006b14:	40022000 	.word	0x40022000
 8006b18:	40022100 	.word	0x40022100
 8006b1c:	40022300 	.word	0x40022300
 8006b20:	58026300 	.word	0x58026300
 8006b24:	fffff0fe 	.word	0xfffff0fe
 8006b28:	080073fb 	.word	0x080073fb
 8006b2c:	080074d3 	.word	0x080074d3
 8006b30:	080074ef 	.word	0x080074ef

08006b34 <HAL_ADC_ConvCpltCallback>:
 8006b34:	b480      	push	{r7}
 8006b36:	b083      	sub	sp, #12
 8006b38:	af00      	add	r7, sp, #0
 8006b3a:	6078      	str	r0, [r7, #4]
 8006b3c:	bf00      	nop
 8006b3e:	370c      	adds	r7, #12
 8006b40:	46bd      	mov	sp, r7
 8006b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b46:	4770      	bx	lr

08006b48 <HAL_ADC_ConvHalfCpltCallback>:
 8006b48:	b480      	push	{r7}
 8006b4a:	b083      	sub	sp, #12
 8006b4c:	af00      	add	r7, sp, #0
 8006b4e:	6078      	str	r0, [r7, #4]
 8006b50:	bf00      	nop
 8006b52:	370c      	adds	r7, #12
 8006b54:	46bd      	mov	sp, r7
 8006b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b5a:	4770      	bx	lr

08006b5c <HAL_ADC_ErrorCallback>:
 8006b5c:	b480      	push	{r7}
 8006b5e:	b083      	sub	sp, #12
 8006b60:	af00      	add	r7, sp, #0
 8006b62:	6078      	str	r0, [r7, #4]
 8006b64:	bf00      	nop
 8006b66:	370c      	adds	r7, #12
 8006b68:	46bd      	mov	sp, r7
 8006b6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b6e:	4770      	bx	lr

08006b70 <HAL_ADC_ConfigChannel>:
 8006b70:	b590      	push	{r4, r7, lr}
 8006b72:	b0a1      	sub	sp, #132	; 0x84
 8006b74:	af00      	add	r7, sp, #0
 8006b76:	6078      	str	r0, [r7, #4]
 8006b78:	6039      	str	r1, [r7, #0]
 8006b7a:	2300      	movs	r3, #0
 8006b7c:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 8006b80:	2300      	movs	r3, #0
 8006b82:	60bb      	str	r3, [r7, #8]
 8006b84:	683b      	ldr	r3, [r7, #0]
 8006b86:	68db      	ldr	r3, [r3, #12]
 8006b88:	4a65      	ldr	r2, [pc, #404]	; (8006d20 <HAL_ADC_ConfigChannel+0x1b0>)
 8006b8a:	4293      	cmp	r3, r2
 8006b8c:	687b      	ldr	r3, [r7, #4]
 8006b8e:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006b92:	2b01      	cmp	r3, #1
 8006b94:	d101      	bne.n	8006b9a <HAL_ADC_ConfigChannel+0x2a>
 8006b96:	2302      	movs	r3, #2
 8006b98:	e32e      	b.n	80071f8 <HAL_ADC_ConfigChannel+0x688>
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	2201      	movs	r2, #1
 8006b9e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	4618      	mov	r0, r3
 8006ba8:	f7ff fd38 	bl	800661c <LL_ADC_REG_IsConversionOngoing>
 8006bac:	4603      	mov	r3, r0
 8006bae:	2b00      	cmp	r3, #0
 8006bb0:	f040 8313 	bne.w	80071da <HAL_ADC_ConfigChannel+0x66a>
 8006bb4:	683b      	ldr	r3, [r7, #0]
 8006bb6:	681b      	ldr	r3, [r3, #0]
 8006bb8:	2b00      	cmp	r3, #0
 8006bba:	db2c      	blt.n	8006c16 <HAL_ADC_ConfigChannel+0xa6>
 8006bbc:	683b      	ldr	r3, [r7, #0]
 8006bbe:	681b      	ldr	r3, [r3, #0]
 8006bc0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006bc4:	2b00      	cmp	r3, #0
 8006bc6:	d108      	bne.n	8006bda <HAL_ADC_ConfigChannel+0x6a>
 8006bc8:	683b      	ldr	r3, [r7, #0]
 8006bca:	681b      	ldr	r3, [r3, #0]
 8006bcc:	0e9b      	lsrs	r3, r3, #26
 8006bce:	f003 031f 	and.w	r3, r3, #31
 8006bd2:	2201      	movs	r2, #1
 8006bd4:	fa02 f303 	lsl.w	r3, r2, r3
 8006bd8:	e016      	b.n	8006c08 <HAL_ADC_ConfigChannel+0x98>
 8006bda:	683b      	ldr	r3, [r7, #0]
 8006bdc:	681b      	ldr	r3, [r3, #0]
 8006bde:	667b      	str	r3, [r7, #100]	; 0x64
 8006be0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8006be2:	fa93 f3a3 	rbit	r3, r3
 8006be6:	663b      	str	r3, [r7, #96]	; 0x60
 8006be8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8006bea:	66bb      	str	r3, [r7, #104]	; 0x68
 8006bec:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8006bee:	2b00      	cmp	r3, #0
 8006bf0:	d101      	bne.n	8006bf6 <HAL_ADC_ConfigChannel+0x86>
 8006bf2:	2320      	movs	r3, #32
 8006bf4:	e003      	b.n	8006bfe <HAL_ADC_ConfigChannel+0x8e>
 8006bf6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8006bf8:	fab3 f383 	clz	r3, r3
 8006bfc:	b2db      	uxtb	r3, r3
 8006bfe:	f003 031f 	and.w	r3, r3, #31
 8006c02:	2201      	movs	r2, #1
 8006c04:	fa02 f303 	lsl.w	r3, r2, r3
 8006c08:	687a      	ldr	r2, [r7, #4]
 8006c0a:	6812      	ldr	r2, [r2, #0]
 8006c0c:	69d1      	ldr	r1, [r2, #28]
 8006c0e:	687a      	ldr	r2, [r7, #4]
 8006c10:	6812      	ldr	r2, [r2, #0]
 8006c12:	430b      	orrs	r3, r1
 8006c14:	61d3      	str	r3, [r2, #28]
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	6818      	ldr	r0, [r3, #0]
 8006c1a:	683b      	ldr	r3, [r7, #0]
 8006c1c:	6859      	ldr	r1, [r3, #4]
 8006c1e:	683b      	ldr	r3, [r7, #0]
 8006c20:	681b      	ldr	r3, [r3, #0]
 8006c22:	461a      	mov	r2, r3
 8006c24:	f7ff fbad 	bl	8006382 <LL_ADC_REG_SetSequencerRanks>
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	681b      	ldr	r3, [r3, #0]
 8006c2c:	4618      	mov	r0, r3
 8006c2e:	f7ff fcf5 	bl	800661c <LL_ADC_REG_IsConversionOngoing>
 8006c32:	67b8      	str	r0, [r7, #120]	; 0x78
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	681b      	ldr	r3, [r3, #0]
 8006c38:	4618      	mov	r0, r3
 8006c3a:	f7ff fd02 	bl	8006642 <LL_ADC_INJ_IsConversionOngoing>
 8006c3e:	6778      	str	r0, [r7, #116]	; 0x74
 8006c40:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8006c42:	2b00      	cmp	r3, #0
 8006c44:	f040 80b8 	bne.w	8006db8 <HAL_ADC_ConfigChannel+0x248>
 8006c48:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8006c4a:	2b00      	cmp	r3, #0
 8006c4c:	f040 80b4 	bne.w	8006db8 <HAL_ADC_ConfigChannel+0x248>
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	6818      	ldr	r0, [r3, #0]
 8006c54:	683b      	ldr	r3, [r7, #0]
 8006c56:	6819      	ldr	r1, [r3, #0]
 8006c58:	683b      	ldr	r3, [r7, #0]
 8006c5a:	689b      	ldr	r3, [r3, #8]
 8006c5c:	461a      	mov	r2, r3
 8006c5e:	f7ff fbcf 	bl	8006400 <LL_ADC_SetChannelSamplingTime>
 8006c62:	4b30      	ldr	r3, [pc, #192]	; (8006d24 <HAL_ADC_ConfigChannel+0x1b4>)
 8006c64:	681b      	ldr	r3, [r3, #0]
 8006c66:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8006c6a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8006c6e:	d10b      	bne.n	8006c88 <HAL_ADC_ConfigChannel+0x118>
 8006c70:	683b      	ldr	r3, [r7, #0]
 8006c72:	695a      	ldr	r2, [r3, #20]
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	681b      	ldr	r3, [r3, #0]
 8006c78:	68db      	ldr	r3, [r3, #12]
 8006c7a:	089b      	lsrs	r3, r3, #2
 8006c7c:	f003 0307 	and.w	r3, r3, #7
 8006c80:	005b      	lsls	r3, r3, #1
 8006c82:	fa02 f303 	lsl.w	r3, r2, r3
 8006c86:	e01d      	b.n	8006cc4 <HAL_ADC_ConfigChannel+0x154>
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	68db      	ldr	r3, [r3, #12]
 8006c8e:	f003 0310 	and.w	r3, r3, #16
 8006c92:	2b00      	cmp	r3, #0
 8006c94:	d10b      	bne.n	8006cae <HAL_ADC_ConfigChannel+0x13e>
 8006c96:	683b      	ldr	r3, [r7, #0]
 8006c98:	695a      	ldr	r2, [r3, #20]
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	681b      	ldr	r3, [r3, #0]
 8006c9e:	68db      	ldr	r3, [r3, #12]
 8006ca0:	089b      	lsrs	r3, r3, #2
 8006ca2:	f003 0307 	and.w	r3, r3, #7
 8006ca6:	005b      	lsls	r3, r3, #1
 8006ca8:	fa02 f303 	lsl.w	r3, r2, r3
 8006cac:	e00a      	b.n	8006cc4 <HAL_ADC_ConfigChannel+0x154>
 8006cae:	683b      	ldr	r3, [r7, #0]
 8006cb0:	695a      	ldr	r2, [r3, #20]
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	681b      	ldr	r3, [r3, #0]
 8006cb6:	68db      	ldr	r3, [r3, #12]
 8006cb8:	089b      	lsrs	r3, r3, #2
 8006cba:	f003 0304 	and.w	r3, r3, #4
 8006cbe:	005b      	lsls	r3, r3, #1
 8006cc0:	fa02 f303 	lsl.w	r3, r2, r3
 8006cc4:	673b      	str	r3, [r7, #112]	; 0x70
 8006cc6:	683b      	ldr	r3, [r7, #0]
 8006cc8:	691b      	ldr	r3, [r3, #16]
 8006cca:	2b04      	cmp	r3, #4
 8006ccc:	d02c      	beq.n	8006d28 <HAL_ADC_ConfigChannel+0x1b8>
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	6818      	ldr	r0, [r3, #0]
 8006cd2:	683b      	ldr	r3, [r7, #0]
 8006cd4:	6919      	ldr	r1, [r3, #16]
 8006cd6:	683b      	ldr	r3, [r7, #0]
 8006cd8:	681a      	ldr	r2, [r3, #0]
 8006cda:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8006cdc:	f7ff faea 	bl	80062b4 <LL_ADC_SetOffset>
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	6818      	ldr	r0, [r3, #0]
 8006ce4:	683b      	ldr	r3, [r7, #0]
 8006ce6:	6919      	ldr	r1, [r3, #16]
 8006ce8:	683b      	ldr	r3, [r7, #0]
 8006cea:	7e5b      	ldrb	r3, [r3, #25]
 8006cec:	2b01      	cmp	r3, #1
 8006cee:	d102      	bne.n	8006cf6 <HAL_ADC_ConfigChannel+0x186>
 8006cf0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006cf4:	e000      	b.n	8006cf8 <HAL_ADC_ConfigChannel+0x188>
 8006cf6:	2300      	movs	r3, #0
 8006cf8:	461a      	mov	r2, r3
 8006cfa:	f7ff fb14 	bl	8006326 <LL_ADC_SetOffsetSignedSaturation>
 8006cfe:	687b      	ldr	r3, [r7, #4]
 8006d00:	6818      	ldr	r0, [r3, #0]
 8006d02:	683b      	ldr	r3, [r7, #0]
 8006d04:	6919      	ldr	r1, [r3, #16]
 8006d06:	683b      	ldr	r3, [r7, #0]
 8006d08:	7e1b      	ldrb	r3, [r3, #24]
 8006d0a:	2b01      	cmp	r3, #1
 8006d0c:	d102      	bne.n	8006d14 <HAL_ADC_ConfigChannel+0x1a4>
 8006d0e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8006d12:	e000      	b.n	8006d16 <HAL_ADC_ConfigChannel+0x1a6>
 8006d14:	2300      	movs	r3, #0
 8006d16:	461a      	mov	r2, r3
 8006d18:	f7ff faec 	bl	80062f4 <LL_ADC_SetDataRightShift>
 8006d1c:	e04c      	b.n	8006db8 <HAL_ADC_ConfigChannel+0x248>
 8006d1e:	bf00      	nop
 8006d20:	47ff0000 	.word	0x47ff0000
 8006d24:	5c001000 	.word	0x5c001000
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	681b      	ldr	r3, [r3, #0]
 8006d2c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006d2e:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8006d32:	683b      	ldr	r3, [r7, #0]
 8006d34:	681b      	ldr	r3, [r3, #0]
 8006d36:	069b      	lsls	r3, r3, #26
 8006d38:	429a      	cmp	r2, r3
 8006d3a:	d107      	bne.n	8006d4c <HAL_ADC_ConfigChannel+0x1dc>
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	681b      	ldr	r3, [r3, #0]
 8006d40:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	681b      	ldr	r3, [r3, #0]
 8006d46:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8006d4a:	661a      	str	r2, [r3, #96]	; 0x60
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	681b      	ldr	r3, [r3, #0]
 8006d50:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006d52:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8006d56:	683b      	ldr	r3, [r7, #0]
 8006d58:	681b      	ldr	r3, [r3, #0]
 8006d5a:	069b      	lsls	r3, r3, #26
 8006d5c:	429a      	cmp	r2, r3
 8006d5e:	d107      	bne.n	8006d70 <HAL_ADC_ConfigChannel+0x200>
 8006d60:	687b      	ldr	r3, [r7, #4]
 8006d62:	681b      	ldr	r3, [r3, #0]
 8006d64:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8006d66:	687b      	ldr	r3, [r7, #4]
 8006d68:	681b      	ldr	r3, [r3, #0]
 8006d6a:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8006d6e:	665a      	str	r2, [r3, #100]	; 0x64
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	681b      	ldr	r3, [r3, #0]
 8006d74:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8006d76:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8006d7a:	683b      	ldr	r3, [r7, #0]
 8006d7c:	681b      	ldr	r3, [r3, #0]
 8006d7e:	069b      	lsls	r3, r3, #26
 8006d80:	429a      	cmp	r2, r3
 8006d82:	d107      	bne.n	8006d94 <HAL_ADC_ConfigChannel+0x224>
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	681b      	ldr	r3, [r3, #0]
 8006d88:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8006d8a:	687b      	ldr	r3, [r7, #4]
 8006d8c:	681b      	ldr	r3, [r3, #0]
 8006d8e:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8006d92:	669a      	str	r2, [r3, #104]	; 0x68
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	681b      	ldr	r3, [r3, #0]
 8006d98:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8006d9a:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8006d9e:	683b      	ldr	r3, [r7, #0]
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	069b      	lsls	r3, r3, #26
 8006da4:	429a      	cmp	r2, r3
 8006da6:	d107      	bne.n	8006db8 <HAL_ADC_ConfigChannel+0x248>
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	681b      	ldr	r3, [r3, #0]
 8006dac:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	681b      	ldr	r3, [r3, #0]
 8006db2:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8006db6:	66da      	str	r2, [r3, #108]	; 0x6c
 8006db8:	687b      	ldr	r3, [r7, #4]
 8006dba:	681b      	ldr	r3, [r3, #0]
 8006dbc:	4618      	mov	r0, r3
 8006dbe:	f7ff fbf3 	bl	80065a8 <LL_ADC_IsEnabled>
 8006dc2:	4603      	mov	r3, r0
 8006dc4:	2b00      	cmp	r3, #0
 8006dc6:	f040 8211 	bne.w	80071ec <HAL_ADC_ConfigChannel+0x67c>
 8006dca:	687b      	ldr	r3, [r7, #4]
 8006dcc:	6818      	ldr	r0, [r3, #0]
 8006dce:	683b      	ldr	r3, [r7, #0]
 8006dd0:	6819      	ldr	r1, [r3, #0]
 8006dd2:	683b      	ldr	r3, [r7, #0]
 8006dd4:	68db      	ldr	r3, [r3, #12]
 8006dd6:	461a      	mov	r2, r3
 8006dd8:	f7ff fb3e 	bl	8006458 <LL_ADC_SetChannelSingleDiff>
 8006ddc:	683b      	ldr	r3, [r7, #0]
 8006dde:	68db      	ldr	r3, [r3, #12]
 8006de0:	4aa1      	ldr	r2, [pc, #644]	; (8007068 <HAL_ADC_ConfigChannel+0x4f8>)
 8006de2:	4293      	cmp	r3, r2
 8006de4:	f040 812e 	bne.w	8007044 <HAL_ADC_ConfigChannel+0x4d4>
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	6818      	ldr	r0, [r3, #0]
 8006dec:	683b      	ldr	r3, [r7, #0]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006df4:	2b00      	cmp	r3, #0
 8006df6:	d10b      	bne.n	8006e10 <HAL_ADC_ConfigChannel+0x2a0>
 8006df8:	683b      	ldr	r3, [r7, #0]
 8006dfa:	681b      	ldr	r3, [r3, #0]
 8006dfc:	0e9b      	lsrs	r3, r3, #26
 8006dfe:	3301      	adds	r3, #1
 8006e00:	f003 031f 	and.w	r3, r3, #31
 8006e04:	2b09      	cmp	r3, #9
 8006e06:	bf94      	ite	ls
 8006e08:	2301      	movls	r3, #1
 8006e0a:	2300      	movhi	r3, #0
 8006e0c:	b2db      	uxtb	r3, r3
 8006e0e:	e019      	b.n	8006e44 <HAL_ADC_ConfigChannel+0x2d4>
 8006e10:	683b      	ldr	r3, [r7, #0]
 8006e12:	681b      	ldr	r3, [r3, #0]
 8006e14:	65bb      	str	r3, [r7, #88]	; 0x58
 8006e16:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8006e18:	fa93 f3a3 	rbit	r3, r3
 8006e1c:	657b      	str	r3, [r7, #84]	; 0x54
 8006e1e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8006e20:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006e22:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8006e24:	2b00      	cmp	r3, #0
 8006e26:	d101      	bne.n	8006e2c <HAL_ADC_ConfigChannel+0x2bc>
 8006e28:	2320      	movs	r3, #32
 8006e2a:	e003      	b.n	8006e34 <HAL_ADC_ConfigChannel+0x2c4>
 8006e2c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8006e2e:	fab3 f383 	clz	r3, r3
 8006e32:	b2db      	uxtb	r3, r3
 8006e34:	3301      	adds	r3, #1
 8006e36:	f003 031f 	and.w	r3, r3, #31
 8006e3a:	2b09      	cmp	r3, #9
 8006e3c:	bf94      	ite	ls
 8006e3e:	2301      	movls	r3, #1
 8006e40:	2300      	movhi	r3, #0
 8006e42:	b2db      	uxtb	r3, r3
 8006e44:	2b00      	cmp	r3, #0
 8006e46:	d079      	beq.n	8006f3c <HAL_ADC_ConfigChannel+0x3cc>
 8006e48:	683b      	ldr	r3, [r7, #0]
 8006e4a:	681b      	ldr	r3, [r3, #0]
 8006e4c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006e50:	2b00      	cmp	r3, #0
 8006e52:	d107      	bne.n	8006e64 <HAL_ADC_ConfigChannel+0x2f4>
 8006e54:	683b      	ldr	r3, [r7, #0]
 8006e56:	681b      	ldr	r3, [r3, #0]
 8006e58:	0e9b      	lsrs	r3, r3, #26
 8006e5a:	3301      	adds	r3, #1
 8006e5c:	069b      	lsls	r3, r3, #26
 8006e5e:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8006e62:	e015      	b.n	8006e90 <HAL_ADC_ConfigChannel+0x320>
 8006e64:	683b      	ldr	r3, [r7, #0]
 8006e66:	681b      	ldr	r3, [r3, #0]
 8006e68:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006e6a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006e6c:	fa93 f3a3 	rbit	r3, r3
 8006e70:	64bb      	str	r3, [r7, #72]	; 0x48
 8006e72:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006e74:	653b      	str	r3, [r7, #80]	; 0x50
 8006e76:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006e78:	2b00      	cmp	r3, #0
 8006e7a:	d101      	bne.n	8006e80 <HAL_ADC_ConfigChannel+0x310>
 8006e7c:	2320      	movs	r3, #32
 8006e7e:	e003      	b.n	8006e88 <HAL_ADC_ConfigChannel+0x318>
 8006e80:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006e82:	fab3 f383 	clz	r3, r3
 8006e86:	b2db      	uxtb	r3, r3
 8006e88:	3301      	adds	r3, #1
 8006e8a:	069b      	lsls	r3, r3, #26
 8006e8c:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8006e90:	683b      	ldr	r3, [r7, #0]
 8006e92:	681b      	ldr	r3, [r3, #0]
 8006e94:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006e98:	2b00      	cmp	r3, #0
 8006e9a:	d109      	bne.n	8006eb0 <HAL_ADC_ConfigChannel+0x340>
 8006e9c:	683b      	ldr	r3, [r7, #0]
 8006e9e:	681b      	ldr	r3, [r3, #0]
 8006ea0:	0e9b      	lsrs	r3, r3, #26
 8006ea2:	3301      	adds	r3, #1
 8006ea4:	f003 031f 	and.w	r3, r3, #31
 8006ea8:	2101      	movs	r1, #1
 8006eaa:	fa01 f303 	lsl.w	r3, r1, r3
 8006eae:	e017      	b.n	8006ee0 <HAL_ADC_ConfigChannel+0x370>
 8006eb0:	683b      	ldr	r3, [r7, #0]
 8006eb2:	681b      	ldr	r3, [r3, #0]
 8006eb4:	643b      	str	r3, [r7, #64]	; 0x40
 8006eb6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8006eb8:	fa93 f3a3 	rbit	r3, r3
 8006ebc:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006ebe:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006ec0:	647b      	str	r3, [r7, #68]	; 0x44
 8006ec2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8006ec4:	2b00      	cmp	r3, #0
 8006ec6:	d101      	bne.n	8006ecc <HAL_ADC_ConfigChannel+0x35c>
 8006ec8:	2320      	movs	r3, #32
 8006eca:	e003      	b.n	8006ed4 <HAL_ADC_ConfigChannel+0x364>
 8006ecc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8006ece:	fab3 f383 	clz	r3, r3
 8006ed2:	b2db      	uxtb	r3, r3
 8006ed4:	3301      	adds	r3, #1
 8006ed6:	f003 031f 	and.w	r3, r3, #31
 8006eda:	2101      	movs	r1, #1
 8006edc:	fa01 f303 	lsl.w	r3, r1, r3
 8006ee0:	ea42 0103 	orr.w	r1, r2, r3
 8006ee4:	683b      	ldr	r3, [r7, #0]
 8006ee6:	681b      	ldr	r3, [r3, #0]
 8006ee8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006eec:	2b00      	cmp	r3, #0
 8006eee:	d10a      	bne.n	8006f06 <HAL_ADC_ConfigChannel+0x396>
 8006ef0:	683b      	ldr	r3, [r7, #0]
 8006ef2:	681b      	ldr	r3, [r3, #0]
 8006ef4:	0e9b      	lsrs	r3, r3, #26
 8006ef6:	3301      	adds	r3, #1
 8006ef8:	f003 021f 	and.w	r2, r3, #31
 8006efc:	4613      	mov	r3, r2
 8006efe:	005b      	lsls	r3, r3, #1
 8006f00:	4413      	add	r3, r2
 8006f02:	051b      	lsls	r3, r3, #20
 8006f04:	e018      	b.n	8006f38 <HAL_ADC_ConfigChannel+0x3c8>
 8006f06:	683b      	ldr	r3, [r7, #0]
 8006f08:	681b      	ldr	r3, [r3, #0]
 8006f0a:	637b      	str	r3, [r7, #52]	; 0x34
 8006f0c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006f0e:	fa93 f3a3 	rbit	r3, r3
 8006f12:	633b      	str	r3, [r7, #48]	; 0x30
 8006f14:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006f16:	63bb      	str	r3, [r7, #56]	; 0x38
 8006f18:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f1a:	2b00      	cmp	r3, #0
 8006f1c:	d101      	bne.n	8006f22 <HAL_ADC_ConfigChannel+0x3b2>
 8006f1e:	2320      	movs	r3, #32
 8006f20:	e003      	b.n	8006f2a <HAL_ADC_ConfigChannel+0x3ba>
 8006f22:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f24:	fab3 f383 	clz	r3, r3
 8006f28:	b2db      	uxtb	r3, r3
 8006f2a:	3301      	adds	r3, #1
 8006f2c:	f003 021f 	and.w	r2, r3, #31
 8006f30:	4613      	mov	r3, r2
 8006f32:	005b      	lsls	r3, r3, #1
 8006f34:	4413      	add	r3, r2
 8006f36:	051b      	lsls	r3, r3, #20
 8006f38:	430b      	orrs	r3, r1
 8006f3a:	e07e      	b.n	800703a <HAL_ADC_ConfigChannel+0x4ca>
 8006f3c:	683b      	ldr	r3, [r7, #0]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006f44:	2b00      	cmp	r3, #0
 8006f46:	d107      	bne.n	8006f58 <HAL_ADC_ConfigChannel+0x3e8>
 8006f48:	683b      	ldr	r3, [r7, #0]
 8006f4a:	681b      	ldr	r3, [r3, #0]
 8006f4c:	0e9b      	lsrs	r3, r3, #26
 8006f4e:	3301      	adds	r3, #1
 8006f50:	069b      	lsls	r3, r3, #26
 8006f52:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8006f56:	e015      	b.n	8006f84 <HAL_ADC_ConfigChannel+0x414>
 8006f58:	683b      	ldr	r3, [r7, #0]
 8006f5a:	681b      	ldr	r3, [r3, #0]
 8006f5c:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006f60:	fa93 f3a3 	rbit	r3, r3
 8006f64:	627b      	str	r3, [r7, #36]	; 0x24
 8006f66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f68:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f6a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f6c:	2b00      	cmp	r3, #0
 8006f6e:	d101      	bne.n	8006f74 <HAL_ADC_ConfigChannel+0x404>
 8006f70:	2320      	movs	r3, #32
 8006f72:	e003      	b.n	8006f7c <HAL_ADC_ConfigChannel+0x40c>
 8006f74:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f76:	fab3 f383 	clz	r3, r3
 8006f7a:	b2db      	uxtb	r3, r3
 8006f7c:	3301      	adds	r3, #1
 8006f7e:	069b      	lsls	r3, r3, #26
 8006f80:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8006f84:	683b      	ldr	r3, [r7, #0]
 8006f86:	681b      	ldr	r3, [r3, #0]
 8006f88:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006f8c:	2b00      	cmp	r3, #0
 8006f8e:	d109      	bne.n	8006fa4 <HAL_ADC_ConfigChannel+0x434>
 8006f90:	683b      	ldr	r3, [r7, #0]
 8006f92:	681b      	ldr	r3, [r3, #0]
 8006f94:	0e9b      	lsrs	r3, r3, #26
 8006f96:	3301      	adds	r3, #1
 8006f98:	f003 031f 	and.w	r3, r3, #31
 8006f9c:	2101      	movs	r1, #1
 8006f9e:	fa01 f303 	lsl.w	r3, r1, r3
 8006fa2:	e017      	b.n	8006fd4 <HAL_ADC_ConfigChannel+0x464>
 8006fa4:	683b      	ldr	r3, [r7, #0]
 8006fa6:	681b      	ldr	r3, [r3, #0]
 8006fa8:	61fb      	str	r3, [r7, #28]
 8006faa:	69fb      	ldr	r3, [r7, #28]
 8006fac:	fa93 f3a3 	rbit	r3, r3
 8006fb0:	61bb      	str	r3, [r7, #24]
 8006fb2:	69bb      	ldr	r3, [r7, #24]
 8006fb4:	623b      	str	r3, [r7, #32]
 8006fb6:	6a3b      	ldr	r3, [r7, #32]
 8006fb8:	2b00      	cmp	r3, #0
 8006fba:	d101      	bne.n	8006fc0 <HAL_ADC_ConfigChannel+0x450>
 8006fbc:	2320      	movs	r3, #32
 8006fbe:	e003      	b.n	8006fc8 <HAL_ADC_ConfigChannel+0x458>
 8006fc0:	6a3b      	ldr	r3, [r7, #32]
 8006fc2:	fab3 f383 	clz	r3, r3
 8006fc6:	b2db      	uxtb	r3, r3
 8006fc8:	3301      	adds	r3, #1
 8006fca:	f003 031f 	and.w	r3, r3, #31
 8006fce:	2101      	movs	r1, #1
 8006fd0:	fa01 f303 	lsl.w	r3, r1, r3
 8006fd4:	ea42 0103 	orr.w	r1, r2, r3
 8006fd8:	683b      	ldr	r3, [r7, #0]
 8006fda:	681b      	ldr	r3, [r3, #0]
 8006fdc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006fe0:	2b00      	cmp	r3, #0
 8006fe2:	d10d      	bne.n	8007000 <HAL_ADC_ConfigChannel+0x490>
 8006fe4:	683b      	ldr	r3, [r7, #0]
 8006fe6:	681b      	ldr	r3, [r3, #0]
 8006fe8:	0e9b      	lsrs	r3, r3, #26
 8006fea:	3301      	adds	r3, #1
 8006fec:	f003 021f 	and.w	r2, r3, #31
 8006ff0:	4613      	mov	r3, r2
 8006ff2:	005b      	lsls	r3, r3, #1
 8006ff4:	4413      	add	r3, r2
 8006ff6:	3b1e      	subs	r3, #30
 8006ff8:	051b      	lsls	r3, r3, #20
 8006ffa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8006ffe:	e01b      	b.n	8007038 <HAL_ADC_ConfigChannel+0x4c8>
 8007000:	683b      	ldr	r3, [r7, #0]
 8007002:	681b      	ldr	r3, [r3, #0]
 8007004:	613b      	str	r3, [r7, #16]
 8007006:	693b      	ldr	r3, [r7, #16]
 8007008:	fa93 f3a3 	rbit	r3, r3
 800700c:	60fb      	str	r3, [r7, #12]
 800700e:	68fb      	ldr	r3, [r7, #12]
 8007010:	617b      	str	r3, [r7, #20]
 8007012:	697b      	ldr	r3, [r7, #20]
 8007014:	2b00      	cmp	r3, #0
 8007016:	d101      	bne.n	800701c <HAL_ADC_ConfigChannel+0x4ac>
 8007018:	2320      	movs	r3, #32
 800701a:	e003      	b.n	8007024 <HAL_ADC_ConfigChannel+0x4b4>
 800701c:	697b      	ldr	r3, [r7, #20]
 800701e:	fab3 f383 	clz	r3, r3
 8007022:	b2db      	uxtb	r3, r3
 8007024:	3301      	adds	r3, #1
 8007026:	f003 021f 	and.w	r2, r3, #31
 800702a:	4613      	mov	r3, r2
 800702c:	005b      	lsls	r3, r3, #1
 800702e:	4413      	add	r3, r2
 8007030:	3b1e      	subs	r3, #30
 8007032:	051b      	lsls	r3, r3, #20
 8007034:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8007038:	430b      	orrs	r3, r1
 800703a:	683a      	ldr	r2, [r7, #0]
 800703c:	6892      	ldr	r2, [r2, #8]
 800703e:	4619      	mov	r1, r3
 8007040:	f7ff f9de 	bl	8006400 <LL_ADC_SetChannelSamplingTime>
 8007044:	683b      	ldr	r3, [r7, #0]
 8007046:	681b      	ldr	r3, [r3, #0]
 8007048:	2b00      	cmp	r3, #0
 800704a:	f280 80cf 	bge.w	80071ec <HAL_ADC_ConfigChannel+0x67c>
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	681b      	ldr	r3, [r3, #0]
 8007052:	4a06      	ldr	r2, [pc, #24]	; (800706c <HAL_ADC_ConfigChannel+0x4fc>)
 8007054:	4293      	cmp	r3, r2
 8007056:	d004      	beq.n	8007062 <HAL_ADC_ConfigChannel+0x4f2>
 8007058:	687b      	ldr	r3, [r7, #4]
 800705a:	681b      	ldr	r3, [r3, #0]
 800705c:	4a04      	ldr	r2, [pc, #16]	; (8007070 <HAL_ADC_ConfigChannel+0x500>)
 800705e:	4293      	cmp	r3, r2
 8007060:	d10a      	bne.n	8007078 <HAL_ADC_ConfigChannel+0x508>
 8007062:	4b04      	ldr	r3, [pc, #16]	; (8007074 <HAL_ADC_ConfigChannel+0x504>)
 8007064:	e009      	b.n	800707a <HAL_ADC_ConfigChannel+0x50a>
 8007066:	bf00      	nop
 8007068:	47ff0000 	.word	0x47ff0000
 800706c:	40022000 	.word	0x40022000
 8007070:	40022100 	.word	0x40022100
 8007074:	40022300 	.word	0x40022300
 8007078:	4b61      	ldr	r3, [pc, #388]	; (8007200 <HAL_ADC_ConfigChannel+0x690>)
 800707a:	4618      	mov	r0, r3
 800707c:	f7ff f90c 	bl	8006298 <LL_ADC_GetCommonPathInternalCh>
 8007080:	66f8      	str	r0, [r7, #108]	; 0x6c
 8007082:	687b      	ldr	r3, [r7, #4]
 8007084:	681b      	ldr	r3, [r3, #0]
 8007086:	4a5f      	ldr	r2, [pc, #380]	; (8007204 <HAL_ADC_ConfigChannel+0x694>)
 8007088:	4293      	cmp	r3, r2
 800708a:	d004      	beq.n	8007096 <HAL_ADC_ConfigChannel+0x526>
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	681b      	ldr	r3, [r3, #0]
 8007090:	4a5d      	ldr	r2, [pc, #372]	; (8007208 <HAL_ADC_ConfigChannel+0x698>)
 8007092:	4293      	cmp	r3, r2
 8007094:	d10e      	bne.n	80070b4 <HAL_ADC_ConfigChannel+0x544>
 8007096:	485b      	ldr	r0, [pc, #364]	; (8007204 <HAL_ADC_ConfigChannel+0x694>)
 8007098:	f7ff fa86 	bl	80065a8 <LL_ADC_IsEnabled>
 800709c:	4604      	mov	r4, r0
 800709e:	485a      	ldr	r0, [pc, #360]	; (8007208 <HAL_ADC_ConfigChannel+0x698>)
 80070a0:	f7ff fa82 	bl	80065a8 <LL_ADC_IsEnabled>
 80070a4:	4603      	mov	r3, r0
 80070a6:	4323      	orrs	r3, r4
 80070a8:	2b00      	cmp	r3, #0
 80070aa:	bf0c      	ite	eq
 80070ac:	2301      	moveq	r3, #1
 80070ae:	2300      	movne	r3, #0
 80070b0:	b2db      	uxtb	r3, r3
 80070b2:	e008      	b.n	80070c6 <HAL_ADC_ConfigChannel+0x556>
 80070b4:	4855      	ldr	r0, [pc, #340]	; (800720c <HAL_ADC_ConfigChannel+0x69c>)
 80070b6:	f7ff fa77 	bl	80065a8 <LL_ADC_IsEnabled>
 80070ba:	4603      	mov	r3, r0
 80070bc:	2b00      	cmp	r3, #0
 80070be:	bf0c      	ite	eq
 80070c0:	2301      	moveq	r3, #1
 80070c2:	2300      	movne	r3, #0
 80070c4:	b2db      	uxtb	r3, r3
 80070c6:	2b00      	cmp	r3, #0
 80070c8:	d07d      	beq.n	80071c6 <HAL_ADC_ConfigChannel+0x656>
 80070ca:	683b      	ldr	r3, [r7, #0]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	4a50      	ldr	r2, [pc, #320]	; (8007210 <HAL_ADC_ConfigChannel+0x6a0>)
 80070d0:	4293      	cmp	r3, r2
 80070d2:	d130      	bne.n	8007136 <HAL_ADC_ConfigChannel+0x5c6>
 80070d4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80070d6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80070da:	2b00      	cmp	r3, #0
 80070dc:	d12b      	bne.n	8007136 <HAL_ADC_ConfigChannel+0x5c6>
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	4a4a      	ldr	r2, [pc, #296]	; (800720c <HAL_ADC_ConfigChannel+0x69c>)
 80070e4:	4293      	cmp	r3, r2
 80070e6:	f040 8081 	bne.w	80071ec <HAL_ADC_ConfigChannel+0x67c>
 80070ea:	687b      	ldr	r3, [r7, #4]
 80070ec:	681b      	ldr	r3, [r3, #0]
 80070ee:	4a45      	ldr	r2, [pc, #276]	; (8007204 <HAL_ADC_ConfigChannel+0x694>)
 80070f0:	4293      	cmp	r3, r2
 80070f2:	d004      	beq.n	80070fe <HAL_ADC_ConfigChannel+0x58e>
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	4a43      	ldr	r2, [pc, #268]	; (8007208 <HAL_ADC_ConfigChannel+0x698>)
 80070fa:	4293      	cmp	r3, r2
 80070fc:	d101      	bne.n	8007102 <HAL_ADC_ConfigChannel+0x592>
 80070fe:	4a45      	ldr	r2, [pc, #276]	; (8007214 <HAL_ADC_ConfigChannel+0x6a4>)
 8007100:	e000      	b.n	8007104 <HAL_ADC_ConfigChannel+0x594>
 8007102:	4a3f      	ldr	r2, [pc, #252]	; (8007200 <HAL_ADC_ConfigChannel+0x690>)
 8007104:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007106:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800710a:	4619      	mov	r1, r3
 800710c:	4610      	mov	r0, r2
 800710e:	f7ff f8b0 	bl	8006272 <LL_ADC_SetCommonPathInternalCh>
 8007112:	4b41      	ldr	r3, [pc, #260]	; (8007218 <HAL_ADC_ConfigChannel+0x6a8>)
 8007114:	681b      	ldr	r3, [r3, #0]
 8007116:	099b      	lsrs	r3, r3, #6
 8007118:	4a40      	ldr	r2, [pc, #256]	; (800721c <HAL_ADC_ConfigChannel+0x6ac>)
 800711a:	fba2 2303 	umull	r2, r3, r2, r3
 800711e:	099b      	lsrs	r3, r3, #6
 8007120:	3301      	adds	r3, #1
 8007122:	005b      	lsls	r3, r3, #1
 8007124:	60bb      	str	r3, [r7, #8]
 8007126:	e002      	b.n	800712e <HAL_ADC_ConfigChannel+0x5be>
 8007128:	68bb      	ldr	r3, [r7, #8]
 800712a:	3b01      	subs	r3, #1
 800712c:	60bb      	str	r3, [r7, #8]
 800712e:	68bb      	ldr	r3, [r7, #8]
 8007130:	2b00      	cmp	r3, #0
 8007132:	d1f9      	bne.n	8007128 <HAL_ADC_ConfigChannel+0x5b8>
 8007134:	e05a      	b.n	80071ec <HAL_ADC_ConfigChannel+0x67c>
 8007136:	683b      	ldr	r3, [r7, #0]
 8007138:	681b      	ldr	r3, [r3, #0]
 800713a:	4a39      	ldr	r2, [pc, #228]	; (8007220 <HAL_ADC_ConfigChannel+0x6b0>)
 800713c:	4293      	cmp	r3, r2
 800713e:	d11e      	bne.n	800717e <HAL_ADC_ConfigChannel+0x60e>
 8007140:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007142:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007146:	2b00      	cmp	r3, #0
 8007148:	d119      	bne.n	800717e <HAL_ADC_ConfigChannel+0x60e>
 800714a:	687b      	ldr	r3, [r7, #4]
 800714c:	681b      	ldr	r3, [r3, #0]
 800714e:	4a2f      	ldr	r2, [pc, #188]	; (800720c <HAL_ADC_ConfigChannel+0x69c>)
 8007150:	4293      	cmp	r3, r2
 8007152:	d14b      	bne.n	80071ec <HAL_ADC_ConfigChannel+0x67c>
 8007154:	687b      	ldr	r3, [r7, #4]
 8007156:	681b      	ldr	r3, [r3, #0]
 8007158:	4a2a      	ldr	r2, [pc, #168]	; (8007204 <HAL_ADC_ConfigChannel+0x694>)
 800715a:	4293      	cmp	r3, r2
 800715c:	d004      	beq.n	8007168 <HAL_ADC_ConfigChannel+0x5f8>
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	681b      	ldr	r3, [r3, #0]
 8007162:	4a29      	ldr	r2, [pc, #164]	; (8007208 <HAL_ADC_ConfigChannel+0x698>)
 8007164:	4293      	cmp	r3, r2
 8007166:	d101      	bne.n	800716c <HAL_ADC_ConfigChannel+0x5fc>
 8007168:	4a2a      	ldr	r2, [pc, #168]	; (8007214 <HAL_ADC_ConfigChannel+0x6a4>)
 800716a:	e000      	b.n	800716e <HAL_ADC_ConfigChannel+0x5fe>
 800716c:	4a24      	ldr	r2, [pc, #144]	; (8007200 <HAL_ADC_ConfigChannel+0x690>)
 800716e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007170:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8007174:	4619      	mov	r1, r3
 8007176:	4610      	mov	r0, r2
 8007178:	f7ff f87b 	bl	8006272 <LL_ADC_SetCommonPathInternalCh>
 800717c:	e036      	b.n	80071ec <HAL_ADC_ConfigChannel+0x67c>
 800717e:	683b      	ldr	r3, [r7, #0]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	4a28      	ldr	r2, [pc, #160]	; (8007224 <HAL_ADC_ConfigChannel+0x6b4>)
 8007184:	4293      	cmp	r3, r2
 8007186:	d131      	bne.n	80071ec <HAL_ADC_ConfigChannel+0x67c>
 8007188:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800718a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800718e:	2b00      	cmp	r3, #0
 8007190:	d12c      	bne.n	80071ec <HAL_ADC_ConfigChannel+0x67c>
 8007192:	687b      	ldr	r3, [r7, #4]
 8007194:	681b      	ldr	r3, [r3, #0]
 8007196:	4a1d      	ldr	r2, [pc, #116]	; (800720c <HAL_ADC_ConfigChannel+0x69c>)
 8007198:	4293      	cmp	r3, r2
 800719a:	d127      	bne.n	80071ec <HAL_ADC_ConfigChannel+0x67c>
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	4a18      	ldr	r2, [pc, #96]	; (8007204 <HAL_ADC_ConfigChannel+0x694>)
 80071a2:	4293      	cmp	r3, r2
 80071a4:	d004      	beq.n	80071b0 <HAL_ADC_ConfigChannel+0x640>
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	681b      	ldr	r3, [r3, #0]
 80071aa:	4a17      	ldr	r2, [pc, #92]	; (8007208 <HAL_ADC_ConfigChannel+0x698>)
 80071ac:	4293      	cmp	r3, r2
 80071ae:	d101      	bne.n	80071b4 <HAL_ADC_ConfigChannel+0x644>
 80071b0:	4a18      	ldr	r2, [pc, #96]	; (8007214 <HAL_ADC_ConfigChannel+0x6a4>)
 80071b2:	e000      	b.n	80071b6 <HAL_ADC_ConfigChannel+0x646>
 80071b4:	4a12      	ldr	r2, [pc, #72]	; (8007200 <HAL_ADC_ConfigChannel+0x690>)
 80071b6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80071b8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80071bc:	4619      	mov	r1, r3
 80071be:	4610      	mov	r0, r2
 80071c0:	f7ff f857 	bl	8006272 <LL_ADC_SetCommonPathInternalCh>
 80071c4:	e012      	b.n	80071ec <HAL_ADC_ConfigChannel+0x67c>
 80071c6:	687b      	ldr	r3, [r7, #4]
 80071c8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80071ca:	f043 0220 	orr.w	r2, r3, #32
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	655a      	str	r2, [r3, #84]	; 0x54
 80071d2:	2301      	movs	r3, #1
 80071d4:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 80071d8:	e008      	b.n	80071ec <HAL_ADC_ConfigChannel+0x67c>
 80071da:	687b      	ldr	r3, [r7, #4]
 80071dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80071de:	f043 0220 	orr.w	r2, r3, #32
 80071e2:	687b      	ldr	r3, [r7, #4]
 80071e4:	655a      	str	r2, [r3, #84]	; 0x54
 80071e6:	2301      	movs	r3, #1
 80071e8:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	2200      	movs	r2, #0
 80071f0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80071f4:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 80071f8:	4618      	mov	r0, r3
 80071fa:	3784      	adds	r7, #132	; 0x84
 80071fc:	46bd      	mov	sp, r7
 80071fe:	bd90      	pop	{r4, r7, pc}
 8007200:	58026300 	.word	0x58026300
 8007204:	40022000 	.word	0x40022000
 8007208:	40022100 	.word	0x40022100
 800720c:	58026000 	.word	0x58026000
 8007210:	cb840000 	.word	0xcb840000
 8007214:	40022300 	.word	0x40022300
 8007218:	240000c4 	.word	0x240000c4
 800721c:	053e2d63 	.word	0x053e2d63
 8007220:	c7520000 	.word	0xc7520000
 8007224:	cfb80000 	.word	0xcfb80000

08007228 <ADC_Enable>:
 8007228:	b580      	push	{r7, lr}
 800722a:	b084      	sub	sp, #16
 800722c:	af00      	add	r7, sp, #0
 800722e:	6078      	str	r0, [r7, #4]
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	4618      	mov	r0, r3
 8007236:	f7ff f9b7 	bl	80065a8 <LL_ADC_IsEnabled>
 800723a:	4603      	mov	r3, r0
 800723c:	2b00      	cmp	r3, #0
 800723e:	d16e      	bne.n	800731e <ADC_Enable+0xf6>
 8007240:	687b      	ldr	r3, [r7, #4]
 8007242:	681b      	ldr	r3, [r3, #0]
 8007244:	689a      	ldr	r2, [r3, #8]
 8007246:	4b38      	ldr	r3, [pc, #224]	; (8007328 <ADC_Enable+0x100>)
 8007248:	4013      	ands	r3, r2
 800724a:	2b00      	cmp	r3, #0
 800724c:	d00d      	beq.n	800726a <ADC_Enable+0x42>
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007252:	f043 0210 	orr.w	r2, r3, #16
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	655a      	str	r2, [r3, #84]	; 0x54
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800725e:	f043 0201 	orr.w	r2, r3, #1
 8007262:	687b      	ldr	r3, [r7, #4]
 8007264:	659a      	str	r2, [r3, #88]	; 0x58
 8007266:	2301      	movs	r3, #1
 8007268:	e05a      	b.n	8007320 <ADC_Enable+0xf8>
 800726a:	687b      	ldr	r3, [r7, #4]
 800726c:	681b      	ldr	r3, [r3, #0]
 800726e:	4618      	mov	r0, r3
 8007270:	f7ff f972 	bl	8006558 <LL_ADC_Enable>
 8007274:	f7fe ffbc 	bl	80061f0 <HAL_GetTick>
 8007278:	60f8      	str	r0, [r7, #12]
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	681b      	ldr	r3, [r3, #0]
 800727e:	4a2b      	ldr	r2, [pc, #172]	; (800732c <ADC_Enable+0x104>)
 8007280:	4293      	cmp	r3, r2
 8007282:	d004      	beq.n	800728e <ADC_Enable+0x66>
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	681b      	ldr	r3, [r3, #0]
 8007288:	4a29      	ldr	r2, [pc, #164]	; (8007330 <ADC_Enable+0x108>)
 800728a:	4293      	cmp	r3, r2
 800728c:	d101      	bne.n	8007292 <ADC_Enable+0x6a>
 800728e:	4b29      	ldr	r3, [pc, #164]	; (8007334 <ADC_Enable+0x10c>)
 8007290:	e000      	b.n	8007294 <ADC_Enable+0x6c>
 8007292:	4b29      	ldr	r3, [pc, #164]	; (8007338 <ADC_Enable+0x110>)
 8007294:	4618      	mov	r0, r3
 8007296:	f7ff f903 	bl	80064a0 <LL_ADC_GetMultimode>
 800729a:	60b8      	str	r0, [r7, #8]
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	681b      	ldr	r3, [r3, #0]
 80072a0:	4a23      	ldr	r2, [pc, #140]	; (8007330 <ADC_Enable+0x108>)
 80072a2:	4293      	cmp	r3, r2
 80072a4:	d002      	beq.n	80072ac <ADC_Enable+0x84>
 80072a6:	687b      	ldr	r3, [r7, #4]
 80072a8:	681b      	ldr	r3, [r3, #0]
 80072aa:	e000      	b.n	80072ae <ADC_Enable+0x86>
 80072ac:	4b1f      	ldr	r3, [pc, #124]	; (800732c <ADC_Enable+0x104>)
 80072ae:	687a      	ldr	r2, [r7, #4]
 80072b0:	6812      	ldr	r2, [r2, #0]
 80072b2:	4293      	cmp	r3, r2
 80072b4:	d02c      	beq.n	8007310 <ADC_Enable+0xe8>
 80072b6:	68bb      	ldr	r3, [r7, #8]
 80072b8:	2b00      	cmp	r3, #0
 80072ba:	d130      	bne.n	800731e <ADC_Enable+0xf6>
 80072bc:	e028      	b.n	8007310 <ADC_Enable+0xe8>
 80072be:	687b      	ldr	r3, [r7, #4]
 80072c0:	681b      	ldr	r3, [r3, #0]
 80072c2:	4618      	mov	r0, r3
 80072c4:	f7ff f970 	bl	80065a8 <LL_ADC_IsEnabled>
 80072c8:	4603      	mov	r3, r0
 80072ca:	2b00      	cmp	r3, #0
 80072cc:	d104      	bne.n	80072d8 <ADC_Enable+0xb0>
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	4618      	mov	r0, r3
 80072d4:	f7ff f940 	bl	8006558 <LL_ADC_Enable>
 80072d8:	f7fe ff8a 	bl	80061f0 <HAL_GetTick>
 80072dc:	4602      	mov	r2, r0
 80072de:	68fb      	ldr	r3, [r7, #12]
 80072e0:	1ad3      	subs	r3, r2, r3
 80072e2:	2b02      	cmp	r3, #2
 80072e4:	d914      	bls.n	8007310 <ADC_Enable+0xe8>
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	681b      	ldr	r3, [r3, #0]
 80072ea:	681b      	ldr	r3, [r3, #0]
 80072ec:	f003 0301 	and.w	r3, r3, #1
 80072f0:	2b01      	cmp	r3, #1
 80072f2:	d00d      	beq.n	8007310 <ADC_Enable+0xe8>
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80072f8:	f043 0210 	orr.w	r2, r3, #16
 80072fc:	687b      	ldr	r3, [r7, #4]
 80072fe:	655a      	str	r2, [r3, #84]	; 0x54
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007304:	f043 0201 	orr.w	r2, r3, #1
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	659a      	str	r2, [r3, #88]	; 0x58
 800730c:	2301      	movs	r3, #1
 800730e:	e007      	b.n	8007320 <ADC_Enable+0xf8>
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	681b      	ldr	r3, [r3, #0]
 8007314:	681b      	ldr	r3, [r3, #0]
 8007316:	f003 0301 	and.w	r3, r3, #1
 800731a:	2b01      	cmp	r3, #1
 800731c:	d1cf      	bne.n	80072be <ADC_Enable+0x96>
 800731e:	2300      	movs	r3, #0
 8007320:	4618      	mov	r0, r3
 8007322:	3710      	adds	r7, #16
 8007324:	46bd      	mov	sp, r7
 8007326:	bd80      	pop	{r7, pc}
 8007328:	8000003f 	.word	0x8000003f
 800732c:	40022000 	.word	0x40022000
 8007330:	40022100 	.word	0x40022100
 8007334:	40022300 	.word	0x40022300
 8007338:	58026300 	.word	0x58026300

0800733c <ADC_Disable>:
 800733c:	b580      	push	{r7, lr}
 800733e:	b084      	sub	sp, #16
 8007340:	af00      	add	r7, sp, #0
 8007342:	6078      	str	r0, [r7, #4]
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	681b      	ldr	r3, [r3, #0]
 8007348:	4618      	mov	r0, r3
 800734a:	f7ff f940 	bl	80065ce <LL_ADC_IsDisableOngoing>
 800734e:	60f8      	str	r0, [r7, #12]
 8007350:	687b      	ldr	r3, [r7, #4]
 8007352:	681b      	ldr	r3, [r3, #0]
 8007354:	4618      	mov	r0, r3
 8007356:	f7ff f927 	bl	80065a8 <LL_ADC_IsEnabled>
 800735a:	4603      	mov	r3, r0
 800735c:	2b00      	cmp	r3, #0
 800735e:	d047      	beq.n	80073f0 <ADC_Disable+0xb4>
 8007360:	68fb      	ldr	r3, [r7, #12]
 8007362:	2b00      	cmp	r3, #0
 8007364:	d144      	bne.n	80073f0 <ADC_Disable+0xb4>
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	681b      	ldr	r3, [r3, #0]
 800736a:	689b      	ldr	r3, [r3, #8]
 800736c:	f003 030d 	and.w	r3, r3, #13
 8007370:	2b01      	cmp	r3, #1
 8007372:	d10c      	bne.n	800738e <ADC_Disable+0x52>
 8007374:	687b      	ldr	r3, [r7, #4]
 8007376:	681b      	ldr	r3, [r3, #0]
 8007378:	4618      	mov	r0, r3
 800737a:	f7ff f901 	bl	8006580 <LL_ADC_Disable>
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	681b      	ldr	r3, [r3, #0]
 8007382:	2203      	movs	r2, #3
 8007384:	601a      	str	r2, [r3, #0]
 8007386:	f7fe ff33 	bl	80061f0 <HAL_GetTick>
 800738a:	60b8      	str	r0, [r7, #8]
 800738c:	e029      	b.n	80073e2 <ADC_Disable+0xa6>
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007392:	f043 0210 	orr.w	r2, r3, #16
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	655a      	str	r2, [r3, #84]	; 0x54
 800739a:	687b      	ldr	r3, [r7, #4]
 800739c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800739e:	f043 0201 	orr.w	r2, r3, #1
 80073a2:	687b      	ldr	r3, [r7, #4]
 80073a4:	659a      	str	r2, [r3, #88]	; 0x58
 80073a6:	2301      	movs	r3, #1
 80073a8:	e023      	b.n	80073f2 <ADC_Disable+0xb6>
 80073aa:	f7fe ff21 	bl	80061f0 <HAL_GetTick>
 80073ae:	4602      	mov	r2, r0
 80073b0:	68bb      	ldr	r3, [r7, #8]
 80073b2:	1ad3      	subs	r3, r2, r3
 80073b4:	2b02      	cmp	r3, #2
 80073b6:	d914      	bls.n	80073e2 <ADC_Disable+0xa6>
 80073b8:	687b      	ldr	r3, [r7, #4]
 80073ba:	681b      	ldr	r3, [r3, #0]
 80073bc:	689b      	ldr	r3, [r3, #8]
 80073be:	f003 0301 	and.w	r3, r3, #1
 80073c2:	2b00      	cmp	r3, #0
 80073c4:	d00d      	beq.n	80073e2 <ADC_Disable+0xa6>
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80073ca:	f043 0210 	orr.w	r2, r3, #16
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	655a      	str	r2, [r3, #84]	; 0x54
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80073d6:	f043 0201 	orr.w	r2, r3, #1
 80073da:	687b      	ldr	r3, [r7, #4]
 80073dc:	659a      	str	r2, [r3, #88]	; 0x58
 80073de:	2301      	movs	r3, #1
 80073e0:	e007      	b.n	80073f2 <ADC_Disable+0xb6>
 80073e2:	687b      	ldr	r3, [r7, #4]
 80073e4:	681b      	ldr	r3, [r3, #0]
 80073e6:	689b      	ldr	r3, [r3, #8]
 80073e8:	f003 0301 	and.w	r3, r3, #1
 80073ec:	2b00      	cmp	r3, #0
 80073ee:	d1dc      	bne.n	80073aa <ADC_Disable+0x6e>
 80073f0:	2300      	movs	r3, #0
 80073f2:	4618      	mov	r0, r3
 80073f4:	3710      	adds	r7, #16
 80073f6:	46bd      	mov	sp, r7
 80073f8:	bd80      	pop	{r7, pc}

080073fa <ADC_DMAConvCplt>:
 80073fa:	b580      	push	{r7, lr}
 80073fc:	b084      	sub	sp, #16
 80073fe:	af00      	add	r7, sp, #0
 8007400:	6078      	str	r0, [r7, #4]
 8007402:	687b      	ldr	r3, [r7, #4]
 8007404:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007406:	60fb      	str	r3, [r7, #12]
 8007408:	68fb      	ldr	r3, [r7, #12]
 800740a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800740c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007410:	2b00      	cmp	r3, #0
 8007412:	d14b      	bne.n	80074ac <ADC_DMAConvCplt+0xb2>
 8007414:	68fb      	ldr	r3, [r7, #12]
 8007416:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007418:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800741c:	68fb      	ldr	r3, [r7, #12]
 800741e:	655a      	str	r2, [r3, #84]	; 0x54
 8007420:	68fb      	ldr	r3, [r7, #12]
 8007422:	681b      	ldr	r3, [r3, #0]
 8007424:	681b      	ldr	r3, [r3, #0]
 8007426:	f003 0308 	and.w	r3, r3, #8
 800742a:	2b00      	cmp	r3, #0
 800742c:	d021      	beq.n	8007472 <ADC_DMAConvCplt+0x78>
 800742e:	68fb      	ldr	r3, [r7, #12]
 8007430:	681b      	ldr	r3, [r3, #0]
 8007432:	4618      	mov	r0, r3
 8007434:	f7fe ff92 	bl	800635c <LL_ADC_REG_IsTriggerSourceSWStart>
 8007438:	4603      	mov	r3, r0
 800743a:	2b00      	cmp	r3, #0
 800743c:	d032      	beq.n	80074a4 <ADC_DMAConvCplt+0xaa>
 800743e:	68fb      	ldr	r3, [r7, #12]
 8007440:	681b      	ldr	r3, [r3, #0]
 8007442:	68db      	ldr	r3, [r3, #12]
 8007444:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007448:	2b00      	cmp	r3, #0
 800744a:	d12b      	bne.n	80074a4 <ADC_DMAConvCplt+0xaa>
 800744c:	68fb      	ldr	r3, [r7, #12]
 800744e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007450:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8007454:	68fb      	ldr	r3, [r7, #12]
 8007456:	655a      	str	r2, [r3, #84]	; 0x54
 8007458:	68fb      	ldr	r3, [r7, #12]
 800745a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800745c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007460:	2b00      	cmp	r3, #0
 8007462:	d11f      	bne.n	80074a4 <ADC_DMAConvCplt+0xaa>
 8007464:	68fb      	ldr	r3, [r7, #12]
 8007466:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007468:	f043 0201 	orr.w	r2, r3, #1
 800746c:	68fb      	ldr	r3, [r7, #12]
 800746e:	655a      	str	r2, [r3, #84]	; 0x54
 8007470:	e018      	b.n	80074a4 <ADC_DMAConvCplt+0xaa>
 8007472:	68fb      	ldr	r3, [r7, #12]
 8007474:	681b      	ldr	r3, [r3, #0]
 8007476:	68db      	ldr	r3, [r3, #12]
 8007478:	f003 0303 	and.w	r3, r3, #3
 800747c:	2b00      	cmp	r3, #0
 800747e:	d111      	bne.n	80074a4 <ADC_DMAConvCplt+0xaa>
 8007480:	68fb      	ldr	r3, [r7, #12]
 8007482:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007484:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8007488:	68fb      	ldr	r3, [r7, #12]
 800748a:	655a      	str	r2, [r3, #84]	; 0x54
 800748c:	68fb      	ldr	r3, [r7, #12]
 800748e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007490:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007494:	2b00      	cmp	r3, #0
 8007496:	d105      	bne.n	80074a4 <ADC_DMAConvCplt+0xaa>
 8007498:	68fb      	ldr	r3, [r7, #12]
 800749a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800749c:	f043 0201 	orr.w	r2, r3, #1
 80074a0:	68fb      	ldr	r3, [r7, #12]
 80074a2:	655a      	str	r2, [r3, #84]	; 0x54
 80074a4:	68f8      	ldr	r0, [r7, #12]
 80074a6:	f7ff fb45 	bl	8006b34 <HAL_ADC_ConvCpltCallback>
 80074aa:	e00e      	b.n	80074ca <ADC_DMAConvCplt+0xd0>
 80074ac:	68fb      	ldr	r3, [r7, #12]
 80074ae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80074b0:	f003 0310 	and.w	r3, r3, #16
 80074b4:	2b00      	cmp	r3, #0
 80074b6:	d003      	beq.n	80074c0 <ADC_DMAConvCplt+0xc6>
 80074b8:	68f8      	ldr	r0, [r7, #12]
 80074ba:	f7ff fb4f 	bl	8006b5c <HAL_ADC_ErrorCallback>
 80074be:	e004      	b.n	80074ca <ADC_DMAConvCplt+0xd0>
 80074c0:	68fb      	ldr	r3, [r7, #12]
 80074c2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80074c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80074c6:	6878      	ldr	r0, [r7, #4]
 80074c8:	4798      	blx	r3
 80074ca:	bf00      	nop
 80074cc:	3710      	adds	r7, #16
 80074ce:	46bd      	mov	sp, r7
 80074d0:	bd80      	pop	{r7, pc}

080074d2 <ADC_DMAHalfConvCplt>:
 80074d2:	b580      	push	{r7, lr}
 80074d4:	b084      	sub	sp, #16
 80074d6:	af00      	add	r7, sp, #0
 80074d8:	6078      	str	r0, [r7, #4]
 80074da:	687b      	ldr	r3, [r7, #4]
 80074dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074de:	60fb      	str	r3, [r7, #12]
 80074e0:	68f8      	ldr	r0, [r7, #12]
 80074e2:	f7ff fb31 	bl	8006b48 <HAL_ADC_ConvHalfCpltCallback>
 80074e6:	bf00      	nop
 80074e8:	3710      	adds	r7, #16
 80074ea:	46bd      	mov	sp, r7
 80074ec:	bd80      	pop	{r7, pc}

080074ee <ADC_DMAError>:
 80074ee:	b580      	push	{r7, lr}
 80074f0:	b084      	sub	sp, #16
 80074f2:	af00      	add	r7, sp, #0
 80074f4:	6078      	str	r0, [r7, #4]
 80074f6:	687b      	ldr	r3, [r7, #4]
 80074f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074fa:	60fb      	str	r3, [r7, #12]
 80074fc:	68fb      	ldr	r3, [r7, #12]
 80074fe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007500:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8007504:	68fb      	ldr	r3, [r7, #12]
 8007506:	655a      	str	r2, [r3, #84]	; 0x54
 8007508:	68fb      	ldr	r3, [r7, #12]
 800750a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800750c:	f043 0204 	orr.w	r2, r3, #4
 8007510:	68fb      	ldr	r3, [r7, #12]
 8007512:	659a      	str	r2, [r3, #88]	; 0x58
 8007514:	68f8      	ldr	r0, [r7, #12]
 8007516:	f7ff fb21 	bl	8006b5c <HAL_ADC_ErrorCallback>
 800751a:	bf00      	nop
 800751c:	3710      	adds	r7, #16
 800751e:	46bd      	mov	sp, r7
 8007520:	bd80      	pop	{r7, pc}
	...

08007524 <ADC_ConfigureBoostMode>:
 8007524:	b580      	push	{r7, lr}
 8007526:	b084      	sub	sp, #16
 8007528:	af00      	add	r7, sp, #0
 800752a:	6078      	str	r0, [r7, #4]
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	681b      	ldr	r3, [r3, #0]
 8007530:	4a7a      	ldr	r2, [pc, #488]	; (800771c <ADC_ConfigureBoostMode+0x1f8>)
 8007532:	4293      	cmp	r3, r2
 8007534:	d004      	beq.n	8007540 <ADC_ConfigureBoostMode+0x1c>
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	681b      	ldr	r3, [r3, #0]
 800753a:	4a79      	ldr	r2, [pc, #484]	; (8007720 <ADC_ConfigureBoostMode+0x1fc>)
 800753c:	4293      	cmp	r3, r2
 800753e:	d109      	bne.n	8007554 <ADC_ConfigureBoostMode+0x30>
 8007540:	4b78      	ldr	r3, [pc, #480]	; (8007724 <ADC_ConfigureBoostMode+0x200>)
 8007542:	689b      	ldr	r3, [r3, #8]
 8007544:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007548:	2b00      	cmp	r3, #0
 800754a:	bf14      	ite	ne
 800754c:	2301      	movne	r3, #1
 800754e:	2300      	moveq	r3, #0
 8007550:	b2db      	uxtb	r3, r3
 8007552:	e008      	b.n	8007566 <ADC_ConfigureBoostMode+0x42>
 8007554:	4b74      	ldr	r3, [pc, #464]	; (8007728 <ADC_ConfigureBoostMode+0x204>)
 8007556:	689b      	ldr	r3, [r3, #8]
 8007558:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800755c:	2b00      	cmp	r3, #0
 800755e:	bf14      	ite	ne
 8007560:	2301      	movne	r3, #1
 8007562:	2300      	moveq	r3, #0
 8007564:	b2db      	uxtb	r3, r3
 8007566:	2b00      	cmp	r3, #0
 8007568:	d01c      	beq.n	80075a4 <ADC_ConfigureBoostMode+0x80>
 800756a:	f007 fe3f 	bl	800f1ec <HAL_RCC_GetHCLKFreq>
 800756e:	60f8      	str	r0, [r7, #12]
 8007570:	687b      	ldr	r3, [r7, #4]
 8007572:	685b      	ldr	r3, [r3, #4]
 8007574:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8007578:	d010      	beq.n	800759c <ADC_ConfigureBoostMode+0x78>
 800757a:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800757e:	d873      	bhi.n	8007668 <ADC_ConfigureBoostMode+0x144>
 8007580:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007584:	d002      	beq.n	800758c <ADC_ConfigureBoostMode+0x68>
 8007586:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800758a:	d16d      	bne.n	8007668 <ADC_ConfigureBoostMode+0x144>
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	685b      	ldr	r3, [r3, #4]
 8007590:	0c1b      	lsrs	r3, r3, #16
 8007592:	68fa      	ldr	r2, [r7, #12]
 8007594:	fbb2 f3f3 	udiv	r3, r2, r3
 8007598:	60fb      	str	r3, [r7, #12]
 800759a:	e068      	b.n	800766e <ADC_ConfigureBoostMode+0x14a>
 800759c:	68fb      	ldr	r3, [r7, #12]
 800759e:	089b      	lsrs	r3, r3, #2
 80075a0:	60fb      	str	r3, [r7, #12]
 80075a2:	e064      	b.n	800766e <ADC_ConfigureBoostMode+0x14a>
 80075a4:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 80075a8:	f04f 0100 	mov.w	r1, #0
 80075ac:	f009 f8c6 	bl	801073c <HAL_RCCEx_GetPeriphCLKFreq>
 80075b0:	60f8      	str	r0, [r7, #12]
 80075b2:	687b      	ldr	r3, [r7, #4]
 80075b4:	685b      	ldr	r3, [r3, #4]
 80075b6:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 80075ba:	d051      	beq.n	8007660 <ADC_ConfigureBoostMode+0x13c>
 80075bc:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 80075c0:	d854      	bhi.n	800766c <ADC_ConfigureBoostMode+0x148>
 80075c2:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 80075c6:	d047      	beq.n	8007658 <ADC_ConfigureBoostMode+0x134>
 80075c8:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 80075cc:	d84e      	bhi.n	800766c <ADC_ConfigureBoostMode+0x148>
 80075ce:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 80075d2:	d03d      	beq.n	8007650 <ADC_ConfigureBoostMode+0x12c>
 80075d4:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 80075d8:	d848      	bhi.n	800766c <ADC_ConfigureBoostMode+0x148>
 80075da:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80075de:	d033      	beq.n	8007648 <ADC_ConfigureBoostMode+0x124>
 80075e0:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80075e4:	d842      	bhi.n	800766c <ADC_ConfigureBoostMode+0x148>
 80075e6:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 80075ea:	d029      	beq.n	8007640 <ADC_ConfigureBoostMode+0x11c>
 80075ec:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 80075f0:	d83c      	bhi.n	800766c <ADC_ConfigureBoostMode+0x148>
 80075f2:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 80075f6:	d01a      	beq.n	800762e <ADC_ConfigureBoostMode+0x10a>
 80075f8:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 80075fc:	d836      	bhi.n	800766c <ADC_ConfigureBoostMode+0x148>
 80075fe:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8007602:	d014      	beq.n	800762e <ADC_ConfigureBoostMode+0x10a>
 8007604:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8007608:	d830      	bhi.n	800766c <ADC_ConfigureBoostMode+0x148>
 800760a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800760e:	d00e      	beq.n	800762e <ADC_ConfigureBoostMode+0x10a>
 8007610:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007614:	d82a      	bhi.n	800766c <ADC_ConfigureBoostMode+0x148>
 8007616:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 800761a:	d008      	beq.n	800762e <ADC_ConfigureBoostMode+0x10a>
 800761c:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8007620:	d824      	bhi.n	800766c <ADC_ConfigureBoostMode+0x148>
 8007622:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8007626:	d002      	beq.n	800762e <ADC_ConfigureBoostMode+0x10a>
 8007628:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 800762c:	d11e      	bne.n	800766c <ADC_ConfigureBoostMode+0x148>
 800762e:	687b      	ldr	r3, [r7, #4]
 8007630:	685b      	ldr	r3, [r3, #4]
 8007632:	0c9b      	lsrs	r3, r3, #18
 8007634:	005b      	lsls	r3, r3, #1
 8007636:	68fa      	ldr	r2, [r7, #12]
 8007638:	fbb2 f3f3 	udiv	r3, r2, r3
 800763c:	60fb      	str	r3, [r7, #12]
 800763e:	e016      	b.n	800766e <ADC_ConfigureBoostMode+0x14a>
 8007640:	68fb      	ldr	r3, [r7, #12]
 8007642:	091b      	lsrs	r3, r3, #4
 8007644:	60fb      	str	r3, [r7, #12]
 8007646:	e012      	b.n	800766e <ADC_ConfigureBoostMode+0x14a>
 8007648:	68fb      	ldr	r3, [r7, #12]
 800764a:	095b      	lsrs	r3, r3, #5
 800764c:	60fb      	str	r3, [r7, #12]
 800764e:	e00e      	b.n	800766e <ADC_ConfigureBoostMode+0x14a>
 8007650:	68fb      	ldr	r3, [r7, #12]
 8007652:	099b      	lsrs	r3, r3, #6
 8007654:	60fb      	str	r3, [r7, #12]
 8007656:	e00a      	b.n	800766e <ADC_ConfigureBoostMode+0x14a>
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	09db      	lsrs	r3, r3, #7
 800765c:	60fb      	str	r3, [r7, #12]
 800765e:	e006      	b.n	800766e <ADC_ConfigureBoostMode+0x14a>
 8007660:	68fb      	ldr	r3, [r7, #12]
 8007662:	0a1b      	lsrs	r3, r3, #8
 8007664:	60fb      	str	r3, [r7, #12]
 8007666:	e002      	b.n	800766e <ADC_ConfigureBoostMode+0x14a>
 8007668:	bf00      	nop
 800766a:	e000      	b.n	800766e <ADC_ConfigureBoostMode+0x14a>
 800766c:	bf00      	nop
 800766e:	f7fe fdcb 	bl	8006208 <HAL_GetREVID>
 8007672:	4603      	mov	r3, r0
 8007674:	f241 0203 	movw	r2, #4099	; 0x1003
 8007678:	4293      	cmp	r3, r2
 800767a:	d815      	bhi.n	80076a8 <ADC_ConfigureBoostMode+0x184>
 800767c:	68fb      	ldr	r3, [r7, #12]
 800767e:	4a2b      	ldr	r2, [pc, #172]	; (800772c <ADC_ConfigureBoostMode+0x208>)
 8007680:	4293      	cmp	r3, r2
 8007682:	d908      	bls.n	8007696 <ADC_ConfigureBoostMode+0x172>
 8007684:	687b      	ldr	r3, [r7, #4]
 8007686:	681b      	ldr	r3, [r3, #0]
 8007688:	689a      	ldr	r2, [r3, #8]
 800768a:	687b      	ldr	r3, [r7, #4]
 800768c:	681b      	ldr	r3, [r3, #0]
 800768e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007692:	609a      	str	r2, [r3, #8]
 8007694:	e03e      	b.n	8007714 <ADC_ConfigureBoostMode+0x1f0>
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	681b      	ldr	r3, [r3, #0]
 800769a:	689a      	ldr	r2, [r3, #8]
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	681b      	ldr	r3, [r3, #0]
 80076a0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80076a4:	609a      	str	r2, [r3, #8]
 80076a6:	e035      	b.n	8007714 <ADC_ConfigureBoostMode+0x1f0>
 80076a8:	68fb      	ldr	r3, [r7, #12]
 80076aa:	085b      	lsrs	r3, r3, #1
 80076ac:	60fb      	str	r3, [r7, #12]
 80076ae:	68fb      	ldr	r3, [r7, #12]
 80076b0:	4a1f      	ldr	r2, [pc, #124]	; (8007730 <ADC_ConfigureBoostMode+0x20c>)
 80076b2:	4293      	cmp	r3, r2
 80076b4:	d808      	bhi.n	80076c8 <ADC_ConfigureBoostMode+0x1a4>
 80076b6:	687b      	ldr	r3, [r7, #4]
 80076b8:	681b      	ldr	r3, [r3, #0]
 80076ba:	689a      	ldr	r2, [r3, #8]
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	681b      	ldr	r3, [r3, #0]
 80076c0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80076c4:	609a      	str	r2, [r3, #8]
 80076c6:	e025      	b.n	8007714 <ADC_ConfigureBoostMode+0x1f0>
 80076c8:	68fb      	ldr	r3, [r7, #12]
 80076ca:	4a1a      	ldr	r2, [pc, #104]	; (8007734 <ADC_ConfigureBoostMode+0x210>)
 80076cc:	4293      	cmp	r3, r2
 80076ce:	d80a      	bhi.n	80076e6 <ADC_ConfigureBoostMode+0x1c2>
 80076d0:	687b      	ldr	r3, [r7, #4]
 80076d2:	681b      	ldr	r3, [r3, #0]
 80076d4:	689b      	ldr	r3, [r3, #8]
 80076d6:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	681b      	ldr	r3, [r3, #0]
 80076de:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80076e2:	609a      	str	r2, [r3, #8]
 80076e4:	e016      	b.n	8007714 <ADC_ConfigureBoostMode+0x1f0>
 80076e6:	68fb      	ldr	r3, [r7, #12]
 80076e8:	4a13      	ldr	r2, [pc, #76]	; (8007738 <ADC_ConfigureBoostMode+0x214>)
 80076ea:	4293      	cmp	r3, r2
 80076ec:	d80a      	bhi.n	8007704 <ADC_ConfigureBoostMode+0x1e0>
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	681b      	ldr	r3, [r3, #0]
 80076f2:	689b      	ldr	r3, [r3, #8]
 80076f4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80076f8:	687b      	ldr	r3, [r7, #4]
 80076fa:	681b      	ldr	r3, [r3, #0]
 80076fc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007700:	609a      	str	r2, [r3, #8]
 8007702:	e007      	b.n	8007714 <ADC_ConfigureBoostMode+0x1f0>
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	689a      	ldr	r2, [r3, #8]
 800770a:	687b      	ldr	r3, [r7, #4]
 800770c:	681b      	ldr	r3, [r3, #0]
 800770e:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8007712:	609a      	str	r2, [r3, #8]
 8007714:	bf00      	nop
 8007716:	3710      	adds	r7, #16
 8007718:	46bd      	mov	sp, r7
 800771a:	bd80      	pop	{r7, pc}
 800771c:	40022000 	.word	0x40022000
 8007720:	40022100 	.word	0x40022100
 8007724:	40022300 	.word	0x40022300
 8007728:	58026300 	.word	0x58026300
 800772c:	01312d00 	.word	0x01312d00
 8007730:	005f5e10 	.word	0x005f5e10
 8007734:	00bebc20 	.word	0x00bebc20
 8007738:	017d7840 	.word	0x017d7840

0800773c <LL_ADC_IsEnabled>:
 800773c:	b480      	push	{r7}
 800773e:	b083      	sub	sp, #12
 8007740:	af00      	add	r7, sp, #0
 8007742:	6078      	str	r0, [r7, #4]
 8007744:	687b      	ldr	r3, [r7, #4]
 8007746:	689b      	ldr	r3, [r3, #8]
 8007748:	f003 0301 	and.w	r3, r3, #1
 800774c:	2b01      	cmp	r3, #1
 800774e:	d101      	bne.n	8007754 <LL_ADC_IsEnabled+0x18>
 8007750:	2301      	movs	r3, #1
 8007752:	e000      	b.n	8007756 <LL_ADC_IsEnabled+0x1a>
 8007754:	2300      	movs	r3, #0
 8007756:	4618      	mov	r0, r3
 8007758:	370c      	adds	r7, #12
 800775a:	46bd      	mov	sp, r7
 800775c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007760:	4770      	bx	lr
	...

08007764 <LL_ADC_StartCalibration>:
 8007764:	b480      	push	{r7}
 8007766:	b085      	sub	sp, #20
 8007768:	af00      	add	r7, sp, #0
 800776a:	60f8      	str	r0, [r7, #12]
 800776c:	60b9      	str	r1, [r7, #8]
 800776e:	607a      	str	r2, [r7, #4]
 8007770:	68fb      	ldr	r3, [r7, #12]
 8007772:	689a      	ldr	r2, [r3, #8]
 8007774:	4b09      	ldr	r3, [pc, #36]	; (800779c <LL_ADC_StartCalibration+0x38>)
 8007776:	4013      	ands	r3, r2
 8007778:	68ba      	ldr	r2, [r7, #8]
 800777a:	f402 3180 	and.w	r1, r2, #65536	; 0x10000
 800777e:	687a      	ldr	r2, [r7, #4]
 8007780:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 8007784:	430a      	orrs	r2, r1
 8007786:	4313      	orrs	r3, r2
 8007788:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 800778c:	68fb      	ldr	r3, [r7, #12]
 800778e:	609a      	str	r2, [r3, #8]
 8007790:	bf00      	nop
 8007792:	3714      	adds	r7, #20
 8007794:	46bd      	mov	sp, r7
 8007796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800779a:	4770      	bx	lr
 800779c:	3ffeffc0 	.word	0x3ffeffc0

080077a0 <LL_ADC_IsCalibrationOnGoing>:
 80077a0:	b480      	push	{r7}
 80077a2:	b083      	sub	sp, #12
 80077a4:	af00      	add	r7, sp, #0
 80077a6:	6078      	str	r0, [r7, #4]
 80077a8:	687b      	ldr	r3, [r7, #4]
 80077aa:	689b      	ldr	r3, [r3, #8]
 80077ac:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80077b0:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80077b4:	d101      	bne.n	80077ba <LL_ADC_IsCalibrationOnGoing+0x1a>
 80077b6:	2301      	movs	r3, #1
 80077b8:	e000      	b.n	80077bc <LL_ADC_IsCalibrationOnGoing+0x1c>
 80077ba:	2300      	movs	r3, #0
 80077bc:	4618      	mov	r0, r3
 80077be:	370c      	adds	r7, #12
 80077c0:	46bd      	mov	sp, r7
 80077c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077c6:	4770      	bx	lr

080077c8 <LL_ADC_REG_IsConversionOngoing>:
 80077c8:	b480      	push	{r7}
 80077ca:	b083      	sub	sp, #12
 80077cc:	af00      	add	r7, sp, #0
 80077ce:	6078      	str	r0, [r7, #4]
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	689b      	ldr	r3, [r3, #8]
 80077d4:	f003 0304 	and.w	r3, r3, #4
 80077d8:	2b04      	cmp	r3, #4
 80077da:	d101      	bne.n	80077e0 <LL_ADC_REG_IsConversionOngoing+0x18>
 80077dc:	2301      	movs	r3, #1
 80077de:	e000      	b.n	80077e2 <LL_ADC_REG_IsConversionOngoing+0x1a>
 80077e0:	2300      	movs	r3, #0
 80077e2:	4618      	mov	r0, r3
 80077e4:	370c      	adds	r7, #12
 80077e6:	46bd      	mov	sp, r7
 80077e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077ec:	4770      	bx	lr
	...

080077f0 <HAL_ADCEx_Calibration_Start>:
 80077f0:	b580      	push	{r7, lr}
 80077f2:	b086      	sub	sp, #24
 80077f4:	af00      	add	r7, sp, #0
 80077f6:	60f8      	str	r0, [r7, #12]
 80077f8:	60b9      	str	r1, [r7, #8]
 80077fa:	607a      	str	r2, [r7, #4]
 80077fc:	2300      	movs	r3, #0
 80077fe:	613b      	str	r3, [r7, #16]
 8007800:	68fb      	ldr	r3, [r7, #12]
 8007802:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007806:	2b01      	cmp	r3, #1
 8007808:	d101      	bne.n	800780e <HAL_ADCEx_Calibration_Start+0x1e>
 800780a:	2302      	movs	r3, #2
 800780c:	e04c      	b.n	80078a8 <HAL_ADCEx_Calibration_Start+0xb8>
 800780e:	68fb      	ldr	r3, [r7, #12]
 8007810:	2201      	movs	r2, #1
 8007812:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007816:	68f8      	ldr	r0, [r7, #12]
 8007818:	f7ff fd90 	bl	800733c <ADC_Disable>
 800781c:	4603      	mov	r3, r0
 800781e:	75fb      	strb	r3, [r7, #23]
 8007820:	7dfb      	ldrb	r3, [r7, #23]
 8007822:	2b00      	cmp	r3, #0
 8007824:	d135      	bne.n	8007892 <HAL_ADCEx_Calibration_Start+0xa2>
 8007826:	68fb      	ldr	r3, [r7, #12]
 8007828:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800782a:	4b21      	ldr	r3, [pc, #132]	; (80078b0 <HAL_ADCEx_Calibration_Start+0xc0>)
 800782c:	4013      	ands	r3, r2
 800782e:	f043 0202 	orr.w	r2, r3, #2
 8007832:	68fb      	ldr	r3, [r7, #12]
 8007834:	655a      	str	r2, [r3, #84]	; 0x54
 8007836:	68fb      	ldr	r3, [r7, #12]
 8007838:	681b      	ldr	r3, [r3, #0]
 800783a:	687a      	ldr	r2, [r7, #4]
 800783c:	68b9      	ldr	r1, [r7, #8]
 800783e:	4618      	mov	r0, r3
 8007840:	f7ff ff90 	bl	8007764 <LL_ADC_StartCalibration>
 8007844:	e014      	b.n	8007870 <HAL_ADCEx_Calibration_Start+0x80>
 8007846:	693b      	ldr	r3, [r7, #16]
 8007848:	3301      	adds	r3, #1
 800784a:	613b      	str	r3, [r7, #16]
 800784c:	693b      	ldr	r3, [r7, #16]
 800784e:	4a19      	ldr	r2, [pc, #100]	; (80078b4 <HAL_ADCEx_Calibration_Start+0xc4>)
 8007850:	4293      	cmp	r3, r2
 8007852:	d30d      	bcc.n	8007870 <HAL_ADCEx_Calibration_Start+0x80>
 8007854:	68fb      	ldr	r3, [r7, #12]
 8007856:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007858:	f023 0312 	bic.w	r3, r3, #18
 800785c:	f043 0210 	orr.w	r2, r3, #16
 8007860:	68fb      	ldr	r3, [r7, #12]
 8007862:	655a      	str	r2, [r3, #84]	; 0x54
 8007864:	68fb      	ldr	r3, [r7, #12]
 8007866:	2200      	movs	r2, #0
 8007868:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800786c:	2301      	movs	r3, #1
 800786e:	e01b      	b.n	80078a8 <HAL_ADCEx_Calibration_Start+0xb8>
 8007870:	68fb      	ldr	r3, [r7, #12]
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	4618      	mov	r0, r3
 8007876:	f7ff ff93 	bl	80077a0 <LL_ADC_IsCalibrationOnGoing>
 800787a:	4603      	mov	r3, r0
 800787c:	2b00      	cmp	r3, #0
 800787e:	d1e2      	bne.n	8007846 <HAL_ADCEx_Calibration_Start+0x56>
 8007880:	68fb      	ldr	r3, [r7, #12]
 8007882:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007884:	f023 0303 	bic.w	r3, r3, #3
 8007888:	f043 0201 	orr.w	r2, r3, #1
 800788c:	68fb      	ldr	r3, [r7, #12]
 800788e:	655a      	str	r2, [r3, #84]	; 0x54
 8007890:	e005      	b.n	800789e <HAL_ADCEx_Calibration_Start+0xae>
 8007892:	68fb      	ldr	r3, [r7, #12]
 8007894:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007896:	f043 0210 	orr.w	r2, r3, #16
 800789a:	68fb      	ldr	r3, [r7, #12]
 800789c:	655a      	str	r2, [r3, #84]	; 0x54
 800789e:	68fb      	ldr	r3, [r7, #12]
 80078a0:	2200      	movs	r2, #0
 80078a2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80078a6:	7dfb      	ldrb	r3, [r7, #23]
 80078a8:	4618      	mov	r0, r3
 80078aa:	3718      	adds	r7, #24
 80078ac:	46bd      	mov	sp, r7
 80078ae:	bd80      	pop	{r7, pc}
 80078b0:	ffffeefd 	.word	0xffffeefd
 80078b4:	25c3f800 	.word	0x25c3f800

080078b8 <HAL_ADCEx_MultiModeConfigChannel>:
 80078b8:	b590      	push	{r4, r7, lr}
 80078ba:	b09f      	sub	sp, #124	; 0x7c
 80078bc:	af00      	add	r7, sp, #0
 80078be:	6078      	str	r0, [r7, #4]
 80078c0:	6039      	str	r1, [r7, #0]
 80078c2:	2300      	movs	r3, #0
 80078c4:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80078ce:	2b01      	cmp	r3, #1
 80078d0:	d101      	bne.n	80078d6 <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 80078d2:	2302      	movs	r3, #2
 80078d4:	e0be      	b.n	8007a54 <HAL_ADCEx_MultiModeConfigChannel+0x19c>
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	2201      	movs	r2, #1
 80078da:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80078de:	2300      	movs	r3, #0
 80078e0:	65fb      	str	r3, [r7, #92]	; 0x5c
 80078e2:	2300      	movs	r3, #0
 80078e4:	663b      	str	r3, [r7, #96]	; 0x60
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	681b      	ldr	r3, [r3, #0]
 80078ea:	4a5c      	ldr	r2, [pc, #368]	; (8007a5c <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 80078ec:	4293      	cmp	r3, r2
 80078ee:	d102      	bne.n	80078f6 <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 80078f0:	4b5b      	ldr	r3, [pc, #364]	; (8007a60 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 80078f2:	60bb      	str	r3, [r7, #8]
 80078f4:	e001      	b.n	80078fa <HAL_ADCEx_MultiModeConfigChannel+0x42>
 80078f6:	2300      	movs	r3, #0
 80078f8:	60bb      	str	r3, [r7, #8]
 80078fa:	68bb      	ldr	r3, [r7, #8]
 80078fc:	2b00      	cmp	r3, #0
 80078fe:	d10b      	bne.n	8007918 <HAL_ADCEx_MultiModeConfigChannel+0x60>
 8007900:	687b      	ldr	r3, [r7, #4]
 8007902:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007904:	f043 0220 	orr.w	r2, r3, #32
 8007908:	687b      	ldr	r3, [r7, #4]
 800790a:	655a      	str	r2, [r3, #84]	; 0x54
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	2200      	movs	r2, #0
 8007910:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007914:	2301      	movs	r3, #1
 8007916:	e09d      	b.n	8007a54 <HAL_ADCEx_MultiModeConfigChannel+0x19c>
 8007918:	68bb      	ldr	r3, [r7, #8]
 800791a:	4618      	mov	r0, r3
 800791c:	f7ff ff54 	bl	80077c8 <LL_ADC_REG_IsConversionOngoing>
 8007920:	6738      	str	r0, [r7, #112]	; 0x70
 8007922:	687b      	ldr	r3, [r7, #4]
 8007924:	681b      	ldr	r3, [r3, #0]
 8007926:	4618      	mov	r0, r3
 8007928:	f7ff ff4e 	bl	80077c8 <LL_ADC_REG_IsConversionOngoing>
 800792c:	4603      	mov	r3, r0
 800792e:	2b00      	cmp	r3, #0
 8007930:	d17f      	bne.n	8007a32 <HAL_ADCEx_MultiModeConfigChannel+0x17a>
 8007932:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8007934:	2b00      	cmp	r3, #0
 8007936:	d17c      	bne.n	8007a32 <HAL_ADCEx_MultiModeConfigChannel+0x17a>
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	681b      	ldr	r3, [r3, #0]
 800793c:	4a47      	ldr	r2, [pc, #284]	; (8007a5c <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 800793e:	4293      	cmp	r3, r2
 8007940:	d004      	beq.n	800794c <HAL_ADCEx_MultiModeConfigChannel+0x94>
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	4a46      	ldr	r2, [pc, #280]	; (8007a60 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 8007948:	4293      	cmp	r3, r2
 800794a:	d101      	bne.n	8007950 <HAL_ADCEx_MultiModeConfigChannel+0x98>
 800794c:	4b45      	ldr	r3, [pc, #276]	; (8007a64 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 800794e:	e000      	b.n	8007952 <HAL_ADCEx_MultiModeConfigChannel+0x9a>
 8007950:	4b45      	ldr	r3, [pc, #276]	; (8007a68 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8007952:	66fb      	str	r3, [r7, #108]	; 0x6c
 8007954:	683b      	ldr	r3, [r7, #0]
 8007956:	681b      	ldr	r3, [r3, #0]
 8007958:	2b00      	cmp	r3, #0
 800795a:	d039      	beq.n	80079d0 <HAL_ADCEx_MultiModeConfigChannel+0x118>
 800795c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800795e:	689b      	ldr	r3, [r3, #8]
 8007960:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8007964:	683b      	ldr	r3, [r7, #0]
 8007966:	685b      	ldr	r3, [r3, #4]
 8007968:	431a      	orrs	r2, r3
 800796a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800796c:	609a      	str	r2, [r3, #8]
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	4a3a      	ldr	r2, [pc, #232]	; (8007a5c <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 8007974:	4293      	cmp	r3, r2
 8007976:	d004      	beq.n	8007982 <HAL_ADCEx_MultiModeConfigChannel+0xca>
 8007978:	687b      	ldr	r3, [r7, #4]
 800797a:	681b      	ldr	r3, [r3, #0]
 800797c:	4a38      	ldr	r2, [pc, #224]	; (8007a60 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 800797e:	4293      	cmp	r3, r2
 8007980:	d10e      	bne.n	80079a0 <HAL_ADCEx_MultiModeConfigChannel+0xe8>
 8007982:	4836      	ldr	r0, [pc, #216]	; (8007a5c <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 8007984:	f7ff feda 	bl	800773c <LL_ADC_IsEnabled>
 8007988:	4604      	mov	r4, r0
 800798a:	4835      	ldr	r0, [pc, #212]	; (8007a60 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 800798c:	f7ff fed6 	bl	800773c <LL_ADC_IsEnabled>
 8007990:	4603      	mov	r3, r0
 8007992:	4323      	orrs	r3, r4
 8007994:	2b00      	cmp	r3, #0
 8007996:	bf0c      	ite	eq
 8007998:	2301      	moveq	r3, #1
 800799a:	2300      	movne	r3, #0
 800799c:	b2db      	uxtb	r3, r3
 800799e:	e008      	b.n	80079b2 <HAL_ADCEx_MultiModeConfigChannel+0xfa>
 80079a0:	4832      	ldr	r0, [pc, #200]	; (8007a6c <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 80079a2:	f7ff fecb 	bl	800773c <LL_ADC_IsEnabled>
 80079a6:	4603      	mov	r3, r0
 80079a8:	2b00      	cmp	r3, #0
 80079aa:	bf0c      	ite	eq
 80079ac:	2301      	moveq	r3, #1
 80079ae:	2300      	movne	r3, #0
 80079b0:	b2db      	uxtb	r3, r3
 80079b2:	2b00      	cmp	r3, #0
 80079b4:	d047      	beq.n	8007a46 <HAL_ADCEx_MultiModeConfigChannel+0x18e>
 80079b6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80079b8:	689a      	ldr	r2, [r3, #8]
 80079ba:	4b2d      	ldr	r3, [pc, #180]	; (8007a70 <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 80079bc:	4013      	ands	r3, r2
 80079be:	683a      	ldr	r2, [r7, #0]
 80079c0:	6811      	ldr	r1, [r2, #0]
 80079c2:	683a      	ldr	r2, [r7, #0]
 80079c4:	6892      	ldr	r2, [r2, #8]
 80079c6:	430a      	orrs	r2, r1
 80079c8:	431a      	orrs	r2, r3
 80079ca:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80079cc:	609a      	str	r2, [r3, #8]
 80079ce:	e03a      	b.n	8007a46 <HAL_ADCEx_MultiModeConfigChannel+0x18e>
 80079d0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80079d2:	689b      	ldr	r3, [r3, #8]
 80079d4:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80079d8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80079da:	609a      	str	r2, [r3, #8]
 80079dc:	687b      	ldr	r3, [r7, #4]
 80079de:	681b      	ldr	r3, [r3, #0]
 80079e0:	4a1e      	ldr	r2, [pc, #120]	; (8007a5c <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 80079e2:	4293      	cmp	r3, r2
 80079e4:	d004      	beq.n	80079f0 <HAL_ADCEx_MultiModeConfigChannel+0x138>
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	681b      	ldr	r3, [r3, #0]
 80079ea:	4a1d      	ldr	r2, [pc, #116]	; (8007a60 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 80079ec:	4293      	cmp	r3, r2
 80079ee:	d10e      	bne.n	8007a0e <HAL_ADCEx_MultiModeConfigChannel+0x156>
 80079f0:	481a      	ldr	r0, [pc, #104]	; (8007a5c <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 80079f2:	f7ff fea3 	bl	800773c <LL_ADC_IsEnabled>
 80079f6:	4604      	mov	r4, r0
 80079f8:	4819      	ldr	r0, [pc, #100]	; (8007a60 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 80079fa:	f7ff fe9f 	bl	800773c <LL_ADC_IsEnabled>
 80079fe:	4603      	mov	r3, r0
 8007a00:	4323      	orrs	r3, r4
 8007a02:	2b00      	cmp	r3, #0
 8007a04:	bf0c      	ite	eq
 8007a06:	2301      	moveq	r3, #1
 8007a08:	2300      	movne	r3, #0
 8007a0a:	b2db      	uxtb	r3, r3
 8007a0c:	e008      	b.n	8007a20 <HAL_ADCEx_MultiModeConfigChannel+0x168>
 8007a0e:	4817      	ldr	r0, [pc, #92]	; (8007a6c <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 8007a10:	f7ff fe94 	bl	800773c <LL_ADC_IsEnabled>
 8007a14:	4603      	mov	r3, r0
 8007a16:	2b00      	cmp	r3, #0
 8007a18:	bf0c      	ite	eq
 8007a1a:	2301      	moveq	r3, #1
 8007a1c:	2300      	movne	r3, #0
 8007a1e:	b2db      	uxtb	r3, r3
 8007a20:	2b00      	cmp	r3, #0
 8007a22:	d010      	beq.n	8007a46 <HAL_ADCEx_MultiModeConfigChannel+0x18e>
 8007a24:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007a26:	689a      	ldr	r2, [r3, #8]
 8007a28:	4b11      	ldr	r3, [pc, #68]	; (8007a70 <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 8007a2a:	4013      	ands	r3, r2
 8007a2c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8007a2e:	6093      	str	r3, [r2, #8]
 8007a30:	e009      	b.n	8007a46 <HAL_ADCEx_MultiModeConfigChannel+0x18e>
 8007a32:	687b      	ldr	r3, [r7, #4]
 8007a34:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007a36:	f043 0220 	orr.w	r2, r3, #32
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	655a      	str	r2, [r3, #84]	; 0x54
 8007a3e:	2301      	movs	r3, #1
 8007a40:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 8007a44:	e000      	b.n	8007a48 <HAL_ADCEx_MultiModeConfigChannel+0x190>
 8007a46:	bf00      	nop
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	2200      	movs	r2, #0
 8007a4c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007a50:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 8007a54:	4618      	mov	r0, r3
 8007a56:	377c      	adds	r7, #124	; 0x7c
 8007a58:	46bd      	mov	sp, r7
 8007a5a:	bd90      	pop	{r4, r7, pc}
 8007a5c:	40022000 	.word	0x40022000
 8007a60:	40022100 	.word	0x40022100
 8007a64:	40022300 	.word	0x40022300
 8007a68:	58026300 	.word	0x58026300
 8007a6c:	58026000 	.word	0x58026000
 8007a70:	fffff0e0 	.word	0xfffff0e0

08007a74 <__NVIC_SetPriorityGrouping>:
 8007a74:	b480      	push	{r7}
 8007a76:	b085      	sub	sp, #20
 8007a78:	af00      	add	r7, sp, #0
 8007a7a:	6078      	str	r0, [r7, #4]
 8007a7c:	687b      	ldr	r3, [r7, #4]
 8007a7e:	f003 0307 	and.w	r3, r3, #7
 8007a82:	60fb      	str	r3, [r7, #12]
 8007a84:	4b0b      	ldr	r3, [pc, #44]	; (8007ab4 <__NVIC_SetPriorityGrouping+0x40>)
 8007a86:	68db      	ldr	r3, [r3, #12]
 8007a88:	60bb      	str	r3, [r7, #8]
 8007a8a:	68ba      	ldr	r2, [r7, #8]
 8007a8c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8007a90:	4013      	ands	r3, r2
 8007a92:	60bb      	str	r3, [r7, #8]
 8007a94:	68fb      	ldr	r3, [r7, #12]
 8007a96:	021a      	lsls	r2, r3, #8
 8007a98:	68bb      	ldr	r3, [r7, #8]
 8007a9a:	431a      	orrs	r2, r3
 8007a9c:	4b06      	ldr	r3, [pc, #24]	; (8007ab8 <__NVIC_SetPriorityGrouping+0x44>)
 8007a9e:	4313      	orrs	r3, r2
 8007aa0:	60bb      	str	r3, [r7, #8]
 8007aa2:	4a04      	ldr	r2, [pc, #16]	; (8007ab4 <__NVIC_SetPriorityGrouping+0x40>)
 8007aa4:	68bb      	ldr	r3, [r7, #8]
 8007aa6:	60d3      	str	r3, [r2, #12]
 8007aa8:	bf00      	nop
 8007aaa:	3714      	adds	r7, #20
 8007aac:	46bd      	mov	sp, r7
 8007aae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ab2:	4770      	bx	lr
 8007ab4:	e000ed00 	.word	0xe000ed00
 8007ab8:	05fa0000 	.word	0x05fa0000

08007abc <__NVIC_GetPriorityGrouping>:
 8007abc:	b480      	push	{r7}
 8007abe:	af00      	add	r7, sp, #0
 8007ac0:	4b04      	ldr	r3, [pc, #16]	; (8007ad4 <__NVIC_GetPriorityGrouping+0x18>)
 8007ac2:	68db      	ldr	r3, [r3, #12]
 8007ac4:	0a1b      	lsrs	r3, r3, #8
 8007ac6:	f003 0307 	and.w	r3, r3, #7
 8007aca:	4618      	mov	r0, r3
 8007acc:	46bd      	mov	sp, r7
 8007ace:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ad2:	4770      	bx	lr
 8007ad4:	e000ed00 	.word	0xe000ed00

08007ad8 <__NVIC_EnableIRQ>:
 8007ad8:	b480      	push	{r7}
 8007ada:	b083      	sub	sp, #12
 8007adc:	af00      	add	r7, sp, #0
 8007ade:	4603      	mov	r3, r0
 8007ae0:	80fb      	strh	r3, [r7, #6]
 8007ae2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007ae6:	2b00      	cmp	r3, #0
 8007ae8:	db0b      	blt.n	8007b02 <__NVIC_EnableIRQ+0x2a>
 8007aea:	88fb      	ldrh	r3, [r7, #6]
 8007aec:	f003 021f 	and.w	r2, r3, #31
 8007af0:	4907      	ldr	r1, [pc, #28]	; (8007b10 <__NVIC_EnableIRQ+0x38>)
 8007af2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007af6:	095b      	lsrs	r3, r3, #5
 8007af8:	2001      	movs	r0, #1
 8007afa:	fa00 f202 	lsl.w	r2, r0, r2
 8007afe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007b02:	bf00      	nop
 8007b04:	370c      	adds	r7, #12
 8007b06:	46bd      	mov	sp, r7
 8007b08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b0c:	4770      	bx	lr
 8007b0e:	bf00      	nop
 8007b10:	e000e100 	.word	0xe000e100

08007b14 <__NVIC_SetPriority>:
 8007b14:	b480      	push	{r7}
 8007b16:	b083      	sub	sp, #12
 8007b18:	af00      	add	r7, sp, #0
 8007b1a:	4603      	mov	r3, r0
 8007b1c:	6039      	str	r1, [r7, #0]
 8007b1e:	80fb      	strh	r3, [r7, #6]
 8007b20:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007b24:	2b00      	cmp	r3, #0
 8007b26:	db0a      	blt.n	8007b3e <__NVIC_SetPriority+0x2a>
 8007b28:	683b      	ldr	r3, [r7, #0]
 8007b2a:	b2da      	uxtb	r2, r3
 8007b2c:	490c      	ldr	r1, [pc, #48]	; (8007b60 <__NVIC_SetPriority+0x4c>)
 8007b2e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007b32:	0112      	lsls	r2, r2, #4
 8007b34:	b2d2      	uxtb	r2, r2
 8007b36:	440b      	add	r3, r1
 8007b38:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8007b3c:	e00a      	b.n	8007b54 <__NVIC_SetPriority+0x40>
 8007b3e:	683b      	ldr	r3, [r7, #0]
 8007b40:	b2da      	uxtb	r2, r3
 8007b42:	4908      	ldr	r1, [pc, #32]	; (8007b64 <__NVIC_SetPriority+0x50>)
 8007b44:	88fb      	ldrh	r3, [r7, #6]
 8007b46:	f003 030f 	and.w	r3, r3, #15
 8007b4a:	3b04      	subs	r3, #4
 8007b4c:	0112      	lsls	r2, r2, #4
 8007b4e:	b2d2      	uxtb	r2, r2
 8007b50:	440b      	add	r3, r1
 8007b52:	761a      	strb	r2, [r3, #24]
 8007b54:	bf00      	nop
 8007b56:	370c      	adds	r7, #12
 8007b58:	46bd      	mov	sp, r7
 8007b5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b5e:	4770      	bx	lr
 8007b60:	e000e100 	.word	0xe000e100
 8007b64:	e000ed00 	.word	0xe000ed00

08007b68 <NVIC_EncodePriority>:
 8007b68:	b480      	push	{r7}
 8007b6a:	b089      	sub	sp, #36	; 0x24
 8007b6c:	af00      	add	r7, sp, #0
 8007b6e:	60f8      	str	r0, [r7, #12]
 8007b70:	60b9      	str	r1, [r7, #8]
 8007b72:	607a      	str	r2, [r7, #4]
 8007b74:	68fb      	ldr	r3, [r7, #12]
 8007b76:	f003 0307 	and.w	r3, r3, #7
 8007b7a:	61fb      	str	r3, [r7, #28]
 8007b7c:	69fb      	ldr	r3, [r7, #28]
 8007b7e:	f1c3 0307 	rsb	r3, r3, #7
 8007b82:	2b04      	cmp	r3, #4
 8007b84:	bf28      	it	cs
 8007b86:	2304      	movcs	r3, #4
 8007b88:	61bb      	str	r3, [r7, #24]
 8007b8a:	69fb      	ldr	r3, [r7, #28]
 8007b8c:	3304      	adds	r3, #4
 8007b8e:	2b06      	cmp	r3, #6
 8007b90:	d902      	bls.n	8007b98 <NVIC_EncodePriority+0x30>
 8007b92:	69fb      	ldr	r3, [r7, #28]
 8007b94:	3b03      	subs	r3, #3
 8007b96:	e000      	b.n	8007b9a <NVIC_EncodePriority+0x32>
 8007b98:	2300      	movs	r3, #0
 8007b9a:	617b      	str	r3, [r7, #20]
 8007b9c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007ba0:	69bb      	ldr	r3, [r7, #24]
 8007ba2:	fa02 f303 	lsl.w	r3, r2, r3
 8007ba6:	43da      	mvns	r2, r3
 8007ba8:	68bb      	ldr	r3, [r7, #8]
 8007baa:	401a      	ands	r2, r3
 8007bac:	697b      	ldr	r3, [r7, #20]
 8007bae:	409a      	lsls	r2, r3
 8007bb0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8007bb4:	697b      	ldr	r3, [r7, #20]
 8007bb6:	fa01 f303 	lsl.w	r3, r1, r3
 8007bba:	43d9      	mvns	r1, r3
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	400b      	ands	r3, r1
 8007bc0:	4313      	orrs	r3, r2
 8007bc2:	4618      	mov	r0, r3
 8007bc4:	3724      	adds	r7, #36	; 0x24
 8007bc6:	46bd      	mov	sp, r7
 8007bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bcc:	4770      	bx	lr

08007bce <HAL_NVIC_SetPriorityGrouping>:
 8007bce:	b580      	push	{r7, lr}
 8007bd0:	b082      	sub	sp, #8
 8007bd2:	af00      	add	r7, sp, #0
 8007bd4:	6078      	str	r0, [r7, #4]
 8007bd6:	6878      	ldr	r0, [r7, #4]
 8007bd8:	f7ff ff4c 	bl	8007a74 <__NVIC_SetPriorityGrouping>
 8007bdc:	bf00      	nop
 8007bde:	3708      	adds	r7, #8
 8007be0:	46bd      	mov	sp, r7
 8007be2:	bd80      	pop	{r7, pc}

08007be4 <HAL_NVIC_SetPriority>:
 8007be4:	b580      	push	{r7, lr}
 8007be6:	b086      	sub	sp, #24
 8007be8:	af00      	add	r7, sp, #0
 8007bea:	4603      	mov	r3, r0
 8007bec:	60b9      	str	r1, [r7, #8]
 8007bee:	607a      	str	r2, [r7, #4]
 8007bf0:	81fb      	strh	r3, [r7, #14]
 8007bf2:	f7ff ff63 	bl	8007abc <__NVIC_GetPriorityGrouping>
 8007bf6:	6178      	str	r0, [r7, #20]
 8007bf8:	687a      	ldr	r2, [r7, #4]
 8007bfa:	68b9      	ldr	r1, [r7, #8]
 8007bfc:	6978      	ldr	r0, [r7, #20]
 8007bfe:	f7ff ffb3 	bl	8007b68 <NVIC_EncodePriority>
 8007c02:	4602      	mov	r2, r0
 8007c04:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8007c08:	4611      	mov	r1, r2
 8007c0a:	4618      	mov	r0, r3
 8007c0c:	f7ff ff82 	bl	8007b14 <__NVIC_SetPriority>
 8007c10:	bf00      	nop
 8007c12:	3718      	adds	r7, #24
 8007c14:	46bd      	mov	sp, r7
 8007c16:	bd80      	pop	{r7, pc}

08007c18 <HAL_NVIC_EnableIRQ>:
 8007c18:	b580      	push	{r7, lr}
 8007c1a:	b082      	sub	sp, #8
 8007c1c:	af00      	add	r7, sp, #0
 8007c1e:	4603      	mov	r3, r0
 8007c20:	80fb      	strh	r3, [r7, #6]
 8007c22:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007c26:	4618      	mov	r0, r3
 8007c28:	f7ff ff56 	bl	8007ad8 <__NVIC_EnableIRQ>
 8007c2c:	bf00      	nop
 8007c2e:	3708      	adds	r7, #8
 8007c30:	46bd      	mov	sp, r7
 8007c32:	bd80      	pop	{r7, pc}

08007c34 <HAL_DAC_Init>:
 8007c34:	b580      	push	{r7, lr}
 8007c36:	b082      	sub	sp, #8
 8007c38:	af00      	add	r7, sp, #0
 8007c3a:	6078      	str	r0, [r7, #4]
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	2b00      	cmp	r3, #0
 8007c40:	d101      	bne.n	8007c46 <HAL_DAC_Init+0x12>
 8007c42:	2301      	movs	r3, #1
 8007c44:	e014      	b.n	8007c70 <HAL_DAC_Init+0x3c>
 8007c46:	687b      	ldr	r3, [r7, #4]
 8007c48:	791b      	ldrb	r3, [r3, #4]
 8007c4a:	b2db      	uxtb	r3, r3
 8007c4c:	2b00      	cmp	r3, #0
 8007c4e:	d105      	bne.n	8007c5c <HAL_DAC_Init+0x28>
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	2200      	movs	r2, #0
 8007c54:	715a      	strb	r2, [r3, #5]
 8007c56:	6878      	ldr	r0, [r7, #4]
 8007c58:	f7f8 ffc4 	bl	8000be4 <HAL_DAC_MspInit>
 8007c5c:	687b      	ldr	r3, [r7, #4]
 8007c5e:	2202      	movs	r2, #2
 8007c60:	711a      	strb	r2, [r3, #4]
 8007c62:	687b      	ldr	r3, [r7, #4]
 8007c64:	2200      	movs	r2, #0
 8007c66:	611a      	str	r2, [r3, #16]
 8007c68:	687b      	ldr	r3, [r7, #4]
 8007c6a:	2201      	movs	r2, #1
 8007c6c:	711a      	strb	r2, [r3, #4]
 8007c6e:	2300      	movs	r3, #0
 8007c70:	4618      	mov	r0, r3
 8007c72:	3708      	adds	r7, #8
 8007c74:	46bd      	mov	sp, r7
 8007c76:	bd80      	pop	{r7, pc}

08007c78 <HAL_DAC_Start>:
 8007c78:	b480      	push	{r7}
 8007c7a:	b083      	sub	sp, #12
 8007c7c:	af00      	add	r7, sp, #0
 8007c7e:	6078      	str	r0, [r7, #4]
 8007c80:	6039      	str	r1, [r7, #0]
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	2b00      	cmp	r3, #0
 8007c86:	d101      	bne.n	8007c8c <HAL_DAC_Start+0x14>
 8007c88:	2301      	movs	r3, #1
 8007c8a:	e046      	b.n	8007d1a <HAL_DAC_Start+0xa2>
 8007c8c:	687b      	ldr	r3, [r7, #4]
 8007c8e:	795b      	ldrb	r3, [r3, #5]
 8007c90:	2b01      	cmp	r3, #1
 8007c92:	d101      	bne.n	8007c98 <HAL_DAC_Start+0x20>
 8007c94:	2302      	movs	r3, #2
 8007c96:	e040      	b.n	8007d1a <HAL_DAC_Start+0xa2>
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	2201      	movs	r2, #1
 8007c9c:	715a      	strb	r2, [r3, #5]
 8007c9e:	687b      	ldr	r3, [r7, #4]
 8007ca0:	2202      	movs	r2, #2
 8007ca2:	711a      	strb	r2, [r3, #4]
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	681b      	ldr	r3, [r3, #0]
 8007ca8:	6819      	ldr	r1, [r3, #0]
 8007caa:	683b      	ldr	r3, [r7, #0]
 8007cac:	f003 0310 	and.w	r3, r3, #16
 8007cb0:	2201      	movs	r2, #1
 8007cb2:	409a      	lsls	r2, r3
 8007cb4:	687b      	ldr	r3, [r7, #4]
 8007cb6:	681b      	ldr	r3, [r3, #0]
 8007cb8:	430a      	orrs	r2, r1
 8007cba:	601a      	str	r2, [r3, #0]
 8007cbc:	683b      	ldr	r3, [r7, #0]
 8007cbe:	2b00      	cmp	r3, #0
 8007cc0:	d10f      	bne.n	8007ce2 <HAL_DAC_Start+0x6a>
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	681b      	ldr	r3, [r3, #0]
 8007cc6:	681b      	ldr	r3, [r3, #0]
 8007cc8:	f003 033e 	and.w	r3, r3, #62	; 0x3e
 8007ccc:	2b02      	cmp	r3, #2
 8007cce:	d11d      	bne.n	8007d0c <HAL_DAC_Start+0x94>
 8007cd0:	687b      	ldr	r3, [r7, #4]
 8007cd2:	681b      	ldr	r3, [r3, #0]
 8007cd4:	685a      	ldr	r2, [r3, #4]
 8007cd6:	687b      	ldr	r3, [r7, #4]
 8007cd8:	681b      	ldr	r3, [r3, #0]
 8007cda:	f042 0201 	orr.w	r2, r2, #1
 8007cde:	605a      	str	r2, [r3, #4]
 8007ce0:	e014      	b.n	8007d0c <HAL_DAC_Start+0x94>
 8007ce2:	687b      	ldr	r3, [r7, #4]
 8007ce4:	681b      	ldr	r3, [r3, #0]
 8007ce6:	681b      	ldr	r3, [r3, #0]
 8007ce8:	f403 1278 	and.w	r2, r3, #4063232	; 0x3e0000
 8007cec:	683b      	ldr	r3, [r7, #0]
 8007cee:	f003 0310 	and.w	r3, r3, #16
 8007cf2:	2102      	movs	r1, #2
 8007cf4:	fa01 f303 	lsl.w	r3, r1, r3
 8007cf8:	429a      	cmp	r2, r3
 8007cfa:	d107      	bne.n	8007d0c <HAL_DAC_Start+0x94>
 8007cfc:	687b      	ldr	r3, [r7, #4]
 8007cfe:	681b      	ldr	r3, [r3, #0]
 8007d00:	685a      	ldr	r2, [r3, #4]
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	f042 0202 	orr.w	r2, r2, #2
 8007d0a:	605a      	str	r2, [r3, #4]
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	2201      	movs	r2, #1
 8007d10:	711a      	strb	r2, [r3, #4]
 8007d12:	687b      	ldr	r3, [r7, #4]
 8007d14:	2200      	movs	r2, #0
 8007d16:	715a      	strb	r2, [r3, #5]
 8007d18:	2300      	movs	r3, #0
 8007d1a:	4618      	mov	r0, r3
 8007d1c:	370c      	adds	r7, #12
 8007d1e:	46bd      	mov	sp, r7
 8007d20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d24:	4770      	bx	lr
	...

08007d28 <HAL_DAC_Start_DMA>:
 8007d28:	b580      	push	{r7, lr}
 8007d2a:	b086      	sub	sp, #24
 8007d2c:	af00      	add	r7, sp, #0
 8007d2e:	60f8      	str	r0, [r7, #12]
 8007d30:	60b9      	str	r1, [r7, #8]
 8007d32:	607a      	str	r2, [r7, #4]
 8007d34:	603b      	str	r3, [r7, #0]
 8007d36:	68fb      	ldr	r3, [r7, #12]
 8007d38:	2b00      	cmp	r3, #0
 8007d3a:	d101      	bne.n	8007d40 <HAL_DAC_Start_DMA+0x18>
 8007d3c:	2301      	movs	r3, #1
 8007d3e:	e0a2      	b.n	8007e86 <HAL_DAC_Start_DMA+0x15e>
 8007d40:	68fb      	ldr	r3, [r7, #12]
 8007d42:	795b      	ldrb	r3, [r3, #5]
 8007d44:	2b01      	cmp	r3, #1
 8007d46:	d101      	bne.n	8007d4c <HAL_DAC_Start_DMA+0x24>
 8007d48:	2302      	movs	r3, #2
 8007d4a:	e09c      	b.n	8007e86 <HAL_DAC_Start_DMA+0x15e>
 8007d4c:	68fb      	ldr	r3, [r7, #12]
 8007d4e:	2201      	movs	r2, #1
 8007d50:	715a      	strb	r2, [r3, #5]
 8007d52:	68fb      	ldr	r3, [r7, #12]
 8007d54:	2202      	movs	r2, #2
 8007d56:	711a      	strb	r2, [r3, #4]
 8007d58:	68bb      	ldr	r3, [r7, #8]
 8007d5a:	2b00      	cmp	r3, #0
 8007d5c:	d129      	bne.n	8007db2 <HAL_DAC_Start_DMA+0x8a>
 8007d5e:	68fb      	ldr	r3, [r7, #12]
 8007d60:	689b      	ldr	r3, [r3, #8]
 8007d62:	4a4b      	ldr	r2, [pc, #300]	; (8007e90 <HAL_DAC_Start_DMA+0x168>)
 8007d64:	63da      	str	r2, [r3, #60]	; 0x3c
 8007d66:	68fb      	ldr	r3, [r7, #12]
 8007d68:	689b      	ldr	r3, [r3, #8]
 8007d6a:	4a4a      	ldr	r2, [pc, #296]	; (8007e94 <HAL_DAC_Start_DMA+0x16c>)
 8007d6c:	641a      	str	r2, [r3, #64]	; 0x40
 8007d6e:	68fb      	ldr	r3, [r7, #12]
 8007d70:	689b      	ldr	r3, [r3, #8]
 8007d72:	4a49      	ldr	r2, [pc, #292]	; (8007e98 <HAL_DAC_Start_DMA+0x170>)
 8007d74:	64da      	str	r2, [r3, #76]	; 0x4c
 8007d76:	68fb      	ldr	r3, [r7, #12]
 8007d78:	681b      	ldr	r3, [r3, #0]
 8007d7a:	681a      	ldr	r2, [r3, #0]
 8007d7c:	68fb      	ldr	r3, [r7, #12]
 8007d7e:	681b      	ldr	r3, [r3, #0]
 8007d80:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8007d84:	601a      	str	r2, [r3, #0]
 8007d86:	6a3b      	ldr	r3, [r7, #32]
 8007d88:	2b00      	cmp	r3, #0
 8007d8a:	d003      	beq.n	8007d94 <HAL_DAC_Start_DMA+0x6c>
 8007d8c:	6a3b      	ldr	r3, [r7, #32]
 8007d8e:	2b04      	cmp	r3, #4
 8007d90:	d005      	beq.n	8007d9e <HAL_DAC_Start_DMA+0x76>
 8007d92:	e009      	b.n	8007da8 <HAL_DAC_Start_DMA+0x80>
 8007d94:	68fb      	ldr	r3, [r7, #12]
 8007d96:	681b      	ldr	r3, [r3, #0]
 8007d98:	3308      	adds	r3, #8
 8007d9a:	613b      	str	r3, [r7, #16]
 8007d9c:	e033      	b.n	8007e06 <HAL_DAC_Start_DMA+0xde>
 8007d9e:	68fb      	ldr	r3, [r7, #12]
 8007da0:	681b      	ldr	r3, [r3, #0]
 8007da2:	330c      	adds	r3, #12
 8007da4:	613b      	str	r3, [r7, #16]
 8007da6:	e02e      	b.n	8007e06 <HAL_DAC_Start_DMA+0xde>
 8007da8:	68fb      	ldr	r3, [r7, #12]
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	3310      	adds	r3, #16
 8007dae:	613b      	str	r3, [r7, #16]
 8007db0:	e029      	b.n	8007e06 <HAL_DAC_Start_DMA+0xde>
 8007db2:	68fb      	ldr	r3, [r7, #12]
 8007db4:	68db      	ldr	r3, [r3, #12]
 8007db6:	4a39      	ldr	r2, [pc, #228]	; (8007e9c <HAL_DAC_Start_DMA+0x174>)
 8007db8:	63da      	str	r2, [r3, #60]	; 0x3c
 8007dba:	68fb      	ldr	r3, [r7, #12]
 8007dbc:	68db      	ldr	r3, [r3, #12]
 8007dbe:	4a38      	ldr	r2, [pc, #224]	; (8007ea0 <HAL_DAC_Start_DMA+0x178>)
 8007dc0:	641a      	str	r2, [r3, #64]	; 0x40
 8007dc2:	68fb      	ldr	r3, [r7, #12]
 8007dc4:	68db      	ldr	r3, [r3, #12]
 8007dc6:	4a37      	ldr	r2, [pc, #220]	; (8007ea4 <HAL_DAC_Start_DMA+0x17c>)
 8007dc8:	64da      	str	r2, [r3, #76]	; 0x4c
 8007dca:	68fb      	ldr	r3, [r7, #12]
 8007dcc:	681b      	ldr	r3, [r3, #0]
 8007dce:	681a      	ldr	r2, [r3, #0]
 8007dd0:	68fb      	ldr	r3, [r7, #12]
 8007dd2:	681b      	ldr	r3, [r3, #0]
 8007dd4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007dd8:	601a      	str	r2, [r3, #0]
 8007dda:	6a3b      	ldr	r3, [r7, #32]
 8007ddc:	2b00      	cmp	r3, #0
 8007dde:	d003      	beq.n	8007de8 <HAL_DAC_Start_DMA+0xc0>
 8007de0:	6a3b      	ldr	r3, [r7, #32]
 8007de2:	2b04      	cmp	r3, #4
 8007de4:	d005      	beq.n	8007df2 <HAL_DAC_Start_DMA+0xca>
 8007de6:	e009      	b.n	8007dfc <HAL_DAC_Start_DMA+0xd4>
 8007de8:	68fb      	ldr	r3, [r7, #12]
 8007dea:	681b      	ldr	r3, [r3, #0]
 8007dec:	3314      	adds	r3, #20
 8007dee:	613b      	str	r3, [r7, #16]
 8007df0:	e009      	b.n	8007e06 <HAL_DAC_Start_DMA+0xde>
 8007df2:	68fb      	ldr	r3, [r7, #12]
 8007df4:	681b      	ldr	r3, [r3, #0]
 8007df6:	3318      	adds	r3, #24
 8007df8:	613b      	str	r3, [r7, #16]
 8007dfa:	e004      	b.n	8007e06 <HAL_DAC_Start_DMA+0xde>
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	681b      	ldr	r3, [r3, #0]
 8007e00:	331c      	adds	r3, #28
 8007e02:	613b      	str	r3, [r7, #16]
 8007e04:	bf00      	nop
 8007e06:	68bb      	ldr	r3, [r7, #8]
 8007e08:	2b00      	cmp	r3, #0
 8007e0a:	d111      	bne.n	8007e30 <HAL_DAC_Start_DMA+0x108>
 8007e0c:	68fb      	ldr	r3, [r7, #12]
 8007e0e:	681b      	ldr	r3, [r3, #0]
 8007e10:	681a      	ldr	r2, [r3, #0]
 8007e12:	68fb      	ldr	r3, [r7, #12]
 8007e14:	681b      	ldr	r3, [r3, #0]
 8007e16:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007e1a:	601a      	str	r2, [r3, #0]
 8007e1c:	68fb      	ldr	r3, [r7, #12]
 8007e1e:	6898      	ldr	r0, [r3, #8]
 8007e20:	6879      	ldr	r1, [r7, #4]
 8007e22:	683b      	ldr	r3, [r7, #0]
 8007e24:	693a      	ldr	r2, [r7, #16]
 8007e26:	f000 fe67 	bl	8008af8 <HAL_DMA_Start_IT>
 8007e2a:	4603      	mov	r3, r0
 8007e2c:	75fb      	strb	r3, [r7, #23]
 8007e2e:	e010      	b.n	8007e52 <HAL_DAC_Start_DMA+0x12a>
 8007e30:	68fb      	ldr	r3, [r7, #12]
 8007e32:	681b      	ldr	r3, [r3, #0]
 8007e34:	681a      	ldr	r2, [r3, #0]
 8007e36:	68fb      	ldr	r3, [r7, #12]
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8007e3e:	601a      	str	r2, [r3, #0]
 8007e40:	68fb      	ldr	r3, [r7, #12]
 8007e42:	68d8      	ldr	r0, [r3, #12]
 8007e44:	6879      	ldr	r1, [r7, #4]
 8007e46:	683b      	ldr	r3, [r7, #0]
 8007e48:	693a      	ldr	r2, [r7, #16]
 8007e4a:	f000 fe55 	bl	8008af8 <HAL_DMA_Start_IT>
 8007e4e:	4603      	mov	r3, r0
 8007e50:	75fb      	strb	r3, [r7, #23]
 8007e52:	68fb      	ldr	r3, [r7, #12]
 8007e54:	2200      	movs	r2, #0
 8007e56:	715a      	strb	r2, [r3, #5]
 8007e58:	7dfb      	ldrb	r3, [r7, #23]
 8007e5a:	2b00      	cmp	r3, #0
 8007e5c:	d10c      	bne.n	8007e78 <HAL_DAC_Start_DMA+0x150>
 8007e5e:	68fb      	ldr	r3, [r7, #12]
 8007e60:	681b      	ldr	r3, [r3, #0]
 8007e62:	6819      	ldr	r1, [r3, #0]
 8007e64:	68bb      	ldr	r3, [r7, #8]
 8007e66:	f003 0310 	and.w	r3, r3, #16
 8007e6a:	2201      	movs	r2, #1
 8007e6c:	409a      	lsls	r2, r3
 8007e6e:	68fb      	ldr	r3, [r7, #12]
 8007e70:	681b      	ldr	r3, [r3, #0]
 8007e72:	430a      	orrs	r2, r1
 8007e74:	601a      	str	r2, [r3, #0]
 8007e76:	e005      	b.n	8007e84 <HAL_DAC_Start_DMA+0x15c>
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	691b      	ldr	r3, [r3, #16]
 8007e7c:	f043 0204 	orr.w	r2, r3, #4
 8007e80:	68fb      	ldr	r3, [r7, #12]
 8007e82:	611a      	str	r2, [r3, #16]
 8007e84:	7dfb      	ldrb	r3, [r7, #23]
 8007e86:	4618      	mov	r0, r3
 8007e88:	3718      	adds	r7, #24
 8007e8a:	46bd      	mov	sp, r7
 8007e8c:	bd80      	pop	{r7, pc}
 8007e8e:	bf00      	nop
 8007e90:	08008319 	.word	0x08008319
 8007e94:	0800833b 	.word	0x0800833b
 8007e98:	08008357 	.word	0x08008357
 8007e9c:	080083d5 	.word	0x080083d5
 8007ea0:	080083f7 	.word	0x080083f7
 8007ea4:	08008413 	.word	0x08008413

08007ea8 <HAL_DAC_Stop_DMA>:
 8007ea8:	b580      	push	{r7, lr}
 8007eaa:	b082      	sub	sp, #8
 8007eac:	af00      	add	r7, sp, #0
 8007eae:	6078      	str	r0, [r7, #4]
 8007eb0:	6039      	str	r1, [r7, #0]
 8007eb2:	687b      	ldr	r3, [r7, #4]
 8007eb4:	2b00      	cmp	r3, #0
 8007eb6:	d101      	bne.n	8007ebc <HAL_DAC_Stop_DMA+0x14>
 8007eb8:	2301      	movs	r3, #1
 8007eba:	e03e      	b.n	8007f3a <HAL_DAC_Stop_DMA+0x92>
 8007ebc:	687b      	ldr	r3, [r7, #4]
 8007ebe:	681b      	ldr	r3, [r3, #0]
 8007ec0:	6819      	ldr	r1, [r3, #0]
 8007ec2:	683b      	ldr	r3, [r7, #0]
 8007ec4:	f003 0310 	and.w	r3, r3, #16
 8007ec8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8007ecc:	fa02 f303 	lsl.w	r3, r2, r3
 8007ed0:	43da      	mvns	r2, r3
 8007ed2:	687b      	ldr	r3, [r7, #4]
 8007ed4:	681b      	ldr	r3, [r3, #0]
 8007ed6:	400a      	ands	r2, r1
 8007ed8:	601a      	str	r2, [r3, #0]
 8007eda:	687b      	ldr	r3, [r7, #4]
 8007edc:	681b      	ldr	r3, [r3, #0]
 8007ede:	6819      	ldr	r1, [r3, #0]
 8007ee0:	683b      	ldr	r3, [r7, #0]
 8007ee2:	f003 0310 	and.w	r3, r3, #16
 8007ee6:	2201      	movs	r2, #1
 8007ee8:	fa02 f303 	lsl.w	r3, r2, r3
 8007eec:	43da      	mvns	r2, r3
 8007eee:	687b      	ldr	r3, [r7, #4]
 8007ef0:	681b      	ldr	r3, [r3, #0]
 8007ef2:	400a      	ands	r2, r1
 8007ef4:	601a      	str	r2, [r3, #0]
 8007ef6:	683b      	ldr	r3, [r7, #0]
 8007ef8:	2b00      	cmp	r3, #0
 8007efa:	d10d      	bne.n	8007f18 <HAL_DAC_Stop_DMA+0x70>
 8007efc:	687b      	ldr	r3, [r7, #4]
 8007efe:	689b      	ldr	r3, [r3, #8]
 8007f00:	4618      	mov	r0, r3
 8007f02:	f001 f863 	bl	8008fcc <HAL_DMA_Abort>
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	681b      	ldr	r3, [r3, #0]
 8007f0a:	681a      	ldr	r2, [r3, #0]
 8007f0c:	687b      	ldr	r3, [r7, #4]
 8007f0e:	681b      	ldr	r3, [r3, #0]
 8007f10:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007f14:	601a      	str	r2, [r3, #0]
 8007f16:	e00c      	b.n	8007f32 <HAL_DAC_Stop_DMA+0x8a>
 8007f18:	687b      	ldr	r3, [r7, #4]
 8007f1a:	68db      	ldr	r3, [r3, #12]
 8007f1c:	4618      	mov	r0, r3
 8007f1e:	f001 f855 	bl	8008fcc <HAL_DMA_Abort>
 8007f22:	687b      	ldr	r3, [r7, #4]
 8007f24:	681b      	ldr	r3, [r3, #0]
 8007f26:	681a      	ldr	r2, [r3, #0]
 8007f28:	687b      	ldr	r3, [r7, #4]
 8007f2a:	681b      	ldr	r3, [r3, #0]
 8007f2c:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8007f30:	601a      	str	r2, [r3, #0]
 8007f32:	687b      	ldr	r3, [r7, #4]
 8007f34:	2201      	movs	r2, #1
 8007f36:	711a      	strb	r2, [r3, #4]
 8007f38:	2300      	movs	r3, #0
 8007f3a:	4618      	mov	r0, r3
 8007f3c:	3708      	adds	r7, #8
 8007f3e:	46bd      	mov	sp, r7
 8007f40:	bd80      	pop	{r7, pc}

08007f42 <HAL_DAC_IRQHandler>:
 8007f42:	b580      	push	{r7, lr}
 8007f44:	b084      	sub	sp, #16
 8007f46:	af00      	add	r7, sp, #0
 8007f48:	6078      	str	r0, [r7, #4]
 8007f4a:	687b      	ldr	r3, [r7, #4]
 8007f4c:	681b      	ldr	r3, [r3, #0]
 8007f4e:	681b      	ldr	r3, [r3, #0]
 8007f50:	60fb      	str	r3, [r7, #12]
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	681b      	ldr	r3, [r3, #0]
 8007f56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007f58:	60bb      	str	r3, [r7, #8]
 8007f5a:	68fb      	ldr	r3, [r7, #12]
 8007f5c:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007f60:	2b00      	cmp	r3, #0
 8007f62:	d01d      	beq.n	8007fa0 <HAL_DAC_IRQHandler+0x5e>
 8007f64:	68bb      	ldr	r3, [r7, #8]
 8007f66:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007f6a:	2b00      	cmp	r3, #0
 8007f6c:	d018      	beq.n	8007fa0 <HAL_DAC_IRQHandler+0x5e>
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	2204      	movs	r2, #4
 8007f72:	711a      	strb	r2, [r3, #4]
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	691b      	ldr	r3, [r3, #16]
 8007f78:	f043 0201 	orr.w	r2, r3, #1
 8007f7c:	687b      	ldr	r3, [r7, #4]
 8007f7e:	611a      	str	r2, [r3, #16]
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	681b      	ldr	r3, [r3, #0]
 8007f84:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8007f88:	635a      	str	r2, [r3, #52]	; 0x34
 8007f8a:	687b      	ldr	r3, [r7, #4]
 8007f8c:	681b      	ldr	r3, [r3, #0]
 8007f8e:	681a      	ldr	r2, [r3, #0]
 8007f90:	687b      	ldr	r3, [r7, #4]
 8007f92:	681b      	ldr	r3, [r3, #0]
 8007f94:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8007f98:	601a      	str	r2, [r3, #0]
 8007f9a:	6878      	ldr	r0, [r7, #4]
 8007f9c:	f000 f86f 	bl	800807e <HAL_DAC_DMAUnderrunCallbackCh1>
 8007fa0:	68fb      	ldr	r3, [r7, #12]
 8007fa2:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8007fa6:	2b00      	cmp	r3, #0
 8007fa8:	d01d      	beq.n	8007fe6 <HAL_DAC_IRQHandler+0xa4>
 8007faa:	68bb      	ldr	r3, [r7, #8]
 8007fac:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8007fb0:	2b00      	cmp	r3, #0
 8007fb2:	d018      	beq.n	8007fe6 <HAL_DAC_IRQHandler+0xa4>
 8007fb4:	687b      	ldr	r3, [r7, #4]
 8007fb6:	2204      	movs	r2, #4
 8007fb8:	711a      	strb	r2, [r3, #4]
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	691b      	ldr	r3, [r3, #16]
 8007fbe:	f043 0202 	orr.w	r2, r3, #2
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	611a      	str	r2, [r3, #16]
 8007fc6:	687b      	ldr	r3, [r7, #4]
 8007fc8:	681b      	ldr	r3, [r3, #0]
 8007fca:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8007fce:	635a      	str	r2, [r3, #52]	; 0x34
 8007fd0:	687b      	ldr	r3, [r7, #4]
 8007fd2:	681b      	ldr	r3, [r3, #0]
 8007fd4:	681a      	ldr	r2, [r3, #0]
 8007fd6:	687b      	ldr	r3, [r7, #4]
 8007fd8:	681b      	ldr	r3, [r3, #0]
 8007fda:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8007fde:	601a      	str	r2, [r3, #0]
 8007fe0:	6878      	ldr	r0, [r7, #4]
 8007fe2:	f000 f9ed 	bl	80083c0 <HAL_DACEx_DMAUnderrunCallbackCh2>
 8007fe6:	bf00      	nop
 8007fe8:	3710      	adds	r7, #16
 8007fea:	46bd      	mov	sp, r7
 8007fec:	bd80      	pop	{r7, pc}

08007fee <HAL_DAC_SetValue>:
 8007fee:	b480      	push	{r7}
 8007ff0:	b087      	sub	sp, #28
 8007ff2:	af00      	add	r7, sp, #0
 8007ff4:	60f8      	str	r0, [r7, #12]
 8007ff6:	60b9      	str	r1, [r7, #8]
 8007ff8:	607a      	str	r2, [r7, #4]
 8007ffa:	603b      	str	r3, [r7, #0]
 8007ffc:	2300      	movs	r3, #0
 8007ffe:	617b      	str	r3, [r7, #20]
 8008000:	68fb      	ldr	r3, [r7, #12]
 8008002:	2b00      	cmp	r3, #0
 8008004:	d101      	bne.n	800800a <HAL_DAC_SetValue+0x1c>
 8008006:	2301      	movs	r3, #1
 8008008:	e015      	b.n	8008036 <HAL_DAC_SetValue+0x48>
 800800a:	68fb      	ldr	r3, [r7, #12]
 800800c:	681b      	ldr	r3, [r3, #0]
 800800e:	617b      	str	r3, [r7, #20]
 8008010:	68bb      	ldr	r3, [r7, #8]
 8008012:	2b00      	cmp	r3, #0
 8008014:	d105      	bne.n	8008022 <HAL_DAC_SetValue+0x34>
 8008016:	697a      	ldr	r2, [r7, #20]
 8008018:	687b      	ldr	r3, [r7, #4]
 800801a:	4413      	add	r3, r2
 800801c:	3308      	adds	r3, #8
 800801e:	617b      	str	r3, [r7, #20]
 8008020:	e004      	b.n	800802c <HAL_DAC_SetValue+0x3e>
 8008022:	697a      	ldr	r2, [r7, #20]
 8008024:	687b      	ldr	r3, [r7, #4]
 8008026:	4413      	add	r3, r2
 8008028:	3314      	adds	r3, #20
 800802a:	617b      	str	r3, [r7, #20]
 800802c:	697b      	ldr	r3, [r7, #20]
 800802e:	461a      	mov	r2, r3
 8008030:	683b      	ldr	r3, [r7, #0]
 8008032:	6013      	str	r3, [r2, #0]
 8008034:	2300      	movs	r3, #0
 8008036:	4618      	mov	r0, r3
 8008038:	371c      	adds	r7, #28
 800803a:	46bd      	mov	sp, r7
 800803c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008040:	4770      	bx	lr

08008042 <HAL_DAC_ConvCpltCallbackCh1>:
 8008042:	b480      	push	{r7}
 8008044:	b083      	sub	sp, #12
 8008046:	af00      	add	r7, sp, #0
 8008048:	6078      	str	r0, [r7, #4]
 800804a:	bf00      	nop
 800804c:	370c      	adds	r7, #12
 800804e:	46bd      	mov	sp, r7
 8008050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008054:	4770      	bx	lr

08008056 <HAL_DAC_ConvHalfCpltCallbackCh1>:
 8008056:	b480      	push	{r7}
 8008058:	b083      	sub	sp, #12
 800805a:	af00      	add	r7, sp, #0
 800805c:	6078      	str	r0, [r7, #4]
 800805e:	bf00      	nop
 8008060:	370c      	adds	r7, #12
 8008062:	46bd      	mov	sp, r7
 8008064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008068:	4770      	bx	lr

0800806a <HAL_DAC_ErrorCallbackCh1>:
 800806a:	b480      	push	{r7}
 800806c:	b083      	sub	sp, #12
 800806e:	af00      	add	r7, sp, #0
 8008070:	6078      	str	r0, [r7, #4]
 8008072:	bf00      	nop
 8008074:	370c      	adds	r7, #12
 8008076:	46bd      	mov	sp, r7
 8008078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800807c:	4770      	bx	lr

0800807e <HAL_DAC_DMAUnderrunCallbackCh1>:
 800807e:	b480      	push	{r7}
 8008080:	b083      	sub	sp, #12
 8008082:	af00      	add	r7, sp, #0
 8008084:	6078      	str	r0, [r7, #4]
 8008086:	bf00      	nop
 8008088:	370c      	adds	r7, #12
 800808a:	46bd      	mov	sp, r7
 800808c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008090:	4770      	bx	lr
	...

08008094 <HAL_DAC_ConfigChannel>:
 8008094:	b580      	push	{r7, lr}
 8008096:	b08a      	sub	sp, #40	; 0x28
 8008098:	af00      	add	r7, sp, #0
 800809a:	60f8      	str	r0, [r7, #12]
 800809c:	60b9      	str	r1, [r7, #8]
 800809e:	607a      	str	r2, [r7, #4]
 80080a0:	2300      	movs	r3, #0
 80080a2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80080a6:	68fb      	ldr	r3, [r7, #12]
 80080a8:	2b00      	cmp	r3, #0
 80080aa:	d002      	beq.n	80080b2 <HAL_DAC_ConfigChannel+0x1e>
 80080ac:	68bb      	ldr	r3, [r7, #8]
 80080ae:	2b00      	cmp	r3, #0
 80080b0:	d101      	bne.n	80080b6 <HAL_DAC_ConfigChannel+0x22>
 80080b2:	2301      	movs	r3, #1
 80080b4:	e12a      	b.n	800830c <HAL_DAC_ConfigChannel+0x278>
 80080b6:	68fb      	ldr	r3, [r7, #12]
 80080b8:	795b      	ldrb	r3, [r3, #5]
 80080ba:	2b01      	cmp	r3, #1
 80080bc:	d101      	bne.n	80080c2 <HAL_DAC_ConfigChannel+0x2e>
 80080be:	2302      	movs	r3, #2
 80080c0:	e124      	b.n	800830c <HAL_DAC_ConfigChannel+0x278>
 80080c2:	68fb      	ldr	r3, [r7, #12]
 80080c4:	2201      	movs	r2, #1
 80080c6:	715a      	strb	r2, [r3, #5]
 80080c8:	68fb      	ldr	r3, [r7, #12]
 80080ca:	2202      	movs	r2, #2
 80080cc:	711a      	strb	r2, [r3, #4]
 80080ce:	68bb      	ldr	r3, [r7, #8]
 80080d0:	681b      	ldr	r3, [r3, #0]
 80080d2:	2b04      	cmp	r3, #4
 80080d4:	d17a      	bne.n	80081cc <HAL_DAC_ConfigChannel+0x138>
 80080d6:	f7fe f88b 	bl	80061f0 <HAL_GetTick>
 80080da:	61f8      	str	r0, [r7, #28]
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	2b00      	cmp	r3, #0
 80080e0:	d13d      	bne.n	800815e <HAL_DAC_ConfigChannel+0xca>
 80080e2:	e018      	b.n	8008116 <HAL_DAC_ConfigChannel+0x82>
 80080e4:	f7fe f884 	bl	80061f0 <HAL_GetTick>
 80080e8:	4602      	mov	r2, r0
 80080ea:	69fb      	ldr	r3, [r7, #28]
 80080ec:	1ad3      	subs	r3, r2, r3
 80080ee:	2b01      	cmp	r3, #1
 80080f0:	d911      	bls.n	8008116 <HAL_DAC_ConfigChannel+0x82>
 80080f2:	68fb      	ldr	r3, [r7, #12]
 80080f4:	681b      	ldr	r3, [r3, #0]
 80080f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80080f8:	4b86      	ldr	r3, [pc, #536]	; (8008314 <HAL_DAC_ConfigChannel+0x280>)
 80080fa:	4013      	ands	r3, r2
 80080fc:	2b00      	cmp	r3, #0
 80080fe:	d00a      	beq.n	8008116 <HAL_DAC_ConfigChannel+0x82>
 8008100:	68fb      	ldr	r3, [r7, #12]
 8008102:	691b      	ldr	r3, [r3, #16]
 8008104:	f043 0208 	orr.w	r2, r3, #8
 8008108:	68fb      	ldr	r3, [r7, #12]
 800810a:	611a      	str	r2, [r3, #16]
 800810c:	68fb      	ldr	r3, [r7, #12]
 800810e:	2203      	movs	r2, #3
 8008110:	711a      	strb	r2, [r3, #4]
 8008112:	2303      	movs	r3, #3
 8008114:	e0fa      	b.n	800830c <HAL_DAC_ConfigChannel+0x278>
 8008116:	68fb      	ldr	r3, [r7, #12]
 8008118:	681b      	ldr	r3, [r3, #0]
 800811a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800811c:	4b7d      	ldr	r3, [pc, #500]	; (8008314 <HAL_DAC_ConfigChannel+0x280>)
 800811e:	4013      	ands	r3, r2
 8008120:	2b00      	cmp	r3, #0
 8008122:	d1df      	bne.n	80080e4 <HAL_DAC_ConfigChannel+0x50>
 8008124:	68fb      	ldr	r3, [r7, #12]
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	68ba      	ldr	r2, [r7, #8]
 800812a:	6992      	ldr	r2, [r2, #24]
 800812c:	641a      	str	r2, [r3, #64]	; 0x40
 800812e:	e020      	b.n	8008172 <HAL_DAC_ConfigChannel+0xde>
 8008130:	f7fe f85e 	bl	80061f0 <HAL_GetTick>
 8008134:	4602      	mov	r2, r0
 8008136:	69fb      	ldr	r3, [r7, #28]
 8008138:	1ad3      	subs	r3, r2, r3
 800813a:	2b01      	cmp	r3, #1
 800813c:	d90f      	bls.n	800815e <HAL_DAC_ConfigChannel+0xca>
 800813e:	68fb      	ldr	r3, [r7, #12]
 8008140:	681b      	ldr	r3, [r3, #0]
 8008142:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008144:	2b00      	cmp	r3, #0
 8008146:	da0a      	bge.n	800815e <HAL_DAC_ConfigChannel+0xca>
 8008148:	68fb      	ldr	r3, [r7, #12]
 800814a:	691b      	ldr	r3, [r3, #16]
 800814c:	f043 0208 	orr.w	r2, r3, #8
 8008150:	68fb      	ldr	r3, [r7, #12]
 8008152:	611a      	str	r2, [r3, #16]
 8008154:	68fb      	ldr	r3, [r7, #12]
 8008156:	2203      	movs	r2, #3
 8008158:	711a      	strb	r2, [r3, #4]
 800815a:	2303      	movs	r3, #3
 800815c:	e0d6      	b.n	800830c <HAL_DAC_ConfigChannel+0x278>
 800815e:	68fb      	ldr	r3, [r7, #12]
 8008160:	681b      	ldr	r3, [r3, #0]
 8008162:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008164:	2b00      	cmp	r3, #0
 8008166:	dbe3      	blt.n	8008130 <HAL_DAC_ConfigChannel+0x9c>
 8008168:	68fb      	ldr	r3, [r7, #12]
 800816a:	681b      	ldr	r3, [r3, #0]
 800816c:	68ba      	ldr	r2, [r7, #8]
 800816e:	6992      	ldr	r2, [r2, #24]
 8008170:	645a      	str	r2, [r3, #68]	; 0x44
 8008172:	68fb      	ldr	r3, [r7, #12]
 8008174:	681b      	ldr	r3, [r3, #0]
 8008176:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	f003 0310 	and.w	r3, r3, #16
 800817e:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008182:	fa01 f303 	lsl.w	r3, r1, r3
 8008186:	43db      	mvns	r3, r3
 8008188:	ea02 0103 	and.w	r1, r2, r3
 800818c:	68bb      	ldr	r3, [r7, #8]
 800818e:	69da      	ldr	r2, [r3, #28]
 8008190:	687b      	ldr	r3, [r7, #4]
 8008192:	f003 0310 	and.w	r3, r3, #16
 8008196:	409a      	lsls	r2, r3
 8008198:	68fb      	ldr	r3, [r7, #12]
 800819a:	681b      	ldr	r3, [r3, #0]
 800819c:	430a      	orrs	r2, r1
 800819e:	649a      	str	r2, [r3, #72]	; 0x48
 80081a0:	68fb      	ldr	r3, [r7, #12]
 80081a2:	681b      	ldr	r3, [r3, #0]
 80081a4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80081a6:	687b      	ldr	r3, [r7, #4]
 80081a8:	f003 0310 	and.w	r3, r3, #16
 80081ac:	21ff      	movs	r1, #255	; 0xff
 80081ae:	fa01 f303 	lsl.w	r3, r1, r3
 80081b2:	43db      	mvns	r3, r3
 80081b4:	ea02 0103 	and.w	r1, r2, r3
 80081b8:	68bb      	ldr	r3, [r7, #8]
 80081ba:	6a1a      	ldr	r2, [r3, #32]
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	f003 0310 	and.w	r3, r3, #16
 80081c2:	409a      	lsls	r2, r3
 80081c4:	68fb      	ldr	r3, [r7, #12]
 80081c6:	681b      	ldr	r3, [r3, #0]
 80081c8:	430a      	orrs	r2, r1
 80081ca:	64da      	str	r2, [r3, #76]	; 0x4c
 80081cc:	68bb      	ldr	r3, [r7, #8]
 80081ce:	691b      	ldr	r3, [r3, #16]
 80081d0:	2b01      	cmp	r3, #1
 80081d2:	d11d      	bne.n	8008210 <HAL_DAC_ConfigChannel+0x17c>
 80081d4:	68fb      	ldr	r3, [r7, #12]
 80081d6:	681b      	ldr	r3, [r3, #0]
 80081d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80081da:	61bb      	str	r3, [r7, #24]
 80081dc:	687b      	ldr	r3, [r7, #4]
 80081de:	f003 0310 	and.w	r3, r3, #16
 80081e2:	221f      	movs	r2, #31
 80081e4:	fa02 f303 	lsl.w	r3, r2, r3
 80081e8:	43db      	mvns	r3, r3
 80081ea:	69ba      	ldr	r2, [r7, #24]
 80081ec:	4013      	ands	r3, r2
 80081ee:	61bb      	str	r3, [r7, #24]
 80081f0:	68bb      	ldr	r3, [r7, #8]
 80081f2:	695b      	ldr	r3, [r3, #20]
 80081f4:	617b      	str	r3, [r7, #20]
 80081f6:	687b      	ldr	r3, [r7, #4]
 80081f8:	f003 0310 	and.w	r3, r3, #16
 80081fc:	697a      	ldr	r2, [r7, #20]
 80081fe:	fa02 f303 	lsl.w	r3, r2, r3
 8008202:	69ba      	ldr	r2, [r7, #24]
 8008204:	4313      	orrs	r3, r2
 8008206:	61bb      	str	r3, [r7, #24]
 8008208:	68fb      	ldr	r3, [r7, #12]
 800820a:	681b      	ldr	r3, [r3, #0]
 800820c:	69ba      	ldr	r2, [r7, #24]
 800820e:	639a      	str	r2, [r3, #56]	; 0x38
 8008210:	68fb      	ldr	r3, [r7, #12]
 8008212:	681b      	ldr	r3, [r3, #0]
 8008214:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008216:	61bb      	str	r3, [r7, #24]
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	f003 0310 	and.w	r3, r3, #16
 800821e:	2207      	movs	r2, #7
 8008220:	fa02 f303 	lsl.w	r3, r2, r3
 8008224:	43db      	mvns	r3, r3
 8008226:	69ba      	ldr	r2, [r7, #24]
 8008228:	4013      	ands	r3, r2
 800822a:	61bb      	str	r3, [r7, #24]
 800822c:	68bb      	ldr	r3, [r7, #8]
 800822e:	68db      	ldr	r3, [r3, #12]
 8008230:	2b01      	cmp	r3, #1
 8008232:	d102      	bne.n	800823a <HAL_DAC_ConfigChannel+0x1a6>
 8008234:	2300      	movs	r3, #0
 8008236:	627b      	str	r3, [r7, #36]	; 0x24
 8008238:	e00f      	b.n	800825a <HAL_DAC_ConfigChannel+0x1c6>
 800823a:	68bb      	ldr	r3, [r7, #8]
 800823c:	68db      	ldr	r3, [r3, #12]
 800823e:	2b02      	cmp	r3, #2
 8008240:	d102      	bne.n	8008248 <HAL_DAC_ConfigChannel+0x1b4>
 8008242:	2301      	movs	r3, #1
 8008244:	627b      	str	r3, [r7, #36]	; 0x24
 8008246:	e008      	b.n	800825a <HAL_DAC_ConfigChannel+0x1c6>
 8008248:	68bb      	ldr	r3, [r7, #8]
 800824a:	689b      	ldr	r3, [r3, #8]
 800824c:	2b00      	cmp	r3, #0
 800824e:	d102      	bne.n	8008256 <HAL_DAC_ConfigChannel+0x1c2>
 8008250:	2301      	movs	r3, #1
 8008252:	627b      	str	r3, [r7, #36]	; 0x24
 8008254:	e001      	b.n	800825a <HAL_DAC_ConfigChannel+0x1c6>
 8008256:	2300      	movs	r3, #0
 8008258:	627b      	str	r3, [r7, #36]	; 0x24
 800825a:	68bb      	ldr	r3, [r7, #8]
 800825c:	681a      	ldr	r2, [r3, #0]
 800825e:	68bb      	ldr	r3, [r7, #8]
 8008260:	689b      	ldr	r3, [r3, #8]
 8008262:	4313      	orrs	r3, r2
 8008264:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8008266:	4313      	orrs	r3, r2
 8008268:	617b      	str	r3, [r7, #20]
 800826a:	687b      	ldr	r3, [r7, #4]
 800826c:	f003 0310 	and.w	r3, r3, #16
 8008270:	697a      	ldr	r2, [r7, #20]
 8008272:	fa02 f303 	lsl.w	r3, r2, r3
 8008276:	69ba      	ldr	r2, [r7, #24]
 8008278:	4313      	orrs	r3, r2
 800827a:	61bb      	str	r3, [r7, #24]
 800827c:	68fb      	ldr	r3, [r7, #12]
 800827e:	681b      	ldr	r3, [r3, #0]
 8008280:	69ba      	ldr	r2, [r7, #24]
 8008282:	63da      	str	r2, [r3, #60]	; 0x3c
 8008284:	68fb      	ldr	r3, [r7, #12]
 8008286:	681b      	ldr	r3, [r3, #0]
 8008288:	6819      	ldr	r1, [r3, #0]
 800828a:	687b      	ldr	r3, [r7, #4]
 800828c:	f003 0310 	and.w	r3, r3, #16
 8008290:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8008294:	fa02 f303 	lsl.w	r3, r2, r3
 8008298:	43da      	mvns	r2, r3
 800829a:	68fb      	ldr	r3, [r7, #12]
 800829c:	681b      	ldr	r3, [r3, #0]
 800829e:	400a      	ands	r2, r1
 80082a0:	601a      	str	r2, [r3, #0]
 80082a2:	68fb      	ldr	r3, [r7, #12]
 80082a4:	681b      	ldr	r3, [r3, #0]
 80082a6:	681b      	ldr	r3, [r3, #0]
 80082a8:	61bb      	str	r3, [r7, #24]
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	f003 0310 	and.w	r3, r3, #16
 80082b0:	f640 72fe 	movw	r2, #4094	; 0xffe
 80082b4:	fa02 f303 	lsl.w	r3, r2, r3
 80082b8:	43db      	mvns	r3, r3
 80082ba:	69ba      	ldr	r2, [r7, #24]
 80082bc:	4013      	ands	r3, r2
 80082be:	61bb      	str	r3, [r7, #24]
 80082c0:	68bb      	ldr	r3, [r7, #8]
 80082c2:	685b      	ldr	r3, [r3, #4]
 80082c4:	617b      	str	r3, [r7, #20]
 80082c6:	687b      	ldr	r3, [r7, #4]
 80082c8:	f003 0310 	and.w	r3, r3, #16
 80082cc:	697a      	ldr	r2, [r7, #20]
 80082ce:	fa02 f303 	lsl.w	r3, r2, r3
 80082d2:	69ba      	ldr	r2, [r7, #24]
 80082d4:	4313      	orrs	r3, r2
 80082d6:	61bb      	str	r3, [r7, #24]
 80082d8:	68fb      	ldr	r3, [r7, #12]
 80082da:	681b      	ldr	r3, [r3, #0]
 80082dc:	69ba      	ldr	r2, [r7, #24]
 80082de:	601a      	str	r2, [r3, #0]
 80082e0:	68fb      	ldr	r3, [r7, #12]
 80082e2:	681b      	ldr	r3, [r3, #0]
 80082e4:	6819      	ldr	r1, [r3, #0]
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	f003 0310 	and.w	r3, r3, #16
 80082ec:	22c0      	movs	r2, #192	; 0xc0
 80082ee:	fa02 f303 	lsl.w	r3, r2, r3
 80082f2:	43da      	mvns	r2, r3
 80082f4:	68fb      	ldr	r3, [r7, #12]
 80082f6:	681b      	ldr	r3, [r3, #0]
 80082f8:	400a      	ands	r2, r1
 80082fa:	601a      	str	r2, [r3, #0]
 80082fc:	68fb      	ldr	r3, [r7, #12]
 80082fe:	2201      	movs	r2, #1
 8008300:	711a      	strb	r2, [r3, #4]
 8008302:	68fb      	ldr	r3, [r7, #12]
 8008304:	2200      	movs	r2, #0
 8008306:	715a      	strb	r2, [r3, #5]
 8008308:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800830c:	4618      	mov	r0, r3
 800830e:	3728      	adds	r7, #40	; 0x28
 8008310:	46bd      	mov	sp, r7
 8008312:	bd80      	pop	{r7, pc}
 8008314:	20008000 	.word	0x20008000

08008318 <DAC_DMAConvCpltCh1>:
 8008318:	b580      	push	{r7, lr}
 800831a:	b084      	sub	sp, #16
 800831c:	af00      	add	r7, sp, #0
 800831e:	6078      	str	r0, [r7, #4]
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008324:	60fb      	str	r3, [r7, #12]
 8008326:	68f8      	ldr	r0, [r7, #12]
 8008328:	f7ff fe8b 	bl	8008042 <HAL_DAC_ConvCpltCallbackCh1>
 800832c:	68fb      	ldr	r3, [r7, #12]
 800832e:	2201      	movs	r2, #1
 8008330:	711a      	strb	r2, [r3, #4]
 8008332:	bf00      	nop
 8008334:	3710      	adds	r7, #16
 8008336:	46bd      	mov	sp, r7
 8008338:	bd80      	pop	{r7, pc}

0800833a <DAC_DMAHalfConvCpltCh1>:
 800833a:	b580      	push	{r7, lr}
 800833c:	b084      	sub	sp, #16
 800833e:	af00      	add	r7, sp, #0
 8008340:	6078      	str	r0, [r7, #4]
 8008342:	687b      	ldr	r3, [r7, #4]
 8008344:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008346:	60fb      	str	r3, [r7, #12]
 8008348:	68f8      	ldr	r0, [r7, #12]
 800834a:	f7ff fe84 	bl	8008056 <HAL_DAC_ConvHalfCpltCallbackCh1>
 800834e:	bf00      	nop
 8008350:	3710      	adds	r7, #16
 8008352:	46bd      	mov	sp, r7
 8008354:	bd80      	pop	{r7, pc}

08008356 <DAC_DMAErrorCh1>:
 8008356:	b580      	push	{r7, lr}
 8008358:	b084      	sub	sp, #16
 800835a:	af00      	add	r7, sp, #0
 800835c:	6078      	str	r0, [r7, #4]
 800835e:	687b      	ldr	r3, [r7, #4]
 8008360:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008362:	60fb      	str	r3, [r7, #12]
 8008364:	68fb      	ldr	r3, [r7, #12]
 8008366:	691b      	ldr	r3, [r3, #16]
 8008368:	f043 0204 	orr.w	r2, r3, #4
 800836c:	68fb      	ldr	r3, [r7, #12]
 800836e:	611a      	str	r2, [r3, #16]
 8008370:	68f8      	ldr	r0, [r7, #12]
 8008372:	f7ff fe7a 	bl	800806a <HAL_DAC_ErrorCallbackCh1>
 8008376:	68fb      	ldr	r3, [r7, #12]
 8008378:	2201      	movs	r2, #1
 800837a:	711a      	strb	r2, [r3, #4]
 800837c:	bf00      	nop
 800837e:	3710      	adds	r7, #16
 8008380:	46bd      	mov	sp, r7
 8008382:	bd80      	pop	{r7, pc}

08008384 <HAL_DACEx_ConvCpltCallbackCh2>:
 8008384:	b480      	push	{r7}
 8008386:	b083      	sub	sp, #12
 8008388:	af00      	add	r7, sp, #0
 800838a:	6078      	str	r0, [r7, #4]
 800838c:	bf00      	nop
 800838e:	370c      	adds	r7, #12
 8008390:	46bd      	mov	sp, r7
 8008392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008396:	4770      	bx	lr

08008398 <HAL_DACEx_ConvHalfCpltCallbackCh2>:
 8008398:	b480      	push	{r7}
 800839a:	b083      	sub	sp, #12
 800839c:	af00      	add	r7, sp, #0
 800839e:	6078      	str	r0, [r7, #4]
 80083a0:	bf00      	nop
 80083a2:	370c      	adds	r7, #12
 80083a4:	46bd      	mov	sp, r7
 80083a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083aa:	4770      	bx	lr

080083ac <HAL_DACEx_ErrorCallbackCh2>:
 80083ac:	b480      	push	{r7}
 80083ae:	b083      	sub	sp, #12
 80083b0:	af00      	add	r7, sp, #0
 80083b2:	6078      	str	r0, [r7, #4]
 80083b4:	bf00      	nop
 80083b6:	370c      	adds	r7, #12
 80083b8:	46bd      	mov	sp, r7
 80083ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083be:	4770      	bx	lr

080083c0 <HAL_DACEx_DMAUnderrunCallbackCh2>:
 80083c0:	b480      	push	{r7}
 80083c2:	b083      	sub	sp, #12
 80083c4:	af00      	add	r7, sp, #0
 80083c6:	6078      	str	r0, [r7, #4]
 80083c8:	bf00      	nop
 80083ca:	370c      	adds	r7, #12
 80083cc:	46bd      	mov	sp, r7
 80083ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083d2:	4770      	bx	lr

080083d4 <DAC_DMAConvCpltCh2>:
 80083d4:	b580      	push	{r7, lr}
 80083d6:	b084      	sub	sp, #16
 80083d8:	af00      	add	r7, sp, #0
 80083da:	6078      	str	r0, [r7, #4]
 80083dc:	687b      	ldr	r3, [r7, #4]
 80083de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80083e0:	60fb      	str	r3, [r7, #12]
 80083e2:	68f8      	ldr	r0, [r7, #12]
 80083e4:	f7ff ffce 	bl	8008384 <HAL_DACEx_ConvCpltCallbackCh2>
 80083e8:	68fb      	ldr	r3, [r7, #12]
 80083ea:	2201      	movs	r2, #1
 80083ec:	711a      	strb	r2, [r3, #4]
 80083ee:	bf00      	nop
 80083f0:	3710      	adds	r7, #16
 80083f2:	46bd      	mov	sp, r7
 80083f4:	bd80      	pop	{r7, pc}

080083f6 <DAC_DMAHalfConvCpltCh2>:
 80083f6:	b580      	push	{r7, lr}
 80083f8:	b084      	sub	sp, #16
 80083fa:	af00      	add	r7, sp, #0
 80083fc:	6078      	str	r0, [r7, #4]
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008402:	60fb      	str	r3, [r7, #12]
 8008404:	68f8      	ldr	r0, [r7, #12]
 8008406:	f7ff ffc7 	bl	8008398 <HAL_DACEx_ConvHalfCpltCallbackCh2>
 800840a:	bf00      	nop
 800840c:	3710      	adds	r7, #16
 800840e:	46bd      	mov	sp, r7
 8008410:	bd80      	pop	{r7, pc}

08008412 <DAC_DMAErrorCh2>:
 8008412:	b580      	push	{r7, lr}
 8008414:	b084      	sub	sp, #16
 8008416:	af00      	add	r7, sp, #0
 8008418:	6078      	str	r0, [r7, #4]
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800841e:	60fb      	str	r3, [r7, #12]
 8008420:	68fb      	ldr	r3, [r7, #12]
 8008422:	691b      	ldr	r3, [r3, #16]
 8008424:	f043 0204 	orr.w	r2, r3, #4
 8008428:	68fb      	ldr	r3, [r7, #12]
 800842a:	611a      	str	r2, [r3, #16]
 800842c:	68f8      	ldr	r0, [r7, #12]
 800842e:	f7ff ffbd 	bl	80083ac <HAL_DACEx_ErrorCallbackCh2>
 8008432:	68fb      	ldr	r3, [r7, #12]
 8008434:	2201      	movs	r2, #1
 8008436:	711a      	strb	r2, [r3, #4]
 8008438:	bf00      	nop
 800843a:	3710      	adds	r7, #16
 800843c:	46bd      	mov	sp, r7
 800843e:	bd80      	pop	{r7, pc}

08008440 <HAL_DMA_Init>:
 8008440:	b580      	push	{r7, lr}
 8008442:	b086      	sub	sp, #24
 8008444:	af00      	add	r7, sp, #0
 8008446:	6078      	str	r0, [r7, #4]
 8008448:	f7fd fed2 	bl	80061f0 <HAL_GetTick>
 800844c:	6138      	str	r0, [r7, #16]
 800844e:	687b      	ldr	r3, [r7, #4]
 8008450:	2b00      	cmp	r3, #0
 8008452:	d101      	bne.n	8008458 <HAL_DMA_Init+0x18>
 8008454:	2301      	movs	r3, #1
 8008456:	e316      	b.n	8008a86 <HAL_DMA_Init+0x646>
 8008458:	687b      	ldr	r3, [r7, #4]
 800845a:	681b      	ldr	r3, [r3, #0]
 800845c:	4a66      	ldr	r2, [pc, #408]	; (80085f8 <HAL_DMA_Init+0x1b8>)
 800845e:	4293      	cmp	r3, r2
 8008460:	d04a      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 8008462:	687b      	ldr	r3, [r7, #4]
 8008464:	681b      	ldr	r3, [r3, #0]
 8008466:	4a65      	ldr	r2, [pc, #404]	; (80085fc <HAL_DMA_Init+0x1bc>)
 8008468:	4293      	cmp	r3, r2
 800846a:	d045      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 800846c:	687b      	ldr	r3, [r7, #4]
 800846e:	681b      	ldr	r3, [r3, #0]
 8008470:	4a63      	ldr	r2, [pc, #396]	; (8008600 <HAL_DMA_Init+0x1c0>)
 8008472:	4293      	cmp	r3, r2
 8008474:	d040      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 8008476:	687b      	ldr	r3, [r7, #4]
 8008478:	681b      	ldr	r3, [r3, #0]
 800847a:	4a62      	ldr	r2, [pc, #392]	; (8008604 <HAL_DMA_Init+0x1c4>)
 800847c:	4293      	cmp	r3, r2
 800847e:	d03b      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 8008480:	687b      	ldr	r3, [r7, #4]
 8008482:	681b      	ldr	r3, [r3, #0]
 8008484:	4a60      	ldr	r2, [pc, #384]	; (8008608 <HAL_DMA_Init+0x1c8>)
 8008486:	4293      	cmp	r3, r2
 8008488:	d036      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 800848a:	687b      	ldr	r3, [r7, #4]
 800848c:	681b      	ldr	r3, [r3, #0]
 800848e:	4a5f      	ldr	r2, [pc, #380]	; (800860c <HAL_DMA_Init+0x1cc>)
 8008490:	4293      	cmp	r3, r2
 8008492:	d031      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 8008494:	687b      	ldr	r3, [r7, #4]
 8008496:	681b      	ldr	r3, [r3, #0]
 8008498:	4a5d      	ldr	r2, [pc, #372]	; (8008610 <HAL_DMA_Init+0x1d0>)
 800849a:	4293      	cmp	r3, r2
 800849c:	d02c      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 800849e:	687b      	ldr	r3, [r7, #4]
 80084a0:	681b      	ldr	r3, [r3, #0]
 80084a2:	4a5c      	ldr	r2, [pc, #368]	; (8008614 <HAL_DMA_Init+0x1d4>)
 80084a4:	4293      	cmp	r3, r2
 80084a6:	d027      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 80084a8:	687b      	ldr	r3, [r7, #4]
 80084aa:	681b      	ldr	r3, [r3, #0]
 80084ac:	4a5a      	ldr	r2, [pc, #360]	; (8008618 <HAL_DMA_Init+0x1d8>)
 80084ae:	4293      	cmp	r3, r2
 80084b0:	d022      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 80084b2:	687b      	ldr	r3, [r7, #4]
 80084b4:	681b      	ldr	r3, [r3, #0]
 80084b6:	4a59      	ldr	r2, [pc, #356]	; (800861c <HAL_DMA_Init+0x1dc>)
 80084b8:	4293      	cmp	r3, r2
 80084ba:	d01d      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 80084bc:	687b      	ldr	r3, [r7, #4]
 80084be:	681b      	ldr	r3, [r3, #0]
 80084c0:	4a57      	ldr	r2, [pc, #348]	; (8008620 <HAL_DMA_Init+0x1e0>)
 80084c2:	4293      	cmp	r3, r2
 80084c4:	d018      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	681b      	ldr	r3, [r3, #0]
 80084ca:	4a56      	ldr	r2, [pc, #344]	; (8008624 <HAL_DMA_Init+0x1e4>)
 80084cc:	4293      	cmp	r3, r2
 80084ce:	d013      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 80084d0:	687b      	ldr	r3, [r7, #4]
 80084d2:	681b      	ldr	r3, [r3, #0]
 80084d4:	4a54      	ldr	r2, [pc, #336]	; (8008628 <HAL_DMA_Init+0x1e8>)
 80084d6:	4293      	cmp	r3, r2
 80084d8:	d00e      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 80084da:	687b      	ldr	r3, [r7, #4]
 80084dc:	681b      	ldr	r3, [r3, #0]
 80084de:	4a53      	ldr	r2, [pc, #332]	; (800862c <HAL_DMA_Init+0x1ec>)
 80084e0:	4293      	cmp	r3, r2
 80084e2:	d009      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 80084e4:	687b      	ldr	r3, [r7, #4]
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	4a51      	ldr	r2, [pc, #324]	; (8008630 <HAL_DMA_Init+0x1f0>)
 80084ea:	4293      	cmp	r3, r2
 80084ec:	d004      	beq.n	80084f8 <HAL_DMA_Init+0xb8>
 80084ee:	687b      	ldr	r3, [r7, #4]
 80084f0:	681b      	ldr	r3, [r3, #0]
 80084f2:	4a50      	ldr	r2, [pc, #320]	; (8008634 <HAL_DMA_Init+0x1f4>)
 80084f4:	4293      	cmp	r3, r2
 80084f6:	d101      	bne.n	80084fc <HAL_DMA_Init+0xbc>
 80084f8:	2301      	movs	r3, #1
 80084fa:	e000      	b.n	80084fe <HAL_DMA_Init+0xbe>
 80084fc:	2300      	movs	r3, #0
 80084fe:	2b00      	cmp	r3, #0
 8008500:	f000 813b 	beq.w	800877a <HAL_DMA_Init+0x33a>
 8008504:	687b      	ldr	r3, [r7, #4]
 8008506:	2202      	movs	r2, #2
 8008508:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800850c:	687b      	ldr	r3, [r7, #4]
 800850e:	2200      	movs	r2, #0
 8008510:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008514:	687b      	ldr	r3, [r7, #4]
 8008516:	681b      	ldr	r3, [r3, #0]
 8008518:	4a37      	ldr	r2, [pc, #220]	; (80085f8 <HAL_DMA_Init+0x1b8>)
 800851a:	4293      	cmp	r3, r2
 800851c:	d04a      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 800851e:	687b      	ldr	r3, [r7, #4]
 8008520:	681b      	ldr	r3, [r3, #0]
 8008522:	4a36      	ldr	r2, [pc, #216]	; (80085fc <HAL_DMA_Init+0x1bc>)
 8008524:	4293      	cmp	r3, r2
 8008526:	d045      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 8008528:	687b      	ldr	r3, [r7, #4]
 800852a:	681b      	ldr	r3, [r3, #0]
 800852c:	4a34      	ldr	r2, [pc, #208]	; (8008600 <HAL_DMA_Init+0x1c0>)
 800852e:	4293      	cmp	r3, r2
 8008530:	d040      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	681b      	ldr	r3, [r3, #0]
 8008536:	4a33      	ldr	r2, [pc, #204]	; (8008604 <HAL_DMA_Init+0x1c4>)
 8008538:	4293      	cmp	r3, r2
 800853a:	d03b      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 800853c:	687b      	ldr	r3, [r7, #4]
 800853e:	681b      	ldr	r3, [r3, #0]
 8008540:	4a31      	ldr	r2, [pc, #196]	; (8008608 <HAL_DMA_Init+0x1c8>)
 8008542:	4293      	cmp	r3, r2
 8008544:	d036      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 8008546:	687b      	ldr	r3, [r7, #4]
 8008548:	681b      	ldr	r3, [r3, #0]
 800854a:	4a30      	ldr	r2, [pc, #192]	; (800860c <HAL_DMA_Init+0x1cc>)
 800854c:	4293      	cmp	r3, r2
 800854e:	d031      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 8008550:	687b      	ldr	r3, [r7, #4]
 8008552:	681b      	ldr	r3, [r3, #0]
 8008554:	4a2e      	ldr	r2, [pc, #184]	; (8008610 <HAL_DMA_Init+0x1d0>)
 8008556:	4293      	cmp	r3, r2
 8008558:	d02c      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	681b      	ldr	r3, [r3, #0]
 800855e:	4a2d      	ldr	r2, [pc, #180]	; (8008614 <HAL_DMA_Init+0x1d4>)
 8008560:	4293      	cmp	r3, r2
 8008562:	d027      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 8008564:	687b      	ldr	r3, [r7, #4]
 8008566:	681b      	ldr	r3, [r3, #0]
 8008568:	4a2b      	ldr	r2, [pc, #172]	; (8008618 <HAL_DMA_Init+0x1d8>)
 800856a:	4293      	cmp	r3, r2
 800856c:	d022      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 800856e:	687b      	ldr	r3, [r7, #4]
 8008570:	681b      	ldr	r3, [r3, #0]
 8008572:	4a2a      	ldr	r2, [pc, #168]	; (800861c <HAL_DMA_Init+0x1dc>)
 8008574:	4293      	cmp	r3, r2
 8008576:	d01d      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 8008578:	687b      	ldr	r3, [r7, #4]
 800857a:	681b      	ldr	r3, [r3, #0]
 800857c:	4a28      	ldr	r2, [pc, #160]	; (8008620 <HAL_DMA_Init+0x1e0>)
 800857e:	4293      	cmp	r3, r2
 8008580:	d018      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 8008582:	687b      	ldr	r3, [r7, #4]
 8008584:	681b      	ldr	r3, [r3, #0]
 8008586:	4a27      	ldr	r2, [pc, #156]	; (8008624 <HAL_DMA_Init+0x1e4>)
 8008588:	4293      	cmp	r3, r2
 800858a:	d013      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 800858c:	687b      	ldr	r3, [r7, #4]
 800858e:	681b      	ldr	r3, [r3, #0]
 8008590:	4a25      	ldr	r2, [pc, #148]	; (8008628 <HAL_DMA_Init+0x1e8>)
 8008592:	4293      	cmp	r3, r2
 8008594:	d00e      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 8008596:	687b      	ldr	r3, [r7, #4]
 8008598:	681b      	ldr	r3, [r3, #0]
 800859a:	4a24      	ldr	r2, [pc, #144]	; (800862c <HAL_DMA_Init+0x1ec>)
 800859c:	4293      	cmp	r3, r2
 800859e:	d009      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 80085a0:	687b      	ldr	r3, [r7, #4]
 80085a2:	681b      	ldr	r3, [r3, #0]
 80085a4:	4a22      	ldr	r2, [pc, #136]	; (8008630 <HAL_DMA_Init+0x1f0>)
 80085a6:	4293      	cmp	r3, r2
 80085a8:	d004      	beq.n	80085b4 <HAL_DMA_Init+0x174>
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	681b      	ldr	r3, [r3, #0]
 80085ae:	4a21      	ldr	r2, [pc, #132]	; (8008634 <HAL_DMA_Init+0x1f4>)
 80085b0:	4293      	cmp	r3, r2
 80085b2:	d108      	bne.n	80085c6 <HAL_DMA_Init+0x186>
 80085b4:	687b      	ldr	r3, [r7, #4]
 80085b6:	681b      	ldr	r3, [r3, #0]
 80085b8:	681a      	ldr	r2, [r3, #0]
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	681b      	ldr	r3, [r3, #0]
 80085be:	f022 0201 	bic.w	r2, r2, #1
 80085c2:	601a      	str	r2, [r3, #0]
 80085c4:	e007      	b.n	80085d6 <HAL_DMA_Init+0x196>
 80085c6:	687b      	ldr	r3, [r7, #4]
 80085c8:	681b      	ldr	r3, [r3, #0]
 80085ca:	681a      	ldr	r2, [r3, #0]
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	681b      	ldr	r3, [r3, #0]
 80085d0:	f022 0201 	bic.w	r2, r2, #1
 80085d4:	601a      	str	r2, [r3, #0]
 80085d6:	e02f      	b.n	8008638 <HAL_DMA_Init+0x1f8>
 80085d8:	f7fd fe0a 	bl	80061f0 <HAL_GetTick>
 80085dc:	4602      	mov	r2, r0
 80085de:	693b      	ldr	r3, [r7, #16]
 80085e0:	1ad3      	subs	r3, r2, r3
 80085e2:	2b05      	cmp	r3, #5
 80085e4:	d928      	bls.n	8008638 <HAL_DMA_Init+0x1f8>
 80085e6:	687b      	ldr	r3, [r7, #4]
 80085e8:	2220      	movs	r2, #32
 80085ea:	655a      	str	r2, [r3, #84]	; 0x54
 80085ec:	687b      	ldr	r3, [r7, #4]
 80085ee:	2203      	movs	r2, #3
 80085f0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80085f4:	2301      	movs	r3, #1
 80085f6:	e246      	b.n	8008a86 <HAL_DMA_Init+0x646>
 80085f8:	40020010 	.word	0x40020010
 80085fc:	40020028 	.word	0x40020028
 8008600:	40020040 	.word	0x40020040
 8008604:	40020058 	.word	0x40020058
 8008608:	40020070 	.word	0x40020070
 800860c:	40020088 	.word	0x40020088
 8008610:	400200a0 	.word	0x400200a0
 8008614:	400200b8 	.word	0x400200b8
 8008618:	40020410 	.word	0x40020410
 800861c:	40020428 	.word	0x40020428
 8008620:	40020440 	.word	0x40020440
 8008624:	40020458 	.word	0x40020458
 8008628:	40020470 	.word	0x40020470
 800862c:	40020488 	.word	0x40020488
 8008630:	400204a0 	.word	0x400204a0
 8008634:	400204b8 	.word	0x400204b8
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	681b      	ldr	r3, [r3, #0]
 800863c:	681b      	ldr	r3, [r3, #0]
 800863e:	f003 0301 	and.w	r3, r3, #1
 8008642:	2b00      	cmp	r3, #0
 8008644:	d1c8      	bne.n	80085d8 <HAL_DMA_Init+0x198>
 8008646:	687b      	ldr	r3, [r7, #4]
 8008648:	681b      	ldr	r3, [r3, #0]
 800864a:	681b      	ldr	r3, [r3, #0]
 800864c:	617b      	str	r3, [r7, #20]
 800864e:	697a      	ldr	r2, [r7, #20]
 8008650:	4b83      	ldr	r3, [pc, #524]	; (8008860 <HAL_DMA_Init+0x420>)
 8008652:	4013      	ands	r3, r2
 8008654:	617b      	str	r3, [r7, #20]
 8008656:	687b      	ldr	r3, [r7, #4]
 8008658:	689a      	ldr	r2, [r3, #8]
 800865a:	687b      	ldr	r3, [r7, #4]
 800865c:	68db      	ldr	r3, [r3, #12]
 800865e:	431a      	orrs	r2, r3
 8008660:	687b      	ldr	r3, [r7, #4]
 8008662:	691b      	ldr	r3, [r3, #16]
 8008664:	431a      	orrs	r2, r3
 8008666:	687b      	ldr	r3, [r7, #4]
 8008668:	695b      	ldr	r3, [r3, #20]
 800866a:	431a      	orrs	r2, r3
 800866c:	687b      	ldr	r3, [r7, #4]
 800866e:	699b      	ldr	r3, [r3, #24]
 8008670:	431a      	orrs	r2, r3
 8008672:	687b      	ldr	r3, [r7, #4]
 8008674:	69db      	ldr	r3, [r3, #28]
 8008676:	431a      	orrs	r2, r3
 8008678:	687b      	ldr	r3, [r7, #4]
 800867a:	6a1b      	ldr	r3, [r3, #32]
 800867c:	4313      	orrs	r3, r2
 800867e:	697a      	ldr	r2, [r7, #20]
 8008680:	4313      	orrs	r3, r2
 8008682:	617b      	str	r3, [r7, #20]
 8008684:	687b      	ldr	r3, [r7, #4]
 8008686:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008688:	2b04      	cmp	r3, #4
 800868a:	d107      	bne.n	800869c <HAL_DMA_Init+0x25c>
 800868c:	687b      	ldr	r3, [r7, #4]
 800868e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008690:	687b      	ldr	r3, [r7, #4]
 8008692:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008694:	4313      	orrs	r3, r2
 8008696:	697a      	ldr	r2, [r7, #20]
 8008698:	4313      	orrs	r3, r2
 800869a:	617b      	str	r3, [r7, #20]
 800869c:	4b71      	ldr	r3, [pc, #452]	; (8008864 <HAL_DMA_Init+0x424>)
 800869e:	681a      	ldr	r2, [r3, #0]
 80086a0:	4b71      	ldr	r3, [pc, #452]	; (8008868 <HAL_DMA_Init+0x428>)
 80086a2:	4013      	ands	r3, r2
 80086a4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80086a8:	d328      	bcc.n	80086fc <HAL_DMA_Init+0x2bc>
 80086aa:	687b      	ldr	r3, [r7, #4]
 80086ac:	685b      	ldr	r3, [r3, #4]
 80086ae:	2b28      	cmp	r3, #40	; 0x28
 80086b0:	d903      	bls.n	80086ba <HAL_DMA_Init+0x27a>
 80086b2:	687b      	ldr	r3, [r7, #4]
 80086b4:	685b      	ldr	r3, [r3, #4]
 80086b6:	2b2e      	cmp	r3, #46	; 0x2e
 80086b8:	d917      	bls.n	80086ea <HAL_DMA_Init+0x2aa>
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	685b      	ldr	r3, [r3, #4]
 80086be:	2b3e      	cmp	r3, #62	; 0x3e
 80086c0:	d903      	bls.n	80086ca <HAL_DMA_Init+0x28a>
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	685b      	ldr	r3, [r3, #4]
 80086c6:	2b42      	cmp	r3, #66	; 0x42
 80086c8:	d90f      	bls.n	80086ea <HAL_DMA_Init+0x2aa>
 80086ca:	687b      	ldr	r3, [r7, #4]
 80086cc:	685b      	ldr	r3, [r3, #4]
 80086ce:	2b46      	cmp	r3, #70	; 0x46
 80086d0:	d903      	bls.n	80086da <HAL_DMA_Init+0x29a>
 80086d2:	687b      	ldr	r3, [r7, #4]
 80086d4:	685b      	ldr	r3, [r3, #4]
 80086d6:	2b48      	cmp	r3, #72	; 0x48
 80086d8:	d907      	bls.n	80086ea <HAL_DMA_Init+0x2aa>
 80086da:	687b      	ldr	r3, [r7, #4]
 80086dc:	685b      	ldr	r3, [r3, #4]
 80086de:	2b4e      	cmp	r3, #78	; 0x4e
 80086e0:	d905      	bls.n	80086ee <HAL_DMA_Init+0x2ae>
 80086e2:	687b      	ldr	r3, [r7, #4]
 80086e4:	685b      	ldr	r3, [r3, #4]
 80086e6:	2b52      	cmp	r3, #82	; 0x52
 80086e8:	d801      	bhi.n	80086ee <HAL_DMA_Init+0x2ae>
 80086ea:	2301      	movs	r3, #1
 80086ec:	e000      	b.n	80086f0 <HAL_DMA_Init+0x2b0>
 80086ee:	2300      	movs	r3, #0
 80086f0:	2b00      	cmp	r3, #0
 80086f2:	d003      	beq.n	80086fc <HAL_DMA_Init+0x2bc>
 80086f4:	697b      	ldr	r3, [r7, #20]
 80086f6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80086fa:	617b      	str	r3, [r7, #20]
 80086fc:	687b      	ldr	r3, [r7, #4]
 80086fe:	681b      	ldr	r3, [r3, #0]
 8008700:	697a      	ldr	r2, [r7, #20]
 8008702:	601a      	str	r2, [r3, #0]
 8008704:	687b      	ldr	r3, [r7, #4]
 8008706:	681b      	ldr	r3, [r3, #0]
 8008708:	695b      	ldr	r3, [r3, #20]
 800870a:	617b      	str	r3, [r7, #20]
 800870c:	697b      	ldr	r3, [r7, #20]
 800870e:	f023 0307 	bic.w	r3, r3, #7
 8008712:	617b      	str	r3, [r7, #20]
 8008714:	687b      	ldr	r3, [r7, #4]
 8008716:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008718:	697a      	ldr	r2, [r7, #20]
 800871a:	4313      	orrs	r3, r2
 800871c:	617b      	str	r3, [r7, #20]
 800871e:	687b      	ldr	r3, [r7, #4]
 8008720:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008722:	2b04      	cmp	r3, #4
 8008724:	d117      	bne.n	8008756 <HAL_DMA_Init+0x316>
 8008726:	687b      	ldr	r3, [r7, #4]
 8008728:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800872a:	697a      	ldr	r2, [r7, #20]
 800872c:	4313      	orrs	r3, r2
 800872e:	617b      	str	r3, [r7, #20]
 8008730:	687b      	ldr	r3, [r7, #4]
 8008732:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008734:	2b00      	cmp	r3, #0
 8008736:	d00e      	beq.n	8008756 <HAL_DMA_Init+0x316>
 8008738:	6878      	ldr	r0, [r7, #4]
 800873a:	f002 fb4d 	bl	800add8 <DMA_CheckFifoParam>
 800873e:	4603      	mov	r3, r0
 8008740:	2b00      	cmp	r3, #0
 8008742:	d008      	beq.n	8008756 <HAL_DMA_Init+0x316>
 8008744:	687b      	ldr	r3, [r7, #4]
 8008746:	2240      	movs	r2, #64	; 0x40
 8008748:	655a      	str	r2, [r3, #84]	; 0x54
 800874a:	687b      	ldr	r3, [r7, #4]
 800874c:	2201      	movs	r2, #1
 800874e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008752:	2301      	movs	r3, #1
 8008754:	e197      	b.n	8008a86 <HAL_DMA_Init+0x646>
 8008756:	687b      	ldr	r3, [r7, #4]
 8008758:	681b      	ldr	r3, [r3, #0]
 800875a:	697a      	ldr	r2, [r7, #20]
 800875c:	615a      	str	r2, [r3, #20]
 800875e:	6878      	ldr	r0, [r7, #4]
 8008760:	f002 fa88 	bl	800ac74 <DMA_CalcBaseAndBitshift>
 8008764:	4603      	mov	r3, r0
 8008766:	60bb      	str	r3, [r7, #8]
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800876c:	f003 031f 	and.w	r3, r3, #31
 8008770:	223f      	movs	r2, #63	; 0x3f
 8008772:	409a      	lsls	r2, r3
 8008774:	68bb      	ldr	r3, [r7, #8]
 8008776:	609a      	str	r2, [r3, #8]
 8008778:	e0cd      	b.n	8008916 <HAL_DMA_Init+0x4d6>
 800877a:	687b      	ldr	r3, [r7, #4]
 800877c:	681b      	ldr	r3, [r3, #0]
 800877e:	4a3b      	ldr	r2, [pc, #236]	; (800886c <HAL_DMA_Init+0x42c>)
 8008780:	4293      	cmp	r3, r2
 8008782:	d022      	beq.n	80087ca <HAL_DMA_Init+0x38a>
 8008784:	687b      	ldr	r3, [r7, #4]
 8008786:	681b      	ldr	r3, [r3, #0]
 8008788:	4a39      	ldr	r2, [pc, #228]	; (8008870 <HAL_DMA_Init+0x430>)
 800878a:	4293      	cmp	r3, r2
 800878c:	d01d      	beq.n	80087ca <HAL_DMA_Init+0x38a>
 800878e:	687b      	ldr	r3, [r7, #4]
 8008790:	681b      	ldr	r3, [r3, #0]
 8008792:	4a38      	ldr	r2, [pc, #224]	; (8008874 <HAL_DMA_Init+0x434>)
 8008794:	4293      	cmp	r3, r2
 8008796:	d018      	beq.n	80087ca <HAL_DMA_Init+0x38a>
 8008798:	687b      	ldr	r3, [r7, #4]
 800879a:	681b      	ldr	r3, [r3, #0]
 800879c:	4a36      	ldr	r2, [pc, #216]	; (8008878 <HAL_DMA_Init+0x438>)
 800879e:	4293      	cmp	r3, r2
 80087a0:	d013      	beq.n	80087ca <HAL_DMA_Init+0x38a>
 80087a2:	687b      	ldr	r3, [r7, #4]
 80087a4:	681b      	ldr	r3, [r3, #0]
 80087a6:	4a35      	ldr	r2, [pc, #212]	; (800887c <HAL_DMA_Init+0x43c>)
 80087a8:	4293      	cmp	r3, r2
 80087aa:	d00e      	beq.n	80087ca <HAL_DMA_Init+0x38a>
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	4a33      	ldr	r2, [pc, #204]	; (8008880 <HAL_DMA_Init+0x440>)
 80087b2:	4293      	cmp	r3, r2
 80087b4:	d009      	beq.n	80087ca <HAL_DMA_Init+0x38a>
 80087b6:	687b      	ldr	r3, [r7, #4]
 80087b8:	681b      	ldr	r3, [r3, #0]
 80087ba:	4a32      	ldr	r2, [pc, #200]	; (8008884 <HAL_DMA_Init+0x444>)
 80087bc:	4293      	cmp	r3, r2
 80087be:	d004      	beq.n	80087ca <HAL_DMA_Init+0x38a>
 80087c0:	687b      	ldr	r3, [r7, #4]
 80087c2:	681b      	ldr	r3, [r3, #0]
 80087c4:	4a30      	ldr	r2, [pc, #192]	; (8008888 <HAL_DMA_Init+0x448>)
 80087c6:	4293      	cmp	r3, r2
 80087c8:	d101      	bne.n	80087ce <HAL_DMA_Init+0x38e>
 80087ca:	2301      	movs	r3, #1
 80087cc:	e000      	b.n	80087d0 <HAL_DMA_Init+0x390>
 80087ce:	2300      	movs	r3, #0
 80087d0:	2b00      	cmp	r3, #0
 80087d2:	f000 8097 	beq.w	8008904 <HAL_DMA_Init+0x4c4>
 80087d6:	687b      	ldr	r3, [r7, #4]
 80087d8:	681b      	ldr	r3, [r3, #0]
 80087da:	4a24      	ldr	r2, [pc, #144]	; (800886c <HAL_DMA_Init+0x42c>)
 80087dc:	4293      	cmp	r3, r2
 80087de:	d021      	beq.n	8008824 <HAL_DMA_Init+0x3e4>
 80087e0:	687b      	ldr	r3, [r7, #4]
 80087e2:	681b      	ldr	r3, [r3, #0]
 80087e4:	4a22      	ldr	r2, [pc, #136]	; (8008870 <HAL_DMA_Init+0x430>)
 80087e6:	4293      	cmp	r3, r2
 80087e8:	d01c      	beq.n	8008824 <HAL_DMA_Init+0x3e4>
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	681b      	ldr	r3, [r3, #0]
 80087ee:	4a21      	ldr	r2, [pc, #132]	; (8008874 <HAL_DMA_Init+0x434>)
 80087f0:	4293      	cmp	r3, r2
 80087f2:	d017      	beq.n	8008824 <HAL_DMA_Init+0x3e4>
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	681b      	ldr	r3, [r3, #0]
 80087f8:	4a1f      	ldr	r2, [pc, #124]	; (8008878 <HAL_DMA_Init+0x438>)
 80087fa:	4293      	cmp	r3, r2
 80087fc:	d012      	beq.n	8008824 <HAL_DMA_Init+0x3e4>
 80087fe:	687b      	ldr	r3, [r7, #4]
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	4a1e      	ldr	r2, [pc, #120]	; (800887c <HAL_DMA_Init+0x43c>)
 8008804:	4293      	cmp	r3, r2
 8008806:	d00d      	beq.n	8008824 <HAL_DMA_Init+0x3e4>
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	4a1c      	ldr	r2, [pc, #112]	; (8008880 <HAL_DMA_Init+0x440>)
 800880e:	4293      	cmp	r3, r2
 8008810:	d008      	beq.n	8008824 <HAL_DMA_Init+0x3e4>
 8008812:	687b      	ldr	r3, [r7, #4]
 8008814:	681b      	ldr	r3, [r3, #0]
 8008816:	4a1b      	ldr	r2, [pc, #108]	; (8008884 <HAL_DMA_Init+0x444>)
 8008818:	4293      	cmp	r3, r2
 800881a:	d003      	beq.n	8008824 <HAL_DMA_Init+0x3e4>
 800881c:	687b      	ldr	r3, [r7, #4]
 800881e:	681b      	ldr	r3, [r3, #0]
 8008820:	4a19      	ldr	r2, [pc, #100]	; (8008888 <HAL_DMA_Init+0x448>)
 8008822:	4293      	cmp	r3, r2
 8008824:	bf00      	nop
 8008826:	687b      	ldr	r3, [r7, #4]
 8008828:	2202      	movs	r2, #2
 800882a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800882e:	687b      	ldr	r3, [r7, #4]
 8008830:	2200      	movs	r2, #0
 8008832:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008836:	687b      	ldr	r3, [r7, #4]
 8008838:	681b      	ldr	r3, [r3, #0]
 800883a:	681b      	ldr	r3, [r3, #0]
 800883c:	617b      	str	r3, [r7, #20]
 800883e:	697a      	ldr	r2, [r7, #20]
 8008840:	4b12      	ldr	r3, [pc, #72]	; (800888c <HAL_DMA_Init+0x44c>)
 8008842:	4013      	ands	r3, r2
 8008844:	617b      	str	r3, [r7, #20]
 8008846:	687b      	ldr	r3, [r7, #4]
 8008848:	689b      	ldr	r3, [r3, #8]
 800884a:	2b40      	cmp	r3, #64	; 0x40
 800884c:	d020      	beq.n	8008890 <HAL_DMA_Init+0x450>
 800884e:	687b      	ldr	r3, [r7, #4]
 8008850:	689b      	ldr	r3, [r3, #8]
 8008852:	2b80      	cmp	r3, #128	; 0x80
 8008854:	d102      	bne.n	800885c <HAL_DMA_Init+0x41c>
 8008856:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800885a:	e01a      	b.n	8008892 <HAL_DMA_Init+0x452>
 800885c:	2300      	movs	r3, #0
 800885e:	e018      	b.n	8008892 <HAL_DMA_Init+0x452>
 8008860:	fe10803f 	.word	0xfe10803f
 8008864:	5c001000 	.word	0x5c001000
 8008868:	ffff0000 	.word	0xffff0000
 800886c:	58025408 	.word	0x58025408
 8008870:	5802541c 	.word	0x5802541c
 8008874:	58025430 	.word	0x58025430
 8008878:	58025444 	.word	0x58025444
 800887c:	58025458 	.word	0x58025458
 8008880:	5802546c 	.word	0x5802546c
 8008884:	58025480 	.word	0x58025480
 8008888:	58025494 	.word	0x58025494
 800888c:	fffe000f 	.word	0xfffe000f
 8008890:	2310      	movs	r3, #16
 8008892:	687a      	ldr	r2, [r7, #4]
 8008894:	68d2      	ldr	r2, [r2, #12]
 8008896:	08d2      	lsrs	r2, r2, #3
 8008898:	431a      	orrs	r2, r3
 800889a:	687b      	ldr	r3, [r7, #4]
 800889c:	691b      	ldr	r3, [r3, #16]
 800889e:	08db      	lsrs	r3, r3, #3
 80088a0:	431a      	orrs	r2, r3
 80088a2:	687b      	ldr	r3, [r7, #4]
 80088a4:	695b      	ldr	r3, [r3, #20]
 80088a6:	08db      	lsrs	r3, r3, #3
 80088a8:	431a      	orrs	r2, r3
 80088aa:	687b      	ldr	r3, [r7, #4]
 80088ac:	699b      	ldr	r3, [r3, #24]
 80088ae:	08db      	lsrs	r3, r3, #3
 80088b0:	431a      	orrs	r2, r3
 80088b2:	687b      	ldr	r3, [r7, #4]
 80088b4:	69db      	ldr	r3, [r3, #28]
 80088b6:	08db      	lsrs	r3, r3, #3
 80088b8:	431a      	orrs	r2, r3
 80088ba:	687b      	ldr	r3, [r7, #4]
 80088bc:	6a1b      	ldr	r3, [r3, #32]
 80088be:	091b      	lsrs	r3, r3, #4
 80088c0:	4313      	orrs	r3, r2
 80088c2:	697a      	ldr	r2, [r7, #20]
 80088c4:	4313      	orrs	r3, r2
 80088c6:	617b      	str	r3, [r7, #20]
 80088c8:	687b      	ldr	r3, [r7, #4]
 80088ca:	681b      	ldr	r3, [r3, #0]
 80088cc:	697a      	ldr	r2, [r7, #20]
 80088ce:	601a      	str	r2, [r3, #0]
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	681b      	ldr	r3, [r3, #0]
 80088d4:	461a      	mov	r2, r3
 80088d6:	4b6e      	ldr	r3, [pc, #440]	; (8008a90 <HAL_DMA_Init+0x650>)
 80088d8:	4413      	add	r3, r2
 80088da:	4a6e      	ldr	r2, [pc, #440]	; (8008a94 <HAL_DMA_Init+0x654>)
 80088dc:	fba2 2303 	umull	r2, r3, r2, r3
 80088e0:	091b      	lsrs	r3, r3, #4
 80088e2:	009a      	lsls	r2, r3, #2
 80088e4:	687b      	ldr	r3, [r7, #4]
 80088e6:	65da      	str	r2, [r3, #92]	; 0x5c
 80088e8:	6878      	ldr	r0, [r7, #4]
 80088ea:	f002 f9c3 	bl	800ac74 <DMA_CalcBaseAndBitshift>
 80088ee:	4603      	mov	r3, r0
 80088f0:	60fb      	str	r3, [r7, #12]
 80088f2:	687b      	ldr	r3, [r7, #4]
 80088f4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80088f6:	f003 031f 	and.w	r3, r3, #31
 80088fa:	2201      	movs	r2, #1
 80088fc:	409a      	lsls	r2, r3
 80088fe:	68fb      	ldr	r3, [r7, #12]
 8008900:	605a      	str	r2, [r3, #4]
 8008902:	e008      	b.n	8008916 <HAL_DMA_Init+0x4d6>
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	2240      	movs	r2, #64	; 0x40
 8008908:	655a      	str	r2, [r3, #84]	; 0x54
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	2203      	movs	r2, #3
 800890e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008912:	2301      	movs	r3, #1
 8008914:	e0b7      	b.n	8008a86 <HAL_DMA_Init+0x646>
 8008916:	687b      	ldr	r3, [r7, #4]
 8008918:	681b      	ldr	r3, [r3, #0]
 800891a:	4a5f      	ldr	r2, [pc, #380]	; (8008a98 <HAL_DMA_Init+0x658>)
 800891c:	4293      	cmp	r3, r2
 800891e:	d072      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	681b      	ldr	r3, [r3, #0]
 8008924:	4a5d      	ldr	r2, [pc, #372]	; (8008a9c <HAL_DMA_Init+0x65c>)
 8008926:	4293      	cmp	r3, r2
 8008928:	d06d      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 800892a:	687b      	ldr	r3, [r7, #4]
 800892c:	681b      	ldr	r3, [r3, #0]
 800892e:	4a5c      	ldr	r2, [pc, #368]	; (8008aa0 <HAL_DMA_Init+0x660>)
 8008930:	4293      	cmp	r3, r2
 8008932:	d068      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 8008934:	687b      	ldr	r3, [r7, #4]
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	4a5a      	ldr	r2, [pc, #360]	; (8008aa4 <HAL_DMA_Init+0x664>)
 800893a:	4293      	cmp	r3, r2
 800893c:	d063      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 800893e:	687b      	ldr	r3, [r7, #4]
 8008940:	681b      	ldr	r3, [r3, #0]
 8008942:	4a59      	ldr	r2, [pc, #356]	; (8008aa8 <HAL_DMA_Init+0x668>)
 8008944:	4293      	cmp	r3, r2
 8008946:	d05e      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 8008948:	687b      	ldr	r3, [r7, #4]
 800894a:	681b      	ldr	r3, [r3, #0]
 800894c:	4a57      	ldr	r2, [pc, #348]	; (8008aac <HAL_DMA_Init+0x66c>)
 800894e:	4293      	cmp	r3, r2
 8008950:	d059      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 8008952:	687b      	ldr	r3, [r7, #4]
 8008954:	681b      	ldr	r3, [r3, #0]
 8008956:	4a56      	ldr	r2, [pc, #344]	; (8008ab0 <HAL_DMA_Init+0x670>)
 8008958:	4293      	cmp	r3, r2
 800895a:	d054      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 800895c:	687b      	ldr	r3, [r7, #4]
 800895e:	681b      	ldr	r3, [r3, #0]
 8008960:	4a54      	ldr	r2, [pc, #336]	; (8008ab4 <HAL_DMA_Init+0x674>)
 8008962:	4293      	cmp	r3, r2
 8008964:	d04f      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 8008966:	687b      	ldr	r3, [r7, #4]
 8008968:	681b      	ldr	r3, [r3, #0]
 800896a:	4a53      	ldr	r2, [pc, #332]	; (8008ab8 <HAL_DMA_Init+0x678>)
 800896c:	4293      	cmp	r3, r2
 800896e:	d04a      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 8008970:	687b      	ldr	r3, [r7, #4]
 8008972:	681b      	ldr	r3, [r3, #0]
 8008974:	4a51      	ldr	r2, [pc, #324]	; (8008abc <HAL_DMA_Init+0x67c>)
 8008976:	4293      	cmp	r3, r2
 8008978:	d045      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	681b      	ldr	r3, [r3, #0]
 800897e:	4a50      	ldr	r2, [pc, #320]	; (8008ac0 <HAL_DMA_Init+0x680>)
 8008980:	4293      	cmp	r3, r2
 8008982:	d040      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	681b      	ldr	r3, [r3, #0]
 8008988:	4a4e      	ldr	r2, [pc, #312]	; (8008ac4 <HAL_DMA_Init+0x684>)
 800898a:	4293      	cmp	r3, r2
 800898c:	d03b      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 800898e:	687b      	ldr	r3, [r7, #4]
 8008990:	681b      	ldr	r3, [r3, #0]
 8008992:	4a4d      	ldr	r2, [pc, #308]	; (8008ac8 <HAL_DMA_Init+0x688>)
 8008994:	4293      	cmp	r3, r2
 8008996:	d036      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 8008998:	687b      	ldr	r3, [r7, #4]
 800899a:	681b      	ldr	r3, [r3, #0]
 800899c:	4a4b      	ldr	r2, [pc, #300]	; (8008acc <HAL_DMA_Init+0x68c>)
 800899e:	4293      	cmp	r3, r2
 80089a0:	d031      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089a2:	687b      	ldr	r3, [r7, #4]
 80089a4:	681b      	ldr	r3, [r3, #0]
 80089a6:	4a4a      	ldr	r2, [pc, #296]	; (8008ad0 <HAL_DMA_Init+0x690>)
 80089a8:	4293      	cmp	r3, r2
 80089aa:	d02c      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089ac:	687b      	ldr	r3, [r7, #4]
 80089ae:	681b      	ldr	r3, [r3, #0]
 80089b0:	4a48      	ldr	r2, [pc, #288]	; (8008ad4 <HAL_DMA_Init+0x694>)
 80089b2:	4293      	cmp	r3, r2
 80089b4:	d027      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089b6:	687b      	ldr	r3, [r7, #4]
 80089b8:	681b      	ldr	r3, [r3, #0]
 80089ba:	4a47      	ldr	r2, [pc, #284]	; (8008ad8 <HAL_DMA_Init+0x698>)
 80089bc:	4293      	cmp	r3, r2
 80089be:	d022      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089c0:	687b      	ldr	r3, [r7, #4]
 80089c2:	681b      	ldr	r3, [r3, #0]
 80089c4:	4a45      	ldr	r2, [pc, #276]	; (8008adc <HAL_DMA_Init+0x69c>)
 80089c6:	4293      	cmp	r3, r2
 80089c8:	d01d      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	681b      	ldr	r3, [r3, #0]
 80089ce:	4a44      	ldr	r2, [pc, #272]	; (8008ae0 <HAL_DMA_Init+0x6a0>)
 80089d0:	4293      	cmp	r3, r2
 80089d2:	d018      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	681b      	ldr	r3, [r3, #0]
 80089d8:	4a42      	ldr	r2, [pc, #264]	; (8008ae4 <HAL_DMA_Init+0x6a4>)
 80089da:	4293      	cmp	r3, r2
 80089dc:	d013      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089de:	687b      	ldr	r3, [r7, #4]
 80089e0:	681b      	ldr	r3, [r3, #0]
 80089e2:	4a41      	ldr	r2, [pc, #260]	; (8008ae8 <HAL_DMA_Init+0x6a8>)
 80089e4:	4293      	cmp	r3, r2
 80089e6:	d00e      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	681b      	ldr	r3, [r3, #0]
 80089ec:	4a3f      	ldr	r2, [pc, #252]	; (8008aec <HAL_DMA_Init+0x6ac>)
 80089ee:	4293      	cmp	r3, r2
 80089f0:	d009      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089f2:	687b      	ldr	r3, [r7, #4]
 80089f4:	681b      	ldr	r3, [r3, #0]
 80089f6:	4a3e      	ldr	r2, [pc, #248]	; (8008af0 <HAL_DMA_Init+0x6b0>)
 80089f8:	4293      	cmp	r3, r2
 80089fa:	d004      	beq.n	8008a06 <HAL_DMA_Init+0x5c6>
 80089fc:	687b      	ldr	r3, [r7, #4]
 80089fe:	681b      	ldr	r3, [r3, #0]
 8008a00:	4a3c      	ldr	r2, [pc, #240]	; (8008af4 <HAL_DMA_Init+0x6b4>)
 8008a02:	4293      	cmp	r3, r2
 8008a04:	d101      	bne.n	8008a0a <HAL_DMA_Init+0x5ca>
 8008a06:	2301      	movs	r3, #1
 8008a08:	e000      	b.n	8008a0c <HAL_DMA_Init+0x5cc>
 8008a0a:	2300      	movs	r3, #0
 8008a0c:	2b00      	cmp	r3, #0
 8008a0e:	d032      	beq.n	8008a76 <HAL_DMA_Init+0x636>
 8008a10:	6878      	ldr	r0, [r7, #4]
 8008a12:	f002 fa5d 	bl	800aed0 <DMA_CalcDMAMUXChannelBaseAndMask>
 8008a16:	687b      	ldr	r3, [r7, #4]
 8008a18:	689b      	ldr	r3, [r3, #8]
 8008a1a:	2b80      	cmp	r3, #128	; 0x80
 8008a1c:	d102      	bne.n	8008a24 <HAL_DMA_Init+0x5e4>
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	2200      	movs	r2, #0
 8008a22:	605a      	str	r2, [r3, #4]
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	685a      	ldr	r2, [r3, #4]
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008a2c:	b2d2      	uxtb	r2, r2
 8008a2e:	601a      	str	r2, [r3, #0]
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008a34:	687a      	ldr	r2, [r7, #4]
 8008a36:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8008a38:	605a      	str	r2, [r3, #4]
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	685b      	ldr	r3, [r3, #4]
 8008a3e:	2b00      	cmp	r3, #0
 8008a40:	d010      	beq.n	8008a64 <HAL_DMA_Init+0x624>
 8008a42:	687b      	ldr	r3, [r7, #4]
 8008a44:	685b      	ldr	r3, [r3, #4]
 8008a46:	2b08      	cmp	r3, #8
 8008a48:	d80c      	bhi.n	8008a64 <HAL_DMA_Init+0x624>
 8008a4a:	6878      	ldr	r0, [r7, #4]
 8008a4c:	f002 fada 	bl	800b004 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8008a50:	687b      	ldr	r3, [r7, #4]
 8008a52:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008a54:	2200      	movs	r2, #0
 8008a56:	601a      	str	r2, [r3, #0]
 8008a58:	687b      	ldr	r3, [r7, #4]
 8008a5a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008a5c:	687a      	ldr	r2, [r7, #4]
 8008a5e:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8008a60:	605a      	str	r2, [r3, #4]
 8008a62:	e008      	b.n	8008a76 <HAL_DMA_Init+0x636>
 8008a64:	687b      	ldr	r3, [r7, #4]
 8008a66:	2200      	movs	r2, #0
 8008a68:	66da      	str	r2, [r3, #108]	; 0x6c
 8008a6a:	687b      	ldr	r3, [r7, #4]
 8008a6c:	2200      	movs	r2, #0
 8008a6e:	671a      	str	r2, [r3, #112]	; 0x70
 8008a70:	687b      	ldr	r3, [r7, #4]
 8008a72:	2200      	movs	r2, #0
 8008a74:	675a      	str	r2, [r3, #116]	; 0x74
 8008a76:	687b      	ldr	r3, [r7, #4]
 8008a78:	2200      	movs	r2, #0
 8008a7a:	655a      	str	r2, [r3, #84]	; 0x54
 8008a7c:	687b      	ldr	r3, [r7, #4]
 8008a7e:	2201      	movs	r2, #1
 8008a80:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008a84:	2300      	movs	r3, #0
 8008a86:	4618      	mov	r0, r3
 8008a88:	3718      	adds	r7, #24
 8008a8a:	46bd      	mov	sp, r7
 8008a8c:	bd80      	pop	{r7, pc}
 8008a8e:	bf00      	nop
 8008a90:	a7fdabf8 	.word	0xa7fdabf8
 8008a94:	cccccccd 	.word	0xcccccccd
 8008a98:	40020010 	.word	0x40020010
 8008a9c:	40020028 	.word	0x40020028
 8008aa0:	40020040 	.word	0x40020040
 8008aa4:	40020058 	.word	0x40020058
 8008aa8:	40020070 	.word	0x40020070
 8008aac:	40020088 	.word	0x40020088
 8008ab0:	400200a0 	.word	0x400200a0
 8008ab4:	400200b8 	.word	0x400200b8
 8008ab8:	40020410 	.word	0x40020410
 8008abc:	40020428 	.word	0x40020428
 8008ac0:	40020440 	.word	0x40020440
 8008ac4:	40020458 	.word	0x40020458
 8008ac8:	40020470 	.word	0x40020470
 8008acc:	40020488 	.word	0x40020488
 8008ad0:	400204a0 	.word	0x400204a0
 8008ad4:	400204b8 	.word	0x400204b8
 8008ad8:	58025408 	.word	0x58025408
 8008adc:	5802541c 	.word	0x5802541c
 8008ae0:	58025430 	.word	0x58025430
 8008ae4:	58025444 	.word	0x58025444
 8008ae8:	58025458 	.word	0x58025458
 8008aec:	5802546c 	.word	0x5802546c
 8008af0:	58025480 	.word	0x58025480
 8008af4:	58025494 	.word	0x58025494

08008af8 <HAL_DMA_Start_IT>:
 8008af8:	b580      	push	{r7, lr}
 8008afa:	b086      	sub	sp, #24
 8008afc:	af00      	add	r7, sp, #0
 8008afe:	60f8      	str	r0, [r7, #12]
 8008b00:	60b9      	str	r1, [r7, #8]
 8008b02:	607a      	str	r2, [r7, #4]
 8008b04:	603b      	str	r3, [r7, #0]
 8008b06:	2300      	movs	r3, #0
 8008b08:	75fb      	strb	r3, [r7, #23]
 8008b0a:	68fb      	ldr	r3, [r7, #12]
 8008b0c:	2b00      	cmp	r3, #0
 8008b0e:	d101      	bne.n	8008b14 <HAL_DMA_Start_IT+0x1c>
 8008b10:	2301      	movs	r3, #1
 8008b12:	e226      	b.n	8008f62 <HAL_DMA_Start_IT+0x46a>
 8008b14:	68fb      	ldr	r3, [r7, #12]
 8008b16:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8008b1a:	2b01      	cmp	r3, #1
 8008b1c:	d101      	bne.n	8008b22 <HAL_DMA_Start_IT+0x2a>
 8008b1e:	2302      	movs	r3, #2
 8008b20:	e21f      	b.n	8008f62 <HAL_DMA_Start_IT+0x46a>
 8008b22:	68fb      	ldr	r3, [r7, #12]
 8008b24:	2201      	movs	r2, #1
 8008b26:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008b2a:	68fb      	ldr	r3, [r7, #12]
 8008b2c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008b30:	b2db      	uxtb	r3, r3
 8008b32:	2b01      	cmp	r3, #1
 8008b34:	f040 820a 	bne.w	8008f4c <HAL_DMA_Start_IT+0x454>
 8008b38:	68fb      	ldr	r3, [r7, #12]
 8008b3a:	2202      	movs	r2, #2
 8008b3c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008b40:	68fb      	ldr	r3, [r7, #12]
 8008b42:	2200      	movs	r2, #0
 8008b44:	655a      	str	r2, [r3, #84]	; 0x54
 8008b46:	68fb      	ldr	r3, [r7, #12]
 8008b48:	681b      	ldr	r3, [r3, #0]
 8008b4a:	4a68      	ldr	r2, [pc, #416]	; (8008cec <HAL_DMA_Start_IT+0x1f4>)
 8008b4c:	4293      	cmp	r3, r2
 8008b4e:	d04a      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008b50:	68fb      	ldr	r3, [r7, #12]
 8008b52:	681b      	ldr	r3, [r3, #0]
 8008b54:	4a66      	ldr	r2, [pc, #408]	; (8008cf0 <HAL_DMA_Start_IT+0x1f8>)
 8008b56:	4293      	cmp	r3, r2
 8008b58:	d045      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008b5a:	68fb      	ldr	r3, [r7, #12]
 8008b5c:	681b      	ldr	r3, [r3, #0]
 8008b5e:	4a65      	ldr	r2, [pc, #404]	; (8008cf4 <HAL_DMA_Start_IT+0x1fc>)
 8008b60:	4293      	cmp	r3, r2
 8008b62:	d040      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008b64:	68fb      	ldr	r3, [r7, #12]
 8008b66:	681b      	ldr	r3, [r3, #0]
 8008b68:	4a63      	ldr	r2, [pc, #396]	; (8008cf8 <HAL_DMA_Start_IT+0x200>)
 8008b6a:	4293      	cmp	r3, r2
 8008b6c:	d03b      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008b6e:	68fb      	ldr	r3, [r7, #12]
 8008b70:	681b      	ldr	r3, [r3, #0]
 8008b72:	4a62      	ldr	r2, [pc, #392]	; (8008cfc <HAL_DMA_Start_IT+0x204>)
 8008b74:	4293      	cmp	r3, r2
 8008b76:	d036      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008b78:	68fb      	ldr	r3, [r7, #12]
 8008b7a:	681b      	ldr	r3, [r3, #0]
 8008b7c:	4a60      	ldr	r2, [pc, #384]	; (8008d00 <HAL_DMA_Start_IT+0x208>)
 8008b7e:	4293      	cmp	r3, r2
 8008b80:	d031      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008b82:	68fb      	ldr	r3, [r7, #12]
 8008b84:	681b      	ldr	r3, [r3, #0]
 8008b86:	4a5f      	ldr	r2, [pc, #380]	; (8008d04 <HAL_DMA_Start_IT+0x20c>)
 8008b88:	4293      	cmp	r3, r2
 8008b8a:	d02c      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008b8c:	68fb      	ldr	r3, [r7, #12]
 8008b8e:	681b      	ldr	r3, [r3, #0]
 8008b90:	4a5d      	ldr	r2, [pc, #372]	; (8008d08 <HAL_DMA_Start_IT+0x210>)
 8008b92:	4293      	cmp	r3, r2
 8008b94:	d027      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008b96:	68fb      	ldr	r3, [r7, #12]
 8008b98:	681b      	ldr	r3, [r3, #0]
 8008b9a:	4a5c      	ldr	r2, [pc, #368]	; (8008d0c <HAL_DMA_Start_IT+0x214>)
 8008b9c:	4293      	cmp	r3, r2
 8008b9e:	d022      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008ba0:	68fb      	ldr	r3, [r7, #12]
 8008ba2:	681b      	ldr	r3, [r3, #0]
 8008ba4:	4a5a      	ldr	r2, [pc, #360]	; (8008d10 <HAL_DMA_Start_IT+0x218>)
 8008ba6:	4293      	cmp	r3, r2
 8008ba8:	d01d      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008baa:	68fb      	ldr	r3, [r7, #12]
 8008bac:	681b      	ldr	r3, [r3, #0]
 8008bae:	4a59      	ldr	r2, [pc, #356]	; (8008d14 <HAL_DMA_Start_IT+0x21c>)
 8008bb0:	4293      	cmp	r3, r2
 8008bb2:	d018      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008bb4:	68fb      	ldr	r3, [r7, #12]
 8008bb6:	681b      	ldr	r3, [r3, #0]
 8008bb8:	4a57      	ldr	r2, [pc, #348]	; (8008d18 <HAL_DMA_Start_IT+0x220>)
 8008bba:	4293      	cmp	r3, r2
 8008bbc:	d013      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008bbe:	68fb      	ldr	r3, [r7, #12]
 8008bc0:	681b      	ldr	r3, [r3, #0]
 8008bc2:	4a56      	ldr	r2, [pc, #344]	; (8008d1c <HAL_DMA_Start_IT+0x224>)
 8008bc4:	4293      	cmp	r3, r2
 8008bc6:	d00e      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008bc8:	68fb      	ldr	r3, [r7, #12]
 8008bca:	681b      	ldr	r3, [r3, #0]
 8008bcc:	4a54      	ldr	r2, [pc, #336]	; (8008d20 <HAL_DMA_Start_IT+0x228>)
 8008bce:	4293      	cmp	r3, r2
 8008bd0:	d009      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008bd2:	68fb      	ldr	r3, [r7, #12]
 8008bd4:	681b      	ldr	r3, [r3, #0]
 8008bd6:	4a53      	ldr	r2, [pc, #332]	; (8008d24 <HAL_DMA_Start_IT+0x22c>)
 8008bd8:	4293      	cmp	r3, r2
 8008bda:	d004      	beq.n	8008be6 <HAL_DMA_Start_IT+0xee>
 8008bdc:	68fb      	ldr	r3, [r7, #12]
 8008bde:	681b      	ldr	r3, [r3, #0]
 8008be0:	4a51      	ldr	r2, [pc, #324]	; (8008d28 <HAL_DMA_Start_IT+0x230>)
 8008be2:	4293      	cmp	r3, r2
 8008be4:	d108      	bne.n	8008bf8 <HAL_DMA_Start_IT+0x100>
 8008be6:	68fb      	ldr	r3, [r7, #12]
 8008be8:	681b      	ldr	r3, [r3, #0]
 8008bea:	681a      	ldr	r2, [r3, #0]
 8008bec:	68fb      	ldr	r3, [r7, #12]
 8008bee:	681b      	ldr	r3, [r3, #0]
 8008bf0:	f022 0201 	bic.w	r2, r2, #1
 8008bf4:	601a      	str	r2, [r3, #0]
 8008bf6:	e007      	b.n	8008c08 <HAL_DMA_Start_IT+0x110>
 8008bf8:	68fb      	ldr	r3, [r7, #12]
 8008bfa:	681b      	ldr	r3, [r3, #0]
 8008bfc:	681a      	ldr	r2, [r3, #0]
 8008bfe:	68fb      	ldr	r3, [r7, #12]
 8008c00:	681b      	ldr	r3, [r3, #0]
 8008c02:	f022 0201 	bic.w	r2, r2, #1
 8008c06:	601a      	str	r2, [r3, #0]
 8008c08:	683b      	ldr	r3, [r7, #0]
 8008c0a:	687a      	ldr	r2, [r7, #4]
 8008c0c:	68b9      	ldr	r1, [r7, #8]
 8008c0e:	68f8      	ldr	r0, [r7, #12]
 8008c10:	f001 fe84 	bl	800a91c <DMA_SetConfig>
 8008c14:	68fb      	ldr	r3, [r7, #12]
 8008c16:	681b      	ldr	r3, [r3, #0]
 8008c18:	4a34      	ldr	r2, [pc, #208]	; (8008cec <HAL_DMA_Start_IT+0x1f4>)
 8008c1a:	4293      	cmp	r3, r2
 8008c1c:	d04a      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c1e:	68fb      	ldr	r3, [r7, #12]
 8008c20:	681b      	ldr	r3, [r3, #0]
 8008c22:	4a33      	ldr	r2, [pc, #204]	; (8008cf0 <HAL_DMA_Start_IT+0x1f8>)
 8008c24:	4293      	cmp	r3, r2
 8008c26:	d045      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c28:	68fb      	ldr	r3, [r7, #12]
 8008c2a:	681b      	ldr	r3, [r3, #0]
 8008c2c:	4a31      	ldr	r2, [pc, #196]	; (8008cf4 <HAL_DMA_Start_IT+0x1fc>)
 8008c2e:	4293      	cmp	r3, r2
 8008c30:	d040      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c32:	68fb      	ldr	r3, [r7, #12]
 8008c34:	681b      	ldr	r3, [r3, #0]
 8008c36:	4a30      	ldr	r2, [pc, #192]	; (8008cf8 <HAL_DMA_Start_IT+0x200>)
 8008c38:	4293      	cmp	r3, r2
 8008c3a:	d03b      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c3c:	68fb      	ldr	r3, [r7, #12]
 8008c3e:	681b      	ldr	r3, [r3, #0]
 8008c40:	4a2e      	ldr	r2, [pc, #184]	; (8008cfc <HAL_DMA_Start_IT+0x204>)
 8008c42:	4293      	cmp	r3, r2
 8008c44:	d036      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c46:	68fb      	ldr	r3, [r7, #12]
 8008c48:	681b      	ldr	r3, [r3, #0]
 8008c4a:	4a2d      	ldr	r2, [pc, #180]	; (8008d00 <HAL_DMA_Start_IT+0x208>)
 8008c4c:	4293      	cmp	r3, r2
 8008c4e:	d031      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c50:	68fb      	ldr	r3, [r7, #12]
 8008c52:	681b      	ldr	r3, [r3, #0]
 8008c54:	4a2b      	ldr	r2, [pc, #172]	; (8008d04 <HAL_DMA_Start_IT+0x20c>)
 8008c56:	4293      	cmp	r3, r2
 8008c58:	d02c      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c5a:	68fb      	ldr	r3, [r7, #12]
 8008c5c:	681b      	ldr	r3, [r3, #0]
 8008c5e:	4a2a      	ldr	r2, [pc, #168]	; (8008d08 <HAL_DMA_Start_IT+0x210>)
 8008c60:	4293      	cmp	r3, r2
 8008c62:	d027      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c64:	68fb      	ldr	r3, [r7, #12]
 8008c66:	681b      	ldr	r3, [r3, #0]
 8008c68:	4a28      	ldr	r2, [pc, #160]	; (8008d0c <HAL_DMA_Start_IT+0x214>)
 8008c6a:	4293      	cmp	r3, r2
 8008c6c:	d022      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c6e:	68fb      	ldr	r3, [r7, #12]
 8008c70:	681b      	ldr	r3, [r3, #0]
 8008c72:	4a27      	ldr	r2, [pc, #156]	; (8008d10 <HAL_DMA_Start_IT+0x218>)
 8008c74:	4293      	cmp	r3, r2
 8008c76:	d01d      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c78:	68fb      	ldr	r3, [r7, #12]
 8008c7a:	681b      	ldr	r3, [r3, #0]
 8008c7c:	4a25      	ldr	r2, [pc, #148]	; (8008d14 <HAL_DMA_Start_IT+0x21c>)
 8008c7e:	4293      	cmp	r3, r2
 8008c80:	d018      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c82:	68fb      	ldr	r3, [r7, #12]
 8008c84:	681b      	ldr	r3, [r3, #0]
 8008c86:	4a24      	ldr	r2, [pc, #144]	; (8008d18 <HAL_DMA_Start_IT+0x220>)
 8008c88:	4293      	cmp	r3, r2
 8008c8a:	d013      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c8c:	68fb      	ldr	r3, [r7, #12]
 8008c8e:	681b      	ldr	r3, [r3, #0]
 8008c90:	4a22      	ldr	r2, [pc, #136]	; (8008d1c <HAL_DMA_Start_IT+0x224>)
 8008c92:	4293      	cmp	r3, r2
 8008c94:	d00e      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008c96:	68fb      	ldr	r3, [r7, #12]
 8008c98:	681b      	ldr	r3, [r3, #0]
 8008c9a:	4a21      	ldr	r2, [pc, #132]	; (8008d20 <HAL_DMA_Start_IT+0x228>)
 8008c9c:	4293      	cmp	r3, r2
 8008c9e:	d009      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008ca0:	68fb      	ldr	r3, [r7, #12]
 8008ca2:	681b      	ldr	r3, [r3, #0]
 8008ca4:	4a1f      	ldr	r2, [pc, #124]	; (8008d24 <HAL_DMA_Start_IT+0x22c>)
 8008ca6:	4293      	cmp	r3, r2
 8008ca8:	d004      	beq.n	8008cb4 <HAL_DMA_Start_IT+0x1bc>
 8008caa:	68fb      	ldr	r3, [r7, #12]
 8008cac:	681b      	ldr	r3, [r3, #0]
 8008cae:	4a1e      	ldr	r2, [pc, #120]	; (8008d28 <HAL_DMA_Start_IT+0x230>)
 8008cb0:	4293      	cmp	r3, r2
 8008cb2:	d101      	bne.n	8008cb8 <HAL_DMA_Start_IT+0x1c0>
 8008cb4:	2301      	movs	r3, #1
 8008cb6:	e000      	b.n	8008cba <HAL_DMA_Start_IT+0x1c2>
 8008cb8:	2300      	movs	r3, #0
 8008cba:	2b00      	cmp	r3, #0
 8008cbc:	d036      	beq.n	8008d2c <HAL_DMA_Start_IT+0x234>
 8008cbe:	68fb      	ldr	r3, [r7, #12]
 8008cc0:	681b      	ldr	r3, [r3, #0]
 8008cc2:	681b      	ldr	r3, [r3, #0]
 8008cc4:	f023 021e 	bic.w	r2, r3, #30
 8008cc8:	68fb      	ldr	r3, [r7, #12]
 8008cca:	681b      	ldr	r3, [r3, #0]
 8008ccc:	f042 0216 	orr.w	r2, r2, #22
 8008cd0:	601a      	str	r2, [r3, #0]
 8008cd2:	68fb      	ldr	r3, [r7, #12]
 8008cd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008cd6:	2b00      	cmp	r3, #0
 8008cd8:	d03e      	beq.n	8008d58 <HAL_DMA_Start_IT+0x260>
 8008cda:	68fb      	ldr	r3, [r7, #12]
 8008cdc:	681b      	ldr	r3, [r3, #0]
 8008cde:	681a      	ldr	r2, [r3, #0]
 8008ce0:	68fb      	ldr	r3, [r7, #12]
 8008ce2:	681b      	ldr	r3, [r3, #0]
 8008ce4:	f042 0208 	orr.w	r2, r2, #8
 8008ce8:	601a      	str	r2, [r3, #0]
 8008cea:	e035      	b.n	8008d58 <HAL_DMA_Start_IT+0x260>
 8008cec:	40020010 	.word	0x40020010
 8008cf0:	40020028 	.word	0x40020028
 8008cf4:	40020040 	.word	0x40020040
 8008cf8:	40020058 	.word	0x40020058
 8008cfc:	40020070 	.word	0x40020070
 8008d00:	40020088 	.word	0x40020088
 8008d04:	400200a0 	.word	0x400200a0
 8008d08:	400200b8 	.word	0x400200b8
 8008d0c:	40020410 	.word	0x40020410
 8008d10:	40020428 	.word	0x40020428
 8008d14:	40020440 	.word	0x40020440
 8008d18:	40020458 	.word	0x40020458
 8008d1c:	40020470 	.word	0x40020470
 8008d20:	40020488 	.word	0x40020488
 8008d24:	400204a0 	.word	0x400204a0
 8008d28:	400204b8 	.word	0x400204b8
 8008d2c:	68fb      	ldr	r3, [r7, #12]
 8008d2e:	681b      	ldr	r3, [r3, #0]
 8008d30:	681b      	ldr	r3, [r3, #0]
 8008d32:	f023 020e 	bic.w	r2, r3, #14
 8008d36:	68fb      	ldr	r3, [r7, #12]
 8008d38:	681b      	ldr	r3, [r3, #0]
 8008d3a:	f042 020a 	orr.w	r2, r2, #10
 8008d3e:	601a      	str	r2, [r3, #0]
 8008d40:	68fb      	ldr	r3, [r7, #12]
 8008d42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008d44:	2b00      	cmp	r3, #0
 8008d46:	d007      	beq.n	8008d58 <HAL_DMA_Start_IT+0x260>
 8008d48:	68fb      	ldr	r3, [r7, #12]
 8008d4a:	681b      	ldr	r3, [r3, #0]
 8008d4c:	681a      	ldr	r2, [r3, #0]
 8008d4e:	68fb      	ldr	r3, [r7, #12]
 8008d50:	681b      	ldr	r3, [r3, #0]
 8008d52:	f042 0204 	orr.w	r2, r2, #4
 8008d56:	601a      	str	r2, [r3, #0]
 8008d58:	68fb      	ldr	r3, [r7, #12]
 8008d5a:	681b      	ldr	r3, [r3, #0]
 8008d5c:	4a83      	ldr	r2, [pc, #524]	; (8008f6c <HAL_DMA_Start_IT+0x474>)
 8008d5e:	4293      	cmp	r3, r2
 8008d60:	d072      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008d62:	68fb      	ldr	r3, [r7, #12]
 8008d64:	681b      	ldr	r3, [r3, #0]
 8008d66:	4a82      	ldr	r2, [pc, #520]	; (8008f70 <HAL_DMA_Start_IT+0x478>)
 8008d68:	4293      	cmp	r3, r2
 8008d6a:	d06d      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008d6c:	68fb      	ldr	r3, [r7, #12]
 8008d6e:	681b      	ldr	r3, [r3, #0]
 8008d70:	4a80      	ldr	r2, [pc, #512]	; (8008f74 <HAL_DMA_Start_IT+0x47c>)
 8008d72:	4293      	cmp	r3, r2
 8008d74:	d068      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008d76:	68fb      	ldr	r3, [r7, #12]
 8008d78:	681b      	ldr	r3, [r3, #0]
 8008d7a:	4a7f      	ldr	r2, [pc, #508]	; (8008f78 <HAL_DMA_Start_IT+0x480>)
 8008d7c:	4293      	cmp	r3, r2
 8008d7e:	d063      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008d80:	68fb      	ldr	r3, [r7, #12]
 8008d82:	681b      	ldr	r3, [r3, #0]
 8008d84:	4a7d      	ldr	r2, [pc, #500]	; (8008f7c <HAL_DMA_Start_IT+0x484>)
 8008d86:	4293      	cmp	r3, r2
 8008d88:	d05e      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008d8a:	68fb      	ldr	r3, [r7, #12]
 8008d8c:	681b      	ldr	r3, [r3, #0]
 8008d8e:	4a7c      	ldr	r2, [pc, #496]	; (8008f80 <HAL_DMA_Start_IT+0x488>)
 8008d90:	4293      	cmp	r3, r2
 8008d92:	d059      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008d94:	68fb      	ldr	r3, [r7, #12]
 8008d96:	681b      	ldr	r3, [r3, #0]
 8008d98:	4a7a      	ldr	r2, [pc, #488]	; (8008f84 <HAL_DMA_Start_IT+0x48c>)
 8008d9a:	4293      	cmp	r3, r2
 8008d9c:	d054      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008d9e:	68fb      	ldr	r3, [r7, #12]
 8008da0:	681b      	ldr	r3, [r3, #0]
 8008da2:	4a79      	ldr	r2, [pc, #484]	; (8008f88 <HAL_DMA_Start_IT+0x490>)
 8008da4:	4293      	cmp	r3, r2
 8008da6:	d04f      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008da8:	68fb      	ldr	r3, [r7, #12]
 8008daa:	681b      	ldr	r3, [r3, #0]
 8008dac:	4a77      	ldr	r2, [pc, #476]	; (8008f8c <HAL_DMA_Start_IT+0x494>)
 8008dae:	4293      	cmp	r3, r2
 8008db0:	d04a      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008db2:	68fb      	ldr	r3, [r7, #12]
 8008db4:	681b      	ldr	r3, [r3, #0]
 8008db6:	4a76      	ldr	r2, [pc, #472]	; (8008f90 <HAL_DMA_Start_IT+0x498>)
 8008db8:	4293      	cmp	r3, r2
 8008dba:	d045      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008dbc:	68fb      	ldr	r3, [r7, #12]
 8008dbe:	681b      	ldr	r3, [r3, #0]
 8008dc0:	4a74      	ldr	r2, [pc, #464]	; (8008f94 <HAL_DMA_Start_IT+0x49c>)
 8008dc2:	4293      	cmp	r3, r2
 8008dc4:	d040      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008dc6:	68fb      	ldr	r3, [r7, #12]
 8008dc8:	681b      	ldr	r3, [r3, #0]
 8008dca:	4a73      	ldr	r2, [pc, #460]	; (8008f98 <HAL_DMA_Start_IT+0x4a0>)
 8008dcc:	4293      	cmp	r3, r2
 8008dce:	d03b      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008dd0:	68fb      	ldr	r3, [r7, #12]
 8008dd2:	681b      	ldr	r3, [r3, #0]
 8008dd4:	4a71      	ldr	r2, [pc, #452]	; (8008f9c <HAL_DMA_Start_IT+0x4a4>)
 8008dd6:	4293      	cmp	r3, r2
 8008dd8:	d036      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008dda:	68fb      	ldr	r3, [r7, #12]
 8008ddc:	681b      	ldr	r3, [r3, #0]
 8008dde:	4a70      	ldr	r2, [pc, #448]	; (8008fa0 <HAL_DMA_Start_IT+0x4a8>)
 8008de0:	4293      	cmp	r3, r2
 8008de2:	d031      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008de4:	68fb      	ldr	r3, [r7, #12]
 8008de6:	681b      	ldr	r3, [r3, #0]
 8008de8:	4a6e      	ldr	r2, [pc, #440]	; (8008fa4 <HAL_DMA_Start_IT+0x4ac>)
 8008dea:	4293      	cmp	r3, r2
 8008dec:	d02c      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008dee:	68fb      	ldr	r3, [r7, #12]
 8008df0:	681b      	ldr	r3, [r3, #0]
 8008df2:	4a6d      	ldr	r2, [pc, #436]	; (8008fa8 <HAL_DMA_Start_IT+0x4b0>)
 8008df4:	4293      	cmp	r3, r2
 8008df6:	d027      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008df8:	68fb      	ldr	r3, [r7, #12]
 8008dfa:	681b      	ldr	r3, [r3, #0]
 8008dfc:	4a6b      	ldr	r2, [pc, #428]	; (8008fac <HAL_DMA_Start_IT+0x4b4>)
 8008dfe:	4293      	cmp	r3, r2
 8008e00:	d022      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008e02:	68fb      	ldr	r3, [r7, #12]
 8008e04:	681b      	ldr	r3, [r3, #0]
 8008e06:	4a6a      	ldr	r2, [pc, #424]	; (8008fb0 <HAL_DMA_Start_IT+0x4b8>)
 8008e08:	4293      	cmp	r3, r2
 8008e0a:	d01d      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008e0c:	68fb      	ldr	r3, [r7, #12]
 8008e0e:	681b      	ldr	r3, [r3, #0]
 8008e10:	4a68      	ldr	r2, [pc, #416]	; (8008fb4 <HAL_DMA_Start_IT+0x4bc>)
 8008e12:	4293      	cmp	r3, r2
 8008e14:	d018      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008e16:	68fb      	ldr	r3, [r7, #12]
 8008e18:	681b      	ldr	r3, [r3, #0]
 8008e1a:	4a67      	ldr	r2, [pc, #412]	; (8008fb8 <HAL_DMA_Start_IT+0x4c0>)
 8008e1c:	4293      	cmp	r3, r2
 8008e1e:	d013      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008e20:	68fb      	ldr	r3, [r7, #12]
 8008e22:	681b      	ldr	r3, [r3, #0]
 8008e24:	4a65      	ldr	r2, [pc, #404]	; (8008fbc <HAL_DMA_Start_IT+0x4c4>)
 8008e26:	4293      	cmp	r3, r2
 8008e28:	d00e      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008e2a:	68fb      	ldr	r3, [r7, #12]
 8008e2c:	681b      	ldr	r3, [r3, #0]
 8008e2e:	4a64      	ldr	r2, [pc, #400]	; (8008fc0 <HAL_DMA_Start_IT+0x4c8>)
 8008e30:	4293      	cmp	r3, r2
 8008e32:	d009      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008e34:	68fb      	ldr	r3, [r7, #12]
 8008e36:	681b      	ldr	r3, [r3, #0]
 8008e38:	4a62      	ldr	r2, [pc, #392]	; (8008fc4 <HAL_DMA_Start_IT+0x4cc>)
 8008e3a:	4293      	cmp	r3, r2
 8008e3c:	d004      	beq.n	8008e48 <HAL_DMA_Start_IT+0x350>
 8008e3e:	68fb      	ldr	r3, [r7, #12]
 8008e40:	681b      	ldr	r3, [r3, #0]
 8008e42:	4a61      	ldr	r2, [pc, #388]	; (8008fc8 <HAL_DMA_Start_IT+0x4d0>)
 8008e44:	4293      	cmp	r3, r2
 8008e46:	d101      	bne.n	8008e4c <HAL_DMA_Start_IT+0x354>
 8008e48:	2301      	movs	r3, #1
 8008e4a:	e000      	b.n	8008e4e <HAL_DMA_Start_IT+0x356>
 8008e4c:	2300      	movs	r3, #0
 8008e4e:	2b00      	cmp	r3, #0
 8008e50:	d01a      	beq.n	8008e88 <HAL_DMA_Start_IT+0x390>
 8008e52:	68fb      	ldr	r3, [r7, #12]
 8008e54:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008e56:	681b      	ldr	r3, [r3, #0]
 8008e58:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008e5c:	2b00      	cmp	r3, #0
 8008e5e:	d007      	beq.n	8008e70 <HAL_DMA_Start_IT+0x378>
 8008e60:	68fb      	ldr	r3, [r7, #12]
 8008e62:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008e64:	681a      	ldr	r2, [r3, #0]
 8008e66:	68fb      	ldr	r3, [r7, #12]
 8008e68:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008e6a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008e6e:	601a      	str	r2, [r3, #0]
 8008e70:	68fb      	ldr	r3, [r7, #12]
 8008e72:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008e74:	2b00      	cmp	r3, #0
 8008e76:	d007      	beq.n	8008e88 <HAL_DMA_Start_IT+0x390>
 8008e78:	68fb      	ldr	r3, [r7, #12]
 8008e7a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008e7c:	681a      	ldr	r2, [r3, #0]
 8008e7e:	68fb      	ldr	r3, [r7, #12]
 8008e80:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008e82:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008e86:	601a      	str	r2, [r3, #0]
 8008e88:	68fb      	ldr	r3, [r7, #12]
 8008e8a:	681b      	ldr	r3, [r3, #0]
 8008e8c:	4a37      	ldr	r2, [pc, #220]	; (8008f6c <HAL_DMA_Start_IT+0x474>)
 8008e8e:	4293      	cmp	r3, r2
 8008e90:	d04a      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008e92:	68fb      	ldr	r3, [r7, #12]
 8008e94:	681b      	ldr	r3, [r3, #0]
 8008e96:	4a36      	ldr	r2, [pc, #216]	; (8008f70 <HAL_DMA_Start_IT+0x478>)
 8008e98:	4293      	cmp	r3, r2
 8008e9a:	d045      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008e9c:	68fb      	ldr	r3, [r7, #12]
 8008e9e:	681b      	ldr	r3, [r3, #0]
 8008ea0:	4a34      	ldr	r2, [pc, #208]	; (8008f74 <HAL_DMA_Start_IT+0x47c>)
 8008ea2:	4293      	cmp	r3, r2
 8008ea4:	d040      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008ea6:	68fb      	ldr	r3, [r7, #12]
 8008ea8:	681b      	ldr	r3, [r3, #0]
 8008eaa:	4a33      	ldr	r2, [pc, #204]	; (8008f78 <HAL_DMA_Start_IT+0x480>)
 8008eac:	4293      	cmp	r3, r2
 8008eae:	d03b      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008eb0:	68fb      	ldr	r3, [r7, #12]
 8008eb2:	681b      	ldr	r3, [r3, #0]
 8008eb4:	4a31      	ldr	r2, [pc, #196]	; (8008f7c <HAL_DMA_Start_IT+0x484>)
 8008eb6:	4293      	cmp	r3, r2
 8008eb8:	d036      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008eba:	68fb      	ldr	r3, [r7, #12]
 8008ebc:	681b      	ldr	r3, [r3, #0]
 8008ebe:	4a30      	ldr	r2, [pc, #192]	; (8008f80 <HAL_DMA_Start_IT+0x488>)
 8008ec0:	4293      	cmp	r3, r2
 8008ec2:	d031      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008ec4:	68fb      	ldr	r3, [r7, #12]
 8008ec6:	681b      	ldr	r3, [r3, #0]
 8008ec8:	4a2e      	ldr	r2, [pc, #184]	; (8008f84 <HAL_DMA_Start_IT+0x48c>)
 8008eca:	4293      	cmp	r3, r2
 8008ecc:	d02c      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008ece:	68fb      	ldr	r3, [r7, #12]
 8008ed0:	681b      	ldr	r3, [r3, #0]
 8008ed2:	4a2d      	ldr	r2, [pc, #180]	; (8008f88 <HAL_DMA_Start_IT+0x490>)
 8008ed4:	4293      	cmp	r3, r2
 8008ed6:	d027      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008ed8:	68fb      	ldr	r3, [r7, #12]
 8008eda:	681b      	ldr	r3, [r3, #0]
 8008edc:	4a2b      	ldr	r2, [pc, #172]	; (8008f8c <HAL_DMA_Start_IT+0x494>)
 8008ede:	4293      	cmp	r3, r2
 8008ee0:	d022      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008ee2:	68fb      	ldr	r3, [r7, #12]
 8008ee4:	681b      	ldr	r3, [r3, #0]
 8008ee6:	4a2a      	ldr	r2, [pc, #168]	; (8008f90 <HAL_DMA_Start_IT+0x498>)
 8008ee8:	4293      	cmp	r3, r2
 8008eea:	d01d      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008eec:	68fb      	ldr	r3, [r7, #12]
 8008eee:	681b      	ldr	r3, [r3, #0]
 8008ef0:	4a28      	ldr	r2, [pc, #160]	; (8008f94 <HAL_DMA_Start_IT+0x49c>)
 8008ef2:	4293      	cmp	r3, r2
 8008ef4:	d018      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008ef6:	68fb      	ldr	r3, [r7, #12]
 8008ef8:	681b      	ldr	r3, [r3, #0]
 8008efa:	4a27      	ldr	r2, [pc, #156]	; (8008f98 <HAL_DMA_Start_IT+0x4a0>)
 8008efc:	4293      	cmp	r3, r2
 8008efe:	d013      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008f00:	68fb      	ldr	r3, [r7, #12]
 8008f02:	681b      	ldr	r3, [r3, #0]
 8008f04:	4a25      	ldr	r2, [pc, #148]	; (8008f9c <HAL_DMA_Start_IT+0x4a4>)
 8008f06:	4293      	cmp	r3, r2
 8008f08:	d00e      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008f0a:	68fb      	ldr	r3, [r7, #12]
 8008f0c:	681b      	ldr	r3, [r3, #0]
 8008f0e:	4a24      	ldr	r2, [pc, #144]	; (8008fa0 <HAL_DMA_Start_IT+0x4a8>)
 8008f10:	4293      	cmp	r3, r2
 8008f12:	d009      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008f14:	68fb      	ldr	r3, [r7, #12]
 8008f16:	681b      	ldr	r3, [r3, #0]
 8008f18:	4a22      	ldr	r2, [pc, #136]	; (8008fa4 <HAL_DMA_Start_IT+0x4ac>)
 8008f1a:	4293      	cmp	r3, r2
 8008f1c:	d004      	beq.n	8008f28 <HAL_DMA_Start_IT+0x430>
 8008f1e:	68fb      	ldr	r3, [r7, #12]
 8008f20:	681b      	ldr	r3, [r3, #0]
 8008f22:	4a21      	ldr	r2, [pc, #132]	; (8008fa8 <HAL_DMA_Start_IT+0x4b0>)
 8008f24:	4293      	cmp	r3, r2
 8008f26:	d108      	bne.n	8008f3a <HAL_DMA_Start_IT+0x442>
 8008f28:	68fb      	ldr	r3, [r7, #12]
 8008f2a:	681b      	ldr	r3, [r3, #0]
 8008f2c:	681a      	ldr	r2, [r3, #0]
 8008f2e:	68fb      	ldr	r3, [r7, #12]
 8008f30:	681b      	ldr	r3, [r3, #0]
 8008f32:	f042 0201 	orr.w	r2, r2, #1
 8008f36:	601a      	str	r2, [r3, #0]
 8008f38:	e012      	b.n	8008f60 <HAL_DMA_Start_IT+0x468>
 8008f3a:	68fb      	ldr	r3, [r7, #12]
 8008f3c:	681b      	ldr	r3, [r3, #0]
 8008f3e:	681a      	ldr	r2, [r3, #0]
 8008f40:	68fb      	ldr	r3, [r7, #12]
 8008f42:	681b      	ldr	r3, [r3, #0]
 8008f44:	f042 0201 	orr.w	r2, r2, #1
 8008f48:	601a      	str	r2, [r3, #0]
 8008f4a:	e009      	b.n	8008f60 <HAL_DMA_Start_IT+0x468>
 8008f4c:	68fb      	ldr	r3, [r7, #12]
 8008f4e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8008f52:	655a      	str	r2, [r3, #84]	; 0x54
 8008f54:	68fb      	ldr	r3, [r7, #12]
 8008f56:	2200      	movs	r2, #0
 8008f58:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008f5c:	2301      	movs	r3, #1
 8008f5e:	75fb      	strb	r3, [r7, #23]
 8008f60:	7dfb      	ldrb	r3, [r7, #23]
 8008f62:	4618      	mov	r0, r3
 8008f64:	3718      	adds	r7, #24
 8008f66:	46bd      	mov	sp, r7
 8008f68:	bd80      	pop	{r7, pc}
 8008f6a:	bf00      	nop
 8008f6c:	40020010 	.word	0x40020010
 8008f70:	40020028 	.word	0x40020028
 8008f74:	40020040 	.word	0x40020040
 8008f78:	40020058 	.word	0x40020058
 8008f7c:	40020070 	.word	0x40020070
 8008f80:	40020088 	.word	0x40020088
 8008f84:	400200a0 	.word	0x400200a0
 8008f88:	400200b8 	.word	0x400200b8
 8008f8c:	40020410 	.word	0x40020410
 8008f90:	40020428 	.word	0x40020428
 8008f94:	40020440 	.word	0x40020440
 8008f98:	40020458 	.word	0x40020458
 8008f9c:	40020470 	.word	0x40020470
 8008fa0:	40020488 	.word	0x40020488
 8008fa4:	400204a0 	.word	0x400204a0
 8008fa8:	400204b8 	.word	0x400204b8
 8008fac:	58025408 	.word	0x58025408
 8008fb0:	5802541c 	.word	0x5802541c
 8008fb4:	58025430 	.word	0x58025430
 8008fb8:	58025444 	.word	0x58025444
 8008fbc:	58025458 	.word	0x58025458
 8008fc0:	5802546c 	.word	0x5802546c
 8008fc4:	58025480 	.word	0x58025480
 8008fc8:	58025494 	.word	0x58025494

08008fcc <HAL_DMA_Abort>:
 8008fcc:	b580      	push	{r7, lr}
 8008fce:	b086      	sub	sp, #24
 8008fd0:	af00      	add	r7, sp, #0
 8008fd2:	6078      	str	r0, [r7, #4]
 8008fd4:	f7fd f90c 	bl	80061f0 <HAL_GetTick>
 8008fd8:	6138      	str	r0, [r7, #16]
 8008fda:	687b      	ldr	r3, [r7, #4]
 8008fdc:	2b00      	cmp	r3, #0
 8008fde:	d101      	bne.n	8008fe4 <HAL_DMA_Abort+0x18>
 8008fe0:	2301      	movs	r3, #1
 8008fe2:	e2dc      	b.n	800959e <HAL_DMA_Abort+0x5d2>
 8008fe4:	687b      	ldr	r3, [r7, #4]
 8008fe6:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008fea:	b2db      	uxtb	r3, r3
 8008fec:	2b02      	cmp	r3, #2
 8008fee:	d008      	beq.n	8009002 <HAL_DMA_Abort+0x36>
 8008ff0:	687b      	ldr	r3, [r7, #4]
 8008ff2:	2280      	movs	r2, #128	; 0x80
 8008ff4:	655a      	str	r2, [r3, #84]	; 0x54
 8008ff6:	687b      	ldr	r3, [r7, #4]
 8008ff8:	2200      	movs	r2, #0
 8008ffa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008ffe:	2301      	movs	r3, #1
 8009000:	e2cd      	b.n	800959e <HAL_DMA_Abort+0x5d2>
 8009002:	687b      	ldr	r3, [r7, #4]
 8009004:	681b      	ldr	r3, [r3, #0]
 8009006:	4a76      	ldr	r2, [pc, #472]	; (80091e0 <HAL_DMA_Abort+0x214>)
 8009008:	4293      	cmp	r3, r2
 800900a:	d04a      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 800900c:	687b      	ldr	r3, [r7, #4]
 800900e:	681b      	ldr	r3, [r3, #0]
 8009010:	4a74      	ldr	r2, [pc, #464]	; (80091e4 <HAL_DMA_Abort+0x218>)
 8009012:	4293      	cmp	r3, r2
 8009014:	d045      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 8009016:	687b      	ldr	r3, [r7, #4]
 8009018:	681b      	ldr	r3, [r3, #0]
 800901a:	4a73      	ldr	r2, [pc, #460]	; (80091e8 <HAL_DMA_Abort+0x21c>)
 800901c:	4293      	cmp	r3, r2
 800901e:	d040      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 8009020:	687b      	ldr	r3, [r7, #4]
 8009022:	681b      	ldr	r3, [r3, #0]
 8009024:	4a71      	ldr	r2, [pc, #452]	; (80091ec <HAL_DMA_Abort+0x220>)
 8009026:	4293      	cmp	r3, r2
 8009028:	d03b      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 800902a:	687b      	ldr	r3, [r7, #4]
 800902c:	681b      	ldr	r3, [r3, #0]
 800902e:	4a70      	ldr	r2, [pc, #448]	; (80091f0 <HAL_DMA_Abort+0x224>)
 8009030:	4293      	cmp	r3, r2
 8009032:	d036      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 8009034:	687b      	ldr	r3, [r7, #4]
 8009036:	681b      	ldr	r3, [r3, #0]
 8009038:	4a6e      	ldr	r2, [pc, #440]	; (80091f4 <HAL_DMA_Abort+0x228>)
 800903a:	4293      	cmp	r3, r2
 800903c:	d031      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 800903e:	687b      	ldr	r3, [r7, #4]
 8009040:	681b      	ldr	r3, [r3, #0]
 8009042:	4a6d      	ldr	r2, [pc, #436]	; (80091f8 <HAL_DMA_Abort+0x22c>)
 8009044:	4293      	cmp	r3, r2
 8009046:	d02c      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 8009048:	687b      	ldr	r3, [r7, #4]
 800904a:	681b      	ldr	r3, [r3, #0]
 800904c:	4a6b      	ldr	r2, [pc, #428]	; (80091fc <HAL_DMA_Abort+0x230>)
 800904e:	4293      	cmp	r3, r2
 8009050:	d027      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 8009052:	687b      	ldr	r3, [r7, #4]
 8009054:	681b      	ldr	r3, [r3, #0]
 8009056:	4a6a      	ldr	r2, [pc, #424]	; (8009200 <HAL_DMA_Abort+0x234>)
 8009058:	4293      	cmp	r3, r2
 800905a:	d022      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 800905c:	687b      	ldr	r3, [r7, #4]
 800905e:	681b      	ldr	r3, [r3, #0]
 8009060:	4a68      	ldr	r2, [pc, #416]	; (8009204 <HAL_DMA_Abort+0x238>)
 8009062:	4293      	cmp	r3, r2
 8009064:	d01d      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 8009066:	687b      	ldr	r3, [r7, #4]
 8009068:	681b      	ldr	r3, [r3, #0]
 800906a:	4a67      	ldr	r2, [pc, #412]	; (8009208 <HAL_DMA_Abort+0x23c>)
 800906c:	4293      	cmp	r3, r2
 800906e:	d018      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 8009070:	687b      	ldr	r3, [r7, #4]
 8009072:	681b      	ldr	r3, [r3, #0]
 8009074:	4a65      	ldr	r2, [pc, #404]	; (800920c <HAL_DMA_Abort+0x240>)
 8009076:	4293      	cmp	r3, r2
 8009078:	d013      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	681b      	ldr	r3, [r3, #0]
 800907e:	4a64      	ldr	r2, [pc, #400]	; (8009210 <HAL_DMA_Abort+0x244>)
 8009080:	4293      	cmp	r3, r2
 8009082:	d00e      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	681b      	ldr	r3, [r3, #0]
 8009088:	4a62      	ldr	r2, [pc, #392]	; (8009214 <HAL_DMA_Abort+0x248>)
 800908a:	4293      	cmp	r3, r2
 800908c:	d009      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 800908e:	687b      	ldr	r3, [r7, #4]
 8009090:	681b      	ldr	r3, [r3, #0]
 8009092:	4a61      	ldr	r2, [pc, #388]	; (8009218 <HAL_DMA_Abort+0x24c>)
 8009094:	4293      	cmp	r3, r2
 8009096:	d004      	beq.n	80090a2 <HAL_DMA_Abort+0xd6>
 8009098:	687b      	ldr	r3, [r7, #4]
 800909a:	681b      	ldr	r3, [r3, #0]
 800909c:	4a5f      	ldr	r2, [pc, #380]	; (800921c <HAL_DMA_Abort+0x250>)
 800909e:	4293      	cmp	r3, r2
 80090a0:	d101      	bne.n	80090a6 <HAL_DMA_Abort+0xda>
 80090a2:	2301      	movs	r3, #1
 80090a4:	e000      	b.n	80090a8 <HAL_DMA_Abort+0xdc>
 80090a6:	2300      	movs	r3, #0
 80090a8:	2b00      	cmp	r3, #0
 80090aa:	d013      	beq.n	80090d4 <HAL_DMA_Abort+0x108>
 80090ac:	687b      	ldr	r3, [r7, #4]
 80090ae:	681b      	ldr	r3, [r3, #0]
 80090b0:	681a      	ldr	r2, [r3, #0]
 80090b2:	687b      	ldr	r3, [r7, #4]
 80090b4:	681b      	ldr	r3, [r3, #0]
 80090b6:	f022 021e 	bic.w	r2, r2, #30
 80090ba:	601a      	str	r2, [r3, #0]
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	681b      	ldr	r3, [r3, #0]
 80090c0:	695a      	ldr	r2, [r3, #20]
 80090c2:	687b      	ldr	r3, [r7, #4]
 80090c4:	681b      	ldr	r3, [r3, #0]
 80090c6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80090ca:	615a      	str	r2, [r3, #20]
 80090cc:	687b      	ldr	r3, [r7, #4]
 80090ce:	681b      	ldr	r3, [r3, #0]
 80090d0:	617b      	str	r3, [r7, #20]
 80090d2:	e00a      	b.n	80090ea <HAL_DMA_Abort+0x11e>
 80090d4:	687b      	ldr	r3, [r7, #4]
 80090d6:	681b      	ldr	r3, [r3, #0]
 80090d8:	681a      	ldr	r2, [r3, #0]
 80090da:	687b      	ldr	r3, [r7, #4]
 80090dc:	681b      	ldr	r3, [r3, #0]
 80090de:	f022 020e 	bic.w	r2, r2, #14
 80090e2:	601a      	str	r2, [r3, #0]
 80090e4:	687b      	ldr	r3, [r7, #4]
 80090e6:	681b      	ldr	r3, [r3, #0]
 80090e8:	617b      	str	r3, [r7, #20]
 80090ea:	687b      	ldr	r3, [r7, #4]
 80090ec:	681b      	ldr	r3, [r3, #0]
 80090ee:	4a3c      	ldr	r2, [pc, #240]	; (80091e0 <HAL_DMA_Abort+0x214>)
 80090f0:	4293      	cmp	r3, r2
 80090f2:	d072      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 80090f4:	687b      	ldr	r3, [r7, #4]
 80090f6:	681b      	ldr	r3, [r3, #0]
 80090f8:	4a3a      	ldr	r2, [pc, #232]	; (80091e4 <HAL_DMA_Abort+0x218>)
 80090fa:	4293      	cmp	r3, r2
 80090fc:	d06d      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 80090fe:	687b      	ldr	r3, [r7, #4]
 8009100:	681b      	ldr	r3, [r3, #0]
 8009102:	4a39      	ldr	r2, [pc, #228]	; (80091e8 <HAL_DMA_Abort+0x21c>)
 8009104:	4293      	cmp	r3, r2
 8009106:	d068      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009108:	687b      	ldr	r3, [r7, #4]
 800910a:	681b      	ldr	r3, [r3, #0]
 800910c:	4a37      	ldr	r2, [pc, #220]	; (80091ec <HAL_DMA_Abort+0x220>)
 800910e:	4293      	cmp	r3, r2
 8009110:	d063      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009112:	687b      	ldr	r3, [r7, #4]
 8009114:	681b      	ldr	r3, [r3, #0]
 8009116:	4a36      	ldr	r2, [pc, #216]	; (80091f0 <HAL_DMA_Abort+0x224>)
 8009118:	4293      	cmp	r3, r2
 800911a:	d05e      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 800911c:	687b      	ldr	r3, [r7, #4]
 800911e:	681b      	ldr	r3, [r3, #0]
 8009120:	4a34      	ldr	r2, [pc, #208]	; (80091f4 <HAL_DMA_Abort+0x228>)
 8009122:	4293      	cmp	r3, r2
 8009124:	d059      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009126:	687b      	ldr	r3, [r7, #4]
 8009128:	681b      	ldr	r3, [r3, #0]
 800912a:	4a33      	ldr	r2, [pc, #204]	; (80091f8 <HAL_DMA_Abort+0x22c>)
 800912c:	4293      	cmp	r3, r2
 800912e:	d054      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009130:	687b      	ldr	r3, [r7, #4]
 8009132:	681b      	ldr	r3, [r3, #0]
 8009134:	4a31      	ldr	r2, [pc, #196]	; (80091fc <HAL_DMA_Abort+0x230>)
 8009136:	4293      	cmp	r3, r2
 8009138:	d04f      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 800913a:	687b      	ldr	r3, [r7, #4]
 800913c:	681b      	ldr	r3, [r3, #0]
 800913e:	4a30      	ldr	r2, [pc, #192]	; (8009200 <HAL_DMA_Abort+0x234>)
 8009140:	4293      	cmp	r3, r2
 8009142:	d04a      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009144:	687b      	ldr	r3, [r7, #4]
 8009146:	681b      	ldr	r3, [r3, #0]
 8009148:	4a2e      	ldr	r2, [pc, #184]	; (8009204 <HAL_DMA_Abort+0x238>)
 800914a:	4293      	cmp	r3, r2
 800914c:	d045      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 800914e:	687b      	ldr	r3, [r7, #4]
 8009150:	681b      	ldr	r3, [r3, #0]
 8009152:	4a2d      	ldr	r2, [pc, #180]	; (8009208 <HAL_DMA_Abort+0x23c>)
 8009154:	4293      	cmp	r3, r2
 8009156:	d040      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009158:	687b      	ldr	r3, [r7, #4]
 800915a:	681b      	ldr	r3, [r3, #0]
 800915c:	4a2b      	ldr	r2, [pc, #172]	; (800920c <HAL_DMA_Abort+0x240>)
 800915e:	4293      	cmp	r3, r2
 8009160:	d03b      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009162:	687b      	ldr	r3, [r7, #4]
 8009164:	681b      	ldr	r3, [r3, #0]
 8009166:	4a2a      	ldr	r2, [pc, #168]	; (8009210 <HAL_DMA_Abort+0x244>)
 8009168:	4293      	cmp	r3, r2
 800916a:	d036      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 800916c:	687b      	ldr	r3, [r7, #4]
 800916e:	681b      	ldr	r3, [r3, #0]
 8009170:	4a28      	ldr	r2, [pc, #160]	; (8009214 <HAL_DMA_Abort+0x248>)
 8009172:	4293      	cmp	r3, r2
 8009174:	d031      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009176:	687b      	ldr	r3, [r7, #4]
 8009178:	681b      	ldr	r3, [r3, #0]
 800917a:	4a27      	ldr	r2, [pc, #156]	; (8009218 <HAL_DMA_Abort+0x24c>)
 800917c:	4293      	cmp	r3, r2
 800917e:	d02c      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009180:	687b      	ldr	r3, [r7, #4]
 8009182:	681b      	ldr	r3, [r3, #0]
 8009184:	4a25      	ldr	r2, [pc, #148]	; (800921c <HAL_DMA_Abort+0x250>)
 8009186:	4293      	cmp	r3, r2
 8009188:	d027      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 800918a:	687b      	ldr	r3, [r7, #4]
 800918c:	681b      	ldr	r3, [r3, #0]
 800918e:	4a24      	ldr	r2, [pc, #144]	; (8009220 <HAL_DMA_Abort+0x254>)
 8009190:	4293      	cmp	r3, r2
 8009192:	d022      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 8009194:	687b      	ldr	r3, [r7, #4]
 8009196:	681b      	ldr	r3, [r3, #0]
 8009198:	4a22      	ldr	r2, [pc, #136]	; (8009224 <HAL_DMA_Abort+0x258>)
 800919a:	4293      	cmp	r3, r2
 800919c:	d01d      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 800919e:	687b      	ldr	r3, [r7, #4]
 80091a0:	681b      	ldr	r3, [r3, #0]
 80091a2:	4a21      	ldr	r2, [pc, #132]	; (8009228 <HAL_DMA_Abort+0x25c>)
 80091a4:	4293      	cmp	r3, r2
 80091a6:	d018      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 80091a8:	687b      	ldr	r3, [r7, #4]
 80091aa:	681b      	ldr	r3, [r3, #0]
 80091ac:	4a1f      	ldr	r2, [pc, #124]	; (800922c <HAL_DMA_Abort+0x260>)
 80091ae:	4293      	cmp	r3, r2
 80091b0:	d013      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 80091b2:	687b      	ldr	r3, [r7, #4]
 80091b4:	681b      	ldr	r3, [r3, #0]
 80091b6:	4a1e      	ldr	r2, [pc, #120]	; (8009230 <HAL_DMA_Abort+0x264>)
 80091b8:	4293      	cmp	r3, r2
 80091ba:	d00e      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 80091bc:	687b      	ldr	r3, [r7, #4]
 80091be:	681b      	ldr	r3, [r3, #0]
 80091c0:	4a1c      	ldr	r2, [pc, #112]	; (8009234 <HAL_DMA_Abort+0x268>)
 80091c2:	4293      	cmp	r3, r2
 80091c4:	d009      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 80091c6:	687b      	ldr	r3, [r7, #4]
 80091c8:	681b      	ldr	r3, [r3, #0]
 80091ca:	4a1b      	ldr	r2, [pc, #108]	; (8009238 <HAL_DMA_Abort+0x26c>)
 80091cc:	4293      	cmp	r3, r2
 80091ce:	d004      	beq.n	80091da <HAL_DMA_Abort+0x20e>
 80091d0:	687b      	ldr	r3, [r7, #4]
 80091d2:	681b      	ldr	r3, [r3, #0]
 80091d4:	4a19      	ldr	r2, [pc, #100]	; (800923c <HAL_DMA_Abort+0x270>)
 80091d6:	4293      	cmp	r3, r2
 80091d8:	d132      	bne.n	8009240 <HAL_DMA_Abort+0x274>
 80091da:	2301      	movs	r3, #1
 80091dc:	e031      	b.n	8009242 <HAL_DMA_Abort+0x276>
 80091de:	bf00      	nop
 80091e0:	40020010 	.word	0x40020010
 80091e4:	40020028 	.word	0x40020028
 80091e8:	40020040 	.word	0x40020040
 80091ec:	40020058 	.word	0x40020058
 80091f0:	40020070 	.word	0x40020070
 80091f4:	40020088 	.word	0x40020088
 80091f8:	400200a0 	.word	0x400200a0
 80091fc:	400200b8 	.word	0x400200b8
 8009200:	40020410 	.word	0x40020410
 8009204:	40020428 	.word	0x40020428
 8009208:	40020440 	.word	0x40020440
 800920c:	40020458 	.word	0x40020458
 8009210:	40020470 	.word	0x40020470
 8009214:	40020488 	.word	0x40020488
 8009218:	400204a0 	.word	0x400204a0
 800921c:	400204b8 	.word	0x400204b8
 8009220:	58025408 	.word	0x58025408
 8009224:	5802541c 	.word	0x5802541c
 8009228:	58025430 	.word	0x58025430
 800922c:	58025444 	.word	0x58025444
 8009230:	58025458 	.word	0x58025458
 8009234:	5802546c 	.word	0x5802546c
 8009238:	58025480 	.word	0x58025480
 800923c:	58025494 	.word	0x58025494
 8009240:	2300      	movs	r3, #0
 8009242:	2b00      	cmp	r3, #0
 8009244:	d007      	beq.n	8009256 <HAL_DMA_Abort+0x28a>
 8009246:	687b      	ldr	r3, [r7, #4]
 8009248:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800924a:	681a      	ldr	r2, [r3, #0]
 800924c:	687b      	ldr	r3, [r7, #4]
 800924e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009250:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009254:	601a      	str	r2, [r3, #0]
 8009256:	687b      	ldr	r3, [r7, #4]
 8009258:	681b      	ldr	r3, [r3, #0]
 800925a:	4a6d      	ldr	r2, [pc, #436]	; (8009410 <HAL_DMA_Abort+0x444>)
 800925c:	4293      	cmp	r3, r2
 800925e:	d04a      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 8009260:	687b      	ldr	r3, [r7, #4]
 8009262:	681b      	ldr	r3, [r3, #0]
 8009264:	4a6b      	ldr	r2, [pc, #428]	; (8009414 <HAL_DMA_Abort+0x448>)
 8009266:	4293      	cmp	r3, r2
 8009268:	d045      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 800926a:	687b      	ldr	r3, [r7, #4]
 800926c:	681b      	ldr	r3, [r3, #0]
 800926e:	4a6a      	ldr	r2, [pc, #424]	; (8009418 <HAL_DMA_Abort+0x44c>)
 8009270:	4293      	cmp	r3, r2
 8009272:	d040      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 8009274:	687b      	ldr	r3, [r7, #4]
 8009276:	681b      	ldr	r3, [r3, #0]
 8009278:	4a68      	ldr	r2, [pc, #416]	; (800941c <HAL_DMA_Abort+0x450>)
 800927a:	4293      	cmp	r3, r2
 800927c:	d03b      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	681b      	ldr	r3, [r3, #0]
 8009282:	4a67      	ldr	r2, [pc, #412]	; (8009420 <HAL_DMA_Abort+0x454>)
 8009284:	4293      	cmp	r3, r2
 8009286:	d036      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 8009288:	687b      	ldr	r3, [r7, #4]
 800928a:	681b      	ldr	r3, [r3, #0]
 800928c:	4a65      	ldr	r2, [pc, #404]	; (8009424 <HAL_DMA_Abort+0x458>)
 800928e:	4293      	cmp	r3, r2
 8009290:	d031      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 8009292:	687b      	ldr	r3, [r7, #4]
 8009294:	681b      	ldr	r3, [r3, #0]
 8009296:	4a64      	ldr	r2, [pc, #400]	; (8009428 <HAL_DMA_Abort+0x45c>)
 8009298:	4293      	cmp	r3, r2
 800929a:	d02c      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 800929c:	687b      	ldr	r3, [r7, #4]
 800929e:	681b      	ldr	r3, [r3, #0]
 80092a0:	4a62      	ldr	r2, [pc, #392]	; (800942c <HAL_DMA_Abort+0x460>)
 80092a2:	4293      	cmp	r3, r2
 80092a4:	d027      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 80092a6:	687b      	ldr	r3, [r7, #4]
 80092a8:	681b      	ldr	r3, [r3, #0]
 80092aa:	4a61      	ldr	r2, [pc, #388]	; (8009430 <HAL_DMA_Abort+0x464>)
 80092ac:	4293      	cmp	r3, r2
 80092ae:	d022      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 80092b0:	687b      	ldr	r3, [r7, #4]
 80092b2:	681b      	ldr	r3, [r3, #0]
 80092b4:	4a5f      	ldr	r2, [pc, #380]	; (8009434 <HAL_DMA_Abort+0x468>)
 80092b6:	4293      	cmp	r3, r2
 80092b8:	d01d      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	681b      	ldr	r3, [r3, #0]
 80092be:	4a5e      	ldr	r2, [pc, #376]	; (8009438 <HAL_DMA_Abort+0x46c>)
 80092c0:	4293      	cmp	r3, r2
 80092c2:	d018      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	681b      	ldr	r3, [r3, #0]
 80092c8:	4a5c      	ldr	r2, [pc, #368]	; (800943c <HAL_DMA_Abort+0x470>)
 80092ca:	4293      	cmp	r3, r2
 80092cc:	d013      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 80092ce:	687b      	ldr	r3, [r7, #4]
 80092d0:	681b      	ldr	r3, [r3, #0]
 80092d2:	4a5b      	ldr	r2, [pc, #364]	; (8009440 <HAL_DMA_Abort+0x474>)
 80092d4:	4293      	cmp	r3, r2
 80092d6:	d00e      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 80092d8:	687b      	ldr	r3, [r7, #4]
 80092da:	681b      	ldr	r3, [r3, #0]
 80092dc:	4a59      	ldr	r2, [pc, #356]	; (8009444 <HAL_DMA_Abort+0x478>)
 80092de:	4293      	cmp	r3, r2
 80092e0:	d009      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	681b      	ldr	r3, [r3, #0]
 80092e6:	4a58      	ldr	r2, [pc, #352]	; (8009448 <HAL_DMA_Abort+0x47c>)
 80092e8:	4293      	cmp	r3, r2
 80092ea:	d004      	beq.n	80092f6 <HAL_DMA_Abort+0x32a>
 80092ec:	687b      	ldr	r3, [r7, #4]
 80092ee:	681b      	ldr	r3, [r3, #0]
 80092f0:	4a56      	ldr	r2, [pc, #344]	; (800944c <HAL_DMA_Abort+0x480>)
 80092f2:	4293      	cmp	r3, r2
 80092f4:	d108      	bne.n	8009308 <HAL_DMA_Abort+0x33c>
 80092f6:	687b      	ldr	r3, [r7, #4]
 80092f8:	681b      	ldr	r3, [r3, #0]
 80092fa:	681a      	ldr	r2, [r3, #0]
 80092fc:	687b      	ldr	r3, [r7, #4]
 80092fe:	681b      	ldr	r3, [r3, #0]
 8009300:	f022 0201 	bic.w	r2, r2, #1
 8009304:	601a      	str	r2, [r3, #0]
 8009306:	e007      	b.n	8009318 <HAL_DMA_Abort+0x34c>
 8009308:	687b      	ldr	r3, [r7, #4]
 800930a:	681b      	ldr	r3, [r3, #0]
 800930c:	681a      	ldr	r2, [r3, #0]
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	681b      	ldr	r3, [r3, #0]
 8009312:	f022 0201 	bic.w	r2, r2, #1
 8009316:	601a      	str	r2, [r3, #0]
 8009318:	e013      	b.n	8009342 <HAL_DMA_Abort+0x376>
 800931a:	f7fc ff69 	bl	80061f0 <HAL_GetTick>
 800931e:	4602      	mov	r2, r0
 8009320:	693b      	ldr	r3, [r7, #16]
 8009322:	1ad3      	subs	r3, r2, r3
 8009324:	2b05      	cmp	r3, #5
 8009326:	d90c      	bls.n	8009342 <HAL_DMA_Abort+0x376>
 8009328:	687b      	ldr	r3, [r7, #4]
 800932a:	2220      	movs	r2, #32
 800932c:	655a      	str	r2, [r3, #84]	; 0x54
 800932e:	687b      	ldr	r3, [r7, #4]
 8009330:	2203      	movs	r2, #3
 8009332:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8009336:	687b      	ldr	r3, [r7, #4]
 8009338:	2200      	movs	r2, #0
 800933a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800933e:	2301      	movs	r3, #1
 8009340:	e12d      	b.n	800959e <HAL_DMA_Abort+0x5d2>
 8009342:	697b      	ldr	r3, [r7, #20]
 8009344:	681b      	ldr	r3, [r3, #0]
 8009346:	f003 0301 	and.w	r3, r3, #1
 800934a:	2b00      	cmp	r3, #0
 800934c:	d1e5      	bne.n	800931a <HAL_DMA_Abort+0x34e>
 800934e:	687b      	ldr	r3, [r7, #4]
 8009350:	681b      	ldr	r3, [r3, #0]
 8009352:	4a2f      	ldr	r2, [pc, #188]	; (8009410 <HAL_DMA_Abort+0x444>)
 8009354:	4293      	cmp	r3, r2
 8009356:	d04a      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 8009358:	687b      	ldr	r3, [r7, #4]
 800935a:	681b      	ldr	r3, [r3, #0]
 800935c:	4a2d      	ldr	r2, [pc, #180]	; (8009414 <HAL_DMA_Abort+0x448>)
 800935e:	4293      	cmp	r3, r2
 8009360:	d045      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 8009362:	687b      	ldr	r3, [r7, #4]
 8009364:	681b      	ldr	r3, [r3, #0]
 8009366:	4a2c      	ldr	r2, [pc, #176]	; (8009418 <HAL_DMA_Abort+0x44c>)
 8009368:	4293      	cmp	r3, r2
 800936a:	d040      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 800936c:	687b      	ldr	r3, [r7, #4]
 800936e:	681b      	ldr	r3, [r3, #0]
 8009370:	4a2a      	ldr	r2, [pc, #168]	; (800941c <HAL_DMA_Abort+0x450>)
 8009372:	4293      	cmp	r3, r2
 8009374:	d03b      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 8009376:	687b      	ldr	r3, [r7, #4]
 8009378:	681b      	ldr	r3, [r3, #0]
 800937a:	4a29      	ldr	r2, [pc, #164]	; (8009420 <HAL_DMA_Abort+0x454>)
 800937c:	4293      	cmp	r3, r2
 800937e:	d036      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 8009380:	687b      	ldr	r3, [r7, #4]
 8009382:	681b      	ldr	r3, [r3, #0]
 8009384:	4a27      	ldr	r2, [pc, #156]	; (8009424 <HAL_DMA_Abort+0x458>)
 8009386:	4293      	cmp	r3, r2
 8009388:	d031      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 800938a:	687b      	ldr	r3, [r7, #4]
 800938c:	681b      	ldr	r3, [r3, #0]
 800938e:	4a26      	ldr	r2, [pc, #152]	; (8009428 <HAL_DMA_Abort+0x45c>)
 8009390:	4293      	cmp	r3, r2
 8009392:	d02c      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 8009394:	687b      	ldr	r3, [r7, #4]
 8009396:	681b      	ldr	r3, [r3, #0]
 8009398:	4a24      	ldr	r2, [pc, #144]	; (800942c <HAL_DMA_Abort+0x460>)
 800939a:	4293      	cmp	r3, r2
 800939c:	d027      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 800939e:	687b      	ldr	r3, [r7, #4]
 80093a0:	681b      	ldr	r3, [r3, #0]
 80093a2:	4a23      	ldr	r2, [pc, #140]	; (8009430 <HAL_DMA_Abort+0x464>)
 80093a4:	4293      	cmp	r3, r2
 80093a6:	d022      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 80093a8:	687b      	ldr	r3, [r7, #4]
 80093aa:	681b      	ldr	r3, [r3, #0]
 80093ac:	4a21      	ldr	r2, [pc, #132]	; (8009434 <HAL_DMA_Abort+0x468>)
 80093ae:	4293      	cmp	r3, r2
 80093b0:	d01d      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 80093b2:	687b      	ldr	r3, [r7, #4]
 80093b4:	681b      	ldr	r3, [r3, #0]
 80093b6:	4a20      	ldr	r2, [pc, #128]	; (8009438 <HAL_DMA_Abort+0x46c>)
 80093b8:	4293      	cmp	r3, r2
 80093ba:	d018      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 80093bc:	687b      	ldr	r3, [r7, #4]
 80093be:	681b      	ldr	r3, [r3, #0]
 80093c0:	4a1e      	ldr	r2, [pc, #120]	; (800943c <HAL_DMA_Abort+0x470>)
 80093c2:	4293      	cmp	r3, r2
 80093c4:	d013      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 80093c6:	687b      	ldr	r3, [r7, #4]
 80093c8:	681b      	ldr	r3, [r3, #0]
 80093ca:	4a1d      	ldr	r2, [pc, #116]	; (8009440 <HAL_DMA_Abort+0x474>)
 80093cc:	4293      	cmp	r3, r2
 80093ce:	d00e      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 80093d0:	687b      	ldr	r3, [r7, #4]
 80093d2:	681b      	ldr	r3, [r3, #0]
 80093d4:	4a1b      	ldr	r2, [pc, #108]	; (8009444 <HAL_DMA_Abort+0x478>)
 80093d6:	4293      	cmp	r3, r2
 80093d8:	d009      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 80093da:	687b      	ldr	r3, [r7, #4]
 80093dc:	681b      	ldr	r3, [r3, #0]
 80093de:	4a1a      	ldr	r2, [pc, #104]	; (8009448 <HAL_DMA_Abort+0x47c>)
 80093e0:	4293      	cmp	r3, r2
 80093e2:	d004      	beq.n	80093ee <HAL_DMA_Abort+0x422>
 80093e4:	687b      	ldr	r3, [r7, #4]
 80093e6:	681b      	ldr	r3, [r3, #0]
 80093e8:	4a18      	ldr	r2, [pc, #96]	; (800944c <HAL_DMA_Abort+0x480>)
 80093ea:	4293      	cmp	r3, r2
 80093ec:	d101      	bne.n	80093f2 <HAL_DMA_Abort+0x426>
 80093ee:	2301      	movs	r3, #1
 80093f0:	e000      	b.n	80093f4 <HAL_DMA_Abort+0x428>
 80093f2:	2300      	movs	r3, #0
 80093f4:	2b00      	cmp	r3, #0
 80093f6:	d02b      	beq.n	8009450 <HAL_DMA_Abort+0x484>
 80093f8:	687b      	ldr	r3, [r7, #4]
 80093fa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80093fc:	60bb      	str	r3, [r7, #8]
 80093fe:	687b      	ldr	r3, [r7, #4]
 8009400:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009402:	f003 031f 	and.w	r3, r3, #31
 8009406:	223f      	movs	r2, #63	; 0x3f
 8009408:	409a      	lsls	r2, r3
 800940a:	68bb      	ldr	r3, [r7, #8]
 800940c:	609a      	str	r2, [r3, #8]
 800940e:	e02a      	b.n	8009466 <HAL_DMA_Abort+0x49a>
 8009410:	40020010 	.word	0x40020010
 8009414:	40020028 	.word	0x40020028
 8009418:	40020040 	.word	0x40020040
 800941c:	40020058 	.word	0x40020058
 8009420:	40020070 	.word	0x40020070
 8009424:	40020088 	.word	0x40020088
 8009428:	400200a0 	.word	0x400200a0
 800942c:	400200b8 	.word	0x400200b8
 8009430:	40020410 	.word	0x40020410
 8009434:	40020428 	.word	0x40020428
 8009438:	40020440 	.word	0x40020440
 800943c:	40020458 	.word	0x40020458
 8009440:	40020470 	.word	0x40020470
 8009444:	40020488 	.word	0x40020488
 8009448:	400204a0 	.word	0x400204a0
 800944c:	400204b8 	.word	0x400204b8
 8009450:	687b      	ldr	r3, [r7, #4]
 8009452:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009454:	60fb      	str	r3, [r7, #12]
 8009456:	687b      	ldr	r3, [r7, #4]
 8009458:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800945a:	f003 031f 	and.w	r3, r3, #31
 800945e:	2201      	movs	r2, #1
 8009460:	409a      	lsls	r2, r3
 8009462:	68fb      	ldr	r3, [r7, #12]
 8009464:	605a      	str	r2, [r3, #4]
 8009466:	687b      	ldr	r3, [r7, #4]
 8009468:	681b      	ldr	r3, [r3, #0]
 800946a:	4a4f      	ldr	r2, [pc, #316]	; (80095a8 <HAL_DMA_Abort+0x5dc>)
 800946c:	4293      	cmp	r3, r2
 800946e:	d072      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 8009470:	687b      	ldr	r3, [r7, #4]
 8009472:	681b      	ldr	r3, [r3, #0]
 8009474:	4a4d      	ldr	r2, [pc, #308]	; (80095ac <HAL_DMA_Abort+0x5e0>)
 8009476:	4293      	cmp	r3, r2
 8009478:	d06d      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 800947a:	687b      	ldr	r3, [r7, #4]
 800947c:	681b      	ldr	r3, [r3, #0]
 800947e:	4a4c      	ldr	r2, [pc, #304]	; (80095b0 <HAL_DMA_Abort+0x5e4>)
 8009480:	4293      	cmp	r3, r2
 8009482:	d068      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 8009484:	687b      	ldr	r3, [r7, #4]
 8009486:	681b      	ldr	r3, [r3, #0]
 8009488:	4a4a      	ldr	r2, [pc, #296]	; (80095b4 <HAL_DMA_Abort+0x5e8>)
 800948a:	4293      	cmp	r3, r2
 800948c:	d063      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	681b      	ldr	r3, [r3, #0]
 8009492:	4a49      	ldr	r2, [pc, #292]	; (80095b8 <HAL_DMA_Abort+0x5ec>)
 8009494:	4293      	cmp	r3, r2
 8009496:	d05e      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 8009498:	687b      	ldr	r3, [r7, #4]
 800949a:	681b      	ldr	r3, [r3, #0]
 800949c:	4a47      	ldr	r2, [pc, #284]	; (80095bc <HAL_DMA_Abort+0x5f0>)
 800949e:	4293      	cmp	r3, r2
 80094a0:	d059      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094a2:	687b      	ldr	r3, [r7, #4]
 80094a4:	681b      	ldr	r3, [r3, #0]
 80094a6:	4a46      	ldr	r2, [pc, #280]	; (80095c0 <HAL_DMA_Abort+0x5f4>)
 80094a8:	4293      	cmp	r3, r2
 80094aa:	d054      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094ac:	687b      	ldr	r3, [r7, #4]
 80094ae:	681b      	ldr	r3, [r3, #0]
 80094b0:	4a44      	ldr	r2, [pc, #272]	; (80095c4 <HAL_DMA_Abort+0x5f8>)
 80094b2:	4293      	cmp	r3, r2
 80094b4:	d04f      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094b6:	687b      	ldr	r3, [r7, #4]
 80094b8:	681b      	ldr	r3, [r3, #0]
 80094ba:	4a43      	ldr	r2, [pc, #268]	; (80095c8 <HAL_DMA_Abort+0x5fc>)
 80094bc:	4293      	cmp	r3, r2
 80094be:	d04a      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094c0:	687b      	ldr	r3, [r7, #4]
 80094c2:	681b      	ldr	r3, [r3, #0]
 80094c4:	4a41      	ldr	r2, [pc, #260]	; (80095cc <HAL_DMA_Abort+0x600>)
 80094c6:	4293      	cmp	r3, r2
 80094c8:	d045      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	681b      	ldr	r3, [r3, #0]
 80094ce:	4a40      	ldr	r2, [pc, #256]	; (80095d0 <HAL_DMA_Abort+0x604>)
 80094d0:	4293      	cmp	r3, r2
 80094d2:	d040      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094d4:	687b      	ldr	r3, [r7, #4]
 80094d6:	681b      	ldr	r3, [r3, #0]
 80094d8:	4a3e      	ldr	r2, [pc, #248]	; (80095d4 <HAL_DMA_Abort+0x608>)
 80094da:	4293      	cmp	r3, r2
 80094dc:	d03b      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094de:	687b      	ldr	r3, [r7, #4]
 80094e0:	681b      	ldr	r3, [r3, #0]
 80094e2:	4a3d      	ldr	r2, [pc, #244]	; (80095d8 <HAL_DMA_Abort+0x60c>)
 80094e4:	4293      	cmp	r3, r2
 80094e6:	d036      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	681b      	ldr	r3, [r3, #0]
 80094ec:	4a3b      	ldr	r2, [pc, #236]	; (80095dc <HAL_DMA_Abort+0x610>)
 80094ee:	4293      	cmp	r3, r2
 80094f0:	d031      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094f2:	687b      	ldr	r3, [r7, #4]
 80094f4:	681b      	ldr	r3, [r3, #0]
 80094f6:	4a3a      	ldr	r2, [pc, #232]	; (80095e0 <HAL_DMA_Abort+0x614>)
 80094f8:	4293      	cmp	r3, r2
 80094fa:	d02c      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 80094fc:	687b      	ldr	r3, [r7, #4]
 80094fe:	681b      	ldr	r3, [r3, #0]
 8009500:	4a38      	ldr	r2, [pc, #224]	; (80095e4 <HAL_DMA_Abort+0x618>)
 8009502:	4293      	cmp	r3, r2
 8009504:	d027      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 8009506:	687b      	ldr	r3, [r7, #4]
 8009508:	681b      	ldr	r3, [r3, #0]
 800950a:	4a37      	ldr	r2, [pc, #220]	; (80095e8 <HAL_DMA_Abort+0x61c>)
 800950c:	4293      	cmp	r3, r2
 800950e:	d022      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 8009510:	687b      	ldr	r3, [r7, #4]
 8009512:	681b      	ldr	r3, [r3, #0]
 8009514:	4a35      	ldr	r2, [pc, #212]	; (80095ec <HAL_DMA_Abort+0x620>)
 8009516:	4293      	cmp	r3, r2
 8009518:	d01d      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 800951a:	687b      	ldr	r3, [r7, #4]
 800951c:	681b      	ldr	r3, [r3, #0]
 800951e:	4a34      	ldr	r2, [pc, #208]	; (80095f0 <HAL_DMA_Abort+0x624>)
 8009520:	4293      	cmp	r3, r2
 8009522:	d018      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	681b      	ldr	r3, [r3, #0]
 8009528:	4a32      	ldr	r2, [pc, #200]	; (80095f4 <HAL_DMA_Abort+0x628>)
 800952a:	4293      	cmp	r3, r2
 800952c:	d013      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 800952e:	687b      	ldr	r3, [r7, #4]
 8009530:	681b      	ldr	r3, [r3, #0]
 8009532:	4a31      	ldr	r2, [pc, #196]	; (80095f8 <HAL_DMA_Abort+0x62c>)
 8009534:	4293      	cmp	r3, r2
 8009536:	d00e      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 8009538:	687b      	ldr	r3, [r7, #4]
 800953a:	681b      	ldr	r3, [r3, #0]
 800953c:	4a2f      	ldr	r2, [pc, #188]	; (80095fc <HAL_DMA_Abort+0x630>)
 800953e:	4293      	cmp	r3, r2
 8009540:	d009      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	681b      	ldr	r3, [r3, #0]
 8009546:	4a2e      	ldr	r2, [pc, #184]	; (8009600 <HAL_DMA_Abort+0x634>)
 8009548:	4293      	cmp	r3, r2
 800954a:	d004      	beq.n	8009556 <HAL_DMA_Abort+0x58a>
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	681b      	ldr	r3, [r3, #0]
 8009550:	4a2c      	ldr	r2, [pc, #176]	; (8009604 <HAL_DMA_Abort+0x638>)
 8009552:	4293      	cmp	r3, r2
 8009554:	d101      	bne.n	800955a <HAL_DMA_Abort+0x58e>
 8009556:	2301      	movs	r3, #1
 8009558:	e000      	b.n	800955c <HAL_DMA_Abort+0x590>
 800955a:	2300      	movs	r3, #0
 800955c:	2b00      	cmp	r3, #0
 800955e:	d015      	beq.n	800958c <HAL_DMA_Abort+0x5c0>
 8009560:	687b      	ldr	r3, [r7, #4]
 8009562:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009564:	687a      	ldr	r2, [r7, #4]
 8009566:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8009568:	605a      	str	r2, [r3, #4]
 800956a:	687b      	ldr	r3, [r7, #4]
 800956c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800956e:	2b00      	cmp	r3, #0
 8009570:	d00c      	beq.n	800958c <HAL_DMA_Abort+0x5c0>
 8009572:	687b      	ldr	r3, [r7, #4]
 8009574:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009576:	681a      	ldr	r2, [r3, #0]
 8009578:	687b      	ldr	r3, [r7, #4]
 800957a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800957c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009580:	601a      	str	r2, [r3, #0]
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009586:	687a      	ldr	r2, [r7, #4]
 8009588:	6f52      	ldr	r2, [r2, #116]	; 0x74
 800958a:	605a      	str	r2, [r3, #4]
 800958c:	687b      	ldr	r3, [r7, #4]
 800958e:	2201      	movs	r2, #1
 8009590:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	2200      	movs	r2, #0
 8009598:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800959c:	2300      	movs	r3, #0
 800959e:	4618      	mov	r0, r3
 80095a0:	3718      	adds	r7, #24
 80095a2:	46bd      	mov	sp, r7
 80095a4:	bd80      	pop	{r7, pc}
 80095a6:	bf00      	nop
 80095a8:	40020010 	.word	0x40020010
 80095ac:	40020028 	.word	0x40020028
 80095b0:	40020040 	.word	0x40020040
 80095b4:	40020058 	.word	0x40020058
 80095b8:	40020070 	.word	0x40020070
 80095bc:	40020088 	.word	0x40020088
 80095c0:	400200a0 	.word	0x400200a0
 80095c4:	400200b8 	.word	0x400200b8
 80095c8:	40020410 	.word	0x40020410
 80095cc:	40020428 	.word	0x40020428
 80095d0:	40020440 	.word	0x40020440
 80095d4:	40020458 	.word	0x40020458
 80095d8:	40020470 	.word	0x40020470
 80095dc:	40020488 	.word	0x40020488
 80095e0:	400204a0 	.word	0x400204a0
 80095e4:	400204b8 	.word	0x400204b8
 80095e8:	58025408 	.word	0x58025408
 80095ec:	5802541c 	.word	0x5802541c
 80095f0:	58025430 	.word	0x58025430
 80095f4:	58025444 	.word	0x58025444
 80095f8:	58025458 	.word	0x58025458
 80095fc:	5802546c 	.word	0x5802546c
 8009600:	58025480 	.word	0x58025480
 8009604:	58025494 	.word	0x58025494

08009608 <HAL_DMA_Abort_IT>:
 8009608:	b580      	push	{r7, lr}
 800960a:	b084      	sub	sp, #16
 800960c:	af00      	add	r7, sp, #0
 800960e:	6078      	str	r0, [r7, #4]
 8009610:	687b      	ldr	r3, [r7, #4]
 8009612:	2b00      	cmp	r3, #0
 8009614:	d101      	bne.n	800961a <HAL_DMA_Abort_IT+0x12>
 8009616:	2301      	movs	r3, #1
 8009618:	e237      	b.n	8009a8a <HAL_DMA_Abort_IT+0x482>
 800961a:	687b      	ldr	r3, [r7, #4]
 800961c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8009620:	b2db      	uxtb	r3, r3
 8009622:	2b02      	cmp	r3, #2
 8009624:	d004      	beq.n	8009630 <HAL_DMA_Abort_IT+0x28>
 8009626:	687b      	ldr	r3, [r7, #4]
 8009628:	2280      	movs	r2, #128	; 0x80
 800962a:	655a      	str	r2, [r3, #84]	; 0x54
 800962c:	2301      	movs	r3, #1
 800962e:	e22c      	b.n	8009a8a <HAL_DMA_Abort_IT+0x482>
 8009630:	687b      	ldr	r3, [r7, #4]
 8009632:	681b      	ldr	r3, [r3, #0]
 8009634:	4a5c      	ldr	r2, [pc, #368]	; (80097a8 <HAL_DMA_Abort_IT+0x1a0>)
 8009636:	4293      	cmp	r3, r2
 8009638:	d04a      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	681b      	ldr	r3, [r3, #0]
 800963e:	4a5b      	ldr	r2, [pc, #364]	; (80097ac <HAL_DMA_Abort_IT+0x1a4>)
 8009640:	4293      	cmp	r3, r2
 8009642:	d045      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 8009644:	687b      	ldr	r3, [r7, #4]
 8009646:	681b      	ldr	r3, [r3, #0]
 8009648:	4a59      	ldr	r2, [pc, #356]	; (80097b0 <HAL_DMA_Abort_IT+0x1a8>)
 800964a:	4293      	cmp	r3, r2
 800964c:	d040      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 800964e:	687b      	ldr	r3, [r7, #4]
 8009650:	681b      	ldr	r3, [r3, #0]
 8009652:	4a58      	ldr	r2, [pc, #352]	; (80097b4 <HAL_DMA_Abort_IT+0x1ac>)
 8009654:	4293      	cmp	r3, r2
 8009656:	d03b      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 8009658:	687b      	ldr	r3, [r7, #4]
 800965a:	681b      	ldr	r3, [r3, #0]
 800965c:	4a56      	ldr	r2, [pc, #344]	; (80097b8 <HAL_DMA_Abort_IT+0x1b0>)
 800965e:	4293      	cmp	r3, r2
 8009660:	d036      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	681b      	ldr	r3, [r3, #0]
 8009666:	4a55      	ldr	r2, [pc, #340]	; (80097bc <HAL_DMA_Abort_IT+0x1b4>)
 8009668:	4293      	cmp	r3, r2
 800966a:	d031      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 800966c:	687b      	ldr	r3, [r7, #4]
 800966e:	681b      	ldr	r3, [r3, #0]
 8009670:	4a53      	ldr	r2, [pc, #332]	; (80097c0 <HAL_DMA_Abort_IT+0x1b8>)
 8009672:	4293      	cmp	r3, r2
 8009674:	d02c      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 8009676:	687b      	ldr	r3, [r7, #4]
 8009678:	681b      	ldr	r3, [r3, #0]
 800967a:	4a52      	ldr	r2, [pc, #328]	; (80097c4 <HAL_DMA_Abort_IT+0x1bc>)
 800967c:	4293      	cmp	r3, r2
 800967e:	d027      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 8009680:	687b      	ldr	r3, [r7, #4]
 8009682:	681b      	ldr	r3, [r3, #0]
 8009684:	4a50      	ldr	r2, [pc, #320]	; (80097c8 <HAL_DMA_Abort_IT+0x1c0>)
 8009686:	4293      	cmp	r3, r2
 8009688:	d022      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 800968a:	687b      	ldr	r3, [r7, #4]
 800968c:	681b      	ldr	r3, [r3, #0]
 800968e:	4a4f      	ldr	r2, [pc, #316]	; (80097cc <HAL_DMA_Abort_IT+0x1c4>)
 8009690:	4293      	cmp	r3, r2
 8009692:	d01d      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	681b      	ldr	r3, [r3, #0]
 8009698:	4a4d      	ldr	r2, [pc, #308]	; (80097d0 <HAL_DMA_Abort_IT+0x1c8>)
 800969a:	4293      	cmp	r3, r2
 800969c:	d018      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 800969e:	687b      	ldr	r3, [r7, #4]
 80096a0:	681b      	ldr	r3, [r3, #0]
 80096a2:	4a4c      	ldr	r2, [pc, #304]	; (80097d4 <HAL_DMA_Abort_IT+0x1cc>)
 80096a4:	4293      	cmp	r3, r2
 80096a6:	d013      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 80096a8:	687b      	ldr	r3, [r7, #4]
 80096aa:	681b      	ldr	r3, [r3, #0]
 80096ac:	4a4a      	ldr	r2, [pc, #296]	; (80097d8 <HAL_DMA_Abort_IT+0x1d0>)
 80096ae:	4293      	cmp	r3, r2
 80096b0:	d00e      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 80096b2:	687b      	ldr	r3, [r7, #4]
 80096b4:	681b      	ldr	r3, [r3, #0]
 80096b6:	4a49      	ldr	r2, [pc, #292]	; (80097dc <HAL_DMA_Abort_IT+0x1d4>)
 80096b8:	4293      	cmp	r3, r2
 80096ba:	d009      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 80096bc:	687b      	ldr	r3, [r7, #4]
 80096be:	681b      	ldr	r3, [r3, #0]
 80096c0:	4a47      	ldr	r2, [pc, #284]	; (80097e0 <HAL_DMA_Abort_IT+0x1d8>)
 80096c2:	4293      	cmp	r3, r2
 80096c4:	d004      	beq.n	80096d0 <HAL_DMA_Abort_IT+0xc8>
 80096c6:	687b      	ldr	r3, [r7, #4]
 80096c8:	681b      	ldr	r3, [r3, #0]
 80096ca:	4a46      	ldr	r2, [pc, #280]	; (80097e4 <HAL_DMA_Abort_IT+0x1dc>)
 80096cc:	4293      	cmp	r3, r2
 80096ce:	d101      	bne.n	80096d4 <HAL_DMA_Abort_IT+0xcc>
 80096d0:	2301      	movs	r3, #1
 80096d2:	e000      	b.n	80096d6 <HAL_DMA_Abort_IT+0xce>
 80096d4:	2300      	movs	r3, #0
 80096d6:	2b00      	cmp	r3, #0
 80096d8:	f000 8086 	beq.w	80097e8 <HAL_DMA_Abort_IT+0x1e0>
 80096dc:	687b      	ldr	r3, [r7, #4]
 80096de:	2204      	movs	r2, #4
 80096e0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80096e4:	687b      	ldr	r3, [r7, #4]
 80096e6:	681b      	ldr	r3, [r3, #0]
 80096e8:	4a2f      	ldr	r2, [pc, #188]	; (80097a8 <HAL_DMA_Abort_IT+0x1a0>)
 80096ea:	4293      	cmp	r3, r2
 80096ec:	d04a      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 80096ee:	687b      	ldr	r3, [r7, #4]
 80096f0:	681b      	ldr	r3, [r3, #0]
 80096f2:	4a2e      	ldr	r2, [pc, #184]	; (80097ac <HAL_DMA_Abort_IT+0x1a4>)
 80096f4:	4293      	cmp	r3, r2
 80096f6:	d045      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	681b      	ldr	r3, [r3, #0]
 80096fc:	4a2c      	ldr	r2, [pc, #176]	; (80097b0 <HAL_DMA_Abort_IT+0x1a8>)
 80096fe:	4293      	cmp	r3, r2
 8009700:	d040      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 8009702:	687b      	ldr	r3, [r7, #4]
 8009704:	681b      	ldr	r3, [r3, #0]
 8009706:	4a2b      	ldr	r2, [pc, #172]	; (80097b4 <HAL_DMA_Abort_IT+0x1ac>)
 8009708:	4293      	cmp	r3, r2
 800970a:	d03b      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 800970c:	687b      	ldr	r3, [r7, #4]
 800970e:	681b      	ldr	r3, [r3, #0]
 8009710:	4a29      	ldr	r2, [pc, #164]	; (80097b8 <HAL_DMA_Abort_IT+0x1b0>)
 8009712:	4293      	cmp	r3, r2
 8009714:	d036      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 8009716:	687b      	ldr	r3, [r7, #4]
 8009718:	681b      	ldr	r3, [r3, #0]
 800971a:	4a28      	ldr	r2, [pc, #160]	; (80097bc <HAL_DMA_Abort_IT+0x1b4>)
 800971c:	4293      	cmp	r3, r2
 800971e:	d031      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 8009720:	687b      	ldr	r3, [r7, #4]
 8009722:	681b      	ldr	r3, [r3, #0]
 8009724:	4a26      	ldr	r2, [pc, #152]	; (80097c0 <HAL_DMA_Abort_IT+0x1b8>)
 8009726:	4293      	cmp	r3, r2
 8009728:	d02c      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 800972a:	687b      	ldr	r3, [r7, #4]
 800972c:	681b      	ldr	r3, [r3, #0]
 800972e:	4a25      	ldr	r2, [pc, #148]	; (80097c4 <HAL_DMA_Abort_IT+0x1bc>)
 8009730:	4293      	cmp	r3, r2
 8009732:	d027      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 8009734:	687b      	ldr	r3, [r7, #4]
 8009736:	681b      	ldr	r3, [r3, #0]
 8009738:	4a23      	ldr	r2, [pc, #140]	; (80097c8 <HAL_DMA_Abort_IT+0x1c0>)
 800973a:	4293      	cmp	r3, r2
 800973c:	d022      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 800973e:	687b      	ldr	r3, [r7, #4]
 8009740:	681b      	ldr	r3, [r3, #0]
 8009742:	4a22      	ldr	r2, [pc, #136]	; (80097cc <HAL_DMA_Abort_IT+0x1c4>)
 8009744:	4293      	cmp	r3, r2
 8009746:	d01d      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 8009748:	687b      	ldr	r3, [r7, #4]
 800974a:	681b      	ldr	r3, [r3, #0]
 800974c:	4a20      	ldr	r2, [pc, #128]	; (80097d0 <HAL_DMA_Abort_IT+0x1c8>)
 800974e:	4293      	cmp	r3, r2
 8009750:	d018      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 8009752:	687b      	ldr	r3, [r7, #4]
 8009754:	681b      	ldr	r3, [r3, #0]
 8009756:	4a1f      	ldr	r2, [pc, #124]	; (80097d4 <HAL_DMA_Abort_IT+0x1cc>)
 8009758:	4293      	cmp	r3, r2
 800975a:	d013      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 800975c:	687b      	ldr	r3, [r7, #4]
 800975e:	681b      	ldr	r3, [r3, #0]
 8009760:	4a1d      	ldr	r2, [pc, #116]	; (80097d8 <HAL_DMA_Abort_IT+0x1d0>)
 8009762:	4293      	cmp	r3, r2
 8009764:	d00e      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 8009766:	687b      	ldr	r3, [r7, #4]
 8009768:	681b      	ldr	r3, [r3, #0]
 800976a:	4a1c      	ldr	r2, [pc, #112]	; (80097dc <HAL_DMA_Abort_IT+0x1d4>)
 800976c:	4293      	cmp	r3, r2
 800976e:	d009      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 8009770:	687b      	ldr	r3, [r7, #4]
 8009772:	681b      	ldr	r3, [r3, #0]
 8009774:	4a1a      	ldr	r2, [pc, #104]	; (80097e0 <HAL_DMA_Abort_IT+0x1d8>)
 8009776:	4293      	cmp	r3, r2
 8009778:	d004      	beq.n	8009784 <HAL_DMA_Abort_IT+0x17c>
 800977a:	687b      	ldr	r3, [r7, #4]
 800977c:	681b      	ldr	r3, [r3, #0]
 800977e:	4a19      	ldr	r2, [pc, #100]	; (80097e4 <HAL_DMA_Abort_IT+0x1dc>)
 8009780:	4293      	cmp	r3, r2
 8009782:	d108      	bne.n	8009796 <HAL_DMA_Abort_IT+0x18e>
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	681b      	ldr	r3, [r3, #0]
 8009788:	681a      	ldr	r2, [r3, #0]
 800978a:	687b      	ldr	r3, [r7, #4]
 800978c:	681b      	ldr	r3, [r3, #0]
 800978e:	f022 0201 	bic.w	r2, r2, #1
 8009792:	601a      	str	r2, [r3, #0]
 8009794:	e178      	b.n	8009a88 <HAL_DMA_Abort_IT+0x480>
 8009796:	687b      	ldr	r3, [r7, #4]
 8009798:	681b      	ldr	r3, [r3, #0]
 800979a:	681a      	ldr	r2, [r3, #0]
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	681b      	ldr	r3, [r3, #0]
 80097a0:	f022 0201 	bic.w	r2, r2, #1
 80097a4:	601a      	str	r2, [r3, #0]
 80097a6:	e16f      	b.n	8009a88 <HAL_DMA_Abort_IT+0x480>
 80097a8:	40020010 	.word	0x40020010
 80097ac:	40020028 	.word	0x40020028
 80097b0:	40020040 	.word	0x40020040
 80097b4:	40020058 	.word	0x40020058
 80097b8:	40020070 	.word	0x40020070
 80097bc:	40020088 	.word	0x40020088
 80097c0:	400200a0 	.word	0x400200a0
 80097c4:	400200b8 	.word	0x400200b8
 80097c8:	40020410 	.word	0x40020410
 80097cc:	40020428 	.word	0x40020428
 80097d0:	40020440 	.word	0x40020440
 80097d4:	40020458 	.word	0x40020458
 80097d8:	40020470 	.word	0x40020470
 80097dc:	40020488 	.word	0x40020488
 80097e0:	400204a0 	.word	0x400204a0
 80097e4:	400204b8 	.word	0x400204b8
 80097e8:	687b      	ldr	r3, [r7, #4]
 80097ea:	681b      	ldr	r3, [r3, #0]
 80097ec:	681a      	ldr	r2, [r3, #0]
 80097ee:	687b      	ldr	r3, [r7, #4]
 80097f0:	681b      	ldr	r3, [r3, #0]
 80097f2:	f022 020e 	bic.w	r2, r2, #14
 80097f6:	601a      	str	r2, [r3, #0]
 80097f8:	687b      	ldr	r3, [r7, #4]
 80097fa:	681b      	ldr	r3, [r3, #0]
 80097fc:	4a6c      	ldr	r2, [pc, #432]	; (80099b0 <HAL_DMA_Abort_IT+0x3a8>)
 80097fe:	4293      	cmp	r3, r2
 8009800:	d04a      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 8009802:	687b      	ldr	r3, [r7, #4]
 8009804:	681b      	ldr	r3, [r3, #0]
 8009806:	4a6b      	ldr	r2, [pc, #428]	; (80099b4 <HAL_DMA_Abort_IT+0x3ac>)
 8009808:	4293      	cmp	r3, r2
 800980a:	d045      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 800980c:	687b      	ldr	r3, [r7, #4]
 800980e:	681b      	ldr	r3, [r3, #0]
 8009810:	4a69      	ldr	r2, [pc, #420]	; (80099b8 <HAL_DMA_Abort_IT+0x3b0>)
 8009812:	4293      	cmp	r3, r2
 8009814:	d040      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 8009816:	687b      	ldr	r3, [r7, #4]
 8009818:	681b      	ldr	r3, [r3, #0]
 800981a:	4a68      	ldr	r2, [pc, #416]	; (80099bc <HAL_DMA_Abort_IT+0x3b4>)
 800981c:	4293      	cmp	r3, r2
 800981e:	d03b      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 8009820:	687b      	ldr	r3, [r7, #4]
 8009822:	681b      	ldr	r3, [r3, #0]
 8009824:	4a66      	ldr	r2, [pc, #408]	; (80099c0 <HAL_DMA_Abort_IT+0x3b8>)
 8009826:	4293      	cmp	r3, r2
 8009828:	d036      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 800982a:	687b      	ldr	r3, [r7, #4]
 800982c:	681b      	ldr	r3, [r3, #0]
 800982e:	4a65      	ldr	r2, [pc, #404]	; (80099c4 <HAL_DMA_Abort_IT+0x3bc>)
 8009830:	4293      	cmp	r3, r2
 8009832:	d031      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 8009834:	687b      	ldr	r3, [r7, #4]
 8009836:	681b      	ldr	r3, [r3, #0]
 8009838:	4a63      	ldr	r2, [pc, #396]	; (80099c8 <HAL_DMA_Abort_IT+0x3c0>)
 800983a:	4293      	cmp	r3, r2
 800983c:	d02c      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 800983e:	687b      	ldr	r3, [r7, #4]
 8009840:	681b      	ldr	r3, [r3, #0]
 8009842:	4a62      	ldr	r2, [pc, #392]	; (80099cc <HAL_DMA_Abort_IT+0x3c4>)
 8009844:	4293      	cmp	r3, r2
 8009846:	d027      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 8009848:	687b      	ldr	r3, [r7, #4]
 800984a:	681b      	ldr	r3, [r3, #0]
 800984c:	4a60      	ldr	r2, [pc, #384]	; (80099d0 <HAL_DMA_Abort_IT+0x3c8>)
 800984e:	4293      	cmp	r3, r2
 8009850:	d022      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 8009852:	687b      	ldr	r3, [r7, #4]
 8009854:	681b      	ldr	r3, [r3, #0]
 8009856:	4a5f      	ldr	r2, [pc, #380]	; (80099d4 <HAL_DMA_Abort_IT+0x3cc>)
 8009858:	4293      	cmp	r3, r2
 800985a:	d01d      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	681b      	ldr	r3, [r3, #0]
 8009860:	4a5d      	ldr	r2, [pc, #372]	; (80099d8 <HAL_DMA_Abort_IT+0x3d0>)
 8009862:	4293      	cmp	r3, r2
 8009864:	d018      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	681b      	ldr	r3, [r3, #0]
 800986a:	4a5c      	ldr	r2, [pc, #368]	; (80099dc <HAL_DMA_Abort_IT+0x3d4>)
 800986c:	4293      	cmp	r3, r2
 800986e:	d013      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 8009870:	687b      	ldr	r3, [r7, #4]
 8009872:	681b      	ldr	r3, [r3, #0]
 8009874:	4a5a      	ldr	r2, [pc, #360]	; (80099e0 <HAL_DMA_Abort_IT+0x3d8>)
 8009876:	4293      	cmp	r3, r2
 8009878:	d00e      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 800987a:	687b      	ldr	r3, [r7, #4]
 800987c:	681b      	ldr	r3, [r3, #0]
 800987e:	4a59      	ldr	r2, [pc, #356]	; (80099e4 <HAL_DMA_Abort_IT+0x3dc>)
 8009880:	4293      	cmp	r3, r2
 8009882:	d009      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 8009884:	687b      	ldr	r3, [r7, #4]
 8009886:	681b      	ldr	r3, [r3, #0]
 8009888:	4a57      	ldr	r2, [pc, #348]	; (80099e8 <HAL_DMA_Abort_IT+0x3e0>)
 800988a:	4293      	cmp	r3, r2
 800988c:	d004      	beq.n	8009898 <HAL_DMA_Abort_IT+0x290>
 800988e:	687b      	ldr	r3, [r7, #4]
 8009890:	681b      	ldr	r3, [r3, #0]
 8009892:	4a56      	ldr	r2, [pc, #344]	; (80099ec <HAL_DMA_Abort_IT+0x3e4>)
 8009894:	4293      	cmp	r3, r2
 8009896:	d108      	bne.n	80098aa <HAL_DMA_Abort_IT+0x2a2>
 8009898:	687b      	ldr	r3, [r7, #4]
 800989a:	681b      	ldr	r3, [r3, #0]
 800989c:	681a      	ldr	r2, [r3, #0]
 800989e:	687b      	ldr	r3, [r7, #4]
 80098a0:	681b      	ldr	r3, [r3, #0]
 80098a2:	f022 0201 	bic.w	r2, r2, #1
 80098a6:	601a      	str	r2, [r3, #0]
 80098a8:	e007      	b.n	80098ba <HAL_DMA_Abort_IT+0x2b2>
 80098aa:	687b      	ldr	r3, [r7, #4]
 80098ac:	681b      	ldr	r3, [r3, #0]
 80098ae:	681a      	ldr	r2, [r3, #0]
 80098b0:	687b      	ldr	r3, [r7, #4]
 80098b2:	681b      	ldr	r3, [r3, #0]
 80098b4:	f022 0201 	bic.w	r2, r2, #1
 80098b8:	601a      	str	r2, [r3, #0]
 80098ba:	687b      	ldr	r3, [r7, #4]
 80098bc:	681b      	ldr	r3, [r3, #0]
 80098be:	4a3c      	ldr	r2, [pc, #240]	; (80099b0 <HAL_DMA_Abort_IT+0x3a8>)
 80098c0:	4293      	cmp	r3, r2
 80098c2:	d072      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 80098c4:	687b      	ldr	r3, [r7, #4]
 80098c6:	681b      	ldr	r3, [r3, #0]
 80098c8:	4a3a      	ldr	r2, [pc, #232]	; (80099b4 <HAL_DMA_Abort_IT+0x3ac>)
 80098ca:	4293      	cmp	r3, r2
 80098cc:	d06d      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 80098ce:	687b      	ldr	r3, [r7, #4]
 80098d0:	681b      	ldr	r3, [r3, #0]
 80098d2:	4a39      	ldr	r2, [pc, #228]	; (80099b8 <HAL_DMA_Abort_IT+0x3b0>)
 80098d4:	4293      	cmp	r3, r2
 80098d6:	d068      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 80098d8:	687b      	ldr	r3, [r7, #4]
 80098da:	681b      	ldr	r3, [r3, #0]
 80098dc:	4a37      	ldr	r2, [pc, #220]	; (80099bc <HAL_DMA_Abort_IT+0x3b4>)
 80098de:	4293      	cmp	r3, r2
 80098e0:	d063      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 80098e2:	687b      	ldr	r3, [r7, #4]
 80098e4:	681b      	ldr	r3, [r3, #0]
 80098e6:	4a36      	ldr	r2, [pc, #216]	; (80099c0 <HAL_DMA_Abort_IT+0x3b8>)
 80098e8:	4293      	cmp	r3, r2
 80098ea:	d05e      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 80098ec:	687b      	ldr	r3, [r7, #4]
 80098ee:	681b      	ldr	r3, [r3, #0]
 80098f0:	4a34      	ldr	r2, [pc, #208]	; (80099c4 <HAL_DMA_Abort_IT+0x3bc>)
 80098f2:	4293      	cmp	r3, r2
 80098f4:	d059      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 80098f6:	687b      	ldr	r3, [r7, #4]
 80098f8:	681b      	ldr	r3, [r3, #0]
 80098fa:	4a33      	ldr	r2, [pc, #204]	; (80099c8 <HAL_DMA_Abort_IT+0x3c0>)
 80098fc:	4293      	cmp	r3, r2
 80098fe:	d054      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009900:	687b      	ldr	r3, [r7, #4]
 8009902:	681b      	ldr	r3, [r3, #0]
 8009904:	4a31      	ldr	r2, [pc, #196]	; (80099cc <HAL_DMA_Abort_IT+0x3c4>)
 8009906:	4293      	cmp	r3, r2
 8009908:	d04f      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 800990a:	687b      	ldr	r3, [r7, #4]
 800990c:	681b      	ldr	r3, [r3, #0]
 800990e:	4a30      	ldr	r2, [pc, #192]	; (80099d0 <HAL_DMA_Abort_IT+0x3c8>)
 8009910:	4293      	cmp	r3, r2
 8009912:	d04a      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009914:	687b      	ldr	r3, [r7, #4]
 8009916:	681b      	ldr	r3, [r3, #0]
 8009918:	4a2e      	ldr	r2, [pc, #184]	; (80099d4 <HAL_DMA_Abort_IT+0x3cc>)
 800991a:	4293      	cmp	r3, r2
 800991c:	d045      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 800991e:	687b      	ldr	r3, [r7, #4]
 8009920:	681b      	ldr	r3, [r3, #0]
 8009922:	4a2d      	ldr	r2, [pc, #180]	; (80099d8 <HAL_DMA_Abort_IT+0x3d0>)
 8009924:	4293      	cmp	r3, r2
 8009926:	d040      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009928:	687b      	ldr	r3, [r7, #4]
 800992a:	681b      	ldr	r3, [r3, #0]
 800992c:	4a2b      	ldr	r2, [pc, #172]	; (80099dc <HAL_DMA_Abort_IT+0x3d4>)
 800992e:	4293      	cmp	r3, r2
 8009930:	d03b      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009932:	687b      	ldr	r3, [r7, #4]
 8009934:	681b      	ldr	r3, [r3, #0]
 8009936:	4a2a      	ldr	r2, [pc, #168]	; (80099e0 <HAL_DMA_Abort_IT+0x3d8>)
 8009938:	4293      	cmp	r3, r2
 800993a:	d036      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 800993c:	687b      	ldr	r3, [r7, #4]
 800993e:	681b      	ldr	r3, [r3, #0]
 8009940:	4a28      	ldr	r2, [pc, #160]	; (80099e4 <HAL_DMA_Abort_IT+0x3dc>)
 8009942:	4293      	cmp	r3, r2
 8009944:	d031      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009946:	687b      	ldr	r3, [r7, #4]
 8009948:	681b      	ldr	r3, [r3, #0]
 800994a:	4a27      	ldr	r2, [pc, #156]	; (80099e8 <HAL_DMA_Abort_IT+0x3e0>)
 800994c:	4293      	cmp	r3, r2
 800994e:	d02c      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009950:	687b      	ldr	r3, [r7, #4]
 8009952:	681b      	ldr	r3, [r3, #0]
 8009954:	4a25      	ldr	r2, [pc, #148]	; (80099ec <HAL_DMA_Abort_IT+0x3e4>)
 8009956:	4293      	cmp	r3, r2
 8009958:	d027      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 800995a:	687b      	ldr	r3, [r7, #4]
 800995c:	681b      	ldr	r3, [r3, #0]
 800995e:	4a24      	ldr	r2, [pc, #144]	; (80099f0 <HAL_DMA_Abort_IT+0x3e8>)
 8009960:	4293      	cmp	r3, r2
 8009962:	d022      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009964:	687b      	ldr	r3, [r7, #4]
 8009966:	681b      	ldr	r3, [r3, #0]
 8009968:	4a22      	ldr	r2, [pc, #136]	; (80099f4 <HAL_DMA_Abort_IT+0x3ec>)
 800996a:	4293      	cmp	r3, r2
 800996c:	d01d      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 800996e:	687b      	ldr	r3, [r7, #4]
 8009970:	681b      	ldr	r3, [r3, #0]
 8009972:	4a21      	ldr	r2, [pc, #132]	; (80099f8 <HAL_DMA_Abort_IT+0x3f0>)
 8009974:	4293      	cmp	r3, r2
 8009976:	d018      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009978:	687b      	ldr	r3, [r7, #4]
 800997a:	681b      	ldr	r3, [r3, #0]
 800997c:	4a1f      	ldr	r2, [pc, #124]	; (80099fc <HAL_DMA_Abort_IT+0x3f4>)
 800997e:	4293      	cmp	r3, r2
 8009980:	d013      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009982:	687b      	ldr	r3, [r7, #4]
 8009984:	681b      	ldr	r3, [r3, #0]
 8009986:	4a1e      	ldr	r2, [pc, #120]	; (8009a00 <HAL_DMA_Abort_IT+0x3f8>)
 8009988:	4293      	cmp	r3, r2
 800998a:	d00e      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 800998c:	687b      	ldr	r3, [r7, #4]
 800998e:	681b      	ldr	r3, [r3, #0]
 8009990:	4a1c      	ldr	r2, [pc, #112]	; (8009a04 <HAL_DMA_Abort_IT+0x3fc>)
 8009992:	4293      	cmp	r3, r2
 8009994:	d009      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 8009996:	687b      	ldr	r3, [r7, #4]
 8009998:	681b      	ldr	r3, [r3, #0]
 800999a:	4a1b      	ldr	r2, [pc, #108]	; (8009a08 <HAL_DMA_Abort_IT+0x400>)
 800999c:	4293      	cmp	r3, r2
 800999e:	d004      	beq.n	80099aa <HAL_DMA_Abort_IT+0x3a2>
 80099a0:	687b      	ldr	r3, [r7, #4]
 80099a2:	681b      	ldr	r3, [r3, #0]
 80099a4:	4a19      	ldr	r2, [pc, #100]	; (8009a0c <HAL_DMA_Abort_IT+0x404>)
 80099a6:	4293      	cmp	r3, r2
 80099a8:	d132      	bne.n	8009a10 <HAL_DMA_Abort_IT+0x408>
 80099aa:	2301      	movs	r3, #1
 80099ac:	e031      	b.n	8009a12 <HAL_DMA_Abort_IT+0x40a>
 80099ae:	bf00      	nop
 80099b0:	40020010 	.word	0x40020010
 80099b4:	40020028 	.word	0x40020028
 80099b8:	40020040 	.word	0x40020040
 80099bc:	40020058 	.word	0x40020058
 80099c0:	40020070 	.word	0x40020070
 80099c4:	40020088 	.word	0x40020088
 80099c8:	400200a0 	.word	0x400200a0
 80099cc:	400200b8 	.word	0x400200b8
 80099d0:	40020410 	.word	0x40020410
 80099d4:	40020428 	.word	0x40020428
 80099d8:	40020440 	.word	0x40020440
 80099dc:	40020458 	.word	0x40020458
 80099e0:	40020470 	.word	0x40020470
 80099e4:	40020488 	.word	0x40020488
 80099e8:	400204a0 	.word	0x400204a0
 80099ec:	400204b8 	.word	0x400204b8
 80099f0:	58025408 	.word	0x58025408
 80099f4:	5802541c 	.word	0x5802541c
 80099f8:	58025430 	.word	0x58025430
 80099fc:	58025444 	.word	0x58025444
 8009a00:	58025458 	.word	0x58025458
 8009a04:	5802546c 	.word	0x5802546c
 8009a08:	58025480 	.word	0x58025480
 8009a0c:	58025494 	.word	0x58025494
 8009a10:	2300      	movs	r3, #0
 8009a12:	2b00      	cmp	r3, #0
 8009a14:	d028      	beq.n	8009a68 <HAL_DMA_Abort_IT+0x460>
 8009a16:	687b      	ldr	r3, [r7, #4]
 8009a18:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009a1a:	681a      	ldr	r2, [r3, #0]
 8009a1c:	687b      	ldr	r3, [r7, #4]
 8009a1e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009a20:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009a24:	601a      	str	r2, [r3, #0]
 8009a26:	687b      	ldr	r3, [r7, #4]
 8009a28:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009a2a:	60fb      	str	r3, [r7, #12]
 8009a2c:	687b      	ldr	r3, [r7, #4]
 8009a2e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009a30:	f003 031f 	and.w	r3, r3, #31
 8009a34:	2201      	movs	r2, #1
 8009a36:	409a      	lsls	r2, r3
 8009a38:	68fb      	ldr	r3, [r7, #12]
 8009a3a:	605a      	str	r2, [r3, #4]
 8009a3c:	687b      	ldr	r3, [r7, #4]
 8009a3e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009a40:	687a      	ldr	r2, [r7, #4]
 8009a42:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8009a44:	605a      	str	r2, [r3, #4]
 8009a46:	687b      	ldr	r3, [r7, #4]
 8009a48:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009a4a:	2b00      	cmp	r3, #0
 8009a4c:	d00c      	beq.n	8009a68 <HAL_DMA_Abort_IT+0x460>
 8009a4e:	687b      	ldr	r3, [r7, #4]
 8009a50:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009a52:	681a      	ldr	r2, [r3, #0]
 8009a54:	687b      	ldr	r3, [r7, #4]
 8009a56:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009a58:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009a5c:	601a      	str	r2, [r3, #0]
 8009a5e:	687b      	ldr	r3, [r7, #4]
 8009a60:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009a62:	687a      	ldr	r2, [r7, #4]
 8009a64:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8009a66:	605a      	str	r2, [r3, #4]
 8009a68:	687b      	ldr	r3, [r7, #4]
 8009a6a:	2201      	movs	r2, #1
 8009a6c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8009a70:	687b      	ldr	r3, [r7, #4]
 8009a72:	2200      	movs	r2, #0
 8009a74:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8009a78:	687b      	ldr	r3, [r7, #4]
 8009a7a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009a7c:	2b00      	cmp	r3, #0
 8009a7e:	d003      	beq.n	8009a88 <HAL_DMA_Abort_IT+0x480>
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009a84:	6878      	ldr	r0, [r7, #4]
 8009a86:	4798      	blx	r3
 8009a88:	2300      	movs	r3, #0
 8009a8a:	4618      	mov	r0, r3
 8009a8c:	3710      	adds	r7, #16
 8009a8e:	46bd      	mov	sp, r7
 8009a90:	bd80      	pop	{r7, pc}
 8009a92:	bf00      	nop

08009a94 <HAL_DMA_IRQHandler>:
 8009a94:	b580      	push	{r7, lr}
 8009a96:	b08a      	sub	sp, #40	; 0x28
 8009a98:	af00      	add	r7, sp, #0
 8009a9a:	6078      	str	r0, [r7, #4]
 8009a9c:	2300      	movs	r3, #0
 8009a9e:	60fb      	str	r3, [r7, #12]
 8009aa0:	4b67      	ldr	r3, [pc, #412]	; (8009c40 <HAL_DMA_IRQHandler+0x1ac>)
 8009aa2:	681b      	ldr	r3, [r3, #0]
 8009aa4:	4a67      	ldr	r2, [pc, #412]	; (8009c44 <HAL_DMA_IRQHandler+0x1b0>)
 8009aa6:	fba2 2303 	umull	r2, r3, r2, r3
 8009aaa:	0a9b      	lsrs	r3, r3, #10
 8009aac:	627b      	str	r3, [r7, #36]	; 0x24
 8009aae:	687b      	ldr	r3, [r7, #4]
 8009ab0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009ab2:	623b      	str	r3, [r7, #32]
 8009ab4:	687b      	ldr	r3, [r7, #4]
 8009ab6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009ab8:	61fb      	str	r3, [r7, #28]
 8009aba:	6a3b      	ldr	r3, [r7, #32]
 8009abc:	681b      	ldr	r3, [r3, #0]
 8009abe:	61bb      	str	r3, [r7, #24]
 8009ac0:	69fb      	ldr	r3, [r7, #28]
 8009ac2:	681b      	ldr	r3, [r3, #0]
 8009ac4:	617b      	str	r3, [r7, #20]
 8009ac6:	687b      	ldr	r3, [r7, #4]
 8009ac8:	681b      	ldr	r3, [r3, #0]
 8009aca:	4a5f      	ldr	r2, [pc, #380]	; (8009c48 <HAL_DMA_IRQHandler+0x1b4>)
 8009acc:	4293      	cmp	r3, r2
 8009ace:	d04a      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009ad0:	687b      	ldr	r3, [r7, #4]
 8009ad2:	681b      	ldr	r3, [r3, #0]
 8009ad4:	4a5d      	ldr	r2, [pc, #372]	; (8009c4c <HAL_DMA_IRQHandler+0x1b8>)
 8009ad6:	4293      	cmp	r3, r2
 8009ad8:	d045      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	681b      	ldr	r3, [r3, #0]
 8009ade:	4a5c      	ldr	r2, [pc, #368]	; (8009c50 <HAL_DMA_IRQHandler+0x1bc>)
 8009ae0:	4293      	cmp	r3, r2
 8009ae2:	d040      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009ae4:	687b      	ldr	r3, [r7, #4]
 8009ae6:	681b      	ldr	r3, [r3, #0]
 8009ae8:	4a5a      	ldr	r2, [pc, #360]	; (8009c54 <HAL_DMA_IRQHandler+0x1c0>)
 8009aea:	4293      	cmp	r3, r2
 8009aec:	d03b      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009aee:	687b      	ldr	r3, [r7, #4]
 8009af0:	681b      	ldr	r3, [r3, #0]
 8009af2:	4a59      	ldr	r2, [pc, #356]	; (8009c58 <HAL_DMA_IRQHandler+0x1c4>)
 8009af4:	4293      	cmp	r3, r2
 8009af6:	d036      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009af8:	687b      	ldr	r3, [r7, #4]
 8009afa:	681b      	ldr	r3, [r3, #0]
 8009afc:	4a57      	ldr	r2, [pc, #348]	; (8009c5c <HAL_DMA_IRQHandler+0x1c8>)
 8009afe:	4293      	cmp	r3, r2
 8009b00:	d031      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b02:	687b      	ldr	r3, [r7, #4]
 8009b04:	681b      	ldr	r3, [r3, #0]
 8009b06:	4a56      	ldr	r2, [pc, #344]	; (8009c60 <HAL_DMA_IRQHandler+0x1cc>)
 8009b08:	4293      	cmp	r3, r2
 8009b0a:	d02c      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b0c:	687b      	ldr	r3, [r7, #4]
 8009b0e:	681b      	ldr	r3, [r3, #0]
 8009b10:	4a54      	ldr	r2, [pc, #336]	; (8009c64 <HAL_DMA_IRQHandler+0x1d0>)
 8009b12:	4293      	cmp	r3, r2
 8009b14:	d027      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b16:	687b      	ldr	r3, [r7, #4]
 8009b18:	681b      	ldr	r3, [r3, #0]
 8009b1a:	4a53      	ldr	r2, [pc, #332]	; (8009c68 <HAL_DMA_IRQHandler+0x1d4>)
 8009b1c:	4293      	cmp	r3, r2
 8009b1e:	d022      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b20:	687b      	ldr	r3, [r7, #4]
 8009b22:	681b      	ldr	r3, [r3, #0]
 8009b24:	4a51      	ldr	r2, [pc, #324]	; (8009c6c <HAL_DMA_IRQHandler+0x1d8>)
 8009b26:	4293      	cmp	r3, r2
 8009b28:	d01d      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	681b      	ldr	r3, [r3, #0]
 8009b2e:	4a50      	ldr	r2, [pc, #320]	; (8009c70 <HAL_DMA_IRQHandler+0x1dc>)
 8009b30:	4293      	cmp	r3, r2
 8009b32:	d018      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b34:	687b      	ldr	r3, [r7, #4]
 8009b36:	681b      	ldr	r3, [r3, #0]
 8009b38:	4a4e      	ldr	r2, [pc, #312]	; (8009c74 <HAL_DMA_IRQHandler+0x1e0>)
 8009b3a:	4293      	cmp	r3, r2
 8009b3c:	d013      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b3e:	687b      	ldr	r3, [r7, #4]
 8009b40:	681b      	ldr	r3, [r3, #0]
 8009b42:	4a4d      	ldr	r2, [pc, #308]	; (8009c78 <HAL_DMA_IRQHandler+0x1e4>)
 8009b44:	4293      	cmp	r3, r2
 8009b46:	d00e      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b48:	687b      	ldr	r3, [r7, #4]
 8009b4a:	681b      	ldr	r3, [r3, #0]
 8009b4c:	4a4b      	ldr	r2, [pc, #300]	; (8009c7c <HAL_DMA_IRQHandler+0x1e8>)
 8009b4e:	4293      	cmp	r3, r2
 8009b50:	d009      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b52:	687b      	ldr	r3, [r7, #4]
 8009b54:	681b      	ldr	r3, [r3, #0]
 8009b56:	4a4a      	ldr	r2, [pc, #296]	; (8009c80 <HAL_DMA_IRQHandler+0x1ec>)
 8009b58:	4293      	cmp	r3, r2
 8009b5a:	d004      	beq.n	8009b66 <HAL_DMA_IRQHandler+0xd2>
 8009b5c:	687b      	ldr	r3, [r7, #4]
 8009b5e:	681b      	ldr	r3, [r3, #0]
 8009b60:	4a48      	ldr	r2, [pc, #288]	; (8009c84 <HAL_DMA_IRQHandler+0x1f0>)
 8009b62:	4293      	cmp	r3, r2
 8009b64:	d101      	bne.n	8009b6a <HAL_DMA_IRQHandler+0xd6>
 8009b66:	2301      	movs	r3, #1
 8009b68:	e000      	b.n	8009b6c <HAL_DMA_IRQHandler+0xd8>
 8009b6a:	2300      	movs	r3, #0
 8009b6c:	2b00      	cmp	r3, #0
 8009b6e:	f000 842b 	beq.w	800a3c8 <HAL_DMA_IRQHandler+0x934>
 8009b72:	687b      	ldr	r3, [r7, #4]
 8009b74:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009b76:	f003 031f 	and.w	r3, r3, #31
 8009b7a:	2208      	movs	r2, #8
 8009b7c:	409a      	lsls	r2, r3
 8009b7e:	69bb      	ldr	r3, [r7, #24]
 8009b80:	4013      	ands	r3, r2
 8009b82:	2b00      	cmp	r3, #0
 8009b84:	f000 80a2 	beq.w	8009ccc <HAL_DMA_IRQHandler+0x238>
 8009b88:	687b      	ldr	r3, [r7, #4]
 8009b8a:	681b      	ldr	r3, [r3, #0]
 8009b8c:	4a2e      	ldr	r2, [pc, #184]	; (8009c48 <HAL_DMA_IRQHandler+0x1b4>)
 8009b8e:	4293      	cmp	r3, r2
 8009b90:	d04a      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	681b      	ldr	r3, [r3, #0]
 8009b96:	4a2d      	ldr	r2, [pc, #180]	; (8009c4c <HAL_DMA_IRQHandler+0x1b8>)
 8009b98:	4293      	cmp	r3, r2
 8009b9a:	d045      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009b9c:	687b      	ldr	r3, [r7, #4]
 8009b9e:	681b      	ldr	r3, [r3, #0]
 8009ba0:	4a2b      	ldr	r2, [pc, #172]	; (8009c50 <HAL_DMA_IRQHandler+0x1bc>)
 8009ba2:	4293      	cmp	r3, r2
 8009ba4:	d040      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009ba6:	687b      	ldr	r3, [r7, #4]
 8009ba8:	681b      	ldr	r3, [r3, #0]
 8009baa:	4a2a      	ldr	r2, [pc, #168]	; (8009c54 <HAL_DMA_IRQHandler+0x1c0>)
 8009bac:	4293      	cmp	r3, r2
 8009bae:	d03b      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009bb0:	687b      	ldr	r3, [r7, #4]
 8009bb2:	681b      	ldr	r3, [r3, #0]
 8009bb4:	4a28      	ldr	r2, [pc, #160]	; (8009c58 <HAL_DMA_IRQHandler+0x1c4>)
 8009bb6:	4293      	cmp	r3, r2
 8009bb8:	d036      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009bba:	687b      	ldr	r3, [r7, #4]
 8009bbc:	681b      	ldr	r3, [r3, #0]
 8009bbe:	4a27      	ldr	r2, [pc, #156]	; (8009c5c <HAL_DMA_IRQHandler+0x1c8>)
 8009bc0:	4293      	cmp	r3, r2
 8009bc2:	d031      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009bc4:	687b      	ldr	r3, [r7, #4]
 8009bc6:	681b      	ldr	r3, [r3, #0]
 8009bc8:	4a25      	ldr	r2, [pc, #148]	; (8009c60 <HAL_DMA_IRQHandler+0x1cc>)
 8009bca:	4293      	cmp	r3, r2
 8009bcc:	d02c      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009bce:	687b      	ldr	r3, [r7, #4]
 8009bd0:	681b      	ldr	r3, [r3, #0]
 8009bd2:	4a24      	ldr	r2, [pc, #144]	; (8009c64 <HAL_DMA_IRQHandler+0x1d0>)
 8009bd4:	4293      	cmp	r3, r2
 8009bd6:	d027      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009bd8:	687b      	ldr	r3, [r7, #4]
 8009bda:	681b      	ldr	r3, [r3, #0]
 8009bdc:	4a22      	ldr	r2, [pc, #136]	; (8009c68 <HAL_DMA_IRQHandler+0x1d4>)
 8009bde:	4293      	cmp	r3, r2
 8009be0:	d022      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009be2:	687b      	ldr	r3, [r7, #4]
 8009be4:	681b      	ldr	r3, [r3, #0]
 8009be6:	4a21      	ldr	r2, [pc, #132]	; (8009c6c <HAL_DMA_IRQHandler+0x1d8>)
 8009be8:	4293      	cmp	r3, r2
 8009bea:	d01d      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009bec:	687b      	ldr	r3, [r7, #4]
 8009bee:	681b      	ldr	r3, [r3, #0]
 8009bf0:	4a1f      	ldr	r2, [pc, #124]	; (8009c70 <HAL_DMA_IRQHandler+0x1dc>)
 8009bf2:	4293      	cmp	r3, r2
 8009bf4:	d018      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009bf6:	687b      	ldr	r3, [r7, #4]
 8009bf8:	681b      	ldr	r3, [r3, #0]
 8009bfa:	4a1e      	ldr	r2, [pc, #120]	; (8009c74 <HAL_DMA_IRQHandler+0x1e0>)
 8009bfc:	4293      	cmp	r3, r2
 8009bfe:	d013      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009c00:	687b      	ldr	r3, [r7, #4]
 8009c02:	681b      	ldr	r3, [r3, #0]
 8009c04:	4a1c      	ldr	r2, [pc, #112]	; (8009c78 <HAL_DMA_IRQHandler+0x1e4>)
 8009c06:	4293      	cmp	r3, r2
 8009c08:	d00e      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009c0a:	687b      	ldr	r3, [r7, #4]
 8009c0c:	681b      	ldr	r3, [r3, #0]
 8009c0e:	4a1b      	ldr	r2, [pc, #108]	; (8009c7c <HAL_DMA_IRQHandler+0x1e8>)
 8009c10:	4293      	cmp	r3, r2
 8009c12:	d009      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009c14:	687b      	ldr	r3, [r7, #4]
 8009c16:	681b      	ldr	r3, [r3, #0]
 8009c18:	4a19      	ldr	r2, [pc, #100]	; (8009c80 <HAL_DMA_IRQHandler+0x1ec>)
 8009c1a:	4293      	cmp	r3, r2
 8009c1c:	d004      	beq.n	8009c28 <HAL_DMA_IRQHandler+0x194>
 8009c1e:	687b      	ldr	r3, [r7, #4]
 8009c20:	681b      	ldr	r3, [r3, #0]
 8009c22:	4a18      	ldr	r2, [pc, #96]	; (8009c84 <HAL_DMA_IRQHandler+0x1f0>)
 8009c24:	4293      	cmp	r3, r2
 8009c26:	d12f      	bne.n	8009c88 <HAL_DMA_IRQHandler+0x1f4>
 8009c28:	687b      	ldr	r3, [r7, #4]
 8009c2a:	681b      	ldr	r3, [r3, #0]
 8009c2c:	681b      	ldr	r3, [r3, #0]
 8009c2e:	f003 0304 	and.w	r3, r3, #4
 8009c32:	2b00      	cmp	r3, #0
 8009c34:	bf14      	ite	ne
 8009c36:	2301      	movne	r3, #1
 8009c38:	2300      	moveq	r3, #0
 8009c3a:	b2db      	uxtb	r3, r3
 8009c3c:	e02e      	b.n	8009c9c <HAL_DMA_IRQHandler+0x208>
 8009c3e:	bf00      	nop
 8009c40:	240000c4 	.word	0x240000c4
 8009c44:	1b4e81b5 	.word	0x1b4e81b5
 8009c48:	40020010 	.word	0x40020010
 8009c4c:	40020028 	.word	0x40020028
 8009c50:	40020040 	.word	0x40020040
 8009c54:	40020058 	.word	0x40020058
 8009c58:	40020070 	.word	0x40020070
 8009c5c:	40020088 	.word	0x40020088
 8009c60:	400200a0 	.word	0x400200a0
 8009c64:	400200b8 	.word	0x400200b8
 8009c68:	40020410 	.word	0x40020410
 8009c6c:	40020428 	.word	0x40020428
 8009c70:	40020440 	.word	0x40020440
 8009c74:	40020458 	.word	0x40020458
 8009c78:	40020470 	.word	0x40020470
 8009c7c:	40020488 	.word	0x40020488
 8009c80:	400204a0 	.word	0x400204a0
 8009c84:	400204b8 	.word	0x400204b8
 8009c88:	687b      	ldr	r3, [r7, #4]
 8009c8a:	681b      	ldr	r3, [r3, #0]
 8009c8c:	681b      	ldr	r3, [r3, #0]
 8009c8e:	f003 0308 	and.w	r3, r3, #8
 8009c92:	2b00      	cmp	r3, #0
 8009c94:	bf14      	ite	ne
 8009c96:	2301      	movne	r3, #1
 8009c98:	2300      	moveq	r3, #0
 8009c9a:	b2db      	uxtb	r3, r3
 8009c9c:	2b00      	cmp	r3, #0
 8009c9e:	d015      	beq.n	8009ccc <HAL_DMA_IRQHandler+0x238>
 8009ca0:	687b      	ldr	r3, [r7, #4]
 8009ca2:	681b      	ldr	r3, [r3, #0]
 8009ca4:	681a      	ldr	r2, [r3, #0]
 8009ca6:	687b      	ldr	r3, [r7, #4]
 8009ca8:	681b      	ldr	r3, [r3, #0]
 8009caa:	f022 0204 	bic.w	r2, r2, #4
 8009cae:	601a      	str	r2, [r3, #0]
 8009cb0:	687b      	ldr	r3, [r7, #4]
 8009cb2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009cb4:	f003 031f 	and.w	r3, r3, #31
 8009cb8:	2208      	movs	r2, #8
 8009cba:	409a      	lsls	r2, r3
 8009cbc:	6a3b      	ldr	r3, [r7, #32]
 8009cbe:	609a      	str	r2, [r3, #8]
 8009cc0:	687b      	ldr	r3, [r7, #4]
 8009cc2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009cc4:	f043 0201 	orr.w	r2, r3, #1
 8009cc8:	687b      	ldr	r3, [r7, #4]
 8009cca:	655a      	str	r2, [r3, #84]	; 0x54
 8009ccc:	687b      	ldr	r3, [r7, #4]
 8009cce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009cd0:	f003 031f 	and.w	r3, r3, #31
 8009cd4:	69ba      	ldr	r2, [r7, #24]
 8009cd6:	fa22 f303 	lsr.w	r3, r2, r3
 8009cda:	f003 0301 	and.w	r3, r3, #1
 8009cde:	2b00      	cmp	r3, #0
 8009ce0:	d06e      	beq.n	8009dc0 <HAL_DMA_IRQHandler+0x32c>
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	681b      	ldr	r3, [r3, #0]
 8009ce6:	4a69      	ldr	r2, [pc, #420]	; (8009e8c <HAL_DMA_IRQHandler+0x3f8>)
 8009ce8:	4293      	cmp	r3, r2
 8009cea:	d04a      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009cec:	687b      	ldr	r3, [r7, #4]
 8009cee:	681b      	ldr	r3, [r3, #0]
 8009cf0:	4a67      	ldr	r2, [pc, #412]	; (8009e90 <HAL_DMA_IRQHandler+0x3fc>)
 8009cf2:	4293      	cmp	r3, r2
 8009cf4:	d045      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009cf6:	687b      	ldr	r3, [r7, #4]
 8009cf8:	681b      	ldr	r3, [r3, #0]
 8009cfa:	4a66      	ldr	r2, [pc, #408]	; (8009e94 <HAL_DMA_IRQHandler+0x400>)
 8009cfc:	4293      	cmp	r3, r2
 8009cfe:	d040      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	681b      	ldr	r3, [r3, #0]
 8009d04:	4a64      	ldr	r2, [pc, #400]	; (8009e98 <HAL_DMA_IRQHandler+0x404>)
 8009d06:	4293      	cmp	r3, r2
 8009d08:	d03b      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d0a:	687b      	ldr	r3, [r7, #4]
 8009d0c:	681b      	ldr	r3, [r3, #0]
 8009d0e:	4a63      	ldr	r2, [pc, #396]	; (8009e9c <HAL_DMA_IRQHandler+0x408>)
 8009d10:	4293      	cmp	r3, r2
 8009d12:	d036      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d14:	687b      	ldr	r3, [r7, #4]
 8009d16:	681b      	ldr	r3, [r3, #0]
 8009d18:	4a61      	ldr	r2, [pc, #388]	; (8009ea0 <HAL_DMA_IRQHandler+0x40c>)
 8009d1a:	4293      	cmp	r3, r2
 8009d1c:	d031      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d1e:	687b      	ldr	r3, [r7, #4]
 8009d20:	681b      	ldr	r3, [r3, #0]
 8009d22:	4a60      	ldr	r2, [pc, #384]	; (8009ea4 <HAL_DMA_IRQHandler+0x410>)
 8009d24:	4293      	cmp	r3, r2
 8009d26:	d02c      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d28:	687b      	ldr	r3, [r7, #4]
 8009d2a:	681b      	ldr	r3, [r3, #0]
 8009d2c:	4a5e      	ldr	r2, [pc, #376]	; (8009ea8 <HAL_DMA_IRQHandler+0x414>)
 8009d2e:	4293      	cmp	r3, r2
 8009d30:	d027      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d32:	687b      	ldr	r3, [r7, #4]
 8009d34:	681b      	ldr	r3, [r3, #0]
 8009d36:	4a5d      	ldr	r2, [pc, #372]	; (8009eac <HAL_DMA_IRQHandler+0x418>)
 8009d38:	4293      	cmp	r3, r2
 8009d3a:	d022      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d3c:	687b      	ldr	r3, [r7, #4]
 8009d3e:	681b      	ldr	r3, [r3, #0]
 8009d40:	4a5b      	ldr	r2, [pc, #364]	; (8009eb0 <HAL_DMA_IRQHandler+0x41c>)
 8009d42:	4293      	cmp	r3, r2
 8009d44:	d01d      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d46:	687b      	ldr	r3, [r7, #4]
 8009d48:	681b      	ldr	r3, [r3, #0]
 8009d4a:	4a5a      	ldr	r2, [pc, #360]	; (8009eb4 <HAL_DMA_IRQHandler+0x420>)
 8009d4c:	4293      	cmp	r3, r2
 8009d4e:	d018      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d50:	687b      	ldr	r3, [r7, #4]
 8009d52:	681b      	ldr	r3, [r3, #0]
 8009d54:	4a58      	ldr	r2, [pc, #352]	; (8009eb8 <HAL_DMA_IRQHandler+0x424>)
 8009d56:	4293      	cmp	r3, r2
 8009d58:	d013      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d5a:	687b      	ldr	r3, [r7, #4]
 8009d5c:	681b      	ldr	r3, [r3, #0]
 8009d5e:	4a57      	ldr	r2, [pc, #348]	; (8009ebc <HAL_DMA_IRQHandler+0x428>)
 8009d60:	4293      	cmp	r3, r2
 8009d62:	d00e      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d64:	687b      	ldr	r3, [r7, #4]
 8009d66:	681b      	ldr	r3, [r3, #0]
 8009d68:	4a55      	ldr	r2, [pc, #340]	; (8009ec0 <HAL_DMA_IRQHandler+0x42c>)
 8009d6a:	4293      	cmp	r3, r2
 8009d6c:	d009      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d6e:	687b      	ldr	r3, [r7, #4]
 8009d70:	681b      	ldr	r3, [r3, #0]
 8009d72:	4a54      	ldr	r2, [pc, #336]	; (8009ec4 <HAL_DMA_IRQHandler+0x430>)
 8009d74:	4293      	cmp	r3, r2
 8009d76:	d004      	beq.n	8009d82 <HAL_DMA_IRQHandler+0x2ee>
 8009d78:	687b      	ldr	r3, [r7, #4]
 8009d7a:	681b      	ldr	r3, [r3, #0]
 8009d7c:	4a52      	ldr	r2, [pc, #328]	; (8009ec8 <HAL_DMA_IRQHandler+0x434>)
 8009d7e:	4293      	cmp	r3, r2
 8009d80:	d10a      	bne.n	8009d98 <HAL_DMA_IRQHandler+0x304>
 8009d82:	687b      	ldr	r3, [r7, #4]
 8009d84:	681b      	ldr	r3, [r3, #0]
 8009d86:	695b      	ldr	r3, [r3, #20]
 8009d88:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009d8c:	2b00      	cmp	r3, #0
 8009d8e:	bf14      	ite	ne
 8009d90:	2301      	movne	r3, #1
 8009d92:	2300      	moveq	r3, #0
 8009d94:	b2db      	uxtb	r3, r3
 8009d96:	e003      	b.n	8009da0 <HAL_DMA_IRQHandler+0x30c>
 8009d98:	687b      	ldr	r3, [r7, #4]
 8009d9a:	681b      	ldr	r3, [r3, #0]
 8009d9c:	681b      	ldr	r3, [r3, #0]
 8009d9e:	2300      	movs	r3, #0
 8009da0:	2b00      	cmp	r3, #0
 8009da2:	d00d      	beq.n	8009dc0 <HAL_DMA_IRQHandler+0x32c>
 8009da4:	687b      	ldr	r3, [r7, #4]
 8009da6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009da8:	f003 031f 	and.w	r3, r3, #31
 8009dac:	2201      	movs	r2, #1
 8009dae:	409a      	lsls	r2, r3
 8009db0:	6a3b      	ldr	r3, [r7, #32]
 8009db2:	609a      	str	r2, [r3, #8]
 8009db4:	687b      	ldr	r3, [r7, #4]
 8009db6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009db8:	f043 0202 	orr.w	r2, r3, #2
 8009dbc:	687b      	ldr	r3, [r7, #4]
 8009dbe:	655a      	str	r2, [r3, #84]	; 0x54
 8009dc0:	687b      	ldr	r3, [r7, #4]
 8009dc2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009dc4:	f003 031f 	and.w	r3, r3, #31
 8009dc8:	2204      	movs	r2, #4
 8009dca:	409a      	lsls	r2, r3
 8009dcc:	69bb      	ldr	r3, [r7, #24]
 8009dce:	4013      	ands	r3, r2
 8009dd0:	2b00      	cmp	r3, #0
 8009dd2:	f000 808f 	beq.w	8009ef4 <HAL_DMA_IRQHandler+0x460>
 8009dd6:	687b      	ldr	r3, [r7, #4]
 8009dd8:	681b      	ldr	r3, [r3, #0]
 8009dda:	4a2c      	ldr	r2, [pc, #176]	; (8009e8c <HAL_DMA_IRQHandler+0x3f8>)
 8009ddc:	4293      	cmp	r3, r2
 8009dde:	d04a      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009de0:	687b      	ldr	r3, [r7, #4]
 8009de2:	681b      	ldr	r3, [r3, #0]
 8009de4:	4a2a      	ldr	r2, [pc, #168]	; (8009e90 <HAL_DMA_IRQHandler+0x3fc>)
 8009de6:	4293      	cmp	r3, r2
 8009de8:	d045      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009dea:	687b      	ldr	r3, [r7, #4]
 8009dec:	681b      	ldr	r3, [r3, #0]
 8009dee:	4a29      	ldr	r2, [pc, #164]	; (8009e94 <HAL_DMA_IRQHandler+0x400>)
 8009df0:	4293      	cmp	r3, r2
 8009df2:	d040      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009df4:	687b      	ldr	r3, [r7, #4]
 8009df6:	681b      	ldr	r3, [r3, #0]
 8009df8:	4a27      	ldr	r2, [pc, #156]	; (8009e98 <HAL_DMA_IRQHandler+0x404>)
 8009dfa:	4293      	cmp	r3, r2
 8009dfc:	d03b      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009dfe:	687b      	ldr	r3, [r7, #4]
 8009e00:	681b      	ldr	r3, [r3, #0]
 8009e02:	4a26      	ldr	r2, [pc, #152]	; (8009e9c <HAL_DMA_IRQHandler+0x408>)
 8009e04:	4293      	cmp	r3, r2
 8009e06:	d036      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e08:	687b      	ldr	r3, [r7, #4]
 8009e0a:	681b      	ldr	r3, [r3, #0]
 8009e0c:	4a24      	ldr	r2, [pc, #144]	; (8009ea0 <HAL_DMA_IRQHandler+0x40c>)
 8009e0e:	4293      	cmp	r3, r2
 8009e10:	d031      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e12:	687b      	ldr	r3, [r7, #4]
 8009e14:	681b      	ldr	r3, [r3, #0]
 8009e16:	4a23      	ldr	r2, [pc, #140]	; (8009ea4 <HAL_DMA_IRQHandler+0x410>)
 8009e18:	4293      	cmp	r3, r2
 8009e1a:	d02c      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e1c:	687b      	ldr	r3, [r7, #4]
 8009e1e:	681b      	ldr	r3, [r3, #0]
 8009e20:	4a21      	ldr	r2, [pc, #132]	; (8009ea8 <HAL_DMA_IRQHandler+0x414>)
 8009e22:	4293      	cmp	r3, r2
 8009e24:	d027      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	681b      	ldr	r3, [r3, #0]
 8009e2a:	4a20      	ldr	r2, [pc, #128]	; (8009eac <HAL_DMA_IRQHandler+0x418>)
 8009e2c:	4293      	cmp	r3, r2
 8009e2e:	d022      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	681b      	ldr	r3, [r3, #0]
 8009e34:	4a1e      	ldr	r2, [pc, #120]	; (8009eb0 <HAL_DMA_IRQHandler+0x41c>)
 8009e36:	4293      	cmp	r3, r2
 8009e38:	d01d      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	681b      	ldr	r3, [r3, #0]
 8009e3e:	4a1d      	ldr	r2, [pc, #116]	; (8009eb4 <HAL_DMA_IRQHandler+0x420>)
 8009e40:	4293      	cmp	r3, r2
 8009e42:	d018      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e44:	687b      	ldr	r3, [r7, #4]
 8009e46:	681b      	ldr	r3, [r3, #0]
 8009e48:	4a1b      	ldr	r2, [pc, #108]	; (8009eb8 <HAL_DMA_IRQHandler+0x424>)
 8009e4a:	4293      	cmp	r3, r2
 8009e4c:	d013      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e4e:	687b      	ldr	r3, [r7, #4]
 8009e50:	681b      	ldr	r3, [r3, #0]
 8009e52:	4a1a      	ldr	r2, [pc, #104]	; (8009ebc <HAL_DMA_IRQHandler+0x428>)
 8009e54:	4293      	cmp	r3, r2
 8009e56:	d00e      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e58:	687b      	ldr	r3, [r7, #4]
 8009e5a:	681b      	ldr	r3, [r3, #0]
 8009e5c:	4a18      	ldr	r2, [pc, #96]	; (8009ec0 <HAL_DMA_IRQHandler+0x42c>)
 8009e5e:	4293      	cmp	r3, r2
 8009e60:	d009      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e62:	687b      	ldr	r3, [r7, #4]
 8009e64:	681b      	ldr	r3, [r3, #0]
 8009e66:	4a17      	ldr	r2, [pc, #92]	; (8009ec4 <HAL_DMA_IRQHandler+0x430>)
 8009e68:	4293      	cmp	r3, r2
 8009e6a:	d004      	beq.n	8009e76 <HAL_DMA_IRQHandler+0x3e2>
 8009e6c:	687b      	ldr	r3, [r7, #4]
 8009e6e:	681b      	ldr	r3, [r3, #0]
 8009e70:	4a15      	ldr	r2, [pc, #84]	; (8009ec8 <HAL_DMA_IRQHandler+0x434>)
 8009e72:	4293      	cmp	r3, r2
 8009e74:	d12a      	bne.n	8009ecc <HAL_DMA_IRQHandler+0x438>
 8009e76:	687b      	ldr	r3, [r7, #4]
 8009e78:	681b      	ldr	r3, [r3, #0]
 8009e7a:	681b      	ldr	r3, [r3, #0]
 8009e7c:	f003 0302 	and.w	r3, r3, #2
 8009e80:	2b00      	cmp	r3, #0
 8009e82:	bf14      	ite	ne
 8009e84:	2301      	movne	r3, #1
 8009e86:	2300      	moveq	r3, #0
 8009e88:	b2db      	uxtb	r3, r3
 8009e8a:	e023      	b.n	8009ed4 <HAL_DMA_IRQHandler+0x440>
 8009e8c:	40020010 	.word	0x40020010
 8009e90:	40020028 	.word	0x40020028
 8009e94:	40020040 	.word	0x40020040
 8009e98:	40020058 	.word	0x40020058
 8009e9c:	40020070 	.word	0x40020070
 8009ea0:	40020088 	.word	0x40020088
 8009ea4:	400200a0 	.word	0x400200a0
 8009ea8:	400200b8 	.word	0x400200b8
 8009eac:	40020410 	.word	0x40020410
 8009eb0:	40020428 	.word	0x40020428
 8009eb4:	40020440 	.word	0x40020440
 8009eb8:	40020458 	.word	0x40020458
 8009ebc:	40020470 	.word	0x40020470
 8009ec0:	40020488 	.word	0x40020488
 8009ec4:	400204a0 	.word	0x400204a0
 8009ec8:	400204b8 	.word	0x400204b8
 8009ecc:	687b      	ldr	r3, [r7, #4]
 8009ece:	681b      	ldr	r3, [r3, #0]
 8009ed0:	681b      	ldr	r3, [r3, #0]
 8009ed2:	2300      	movs	r3, #0
 8009ed4:	2b00      	cmp	r3, #0
 8009ed6:	d00d      	beq.n	8009ef4 <HAL_DMA_IRQHandler+0x460>
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009edc:	f003 031f 	and.w	r3, r3, #31
 8009ee0:	2204      	movs	r2, #4
 8009ee2:	409a      	lsls	r2, r3
 8009ee4:	6a3b      	ldr	r3, [r7, #32]
 8009ee6:	609a      	str	r2, [r3, #8]
 8009ee8:	687b      	ldr	r3, [r7, #4]
 8009eea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009eec:	f043 0204 	orr.w	r2, r3, #4
 8009ef0:	687b      	ldr	r3, [r7, #4]
 8009ef2:	655a      	str	r2, [r3, #84]	; 0x54
 8009ef4:	687b      	ldr	r3, [r7, #4]
 8009ef6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009ef8:	f003 031f 	and.w	r3, r3, #31
 8009efc:	2210      	movs	r2, #16
 8009efe:	409a      	lsls	r2, r3
 8009f00:	69bb      	ldr	r3, [r7, #24]
 8009f02:	4013      	ands	r3, r2
 8009f04:	2b00      	cmp	r3, #0
 8009f06:	f000 80a6 	beq.w	800a056 <HAL_DMA_IRQHandler+0x5c2>
 8009f0a:	687b      	ldr	r3, [r7, #4]
 8009f0c:	681b      	ldr	r3, [r3, #0]
 8009f0e:	4a85      	ldr	r2, [pc, #532]	; (800a124 <HAL_DMA_IRQHandler+0x690>)
 8009f10:	4293      	cmp	r3, r2
 8009f12:	d04a      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f14:	687b      	ldr	r3, [r7, #4]
 8009f16:	681b      	ldr	r3, [r3, #0]
 8009f18:	4a83      	ldr	r2, [pc, #524]	; (800a128 <HAL_DMA_IRQHandler+0x694>)
 8009f1a:	4293      	cmp	r3, r2
 8009f1c:	d045      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f1e:	687b      	ldr	r3, [r7, #4]
 8009f20:	681b      	ldr	r3, [r3, #0]
 8009f22:	4a82      	ldr	r2, [pc, #520]	; (800a12c <HAL_DMA_IRQHandler+0x698>)
 8009f24:	4293      	cmp	r3, r2
 8009f26:	d040      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f28:	687b      	ldr	r3, [r7, #4]
 8009f2a:	681b      	ldr	r3, [r3, #0]
 8009f2c:	4a80      	ldr	r2, [pc, #512]	; (800a130 <HAL_DMA_IRQHandler+0x69c>)
 8009f2e:	4293      	cmp	r3, r2
 8009f30:	d03b      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	681b      	ldr	r3, [r3, #0]
 8009f36:	4a7f      	ldr	r2, [pc, #508]	; (800a134 <HAL_DMA_IRQHandler+0x6a0>)
 8009f38:	4293      	cmp	r3, r2
 8009f3a:	d036      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f3c:	687b      	ldr	r3, [r7, #4]
 8009f3e:	681b      	ldr	r3, [r3, #0]
 8009f40:	4a7d      	ldr	r2, [pc, #500]	; (800a138 <HAL_DMA_IRQHandler+0x6a4>)
 8009f42:	4293      	cmp	r3, r2
 8009f44:	d031      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f46:	687b      	ldr	r3, [r7, #4]
 8009f48:	681b      	ldr	r3, [r3, #0]
 8009f4a:	4a7c      	ldr	r2, [pc, #496]	; (800a13c <HAL_DMA_IRQHandler+0x6a8>)
 8009f4c:	4293      	cmp	r3, r2
 8009f4e:	d02c      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f50:	687b      	ldr	r3, [r7, #4]
 8009f52:	681b      	ldr	r3, [r3, #0]
 8009f54:	4a7a      	ldr	r2, [pc, #488]	; (800a140 <HAL_DMA_IRQHandler+0x6ac>)
 8009f56:	4293      	cmp	r3, r2
 8009f58:	d027      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f5a:	687b      	ldr	r3, [r7, #4]
 8009f5c:	681b      	ldr	r3, [r3, #0]
 8009f5e:	4a79      	ldr	r2, [pc, #484]	; (800a144 <HAL_DMA_IRQHandler+0x6b0>)
 8009f60:	4293      	cmp	r3, r2
 8009f62:	d022      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f64:	687b      	ldr	r3, [r7, #4]
 8009f66:	681b      	ldr	r3, [r3, #0]
 8009f68:	4a77      	ldr	r2, [pc, #476]	; (800a148 <HAL_DMA_IRQHandler+0x6b4>)
 8009f6a:	4293      	cmp	r3, r2
 8009f6c:	d01d      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f6e:	687b      	ldr	r3, [r7, #4]
 8009f70:	681b      	ldr	r3, [r3, #0]
 8009f72:	4a76      	ldr	r2, [pc, #472]	; (800a14c <HAL_DMA_IRQHandler+0x6b8>)
 8009f74:	4293      	cmp	r3, r2
 8009f76:	d018      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f78:	687b      	ldr	r3, [r7, #4]
 8009f7a:	681b      	ldr	r3, [r3, #0]
 8009f7c:	4a74      	ldr	r2, [pc, #464]	; (800a150 <HAL_DMA_IRQHandler+0x6bc>)
 8009f7e:	4293      	cmp	r3, r2
 8009f80:	d013      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f82:	687b      	ldr	r3, [r7, #4]
 8009f84:	681b      	ldr	r3, [r3, #0]
 8009f86:	4a73      	ldr	r2, [pc, #460]	; (800a154 <HAL_DMA_IRQHandler+0x6c0>)
 8009f88:	4293      	cmp	r3, r2
 8009f8a:	d00e      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f8c:	687b      	ldr	r3, [r7, #4]
 8009f8e:	681b      	ldr	r3, [r3, #0]
 8009f90:	4a71      	ldr	r2, [pc, #452]	; (800a158 <HAL_DMA_IRQHandler+0x6c4>)
 8009f92:	4293      	cmp	r3, r2
 8009f94:	d009      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009f96:	687b      	ldr	r3, [r7, #4]
 8009f98:	681b      	ldr	r3, [r3, #0]
 8009f9a:	4a70      	ldr	r2, [pc, #448]	; (800a15c <HAL_DMA_IRQHandler+0x6c8>)
 8009f9c:	4293      	cmp	r3, r2
 8009f9e:	d004      	beq.n	8009faa <HAL_DMA_IRQHandler+0x516>
 8009fa0:	687b      	ldr	r3, [r7, #4]
 8009fa2:	681b      	ldr	r3, [r3, #0]
 8009fa4:	4a6e      	ldr	r2, [pc, #440]	; (800a160 <HAL_DMA_IRQHandler+0x6cc>)
 8009fa6:	4293      	cmp	r3, r2
 8009fa8:	d10a      	bne.n	8009fc0 <HAL_DMA_IRQHandler+0x52c>
 8009faa:	687b      	ldr	r3, [r7, #4]
 8009fac:	681b      	ldr	r3, [r3, #0]
 8009fae:	681b      	ldr	r3, [r3, #0]
 8009fb0:	f003 0308 	and.w	r3, r3, #8
 8009fb4:	2b00      	cmp	r3, #0
 8009fb6:	bf14      	ite	ne
 8009fb8:	2301      	movne	r3, #1
 8009fba:	2300      	moveq	r3, #0
 8009fbc:	b2db      	uxtb	r3, r3
 8009fbe:	e009      	b.n	8009fd4 <HAL_DMA_IRQHandler+0x540>
 8009fc0:	687b      	ldr	r3, [r7, #4]
 8009fc2:	681b      	ldr	r3, [r3, #0]
 8009fc4:	681b      	ldr	r3, [r3, #0]
 8009fc6:	f003 0304 	and.w	r3, r3, #4
 8009fca:	2b00      	cmp	r3, #0
 8009fcc:	bf14      	ite	ne
 8009fce:	2301      	movne	r3, #1
 8009fd0:	2300      	moveq	r3, #0
 8009fd2:	b2db      	uxtb	r3, r3
 8009fd4:	2b00      	cmp	r3, #0
 8009fd6:	d03e      	beq.n	800a056 <HAL_DMA_IRQHandler+0x5c2>
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009fdc:	f003 031f 	and.w	r3, r3, #31
 8009fe0:	2210      	movs	r2, #16
 8009fe2:	409a      	lsls	r2, r3
 8009fe4:	6a3b      	ldr	r3, [r7, #32]
 8009fe6:	609a      	str	r2, [r3, #8]
 8009fe8:	687b      	ldr	r3, [r7, #4]
 8009fea:	681b      	ldr	r3, [r3, #0]
 8009fec:	681b      	ldr	r3, [r3, #0]
 8009fee:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8009ff2:	2b00      	cmp	r3, #0
 8009ff4:	d018      	beq.n	800a028 <HAL_DMA_IRQHandler+0x594>
 8009ff6:	687b      	ldr	r3, [r7, #4]
 8009ff8:	681b      	ldr	r3, [r3, #0]
 8009ffa:	681b      	ldr	r3, [r3, #0]
 8009ffc:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800a000:	2b00      	cmp	r3, #0
 800a002:	d108      	bne.n	800a016 <HAL_DMA_IRQHandler+0x582>
 800a004:	687b      	ldr	r3, [r7, #4]
 800a006:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a008:	2b00      	cmp	r3, #0
 800a00a:	d024      	beq.n	800a056 <HAL_DMA_IRQHandler+0x5c2>
 800a00c:	687b      	ldr	r3, [r7, #4]
 800a00e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a010:	6878      	ldr	r0, [r7, #4]
 800a012:	4798      	blx	r3
 800a014:	e01f      	b.n	800a056 <HAL_DMA_IRQHandler+0x5c2>
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a01a:	2b00      	cmp	r3, #0
 800a01c:	d01b      	beq.n	800a056 <HAL_DMA_IRQHandler+0x5c2>
 800a01e:	687b      	ldr	r3, [r7, #4]
 800a020:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a022:	6878      	ldr	r0, [r7, #4]
 800a024:	4798      	blx	r3
 800a026:	e016      	b.n	800a056 <HAL_DMA_IRQHandler+0x5c2>
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	681b      	ldr	r3, [r3, #0]
 800a02c:	681b      	ldr	r3, [r3, #0]
 800a02e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a032:	2b00      	cmp	r3, #0
 800a034:	d107      	bne.n	800a046 <HAL_DMA_IRQHandler+0x5b2>
 800a036:	687b      	ldr	r3, [r7, #4]
 800a038:	681b      	ldr	r3, [r3, #0]
 800a03a:	681a      	ldr	r2, [r3, #0]
 800a03c:	687b      	ldr	r3, [r7, #4]
 800a03e:	681b      	ldr	r3, [r3, #0]
 800a040:	f022 0208 	bic.w	r2, r2, #8
 800a044:	601a      	str	r2, [r3, #0]
 800a046:	687b      	ldr	r3, [r7, #4]
 800a048:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a04a:	2b00      	cmp	r3, #0
 800a04c:	d003      	beq.n	800a056 <HAL_DMA_IRQHandler+0x5c2>
 800a04e:	687b      	ldr	r3, [r7, #4]
 800a050:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a052:	6878      	ldr	r0, [r7, #4]
 800a054:	4798      	blx	r3
 800a056:	687b      	ldr	r3, [r7, #4]
 800a058:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a05a:	f003 031f 	and.w	r3, r3, #31
 800a05e:	2220      	movs	r2, #32
 800a060:	409a      	lsls	r2, r3
 800a062:	69bb      	ldr	r3, [r7, #24]
 800a064:	4013      	ands	r3, r2
 800a066:	2b00      	cmp	r3, #0
 800a068:	f000 8110 	beq.w	800a28c <HAL_DMA_IRQHandler+0x7f8>
 800a06c:	687b      	ldr	r3, [r7, #4]
 800a06e:	681b      	ldr	r3, [r3, #0]
 800a070:	4a2c      	ldr	r2, [pc, #176]	; (800a124 <HAL_DMA_IRQHandler+0x690>)
 800a072:	4293      	cmp	r3, r2
 800a074:	d04a      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a076:	687b      	ldr	r3, [r7, #4]
 800a078:	681b      	ldr	r3, [r3, #0]
 800a07a:	4a2b      	ldr	r2, [pc, #172]	; (800a128 <HAL_DMA_IRQHandler+0x694>)
 800a07c:	4293      	cmp	r3, r2
 800a07e:	d045      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a080:	687b      	ldr	r3, [r7, #4]
 800a082:	681b      	ldr	r3, [r3, #0]
 800a084:	4a29      	ldr	r2, [pc, #164]	; (800a12c <HAL_DMA_IRQHandler+0x698>)
 800a086:	4293      	cmp	r3, r2
 800a088:	d040      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a08a:	687b      	ldr	r3, [r7, #4]
 800a08c:	681b      	ldr	r3, [r3, #0]
 800a08e:	4a28      	ldr	r2, [pc, #160]	; (800a130 <HAL_DMA_IRQHandler+0x69c>)
 800a090:	4293      	cmp	r3, r2
 800a092:	d03b      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a094:	687b      	ldr	r3, [r7, #4]
 800a096:	681b      	ldr	r3, [r3, #0]
 800a098:	4a26      	ldr	r2, [pc, #152]	; (800a134 <HAL_DMA_IRQHandler+0x6a0>)
 800a09a:	4293      	cmp	r3, r2
 800a09c:	d036      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a09e:	687b      	ldr	r3, [r7, #4]
 800a0a0:	681b      	ldr	r3, [r3, #0]
 800a0a2:	4a25      	ldr	r2, [pc, #148]	; (800a138 <HAL_DMA_IRQHandler+0x6a4>)
 800a0a4:	4293      	cmp	r3, r2
 800a0a6:	d031      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a0a8:	687b      	ldr	r3, [r7, #4]
 800a0aa:	681b      	ldr	r3, [r3, #0]
 800a0ac:	4a23      	ldr	r2, [pc, #140]	; (800a13c <HAL_DMA_IRQHandler+0x6a8>)
 800a0ae:	4293      	cmp	r3, r2
 800a0b0:	d02c      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a0b2:	687b      	ldr	r3, [r7, #4]
 800a0b4:	681b      	ldr	r3, [r3, #0]
 800a0b6:	4a22      	ldr	r2, [pc, #136]	; (800a140 <HAL_DMA_IRQHandler+0x6ac>)
 800a0b8:	4293      	cmp	r3, r2
 800a0ba:	d027      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a0bc:	687b      	ldr	r3, [r7, #4]
 800a0be:	681b      	ldr	r3, [r3, #0]
 800a0c0:	4a20      	ldr	r2, [pc, #128]	; (800a144 <HAL_DMA_IRQHandler+0x6b0>)
 800a0c2:	4293      	cmp	r3, r2
 800a0c4:	d022      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a0c6:	687b      	ldr	r3, [r7, #4]
 800a0c8:	681b      	ldr	r3, [r3, #0]
 800a0ca:	4a1f      	ldr	r2, [pc, #124]	; (800a148 <HAL_DMA_IRQHandler+0x6b4>)
 800a0cc:	4293      	cmp	r3, r2
 800a0ce:	d01d      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a0d0:	687b      	ldr	r3, [r7, #4]
 800a0d2:	681b      	ldr	r3, [r3, #0]
 800a0d4:	4a1d      	ldr	r2, [pc, #116]	; (800a14c <HAL_DMA_IRQHandler+0x6b8>)
 800a0d6:	4293      	cmp	r3, r2
 800a0d8:	d018      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a0da:	687b      	ldr	r3, [r7, #4]
 800a0dc:	681b      	ldr	r3, [r3, #0]
 800a0de:	4a1c      	ldr	r2, [pc, #112]	; (800a150 <HAL_DMA_IRQHandler+0x6bc>)
 800a0e0:	4293      	cmp	r3, r2
 800a0e2:	d013      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a0e4:	687b      	ldr	r3, [r7, #4]
 800a0e6:	681b      	ldr	r3, [r3, #0]
 800a0e8:	4a1a      	ldr	r2, [pc, #104]	; (800a154 <HAL_DMA_IRQHandler+0x6c0>)
 800a0ea:	4293      	cmp	r3, r2
 800a0ec:	d00e      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a0ee:	687b      	ldr	r3, [r7, #4]
 800a0f0:	681b      	ldr	r3, [r3, #0]
 800a0f2:	4a19      	ldr	r2, [pc, #100]	; (800a158 <HAL_DMA_IRQHandler+0x6c4>)
 800a0f4:	4293      	cmp	r3, r2
 800a0f6:	d009      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a0f8:	687b      	ldr	r3, [r7, #4]
 800a0fa:	681b      	ldr	r3, [r3, #0]
 800a0fc:	4a17      	ldr	r2, [pc, #92]	; (800a15c <HAL_DMA_IRQHandler+0x6c8>)
 800a0fe:	4293      	cmp	r3, r2
 800a100:	d004      	beq.n	800a10c <HAL_DMA_IRQHandler+0x678>
 800a102:	687b      	ldr	r3, [r7, #4]
 800a104:	681b      	ldr	r3, [r3, #0]
 800a106:	4a16      	ldr	r2, [pc, #88]	; (800a160 <HAL_DMA_IRQHandler+0x6cc>)
 800a108:	4293      	cmp	r3, r2
 800a10a:	d12b      	bne.n	800a164 <HAL_DMA_IRQHandler+0x6d0>
 800a10c:	687b      	ldr	r3, [r7, #4]
 800a10e:	681b      	ldr	r3, [r3, #0]
 800a110:	681b      	ldr	r3, [r3, #0]
 800a112:	f003 0310 	and.w	r3, r3, #16
 800a116:	2b00      	cmp	r3, #0
 800a118:	bf14      	ite	ne
 800a11a:	2301      	movne	r3, #1
 800a11c:	2300      	moveq	r3, #0
 800a11e:	b2db      	uxtb	r3, r3
 800a120:	e02a      	b.n	800a178 <HAL_DMA_IRQHandler+0x6e4>
 800a122:	bf00      	nop
 800a124:	40020010 	.word	0x40020010
 800a128:	40020028 	.word	0x40020028
 800a12c:	40020040 	.word	0x40020040
 800a130:	40020058 	.word	0x40020058
 800a134:	40020070 	.word	0x40020070
 800a138:	40020088 	.word	0x40020088
 800a13c:	400200a0 	.word	0x400200a0
 800a140:	400200b8 	.word	0x400200b8
 800a144:	40020410 	.word	0x40020410
 800a148:	40020428 	.word	0x40020428
 800a14c:	40020440 	.word	0x40020440
 800a150:	40020458 	.word	0x40020458
 800a154:	40020470 	.word	0x40020470
 800a158:	40020488 	.word	0x40020488
 800a15c:	400204a0 	.word	0x400204a0
 800a160:	400204b8 	.word	0x400204b8
 800a164:	687b      	ldr	r3, [r7, #4]
 800a166:	681b      	ldr	r3, [r3, #0]
 800a168:	681b      	ldr	r3, [r3, #0]
 800a16a:	f003 0302 	and.w	r3, r3, #2
 800a16e:	2b00      	cmp	r3, #0
 800a170:	bf14      	ite	ne
 800a172:	2301      	movne	r3, #1
 800a174:	2300      	moveq	r3, #0
 800a176:	b2db      	uxtb	r3, r3
 800a178:	2b00      	cmp	r3, #0
 800a17a:	f000 8087 	beq.w	800a28c <HAL_DMA_IRQHandler+0x7f8>
 800a17e:	687b      	ldr	r3, [r7, #4]
 800a180:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a182:	f003 031f 	and.w	r3, r3, #31
 800a186:	2220      	movs	r2, #32
 800a188:	409a      	lsls	r2, r3
 800a18a:	6a3b      	ldr	r3, [r7, #32]
 800a18c:	609a      	str	r2, [r3, #8]
 800a18e:	687b      	ldr	r3, [r7, #4]
 800a190:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800a194:	b2db      	uxtb	r3, r3
 800a196:	2b04      	cmp	r3, #4
 800a198:	d139      	bne.n	800a20e <HAL_DMA_IRQHandler+0x77a>
 800a19a:	687b      	ldr	r3, [r7, #4]
 800a19c:	681b      	ldr	r3, [r3, #0]
 800a19e:	681a      	ldr	r2, [r3, #0]
 800a1a0:	687b      	ldr	r3, [r7, #4]
 800a1a2:	681b      	ldr	r3, [r3, #0]
 800a1a4:	f022 0216 	bic.w	r2, r2, #22
 800a1a8:	601a      	str	r2, [r3, #0]
 800a1aa:	687b      	ldr	r3, [r7, #4]
 800a1ac:	681b      	ldr	r3, [r3, #0]
 800a1ae:	695a      	ldr	r2, [r3, #20]
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	681b      	ldr	r3, [r3, #0]
 800a1b4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a1b8:	615a      	str	r2, [r3, #20]
 800a1ba:	687b      	ldr	r3, [r7, #4]
 800a1bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a1be:	2b00      	cmp	r3, #0
 800a1c0:	d103      	bne.n	800a1ca <HAL_DMA_IRQHandler+0x736>
 800a1c2:	687b      	ldr	r3, [r7, #4]
 800a1c4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a1c6:	2b00      	cmp	r3, #0
 800a1c8:	d007      	beq.n	800a1da <HAL_DMA_IRQHandler+0x746>
 800a1ca:	687b      	ldr	r3, [r7, #4]
 800a1cc:	681b      	ldr	r3, [r3, #0]
 800a1ce:	681a      	ldr	r2, [r3, #0]
 800a1d0:	687b      	ldr	r3, [r7, #4]
 800a1d2:	681b      	ldr	r3, [r3, #0]
 800a1d4:	f022 0208 	bic.w	r2, r2, #8
 800a1d8:	601a      	str	r2, [r3, #0]
 800a1da:	687b      	ldr	r3, [r7, #4]
 800a1dc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a1de:	f003 031f 	and.w	r3, r3, #31
 800a1e2:	223f      	movs	r2, #63	; 0x3f
 800a1e4:	409a      	lsls	r2, r3
 800a1e6:	6a3b      	ldr	r3, [r7, #32]
 800a1e8:	609a      	str	r2, [r3, #8]
 800a1ea:	687b      	ldr	r3, [r7, #4]
 800a1ec:	2201      	movs	r2, #1
 800a1ee:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800a1f2:	687b      	ldr	r3, [r7, #4]
 800a1f4:	2200      	movs	r2, #0
 800a1f6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800a1fa:	687b      	ldr	r3, [r7, #4]
 800a1fc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a1fe:	2b00      	cmp	r3, #0
 800a200:	f000 834a 	beq.w	800a898 <HAL_DMA_IRQHandler+0xe04>
 800a204:	687b      	ldr	r3, [r7, #4]
 800a206:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a208:	6878      	ldr	r0, [r7, #4]
 800a20a:	4798      	blx	r3
 800a20c:	e344      	b.n	800a898 <HAL_DMA_IRQHandler+0xe04>
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	681b      	ldr	r3, [r3, #0]
 800a212:	681b      	ldr	r3, [r3, #0]
 800a214:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800a218:	2b00      	cmp	r3, #0
 800a21a:	d018      	beq.n	800a24e <HAL_DMA_IRQHandler+0x7ba>
 800a21c:	687b      	ldr	r3, [r7, #4]
 800a21e:	681b      	ldr	r3, [r3, #0]
 800a220:	681b      	ldr	r3, [r3, #0]
 800a222:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800a226:	2b00      	cmp	r3, #0
 800a228:	d108      	bne.n	800a23c <HAL_DMA_IRQHandler+0x7a8>
 800a22a:	687b      	ldr	r3, [r7, #4]
 800a22c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a22e:	2b00      	cmp	r3, #0
 800a230:	d02c      	beq.n	800a28c <HAL_DMA_IRQHandler+0x7f8>
 800a232:	687b      	ldr	r3, [r7, #4]
 800a234:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a236:	6878      	ldr	r0, [r7, #4]
 800a238:	4798      	blx	r3
 800a23a:	e027      	b.n	800a28c <HAL_DMA_IRQHandler+0x7f8>
 800a23c:	687b      	ldr	r3, [r7, #4]
 800a23e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a240:	2b00      	cmp	r3, #0
 800a242:	d023      	beq.n	800a28c <HAL_DMA_IRQHandler+0x7f8>
 800a244:	687b      	ldr	r3, [r7, #4]
 800a246:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a248:	6878      	ldr	r0, [r7, #4]
 800a24a:	4798      	blx	r3
 800a24c:	e01e      	b.n	800a28c <HAL_DMA_IRQHandler+0x7f8>
 800a24e:	687b      	ldr	r3, [r7, #4]
 800a250:	681b      	ldr	r3, [r3, #0]
 800a252:	681b      	ldr	r3, [r3, #0]
 800a254:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a258:	2b00      	cmp	r3, #0
 800a25a:	d10f      	bne.n	800a27c <HAL_DMA_IRQHandler+0x7e8>
 800a25c:	687b      	ldr	r3, [r7, #4]
 800a25e:	681b      	ldr	r3, [r3, #0]
 800a260:	681a      	ldr	r2, [r3, #0]
 800a262:	687b      	ldr	r3, [r7, #4]
 800a264:	681b      	ldr	r3, [r3, #0]
 800a266:	f022 0210 	bic.w	r2, r2, #16
 800a26a:	601a      	str	r2, [r3, #0]
 800a26c:	687b      	ldr	r3, [r7, #4]
 800a26e:	2201      	movs	r2, #1
 800a270:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800a274:	687b      	ldr	r3, [r7, #4]
 800a276:	2200      	movs	r2, #0
 800a278:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a280:	2b00      	cmp	r3, #0
 800a282:	d003      	beq.n	800a28c <HAL_DMA_IRQHandler+0x7f8>
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a288:	6878      	ldr	r0, [r7, #4]
 800a28a:	4798      	blx	r3
 800a28c:	687b      	ldr	r3, [r7, #4]
 800a28e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a290:	2b00      	cmp	r3, #0
 800a292:	f000 8306 	beq.w	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a296:	687b      	ldr	r3, [r7, #4]
 800a298:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a29a:	f003 0301 	and.w	r3, r3, #1
 800a29e:	2b00      	cmp	r3, #0
 800a2a0:	f000 8088 	beq.w	800a3b4 <HAL_DMA_IRQHandler+0x920>
 800a2a4:	687b      	ldr	r3, [r7, #4]
 800a2a6:	2204      	movs	r2, #4
 800a2a8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800a2ac:	687b      	ldr	r3, [r7, #4]
 800a2ae:	681b      	ldr	r3, [r3, #0]
 800a2b0:	4a7a      	ldr	r2, [pc, #488]	; (800a49c <HAL_DMA_IRQHandler+0xa08>)
 800a2b2:	4293      	cmp	r3, r2
 800a2b4:	d04a      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a2b6:	687b      	ldr	r3, [r7, #4]
 800a2b8:	681b      	ldr	r3, [r3, #0]
 800a2ba:	4a79      	ldr	r2, [pc, #484]	; (800a4a0 <HAL_DMA_IRQHandler+0xa0c>)
 800a2bc:	4293      	cmp	r3, r2
 800a2be:	d045      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a2c0:	687b      	ldr	r3, [r7, #4]
 800a2c2:	681b      	ldr	r3, [r3, #0]
 800a2c4:	4a77      	ldr	r2, [pc, #476]	; (800a4a4 <HAL_DMA_IRQHandler+0xa10>)
 800a2c6:	4293      	cmp	r3, r2
 800a2c8:	d040      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a2ca:	687b      	ldr	r3, [r7, #4]
 800a2cc:	681b      	ldr	r3, [r3, #0]
 800a2ce:	4a76      	ldr	r2, [pc, #472]	; (800a4a8 <HAL_DMA_IRQHandler+0xa14>)
 800a2d0:	4293      	cmp	r3, r2
 800a2d2:	d03b      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a2d4:	687b      	ldr	r3, [r7, #4]
 800a2d6:	681b      	ldr	r3, [r3, #0]
 800a2d8:	4a74      	ldr	r2, [pc, #464]	; (800a4ac <HAL_DMA_IRQHandler+0xa18>)
 800a2da:	4293      	cmp	r3, r2
 800a2dc:	d036      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a2de:	687b      	ldr	r3, [r7, #4]
 800a2e0:	681b      	ldr	r3, [r3, #0]
 800a2e2:	4a73      	ldr	r2, [pc, #460]	; (800a4b0 <HAL_DMA_IRQHandler+0xa1c>)
 800a2e4:	4293      	cmp	r3, r2
 800a2e6:	d031      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a2e8:	687b      	ldr	r3, [r7, #4]
 800a2ea:	681b      	ldr	r3, [r3, #0]
 800a2ec:	4a71      	ldr	r2, [pc, #452]	; (800a4b4 <HAL_DMA_IRQHandler+0xa20>)
 800a2ee:	4293      	cmp	r3, r2
 800a2f0:	d02c      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a2f2:	687b      	ldr	r3, [r7, #4]
 800a2f4:	681b      	ldr	r3, [r3, #0]
 800a2f6:	4a70      	ldr	r2, [pc, #448]	; (800a4b8 <HAL_DMA_IRQHandler+0xa24>)
 800a2f8:	4293      	cmp	r3, r2
 800a2fa:	d027      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	681b      	ldr	r3, [r3, #0]
 800a300:	4a6e      	ldr	r2, [pc, #440]	; (800a4bc <HAL_DMA_IRQHandler+0xa28>)
 800a302:	4293      	cmp	r3, r2
 800a304:	d022      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a306:	687b      	ldr	r3, [r7, #4]
 800a308:	681b      	ldr	r3, [r3, #0]
 800a30a:	4a6d      	ldr	r2, [pc, #436]	; (800a4c0 <HAL_DMA_IRQHandler+0xa2c>)
 800a30c:	4293      	cmp	r3, r2
 800a30e:	d01d      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a310:	687b      	ldr	r3, [r7, #4]
 800a312:	681b      	ldr	r3, [r3, #0]
 800a314:	4a6b      	ldr	r2, [pc, #428]	; (800a4c4 <HAL_DMA_IRQHandler+0xa30>)
 800a316:	4293      	cmp	r3, r2
 800a318:	d018      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	681b      	ldr	r3, [r3, #0]
 800a31e:	4a6a      	ldr	r2, [pc, #424]	; (800a4c8 <HAL_DMA_IRQHandler+0xa34>)
 800a320:	4293      	cmp	r3, r2
 800a322:	d013      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	681b      	ldr	r3, [r3, #0]
 800a328:	4a68      	ldr	r2, [pc, #416]	; (800a4cc <HAL_DMA_IRQHandler+0xa38>)
 800a32a:	4293      	cmp	r3, r2
 800a32c:	d00e      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a32e:	687b      	ldr	r3, [r7, #4]
 800a330:	681b      	ldr	r3, [r3, #0]
 800a332:	4a67      	ldr	r2, [pc, #412]	; (800a4d0 <HAL_DMA_IRQHandler+0xa3c>)
 800a334:	4293      	cmp	r3, r2
 800a336:	d009      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a338:	687b      	ldr	r3, [r7, #4]
 800a33a:	681b      	ldr	r3, [r3, #0]
 800a33c:	4a65      	ldr	r2, [pc, #404]	; (800a4d4 <HAL_DMA_IRQHandler+0xa40>)
 800a33e:	4293      	cmp	r3, r2
 800a340:	d004      	beq.n	800a34c <HAL_DMA_IRQHandler+0x8b8>
 800a342:	687b      	ldr	r3, [r7, #4]
 800a344:	681b      	ldr	r3, [r3, #0]
 800a346:	4a64      	ldr	r2, [pc, #400]	; (800a4d8 <HAL_DMA_IRQHandler+0xa44>)
 800a348:	4293      	cmp	r3, r2
 800a34a:	d108      	bne.n	800a35e <HAL_DMA_IRQHandler+0x8ca>
 800a34c:	687b      	ldr	r3, [r7, #4]
 800a34e:	681b      	ldr	r3, [r3, #0]
 800a350:	681a      	ldr	r2, [r3, #0]
 800a352:	687b      	ldr	r3, [r7, #4]
 800a354:	681b      	ldr	r3, [r3, #0]
 800a356:	f022 0201 	bic.w	r2, r2, #1
 800a35a:	601a      	str	r2, [r3, #0]
 800a35c:	e007      	b.n	800a36e <HAL_DMA_IRQHandler+0x8da>
 800a35e:	687b      	ldr	r3, [r7, #4]
 800a360:	681b      	ldr	r3, [r3, #0]
 800a362:	681a      	ldr	r2, [r3, #0]
 800a364:	687b      	ldr	r3, [r7, #4]
 800a366:	681b      	ldr	r3, [r3, #0]
 800a368:	f022 0201 	bic.w	r2, r2, #1
 800a36c:	601a      	str	r2, [r3, #0]
 800a36e:	68fb      	ldr	r3, [r7, #12]
 800a370:	3301      	adds	r3, #1
 800a372:	60fb      	str	r3, [r7, #12]
 800a374:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a376:	429a      	cmp	r2, r3
 800a378:	d307      	bcc.n	800a38a <HAL_DMA_IRQHandler+0x8f6>
 800a37a:	687b      	ldr	r3, [r7, #4]
 800a37c:	681b      	ldr	r3, [r3, #0]
 800a37e:	681b      	ldr	r3, [r3, #0]
 800a380:	f003 0301 	and.w	r3, r3, #1
 800a384:	2b00      	cmp	r3, #0
 800a386:	d1f2      	bne.n	800a36e <HAL_DMA_IRQHandler+0x8da>
 800a388:	e000      	b.n	800a38c <HAL_DMA_IRQHandler+0x8f8>
 800a38a:	bf00      	nop
 800a38c:	687b      	ldr	r3, [r7, #4]
 800a38e:	681b      	ldr	r3, [r3, #0]
 800a390:	681b      	ldr	r3, [r3, #0]
 800a392:	f003 0301 	and.w	r3, r3, #1
 800a396:	2b00      	cmp	r3, #0
 800a398:	d004      	beq.n	800a3a4 <HAL_DMA_IRQHandler+0x910>
 800a39a:	687b      	ldr	r3, [r7, #4]
 800a39c:	2203      	movs	r2, #3
 800a39e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800a3a2:	e003      	b.n	800a3ac <HAL_DMA_IRQHandler+0x918>
 800a3a4:	687b      	ldr	r3, [r7, #4]
 800a3a6:	2201      	movs	r2, #1
 800a3a8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800a3ac:	687b      	ldr	r3, [r7, #4]
 800a3ae:	2200      	movs	r2, #0
 800a3b0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800a3b4:	687b      	ldr	r3, [r7, #4]
 800a3b6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a3b8:	2b00      	cmp	r3, #0
 800a3ba:	f000 8272 	beq.w	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a3c2:	6878      	ldr	r0, [r7, #4]
 800a3c4:	4798      	blx	r3
 800a3c6:	e26c      	b.n	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a3c8:	687b      	ldr	r3, [r7, #4]
 800a3ca:	681b      	ldr	r3, [r3, #0]
 800a3cc:	4a43      	ldr	r2, [pc, #268]	; (800a4dc <HAL_DMA_IRQHandler+0xa48>)
 800a3ce:	4293      	cmp	r3, r2
 800a3d0:	d022      	beq.n	800a418 <HAL_DMA_IRQHandler+0x984>
 800a3d2:	687b      	ldr	r3, [r7, #4]
 800a3d4:	681b      	ldr	r3, [r3, #0]
 800a3d6:	4a42      	ldr	r2, [pc, #264]	; (800a4e0 <HAL_DMA_IRQHandler+0xa4c>)
 800a3d8:	4293      	cmp	r3, r2
 800a3da:	d01d      	beq.n	800a418 <HAL_DMA_IRQHandler+0x984>
 800a3dc:	687b      	ldr	r3, [r7, #4]
 800a3de:	681b      	ldr	r3, [r3, #0]
 800a3e0:	4a40      	ldr	r2, [pc, #256]	; (800a4e4 <HAL_DMA_IRQHandler+0xa50>)
 800a3e2:	4293      	cmp	r3, r2
 800a3e4:	d018      	beq.n	800a418 <HAL_DMA_IRQHandler+0x984>
 800a3e6:	687b      	ldr	r3, [r7, #4]
 800a3e8:	681b      	ldr	r3, [r3, #0]
 800a3ea:	4a3f      	ldr	r2, [pc, #252]	; (800a4e8 <HAL_DMA_IRQHandler+0xa54>)
 800a3ec:	4293      	cmp	r3, r2
 800a3ee:	d013      	beq.n	800a418 <HAL_DMA_IRQHandler+0x984>
 800a3f0:	687b      	ldr	r3, [r7, #4]
 800a3f2:	681b      	ldr	r3, [r3, #0]
 800a3f4:	4a3d      	ldr	r2, [pc, #244]	; (800a4ec <HAL_DMA_IRQHandler+0xa58>)
 800a3f6:	4293      	cmp	r3, r2
 800a3f8:	d00e      	beq.n	800a418 <HAL_DMA_IRQHandler+0x984>
 800a3fa:	687b      	ldr	r3, [r7, #4]
 800a3fc:	681b      	ldr	r3, [r3, #0]
 800a3fe:	4a3c      	ldr	r2, [pc, #240]	; (800a4f0 <HAL_DMA_IRQHandler+0xa5c>)
 800a400:	4293      	cmp	r3, r2
 800a402:	d009      	beq.n	800a418 <HAL_DMA_IRQHandler+0x984>
 800a404:	687b      	ldr	r3, [r7, #4]
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	4a3a      	ldr	r2, [pc, #232]	; (800a4f4 <HAL_DMA_IRQHandler+0xa60>)
 800a40a:	4293      	cmp	r3, r2
 800a40c:	d004      	beq.n	800a418 <HAL_DMA_IRQHandler+0x984>
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	681b      	ldr	r3, [r3, #0]
 800a412:	4a39      	ldr	r2, [pc, #228]	; (800a4f8 <HAL_DMA_IRQHandler+0xa64>)
 800a414:	4293      	cmp	r3, r2
 800a416:	d101      	bne.n	800a41c <HAL_DMA_IRQHandler+0x988>
 800a418:	2301      	movs	r3, #1
 800a41a:	e000      	b.n	800a41e <HAL_DMA_IRQHandler+0x98a>
 800a41c:	2300      	movs	r3, #0
 800a41e:	2b00      	cmp	r3, #0
 800a420:	f000 823f 	beq.w	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a424:	687b      	ldr	r3, [r7, #4]
 800a426:	681b      	ldr	r3, [r3, #0]
 800a428:	681b      	ldr	r3, [r3, #0]
 800a42a:	613b      	str	r3, [r7, #16]
 800a42c:	687b      	ldr	r3, [r7, #4]
 800a42e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a430:	f003 031f 	and.w	r3, r3, #31
 800a434:	2204      	movs	r2, #4
 800a436:	409a      	lsls	r2, r3
 800a438:	697b      	ldr	r3, [r7, #20]
 800a43a:	4013      	ands	r3, r2
 800a43c:	2b00      	cmp	r3, #0
 800a43e:	f000 80cd 	beq.w	800a5dc <HAL_DMA_IRQHandler+0xb48>
 800a442:	693b      	ldr	r3, [r7, #16]
 800a444:	f003 0304 	and.w	r3, r3, #4
 800a448:	2b00      	cmp	r3, #0
 800a44a:	f000 80c7 	beq.w	800a5dc <HAL_DMA_IRQHandler+0xb48>
 800a44e:	687b      	ldr	r3, [r7, #4]
 800a450:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a452:	f003 031f 	and.w	r3, r3, #31
 800a456:	2204      	movs	r2, #4
 800a458:	409a      	lsls	r2, r3
 800a45a:	69fb      	ldr	r3, [r7, #28]
 800a45c:	605a      	str	r2, [r3, #4]
 800a45e:	693b      	ldr	r3, [r7, #16]
 800a460:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800a464:	2b00      	cmp	r3, #0
 800a466:	d049      	beq.n	800a4fc <HAL_DMA_IRQHandler+0xa68>
 800a468:	693b      	ldr	r3, [r7, #16]
 800a46a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800a46e:	2b00      	cmp	r3, #0
 800a470:	d109      	bne.n	800a486 <HAL_DMA_IRQHandler+0x9f2>
 800a472:	687b      	ldr	r3, [r7, #4]
 800a474:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a476:	2b00      	cmp	r3, #0
 800a478:	f000 8210 	beq.w	800a89c <HAL_DMA_IRQHandler+0xe08>
 800a47c:	687b      	ldr	r3, [r7, #4]
 800a47e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a480:	6878      	ldr	r0, [r7, #4]
 800a482:	4798      	blx	r3
 800a484:	e20a      	b.n	800a89c <HAL_DMA_IRQHandler+0xe08>
 800a486:	687b      	ldr	r3, [r7, #4]
 800a488:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a48a:	2b00      	cmp	r3, #0
 800a48c:	f000 8206 	beq.w	800a89c <HAL_DMA_IRQHandler+0xe08>
 800a490:	687b      	ldr	r3, [r7, #4]
 800a492:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a494:	6878      	ldr	r0, [r7, #4]
 800a496:	4798      	blx	r3
 800a498:	e200      	b.n	800a89c <HAL_DMA_IRQHandler+0xe08>
 800a49a:	bf00      	nop
 800a49c:	40020010 	.word	0x40020010
 800a4a0:	40020028 	.word	0x40020028
 800a4a4:	40020040 	.word	0x40020040
 800a4a8:	40020058 	.word	0x40020058
 800a4ac:	40020070 	.word	0x40020070
 800a4b0:	40020088 	.word	0x40020088
 800a4b4:	400200a0 	.word	0x400200a0
 800a4b8:	400200b8 	.word	0x400200b8
 800a4bc:	40020410 	.word	0x40020410
 800a4c0:	40020428 	.word	0x40020428
 800a4c4:	40020440 	.word	0x40020440
 800a4c8:	40020458 	.word	0x40020458
 800a4cc:	40020470 	.word	0x40020470
 800a4d0:	40020488 	.word	0x40020488
 800a4d4:	400204a0 	.word	0x400204a0
 800a4d8:	400204b8 	.word	0x400204b8
 800a4dc:	58025408 	.word	0x58025408
 800a4e0:	5802541c 	.word	0x5802541c
 800a4e4:	58025430 	.word	0x58025430
 800a4e8:	58025444 	.word	0x58025444
 800a4ec:	58025458 	.word	0x58025458
 800a4f0:	5802546c 	.word	0x5802546c
 800a4f4:	58025480 	.word	0x58025480
 800a4f8:	58025494 	.word	0x58025494
 800a4fc:	693b      	ldr	r3, [r7, #16]
 800a4fe:	f003 0320 	and.w	r3, r3, #32
 800a502:	2b00      	cmp	r3, #0
 800a504:	d160      	bne.n	800a5c8 <HAL_DMA_IRQHandler+0xb34>
 800a506:	687b      	ldr	r3, [r7, #4]
 800a508:	681b      	ldr	r3, [r3, #0]
 800a50a:	4a7f      	ldr	r2, [pc, #508]	; (800a708 <HAL_DMA_IRQHandler+0xc74>)
 800a50c:	4293      	cmp	r3, r2
 800a50e:	d04a      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a510:	687b      	ldr	r3, [r7, #4]
 800a512:	681b      	ldr	r3, [r3, #0]
 800a514:	4a7d      	ldr	r2, [pc, #500]	; (800a70c <HAL_DMA_IRQHandler+0xc78>)
 800a516:	4293      	cmp	r3, r2
 800a518:	d045      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a51a:	687b      	ldr	r3, [r7, #4]
 800a51c:	681b      	ldr	r3, [r3, #0]
 800a51e:	4a7c      	ldr	r2, [pc, #496]	; (800a710 <HAL_DMA_IRQHandler+0xc7c>)
 800a520:	4293      	cmp	r3, r2
 800a522:	d040      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a524:	687b      	ldr	r3, [r7, #4]
 800a526:	681b      	ldr	r3, [r3, #0]
 800a528:	4a7a      	ldr	r2, [pc, #488]	; (800a714 <HAL_DMA_IRQHandler+0xc80>)
 800a52a:	4293      	cmp	r3, r2
 800a52c:	d03b      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a52e:	687b      	ldr	r3, [r7, #4]
 800a530:	681b      	ldr	r3, [r3, #0]
 800a532:	4a79      	ldr	r2, [pc, #484]	; (800a718 <HAL_DMA_IRQHandler+0xc84>)
 800a534:	4293      	cmp	r3, r2
 800a536:	d036      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a538:	687b      	ldr	r3, [r7, #4]
 800a53a:	681b      	ldr	r3, [r3, #0]
 800a53c:	4a77      	ldr	r2, [pc, #476]	; (800a71c <HAL_DMA_IRQHandler+0xc88>)
 800a53e:	4293      	cmp	r3, r2
 800a540:	d031      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a542:	687b      	ldr	r3, [r7, #4]
 800a544:	681b      	ldr	r3, [r3, #0]
 800a546:	4a76      	ldr	r2, [pc, #472]	; (800a720 <HAL_DMA_IRQHandler+0xc8c>)
 800a548:	4293      	cmp	r3, r2
 800a54a:	d02c      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a54c:	687b      	ldr	r3, [r7, #4]
 800a54e:	681b      	ldr	r3, [r3, #0]
 800a550:	4a74      	ldr	r2, [pc, #464]	; (800a724 <HAL_DMA_IRQHandler+0xc90>)
 800a552:	4293      	cmp	r3, r2
 800a554:	d027      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a556:	687b      	ldr	r3, [r7, #4]
 800a558:	681b      	ldr	r3, [r3, #0]
 800a55a:	4a73      	ldr	r2, [pc, #460]	; (800a728 <HAL_DMA_IRQHandler+0xc94>)
 800a55c:	4293      	cmp	r3, r2
 800a55e:	d022      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a560:	687b      	ldr	r3, [r7, #4]
 800a562:	681b      	ldr	r3, [r3, #0]
 800a564:	4a71      	ldr	r2, [pc, #452]	; (800a72c <HAL_DMA_IRQHandler+0xc98>)
 800a566:	4293      	cmp	r3, r2
 800a568:	d01d      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a56a:	687b      	ldr	r3, [r7, #4]
 800a56c:	681b      	ldr	r3, [r3, #0]
 800a56e:	4a70      	ldr	r2, [pc, #448]	; (800a730 <HAL_DMA_IRQHandler+0xc9c>)
 800a570:	4293      	cmp	r3, r2
 800a572:	d018      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a574:	687b      	ldr	r3, [r7, #4]
 800a576:	681b      	ldr	r3, [r3, #0]
 800a578:	4a6e      	ldr	r2, [pc, #440]	; (800a734 <HAL_DMA_IRQHandler+0xca0>)
 800a57a:	4293      	cmp	r3, r2
 800a57c:	d013      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a57e:	687b      	ldr	r3, [r7, #4]
 800a580:	681b      	ldr	r3, [r3, #0]
 800a582:	4a6d      	ldr	r2, [pc, #436]	; (800a738 <HAL_DMA_IRQHandler+0xca4>)
 800a584:	4293      	cmp	r3, r2
 800a586:	d00e      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a588:	687b      	ldr	r3, [r7, #4]
 800a58a:	681b      	ldr	r3, [r3, #0]
 800a58c:	4a6b      	ldr	r2, [pc, #428]	; (800a73c <HAL_DMA_IRQHandler+0xca8>)
 800a58e:	4293      	cmp	r3, r2
 800a590:	d009      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	681b      	ldr	r3, [r3, #0]
 800a596:	4a6a      	ldr	r2, [pc, #424]	; (800a740 <HAL_DMA_IRQHandler+0xcac>)
 800a598:	4293      	cmp	r3, r2
 800a59a:	d004      	beq.n	800a5a6 <HAL_DMA_IRQHandler+0xb12>
 800a59c:	687b      	ldr	r3, [r7, #4]
 800a59e:	681b      	ldr	r3, [r3, #0]
 800a5a0:	4a68      	ldr	r2, [pc, #416]	; (800a744 <HAL_DMA_IRQHandler+0xcb0>)
 800a5a2:	4293      	cmp	r3, r2
 800a5a4:	d108      	bne.n	800a5b8 <HAL_DMA_IRQHandler+0xb24>
 800a5a6:	687b      	ldr	r3, [r7, #4]
 800a5a8:	681b      	ldr	r3, [r3, #0]
 800a5aa:	681a      	ldr	r2, [r3, #0]
 800a5ac:	687b      	ldr	r3, [r7, #4]
 800a5ae:	681b      	ldr	r3, [r3, #0]
 800a5b0:	f022 0208 	bic.w	r2, r2, #8
 800a5b4:	601a      	str	r2, [r3, #0]
 800a5b6:	e007      	b.n	800a5c8 <HAL_DMA_IRQHandler+0xb34>
 800a5b8:	687b      	ldr	r3, [r7, #4]
 800a5ba:	681b      	ldr	r3, [r3, #0]
 800a5bc:	681a      	ldr	r2, [r3, #0]
 800a5be:	687b      	ldr	r3, [r7, #4]
 800a5c0:	681b      	ldr	r3, [r3, #0]
 800a5c2:	f022 0204 	bic.w	r2, r2, #4
 800a5c6:	601a      	str	r2, [r3, #0]
 800a5c8:	687b      	ldr	r3, [r7, #4]
 800a5ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a5cc:	2b00      	cmp	r3, #0
 800a5ce:	f000 8165 	beq.w	800a89c <HAL_DMA_IRQHandler+0xe08>
 800a5d2:	687b      	ldr	r3, [r7, #4]
 800a5d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a5d6:	6878      	ldr	r0, [r7, #4]
 800a5d8:	4798      	blx	r3
 800a5da:	e15f      	b.n	800a89c <HAL_DMA_IRQHandler+0xe08>
 800a5dc:	687b      	ldr	r3, [r7, #4]
 800a5de:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a5e0:	f003 031f 	and.w	r3, r3, #31
 800a5e4:	2202      	movs	r2, #2
 800a5e6:	409a      	lsls	r2, r3
 800a5e8:	697b      	ldr	r3, [r7, #20]
 800a5ea:	4013      	ands	r3, r2
 800a5ec:	2b00      	cmp	r3, #0
 800a5ee:	f000 80c5 	beq.w	800a77c <HAL_DMA_IRQHandler+0xce8>
 800a5f2:	693b      	ldr	r3, [r7, #16]
 800a5f4:	f003 0302 	and.w	r3, r3, #2
 800a5f8:	2b00      	cmp	r3, #0
 800a5fa:	f000 80bf 	beq.w	800a77c <HAL_DMA_IRQHandler+0xce8>
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a602:	f003 031f 	and.w	r3, r3, #31
 800a606:	2202      	movs	r2, #2
 800a608:	409a      	lsls	r2, r3
 800a60a:	69fb      	ldr	r3, [r7, #28]
 800a60c:	605a      	str	r2, [r3, #4]
 800a60e:	693b      	ldr	r3, [r7, #16]
 800a610:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800a614:	2b00      	cmp	r3, #0
 800a616:	d018      	beq.n	800a64a <HAL_DMA_IRQHandler+0xbb6>
 800a618:	693b      	ldr	r3, [r7, #16]
 800a61a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800a61e:	2b00      	cmp	r3, #0
 800a620:	d109      	bne.n	800a636 <HAL_DMA_IRQHandler+0xba2>
 800a622:	687b      	ldr	r3, [r7, #4]
 800a624:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a626:	2b00      	cmp	r3, #0
 800a628:	f000 813a 	beq.w	800a8a0 <HAL_DMA_IRQHandler+0xe0c>
 800a62c:	687b      	ldr	r3, [r7, #4]
 800a62e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a630:	6878      	ldr	r0, [r7, #4]
 800a632:	4798      	blx	r3
 800a634:	e134      	b.n	800a8a0 <HAL_DMA_IRQHandler+0xe0c>
 800a636:	687b      	ldr	r3, [r7, #4]
 800a638:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a63a:	2b00      	cmp	r3, #0
 800a63c:	f000 8130 	beq.w	800a8a0 <HAL_DMA_IRQHandler+0xe0c>
 800a640:	687b      	ldr	r3, [r7, #4]
 800a642:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a644:	6878      	ldr	r0, [r7, #4]
 800a646:	4798      	blx	r3
 800a648:	e12a      	b.n	800a8a0 <HAL_DMA_IRQHandler+0xe0c>
 800a64a:	693b      	ldr	r3, [r7, #16]
 800a64c:	f003 0320 	and.w	r3, r3, #32
 800a650:	2b00      	cmp	r3, #0
 800a652:	f040 8089 	bne.w	800a768 <HAL_DMA_IRQHandler+0xcd4>
 800a656:	687b      	ldr	r3, [r7, #4]
 800a658:	681b      	ldr	r3, [r3, #0]
 800a65a:	4a2b      	ldr	r2, [pc, #172]	; (800a708 <HAL_DMA_IRQHandler+0xc74>)
 800a65c:	4293      	cmp	r3, r2
 800a65e:	d04a      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a660:	687b      	ldr	r3, [r7, #4]
 800a662:	681b      	ldr	r3, [r3, #0]
 800a664:	4a29      	ldr	r2, [pc, #164]	; (800a70c <HAL_DMA_IRQHandler+0xc78>)
 800a666:	4293      	cmp	r3, r2
 800a668:	d045      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a66a:	687b      	ldr	r3, [r7, #4]
 800a66c:	681b      	ldr	r3, [r3, #0]
 800a66e:	4a28      	ldr	r2, [pc, #160]	; (800a710 <HAL_DMA_IRQHandler+0xc7c>)
 800a670:	4293      	cmp	r3, r2
 800a672:	d040      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a674:	687b      	ldr	r3, [r7, #4]
 800a676:	681b      	ldr	r3, [r3, #0]
 800a678:	4a26      	ldr	r2, [pc, #152]	; (800a714 <HAL_DMA_IRQHandler+0xc80>)
 800a67a:	4293      	cmp	r3, r2
 800a67c:	d03b      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	681b      	ldr	r3, [r3, #0]
 800a682:	4a25      	ldr	r2, [pc, #148]	; (800a718 <HAL_DMA_IRQHandler+0xc84>)
 800a684:	4293      	cmp	r3, r2
 800a686:	d036      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a688:	687b      	ldr	r3, [r7, #4]
 800a68a:	681b      	ldr	r3, [r3, #0]
 800a68c:	4a23      	ldr	r2, [pc, #140]	; (800a71c <HAL_DMA_IRQHandler+0xc88>)
 800a68e:	4293      	cmp	r3, r2
 800a690:	d031      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a692:	687b      	ldr	r3, [r7, #4]
 800a694:	681b      	ldr	r3, [r3, #0]
 800a696:	4a22      	ldr	r2, [pc, #136]	; (800a720 <HAL_DMA_IRQHandler+0xc8c>)
 800a698:	4293      	cmp	r3, r2
 800a69a:	d02c      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a69c:	687b      	ldr	r3, [r7, #4]
 800a69e:	681b      	ldr	r3, [r3, #0]
 800a6a0:	4a20      	ldr	r2, [pc, #128]	; (800a724 <HAL_DMA_IRQHandler+0xc90>)
 800a6a2:	4293      	cmp	r3, r2
 800a6a4:	d027      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a6a6:	687b      	ldr	r3, [r7, #4]
 800a6a8:	681b      	ldr	r3, [r3, #0]
 800a6aa:	4a1f      	ldr	r2, [pc, #124]	; (800a728 <HAL_DMA_IRQHandler+0xc94>)
 800a6ac:	4293      	cmp	r3, r2
 800a6ae:	d022      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a6b0:	687b      	ldr	r3, [r7, #4]
 800a6b2:	681b      	ldr	r3, [r3, #0]
 800a6b4:	4a1d      	ldr	r2, [pc, #116]	; (800a72c <HAL_DMA_IRQHandler+0xc98>)
 800a6b6:	4293      	cmp	r3, r2
 800a6b8:	d01d      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a6ba:	687b      	ldr	r3, [r7, #4]
 800a6bc:	681b      	ldr	r3, [r3, #0]
 800a6be:	4a1c      	ldr	r2, [pc, #112]	; (800a730 <HAL_DMA_IRQHandler+0xc9c>)
 800a6c0:	4293      	cmp	r3, r2
 800a6c2:	d018      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a6c4:	687b      	ldr	r3, [r7, #4]
 800a6c6:	681b      	ldr	r3, [r3, #0]
 800a6c8:	4a1a      	ldr	r2, [pc, #104]	; (800a734 <HAL_DMA_IRQHandler+0xca0>)
 800a6ca:	4293      	cmp	r3, r2
 800a6cc:	d013      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a6ce:	687b      	ldr	r3, [r7, #4]
 800a6d0:	681b      	ldr	r3, [r3, #0]
 800a6d2:	4a19      	ldr	r2, [pc, #100]	; (800a738 <HAL_DMA_IRQHandler+0xca4>)
 800a6d4:	4293      	cmp	r3, r2
 800a6d6:	d00e      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a6d8:	687b      	ldr	r3, [r7, #4]
 800a6da:	681b      	ldr	r3, [r3, #0]
 800a6dc:	4a17      	ldr	r2, [pc, #92]	; (800a73c <HAL_DMA_IRQHandler+0xca8>)
 800a6de:	4293      	cmp	r3, r2
 800a6e0:	d009      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a6e2:	687b      	ldr	r3, [r7, #4]
 800a6e4:	681b      	ldr	r3, [r3, #0]
 800a6e6:	4a16      	ldr	r2, [pc, #88]	; (800a740 <HAL_DMA_IRQHandler+0xcac>)
 800a6e8:	4293      	cmp	r3, r2
 800a6ea:	d004      	beq.n	800a6f6 <HAL_DMA_IRQHandler+0xc62>
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	681b      	ldr	r3, [r3, #0]
 800a6f0:	4a14      	ldr	r2, [pc, #80]	; (800a744 <HAL_DMA_IRQHandler+0xcb0>)
 800a6f2:	4293      	cmp	r3, r2
 800a6f4:	d128      	bne.n	800a748 <HAL_DMA_IRQHandler+0xcb4>
 800a6f6:	687b      	ldr	r3, [r7, #4]
 800a6f8:	681b      	ldr	r3, [r3, #0]
 800a6fa:	681a      	ldr	r2, [r3, #0]
 800a6fc:	687b      	ldr	r3, [r7, #4]
 800a6fe:	681b      	ldr	r3, [r3, #0]
 800a700:	f022 0214 	bic.w	r2, r2, #20
 800a704:	601a      	str	r2, [r3, #0]
 800a706:	e027      	b.n	800a758 <HAL_DMA_IRQHandler+0xcc4>
 800a708:	40020010 	.word	0x40020010
 800a70c:	40020028 	.word	0x40020028
 800a710:	40020040 	.word	0x40020040
 800a714:	40020058 	.word	0x40020058
 800a718:	40020070 	.word	0x40020070
 800a71c:	40020088 	.word	0x40020088
 800a720:	400200a0 	.word	0x400200a0
 800a724:	400200b8 	.word	0x400200b8
 800a728:	40020410 	.word	0x40020410
 800a72c:	40020428 	.word	0x40020428
 800a730:	40020440 	.word	0x40020440
 800a734:	40020458 	.word	0x40020458
 800a738:	40020470 	.word	0x40020470
 800a73c:	40020488 	.word	0x40020488
 800a740:	400204a0 	.word	0x400204a0
 800a744:	400204b8 	.word	0x400204b8
 800a748:	687b      	ldr	r3, [r7, #4]
 800a74a:	681b      	ldr	r3, [r3, #0]
 800a74c:	681a      	ldr	r2, [r3, #0]
 800a74e:	687b      	ldr	r3, [r7, #4]
 800a750:	681b      	ldr	r3, [r3, #0]
 800a752:	f022 020a 	bic.w	r2, r2, #10
 800a756:	601a      	str	r2, [r3, #0]
 800a758:	687b      	ldr	r3, [r7, #4]
 800a75a:	2201      	movs	r2, #1
 800a75c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800a760:	687b      	ldr	r3, [r7, #4]
 800a762:	2200      	movs	r2, #0
 800a764:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800a768:	687b      	ldr	r3, [r7, #4]
 800a76a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a76c:	2b00      	cmp	r3, #0
 800a76e:	f000 8097 	beq.w	800a8a0 <HAL_DMA_IRQHandler+0xe0c>
 800a772:	687b      	ldr	r3, [r7, #4]
 800a774:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a776:	6878      	ldr	r0, [r7, #4]
 800a778:	4798      	blx	r3
 800a77a:	e091      	b.n	800a8a0 <HAL_DMA_IRQHandler+0xe0c>
 800a77c:	687b      	ldr	r3, [r7, #4]
 800a77e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a780:	f003 031f 	and.w	r3, r3, #31
 800a784:	2208      	movs	r2, #8
 800a786:	409a      	lsls	r2, r3
 800a788:	697b      	ldr	r3, [r7, #20]
 800a78a:	4013      	ands	r3, r2
 800a78c:	2b00      	cmp	r3, #0
 800a78e:	f000 8088 	beq.w	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a792:	693b      	ldr	r3, [r7, #16]
 800a794:	f003 0308 	and.w	r3, r3, #8
 800a798:	2b00      	cmp	r3, #0
 800a79a:	f000 8082 	beq.w	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a79e:	687b      	ldr	r3, [r7, #4]
 800a7a0:	681b      	ldr	r3, [r3, #0]
 800a7a2:	4a41      	ldr	r2, [pc, #260]	; (800a8a8 <HAL_DMA_IRQHandler+0xe14>)
 800a7a4:	4293      	cmp	r3, r2
 800a7a6:	d04a      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a7a8:	687b      	ldr	r3, [r7, #4]
 800a7aa:	681b      	ldr	r3, [r3, #0]
 800a7ac:	4a3f      	ldr	r2, [pc, #252]	; (800a8ac <HAL_DMA_IRQHandler+0xe18>)
 800a7ae:	4293      	cmp	r3, r2
 800a7b0:	d045      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a7b2:	687b      	ldr	r3, [r7, #4]
 800a7b4:	681b      	ldr	r3, [r3, #0]
 800a7b6:	4a3e      	ldr	r2, [pc, #248]	; (800a8b0 <HAL_DMA_IRQHandler+0xe1c>)
 800a7b8:	4293      	cmp	r3, r2
 800a7ba:	d040      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	681b      	ldr	r3, [r3, #0]
 800a7c0:	4a3c      	ldr	r2, [pc, #240]	; (800a8b4 <HAL_DMA_IRQHandler+0xe20>)
 800a7c2:	4293      	cmp	r3, r2
 800a7c4:	d03b      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a7c6:	687b      	ldr	r3, [r7, #4]
 800a7c8:	681b      	ldr	r3, [r3, #0]
 800a7ca:	4a3b      	ldr	r2, [pc, #236]	; (800a8b8 <HAL_DMA_IRQHandler+0xe24>)
 800a7cc:	4293      	cmp	r3, r2
 800a7ce:	d036      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a7d0:	687b      	ldr	r3, [r7, #4]
 800a7d2:	681b      	ldr	r3, [r3, #0]
 800a7d4:	4a39      	ldr	r2, [pc, #228]	; (800a8bc <HAL_DMA_IRQHandler+0xe28>)
 800a7d6:	4293      	cmp	r3, r2
 800a7d8:	d031      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	681b      	ldr	r3, [r3, #0]
 800a7de:	4a38      	ldr	r2, [pc, #224]	; (800a8c0 <HAL_DMA_IRQHandler+0xe2c>)
 800a7e0:	4293      	cmp	r3, r2
 800a7e2:	d02c      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a7e4:	687b      	ldr	r3, [r7, #4]
 800a7e6:	681b      	ldr	r3, [r3, #0]
 800a7e8:	4a36      	ldr	r2, [pc, #216]	; (800a8c4 <HAL_DMA_IRQHandler+0xe30>)
 800a7ea:	4293      	cmp	r3, r2
 800a7ec:	d027      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a7ee:	687b      	ldr	r3, [r7, #4]
 800a7f0:	681b      	ldr	r3, [r3, #0]
 800a7f2:	4a35      	ldr	r2, [pc, #212]	; (800a8c8 <HAL_DMA_IRQHandler+0xe34>)
 800a7f4:	4293      	cmp	r3, r2
 800a7f6:	d022      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	681b      	ldr	r3, [r3, #0]
 800a7fc:	4a33      	ldr	r2, [pc, #204]	; (800a8cc <HAL_DMA_IRQHandler+0xe38>)
 800a7fe:	4293      	cmp	r3, r2
 800a800:	d01d      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a802:	687b      	ldr	r3, [r7, #4]
 800a804:	681b      	ldr	r3, [r3, #0]
 800a806:	4a32      	ldr	r2, [pc, #200]	; (800a8d0 <HAL_DMA_IRQHandler+0xe3c>)
 800a808:	4293      	cmp	r3, r2
 800a80a:	d018      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a80c:	687b      	ldr	r3, [r7, #4]
 800a80e:	681b      	ldr	r3, [r3, #0]
 800a810:	4a30      	ldr	r2, [pc, #192]	; (800a8d4 <HAL_DMA_IRQHandler+0xe40>)
 800a812:	4293      	cmp	r3, r2
 800a814:	d013      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a816:	687b      	ldr	r3, [r7, #4]
 800a818:	681b      	ldr	r3, [r3, #0]
 800a81a:	4a2f      	ldr	r2, [pc, #188]	; (800a8d8 <HAL_DMA_IRQHandler+0xe44>)
 800a81c:	4293      	cmp	r3, r2
 800a81e:	d00e      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a820:	687b      	ldr	r3, [r7, #4]
 800a822:	681b      	ldr	r3, [r3, #0]
 800a824:	4a2d      	ldr	r2, [pc, #180]	; (800a8dc <HAL_DMA_IRQHandler+0xe48>)
 800a826:	4293      	cmp	r3, r2
 800a828:	d009      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	681b      	ldr	r3, [r3, #0]
 800a82e:	4a2c      	ldr	r2, [pc, #176]	; (800a8e0 <HAL_DMA_IRQHandler+0xe4c>)
 800a830:	4293      	cmp	r3, r2
 800a832:	d004      	beq.n	800a83e <HAL_DMA_IRQHandler+0xdaa>
 800a834:	687b      	ldr	r3, [r7, #4]
 800a836:	681b      	ldr	r3, [r3, #0]
 800a838:	4a2a      	ldr	r2, [pc, #168]	; (800a8e4 <HAL_DMA_IRQHandler+0xe50>)
 800a83a:	4293      	cmp	r3, r2
 800a83c:	d108      	bne.n	800a850 <HAL_DMA_IRQHandler+0xdbc>
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	681b      	ldr	r3, [r3, #0]
 800a842:	681a      	ldr	r2, [r3, #0]
 800a844:	687b      	ldr	r3, [r7, #4]
 800a846:	681b      	ldr	r3, [r3, #0]
 800a848:	f022 021c 	bic.w	r2, r2, #28
 800a84c:	601a      	str	r2, [r3, #0]
 800a84e:	e007      	b.n	800a860 <HAL_DMA_IRQHandler+0xdcc>
 800a850:	687b      	ldr	r3, [r7, #4]
 800a852:	681b      	ldr	r3, [r3, #0]
 800a854:	681a      	ldr	r2, [r3, #0]
 800a856:	687b      	ldr	r3, [r7, #4]
 800a858:	681b      	ldr	r3, [r3, #0]
 800a85a:	f022 020e 	bic.w	r2, r2, #14
 800a85e:	601a      	str	r2, [r3, #0]
 800a860:	687b      	ldr	r3, [r7, #4]
 800a862:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a864:	f003 031f 	and.w	r3, r3, #31
 800a868:	2201      	movs	r2, #1
 800a86a:	409a      	lsls	r2, r3
 800a86c:	69fb      	ldr	r3, [r7, #28]
 800a86e:	605a      	str	r2, [r3, #4]
 800a870:	687b      	ldr	r3, [r7, #4]
 800a872:	2201      	movs	r2, #1
 800a874:	655a      	str	r2, [r3, #84]	; 0x54
 800a876:	687b      	ldr	r3, [r7, #4]
 800a878:	2201      	movs	r2, #1
 800a87a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800a87e:	687b      	ldr	r3, [r7, #4]
 800a880:	2200      	movs	r2, #0
 800a882:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800a886:	687b      	ldr	r3, [r7, #4]
 800a888:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a88a:	2b00      	cmp	r3, #0
 800a88c:	d009      	beq.n	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a88e:	687b      	ldr	r3, [r7, #4]
 800a890:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a892:	6878      	ldr	r0, [r7, #4]
 800a894:	4798      	blx	r3
 800a896:	e004      	b.n	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a898:	bf00      	nop
 800a89a:	e002      	b.n	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a89c:	bf00      	nop
 800a89e:	e000      	b.n	800a8a2 <HAL_DMA_IRQHandler+0xe0e>
 800a8a0:	bf00      	nop
 800a8a2:	3728      	adds	r7, #40	; 0x28
 800a8a4:	46bd      	mov	sp, r7
 800a8a6:	bd80      	pop	{r7, pc}
 800a8a8:	40020010 	.word	0x40020010
 800a8ac:	40020028 	.word	0x40020028
 800a8b0:	40020040 	.word	0x40020040
 800a8b4:	40020058 	.word	0x40020058
 800a8b8:	40020070 	.word	0x40020070
 800a8bc:	40020088 	.word	0x40020088
 800a8c0:	400200a0 	.word	0x400200a0
 800a8c4:	400200b8 	.word	0x400200b8
 800a8c8:	40020410 	.word	0x40020410
 800a8cc:	40020428 	.word	0x40020428
 800a8d0:	40020440 	.word	0x40020440
 800a8d4:	40020458 	.word	0x40020458
 800a8d8:	40020470 	.word	0x40020470
 800a8dc:	40020488 	.word	0x40020488
 800a8e0:	400204a0 	.word	0x400204a0
 800a8e4:	400204b8 	.word	0x400204b8

0800a8e8 <HAL_DMA_GetState>:
 800a8e8:	b480      	push	{r7}
 800a8ea:	b083      	sub	sp, #12
 800a8ec:	af00      	add	r7, sp, #0
 800a8ee:	6078      	str	r0, [r7, #4]
 800a8f0:	687b      	ldr	r3, [r7, #4]
 800a8f2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800a8f6:	b2db      	uxtb	r3, r3
 800a8f8:	4618      	mov	r0, r3
 800a8fa:	370c      	adds	r7, #12
 800a8fc:	46bd      	mov	sp, r7
 800a8fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a902:	4770      	bx	lr

0800a904 <HAL_DMA_GetError>:
 800a904:	b480      	push	{r7}
 800a906:	b083      	sub	sp, #12
 800a908:	af00      	add	r7, sp, #0
 800a90a:	6078      	str	r0, [r7, #4]
 800a90c:	687b      	ldr	r3, [r7, #4]
 800a90e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a910:	4618      	mov	r0, r3
 800a912:	370c      	adds	r7, #12
 800a914:	46bd      	mov	sp, r7
 800a916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a91a:	4770      	bx	lr

0800a91c <DMA_SetConfig>:
 800a91c:	b480      	push	{r7}
 800a91e:	b087      	sub	sp, #28
 800a920:	af00      	add	r7, sp, #0
 800a922:	60f8      	str	r0, [r7, #12]
 800a924:	60b9      	str	r1, [r7, #8]
 800a926:	607a      	str	r2, [r7, #4]
 800a928:	603b      	str	r3, [r7, #0]
 800a92a:	68fb      	ldr	r3, [r7, #12]
 800a92c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a92e:	617b      	str	r3, [r7, #20]
 800a930:	68fb      	ldr	r3, [r7, #12]
 800a932:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a934:	613b      	str	r3, [r7, #16]
 800a936:	68fb      	ldr	r3, [r7, #12]
 800a938:	681b      	ldr	r3, [r3, #0]
 800a93a:	4a7f      	ldr	r2, [pc, #508]	; (800ab38 <DMA_SetConfig+0x21c>)
 800a93c:	4293      	cmp	r3, r2
 800a93e:	d072      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a940:	68fb      	ldr	r3, [r7, #12]
 800a942:	681b      	ldr	r3, [r3, #0]
 800a944:	4a7d      	ldr	r2, [pc, #500]	; (800ab3c <DMA_SetConfig+0x220>)
 800a946:	4293      	cmp	r3, r2
 800a948:	d06d      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a94a:	68fb      	ldr	r3, [r7, #12]
 800a94c:	681b      	ldr	r3, [r3, #0]
 800a94e:	4a7c      	ldr	r2, [pc, #496]	; (800ab40 <DMA_SetConfig+0x224>)
 800a950:	4293      	cmp	r3, r2
 800a952:	d068      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a954:	68fb      	ldr	r3, [r7, #12]
 800a956:	681b      	ldr	r3, [r3, #0]
 800a958:	4a7a      	ldr	r2, [pc, #488]	; (800ab44 <DMA_SetConfig+0x228>)
 800a95a:	4293      	cmp	r3, r2
 800a95c:	d063      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a95e:	68fb      	ldr	r3, [r7, #12]
 800a960:	681b      	ldr	r3, [r3, #0]
 800a962:	4a79      	ldr	r2, [pc, #484]	; (800ab48 <DMA_SetConfig+0x22c>)
 800a964:	4293      	cmp	r3, r2
 800a966:	d05e      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a968:	68fb      	ldr	r3, [r7, #12]
 800a96a:	681b      	ldr	r3, [r3, #0]
 800a96c:	4a77      	ldr	r2, [pc, #476]	; (800ab4c <DMA_SetConfig+0x230>)
 800a96e:	4293      	cmp	r3, r2
 800a970:	d059      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a972:	68fb      	ldr	r3, [r7, #12]
 800a974:	681b      	ldr	r3, [r3, #0]
 800a976:	4a76      	ldr	r2, [pc, #472]	; (800ab50 <DMA_SetConfig+0x234>)
 800a978:	4293      	cmp	r3, r2
 800a97a:	d054      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a97c:	68fb      	ldr	r3, [r7, #12]
 800a97e:	681b      	ldr	r3, [r3, #0]
 800a980:	4a74      	ldr	r2, [pc, #464]	; (800ab54 <DMA_SetConfig+0x238>)
 800a982:	4293      	cmp	r3, r2
 800a984:	d04f      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a986:	68fb      	ldr	r3, [r7, #12]
 800a988:	681b      	ldr	r3, [r3, #0]
 800a98a:	4a73      	ldr	r2, [pc, #460]	; (800ab58 <DMA_SetConfig+0x23c>)
 800a98c:	4293      	cmp	r3, r2
 800a98e:	d04a      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a990:	68fb      	ldr	r3, [r7, #12]
 800a992:	681b      	ldr	r3, [r3, #0]
 800a994:	4a71      	ldr	r2, [pc, #452]	; (800ab5c <DMA_SetConfig+0x240>)
 800a996:	4293      	cmp	r3, r2
 800a998:	d045      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a99a:	68fb      	ldr	r3, [r7, #12]
 800a99c:	681b      	ldr	r3, [r3, #0]
 800a99e:	4a70      	ldr	r2, [pc, #448]	; (800ab60 <DMA_SetConfig+0x244>)
 800a9a0:	4293      	cmp	r3, r2
 800a9a2:	d040      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9a4:	68fb      	ldr	r3, [r7, #12]
 800a9a6:	681b      	ldr	r3, [r3, #0]
 800a9a8:	4a6e      	ldr	r2, [pc, #440]	; (800ab64 <DMA_SetConfig+0x248>)
 800a9aa:	4293      	cmp	r3, r2
 800a9ac:	d03b      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9ae:	68fb      	ldr	r3, [r7, #12]
 800a9b0:	681b      	ldr	r3, [r3, #0]
 800a9b2:	4a6d      	ldr	r2, [pc, #436]	; (800ab68 <DMA_SetConfig+0x24c>)
 800a9b4:	4293      	cmp	r3, r2
 800a9b6:	d036      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9b8:	68fb      	ldr	r3, [r7, #12]
 800a9ba:	681b      	ldr	r3, [r3, #0]
 800a9bc:	4a6b      	ldr	r2, [pc, #428]	; (800ab6c <DMA_SetConfig+0x250>)
 800a9be:	4293      	cmp	r3, r2
 800a9c0:	d031      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9c2:	68fb      	ldr	r3, [r7, #12]
 800a9c4:	681b      	ldr	r3, [r3, #0]
 800a9c6:	4a6a      	ldr	r2, [pc, #424]	; (800ab70 <DMA_SetConfig+0x254>)
 800a9c8:	4293      	cmp	r3, r2
 800a9ca:	d02c      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9cc:	68fb      	ldr	r3, [r7, #12]
 800a9ce:	681b      	ldr	r3, [r3, #0]
 800a9d0:	4a68      	ldr	r2, [pc, #416]	; (800ab74 <DMA_SetConfig+0x258>)
 800a9d2:	4293      	cmp	r3, r2
 800a9d4:	d027      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9d6:	68fb      	ldr	r3, [r7, #12]
 800a9d8:	681b      	ldr	r3, [r3, #0]
 800a9da:	4a67      	ldr	r2, [pc, #412]	; (800ab78 <DMA_SetConfig+0x25c>)
 800a9dc:	4293      	cmp	r3, r2
 800a9de:	d022      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9e0:	68fb      	ldr	r3, [r7, #12]
 800a9e2:	681b      	ldr	r3, [r3, #0]
 800a9e4:	4a65      	ldr	r2, [pc, #404]	; (800ab7c <DMA_SetConfig+0x260>)
 800a9e6:	4293      	cmp	r3, r2
 800a9e8:	d01d      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9ea:	68fb      	ldr	r3, [r7, #12]
 800a9ec:	681b      	ldr	r3, [r3, #0]
 800a9ee:	4a64      	ldr	r2, [pc, #400]	; (800ab80 <DMA_SetConfig+0x264>)
 800a9f0:	4293      	cmp	r3, r2
 800a9f2:	d018      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9f4:	68fb      	ldr	r3, [r7, #12]
 800a9f6:	681b      	ldr	r3, [r3, #0]
 800a9f8:	4a62      	ldr	r2, [pc, #392]	; (800ab84 <DMA_SetConfig+0x268>)
 800a9fa:	4293      	cmp	r3, r2
 800a9fc:	d013      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800a9fe:	68fb      	ldr	r3, [r7, #12]
 800aa00:	681b      	ldr	r3, [r3, #0]
 800aa02:	4a61      	ldr	r2, [pc, #388]	; (800ab88 <DMA_SetConfig+0x26c>)
 800aa04:	4293      	cmp	r3, r2
 800aa06:	d00e      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800aa08:	68fb      	ldr	r3, [r7, #12]
 800aa0a:	681b      	ldr	r3, [r3, #0]
 800aa0c:	4a5f      	ldr	r2, [pc, #380]	; (800ab8c <DMA_SetConfig+0x270>)
 800aa0e:	4293      	cmp	r3, r2
 800aa10:	d009      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800aa12:	68fb      	ldr	r3, [r7, #12]
 800aa14:	681b      	ldr	r3, [r3, #0]
 800aa16:	4a5e      	ldr	r2, [pc, #376]	; (800ab90 <DMA_SetConfig+0x274>)
 800aa18:	4293      	cmp	r3, r2
 800aa1a:	d004      	beq.n	800aa26 <DMA_SetConfig+0x10a>
 800aa1c:	68fb      	ldr	r3, [r7, #12]
 800aa1e:	681b      	ldr	r3, [r3, #0]
 800aa20:	4a5c      	ldr	r2, [pc, #368]	; (800ab94 <DMA_SetConfig+0x278>)
 800aa22:	4293      	cmp	r3, r2
 800aa24:	d101      	bne.n	800aa2a <DMA_SetConfig+0x10e>
 800aa26:	2301      	movs	r3, #1
 800aa28:	e000      	b.n	800aa2c <DMA_SetConfig+0x110>
 800aa2a:	2300      	movs	r3, #0
 800aa2c:	2b00      	cmp	r3, #0
 800aa2e:	d00d      	beq.n	800aa4c <DMA_SetConfig+0x130>
 800aa30:	68fb      	ldr	r3, [r7, #12]
 800aa32:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800aa34:	68fa      	ldr	r2, [r7, #12]
 800aa36:	6e92      	ldr	r2, [r2, #104]	; 0x68
 800aa38:	605a      	str	r2, [r3, #4]
 800aa3a:	68fb      	ldr	r3, [r7, #12]
 800aa3c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800aa3e:	2b00      	cmp	r3, #0
 800aa40:	d004      	beq.n	800aa4c <DMA_SetConfig+0x130>
 800aa42:	68fb      	ldr	r3, [r7, #12]
 800aa44:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800aa46:	68fa      	ldr	r2, [r7, #12]
 800aa48:	6f52      	ldr	r2, [r2, #116]	; 0x74
 800aa4a:	605a      	str	r2, [r3, #4]
 800aa4c:	68fb      	ldr	r3, [r7, #12]
 800aa4e:	681b      	ldr	r3, [r3, #0]
 800aa50:	4a39      	ldr	r2, [pc, #228]	; (800ab38 <DMA_SetConfig+0x21c>)
 800aa52:	4293      	cmp	r3, r2
 800aa54:	d04a      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aa56:	68fb      	ldr	r3, [r7, #12]
 800aa58:	681b      	ldr	r3, [r3, #0]
 800aa5a:	4a38      	ldr	r2, [pc, #224]	; (800ab3c <DMA_SetConfig+0x220>)
 800aa5c:	4293      	cmp	r3, r2
 800aa5e:	d045      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aa60:	68fb      	ldr	r3, [r7, #12]
 800aa62:	681b      	ldr	r3, [r3, #0]
 800aa64:	4a36      	ldr	r2, [pc, #216]	; (800ab40 <DMA_SetConfig+0x224>)
 800aa66:	4293      	cmp	r3, r2
 800aa68:	d040      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aa6a:	68fb      	ldr	r3, [r7, #12]
 800aa6c:	681b      	ldr	r3, [r3, #0]
 800aa6e:	4a35      	ldr	r2, [pc, #212]	; (800ab44 <DMA_SetConfig+0x228>)
 800aa70:	4293      	cmp	r3, r2
 800aa72:	d03b      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aa74:	68fb      	ldr	r3, [r7, #12]
 800aa76:	681b      	ldr	r3, [r3, #0]
 800aa78:	4a33      	ldr	r2, [pc, #204]	; (800ab48 <DMA_SetConfig+0x22c>)
 800aa7a:	4293      	cmp	r3, r2
 800aa7c:	d036      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aa7e:	68fb      	ldr	r3, [r7, #12]
 800aa80:	681b      	ldr	r3, [r3, #0]
 800aa82:	4a32      	ldr	r2, [pc, #200]	; (800ab4c <DMA_SetConfig+0x230>)
 800aa84:	4293      	cmp	r3, r2
 800aa86:	d031      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aa88:	68fb      	ldr	r3, [r7, #12]
 800aa8a:	681b      	ldr	r3, [r3, #0]
 800aa8c:	4a30      	ldr	r2, [pc, #192]	; (800ab50 <DMA_SetConfig+0x234>)
 800aa8e:	4293      	cmp	r3, r2
 800aa90:	d02c      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aa92:	68fb      	ldr	r3, [r7, #12]
 800aa94:	681b      	ldr	r3, [r3, #0]
 800aa96:	4a2f      	ldr	r2, [pc, #188]	; (800ab54 <DMA_SetConfig+0x238>)
 800aa98:	4293      	cmp	r3, r2
 800aa9a:	d027      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aa9c:	68fb      	ldr	r3, [r7, #12]
 800aa9e:	681b      	ldr	r3, [r3, #0]
 800aaa0:	4a2d      	ldr	r2, [pc, #180]	; (800ab58 <DMA_SetConfig+0x23c>)
 800aaa2:	4293      	cmp	r3, r2
 800aaa4:	d022      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aaa6:	68fb      	ldr	r3, [r7, #12]
 800aaa8:	681b      	ldr	r3, [r3, #0]
 800aaaa:	4a2c      	ldr	r2, [pc, #176]	; (800ab5c <DMA_SetConfig+0x240>)
 800aaac:	4293      	cmp	r3, r2
 800aaae:	d01d      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aab0:	68fb      	ldr	r3, [r7, #12]
 800aab2:	681b      	ldr	r3, [r3, #0]
 800aab4:	4a2a      	ldr	r2, [pc, #168]	; (800ab60 <DMA_SetConfig+0x244>)
 800aab6:	4293      	cmp	r3, r2
 800aab8:	d018      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aaba:	68fb      	ldr	r3, [r7, #12]
 800aabc:	681b      	ldr	r3, [r3, #0]
 800aabe:	4a29      	ldr	r2, [pc, #164]	; (800ab64 <DMA_SetConfig+0x248>)
 800aac0:	4293      	cmp	r3, r2
 800aac2:	d013      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aac4:	68fb      	ldr	r3, [r7, #12]
 800aac6:	681b      	ldr	r3, [r3, #0]
 800aac8:	4a27      	ldr	r2, [pc, #156]	; (800ab68 <DMA_SetConfig+0x24c>)
 800aaca:	4293      	cmp	r3, r2
 800aacc:	d00e      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aace:	68fb      	ldr	r3, [r7, #12]
 800aad0:	681b      	ldr	r3, [r3, #0]
 800aad2:	4a26      	ldr	r2, [pc, #152]	; (800ab6c <DMA_SetConfig+0x250>)
 800aad4:	4293      	cmp	r3, r2
 800aad6:	d009      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aad8:	68fb      	ldr	r3, [r7, #12]
 800aada:	681b      	ldr	r3, [r3, #0]
 800aadc:	4a24      	ldr	r2, [pc, #144]	; (800ab70 <DMA_SetConfig+0x254>)
 800aade:	4293      	cmp	r3, r2
 800aae0:	d004      	beq.n	800aaec <DMA_SetConfig+0x1d0>
 800aae2:	68fb      	ldr	r3, [r7, #12]
 800aae4:	681b      	ldr	r3, [r3, #0]
 800aae6:	4a23      	ldr	r2, [pc, #140]	; (800ab74 <DMA_SetConfig+0x258>)
 800aae8:	4293      	cmp	r3, r2
 800aaea:	d101      	bne.n	800aaf0 <DMA_SetConfig+0x1d4>
 800aaec:	2301      	movs	r3, #1
 800aaee:	e000      	b.n	800aaf2 <DMA_SetConfig+0x1d6>
 800aaf0:	2300      	movs	r3, #0
 800aaf2:	2b00      	cmp	r3, #0
 800aaf4:	d059      	beq.n	800abaa <DMA_SetConfig+0x28e>
 800aaf6:	68fb      	ldr	r3, [r7, #12]
 800aaf8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800aafa:	f003 031f 	and.w	r3, r3, #31
 800aafe:	223f      	movs	r2, #63	; 0x3f
 800ab00:	409a      	lsls	r2, r3
 800ab02:	697b      	ldr	r3, [r7, #20]
 800ab04:	609a      	str	r2, [r3, #8]
 800ab06:	68fb      	ldr	r3, [r7, #12]
 800ab08:	681b      	ldr	r3, [r3, #0]
 800ab0a:	681a      	ldr	r2, [r3, #0]
 800ab0c:	68fb      	ldr	r3, [r7, #12]
 800ab0e:	681b      	ldr	r3, [r3, #0]
 800ab10:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800ab14:	601a      	str	r2, [r3, #0]
 800ab16:	68fb      	ldr	r3, [r7, #12]
 800ab18:	681b      	ldr	r3, [r3, #0]
 800ab1a:	683a      	ldr	r2, [r7, #0]
 800ab1c:	605a      	str	r2, [r3, #4]
 800ab1e:	68fb      	ldr	r3, [r7, #12]
 800ab20:	689b      	ldr	r3, [r3, #8]
 800ab22:	2b40      	cmp	r3, #64	; 0x40
 800ab24:	d138      	bne.n	800ab98 <DMA_SetConfig+0x27c>
 800ab26:	68fb      	ldr	r3, [r7, #12]
 800ab28:	681b      	ldr	r3, [r3, #0]
 800ab2a:	687a      	ldr	r2, [r7, #4]
 800ab2c:	609a      	str	r2, [r3, #8]
 800ab2e:	68fb      	ldr	r3, [r7, #12]
 800ab30:	681b      	ldr	r3, [r3, #0]
 800ab32:	68ba      	ldr	r2, [r7, #8]
 800ab34:	60da      	str	r2, [r3, #12]
 800ab36:	e086      	b.n	800ac46 <DMA_SetConfig+0x32a>
 800ab38:	40020010 	.word	0x40020010
 800ab3c:	40020028 	.word	0x40020028
 800ab40:	40020040 	.word	0x40020040
 800ab44:	40020058 	.word	0x40020058
 800ab48:	40020070 	.word	0x40020070
 800ab4c:	40020088 	.word	0x40020088
 800ab50:	400200a0 	.word	0x400200a0
 800ab54:	400200b8 	.word	0x400200b8
 800ab58:	40020410 	.word	0x40020410
 800ab5c:	40020428 	.word	0x40020428
 800ab60:	40020440 	.word	0x40020440
 800ab64:	40020458 	.word	0x40020458
 800ab68:	40020470 	.word	0x40020470
 800ab6c:	40020488 	.word	0x40020488
 800ab70:	400204a0 	.word	0x400204a0
 800ab74:	400204b8 	.word	0x400204b8
 800ab78:	58025408 	.word	0x58025408
 800ab7c:	5802541c 	.word	0x5802541c
 800ab80:	58025430 	.word	0x58025430
 800ab84:	58025444 	.word	0x58025444
 800ab88:	58025458 	.word	0x58025458
 800ab8c:	5802546c 	.word	0x5802546c
 800ab90:	58025480 	.word	0x58025480
 800ab94:	58025494 	.word	0x58025494
 800ab98:	68fb      	ldr	r3, [r7, #12]
 800ab9a:	681b      	ldr	r3, [r3, #0]
 800ab9c:	68ba      	ldr	r2, [r7, #8]
 800ab9e:	609a      	str	r2, [r3, #8]
 800aba0:	68fb      	ldr	r3, [r7, #12]
 800aba2:	681b      	ldr	r3, [r3, #0]
 800aba4:	687a      	ldr	r2, [r7, #4]
 800aba6:	60da      	str	r2, [r3, #12]
 800aba8:	e04d      	b.n	800ac46 <DMA_SetConfig+0x32a>
 800abaa:	68fb      	ldr	r3, [r7, #12]
 800abac:	681b      	ldr	r3, [r3, #0]
 800abae:	4a29      	ldr	r2, [pc, #164]	; (800ac54 <DMA_SetConfig+0x338>)
 800abb0:	4293      	cmp	r3, r2
 800abb2:	d022      	beq.n	800abfa <DMA_SetConfig+0x2de>
 800abb4:	68fb      	ldr	r3, [r7, #12]
 800abb6:	681b      	ldr	r3, [r3, #0]
 800abb8:	4a27      	ldr	r2, [pc, #156]	; (800ac58 <DMA_SetConfig+0x33c>)
 800abba:	4293      	cmp	r3, r2
 800abbc:	d01d      	beq.n	800abfa <DMA_SetConfig+0x2de>
 800abbe:	68fb      	ldr	r3, [r7, #12]
 800abc0:	681b      	ldr	r3, [r3, #0]
 800abc2:	4a26      	ldr	r2, [pc, #152]	; (800ac5c <DMA_SetConfig+0x340>)
 800abc4:	4293      	cmp	r3, r2
 800abc6:	d018      	beq.n	800abfa <DMA_SetConfig+0x2de>
 800abc8:	68fb      	ldr	r3, [r7, #12]
 800abca:	681b      	ldr	r3, [r3, #0]
 800abcc:	4a24      	ldr	r2, [pc, #144]	; (800ac60 <DMA_SetConfig+0x344>)
 800abce:	4293      	cmp	r3, r2
 800abd0:	d013      	beq.n	800abfa <DMA_SetConfig+0x2de>
 800abd2:	68fb      	ldr	r3, [r7, #12]
 800abd4:	681b      	ldr	r3, [r3, #0]
 800abd6:	4a23      	ldr	r2, [pc, #140]	; (800ac64 <DMA_SetConfig+0x348>)
 800abd8:	4293      	cmp	r3, r2
 800abda:	d00e      	beq.n	800abfa <DMA_SetConfig+0x2de>
 800abdc:	68fb      	ldr	r3, [r7, #12]
 800abde:	681b      	ldr	r3, [r3, #0]
 800abe0:	4a21      	ldr	r2, [pc, #132]	; (800ac68 <DMA_SetConfig+0x34c>)
 800abe2:	4293      	cmp	r3, r2
 800abe4:	d009      	beq.n	800abfa <DMA_SetConfig+0x2de>
 800abe6:	68fb      	ldr	r3, [r7, #12]
 800abe8:	681b      	ldr	r3, [r3, #0]
 800abea:	4a20      	ldr	r2, [pc, #128]	; (800ac6c <DMA_SetConfig+0x350>)
 800abec:	4293      	cmp	r3, r2
 800abee:	d004      	beq.n	800abfa <DMA_SetConfig+0x2de>
 800abf0:	68fb      	ldr	r3, [r7, #12]
 800abf2:	681b      	ldr	r3, [r3, #0]
 800abf4:	4a1e      	ldr	r2, [pc, #120]	; (800ac70 <DMA_SetConfig+0x354>)
 800abf6:	4293      	cmp	r3, r2
 800abf8:	d101      	bne.n	800abfe <DMA_SetConfig+0x2e2>
 800abfa:	2301      	movs	r3, #1
 800abfc:	e000      	b.n	800ac00 <DMA_SetConfig+0x2e4>
 800abfe:	2300      	movs	r3, #0
 800ac00:	2b00      	cmp	r3, #0
 800ac02:	d020      	beq.n	800ac46 <DMA_SetConfig+0x32a>
 800ac04:	68fb      	ldr	r3, [r7, #12]
 800ac06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ac08:	f003 031f 	and.w	r3, r3, #31
 800ac0c:	2201      	movs	r2, #1
 800ac0e:	409a      	lsls	r2, r3
 800ac10:	693b      	ldr	r3, [r7, #16]
 800ac12:	605a      	str	r2, [r3, #4]
 800ac14:	68fb      	ldr	r3, [r7, #12]
 800ac16:	681b      	ldr	r3, [r3, #0]
 800ac18:	683a      	ldr	r2, [r7, #0]
 800ac1a:	605a      	str	r2, [r3, #4]
 800ac1c:	68fb      	ldr	r3, [r7, #12]
 800ac1e:	689b      	ldr	r3, [r3, #8]
 800ac20:	2b40      	cmp	r3, #64	; 0x40
 800ac22:	d108      	bne.n	800ac36 <DMA_SetConfig+0x31a>
 800ac24:	68fb      	ldr	r3, [r7, #12]
 800ac26:	681b      	ldr	r3, [r3, #0]
 800ac28:	687a      	ldr	r2, [r7, #4]
 800ac2a:	609a      	str	r2, [r3, #8]
 800ac2c:	68fb      	ldr	r3, [r7, #12]
 800ac2e:	681b      	ldr	r3, [r3, #0]
 800ac30:	68ba      	ldr	r2, [r7, #8]
 800ac32:	60da      	str	r2, [r3, #12]
 800ac34:	e007      	b.n	800ac46 <DMA_SetConfig+0x32a>
 800ac36:	68fb      	ldr	r3, [r7, #12]
 800ac38:	681b      	ldr	r3, [r3, #0]
 800ac3a:	68ba      	ldr	r2, [r7, #8]
 800ac3c:	609a      	str	r2, [r3, #8]
 800ac3e:	68fb      	ldr	r3, [r7, #12]
 800ac40:	681b      	ldr	r3, [r3, #0]
 800ac42:	687a      	ldr	r2, [r7, #4]
 800ac44:	60da      	str	r2, [r3, #12]
 800ac46:	bf00      	nop
 800ac48:	371c      	adds	r7, #28
 800ac4a:	46bd      	mov	sp, r7
 800ac4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac50:	4770      	bx	lr
 800ac52:	bf00      	nop
 800ac54:	58025408 	.word	0x58025408
 800ac58:	5802541c 	.word	0x5802541c
 800ac5c:	58025430 	.word	0x58025430
 800ac60:	58025444 	.word	0x58025444
 800ac64:	58025458 	.word	0x58025458
 800ac68:	5802546c 	.word	0x5802546c
 800ac6c:	58025480 	.word	0x58025480
 800ac70:	58025494 	.word	0x58025494

0800ac74 <DMA_CalcBaseAndBitshift>:
 800ac74:	b480      	push	{r7}
 800ac76:	b085      	sub	sp, #20
 800ac78:	af00      	add	r7, sp, #0
 800ac7a:	6078      	str	r0, [r7, #4]
 800ac7c:	687b      	ldr	r3, [r7, #4]
 800ac7e:	681b      	ldr	r3, [r3, #0]
 800ac80:	4a42      	ldr	r2, [pc, #264]	; (800ad8c <DMA_CalcBaseAndBitshift+0x118>)
 800ac82:	4293      	cmp	r3, r2
 800ac84:	d04a      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800ac86:	687b      	ldr	r3, [r7, #4]
 800ac88:	681b      	ldr	r3, [r3, #0]
 800ac8a:	4a41      	ldr	r2, [pc, #260]	; (800ad90 <DMA_CalcBaseAndBitshift+0x11c>)
 800ac8c:	4293      	cmp	r3, r2
 800ac8e:	d045      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800ac90:	687b      	ldr	r3, [r7, #4]
 800ac92:	681b      	ldr	r3, [r3, #0]
 800ac94:	4a3f      	ldr	r2, [pc, #252]	; (800ad94 <DMA_CalcBaseAndBitshift+0x120>)
 800ac96:	4293      	cmp	r3, r2
 800ac98:	d040      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800ac9a:	687b      	ldr	r3, [r7, #4]
 800ac9c:	681b      	ldr	r3, [r3, #0]
 800ac9e:	4a3e      	ldr	r2, [pc, #248]	; (800ad98 <DMA_CalcBaseAndBitshift+0x124>)
 800aca0:	4293      	cmp	r3, r2
 800aca2:	d03b      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800aca4:	687b      	ldr	r3, [r7, #4]
 800aca6:	681b      	ldr	r3, [r3, #0]
 800aca8:	4a3c      	ldr	r2, [pc, #240]	; (800ad9c <DMA_CalcBaseAndBitshift+0x128>)
 800acaa:	4293      	cmp	r3, r2
 800acac:	d036      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800acae:	687b      	ldr	r3, [r7, #4]
 800acb0:	681b      	ldr	r3, [r3, #0]
 800acb2:	4a3b      	ldr	r2, [pc, #236]	; (800ada0 <DMA_CalcBaseAndBitshift+0x12c>)
 800acb4:	4293      	cmp	r3, r2
 800acb6:	d031      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800acb8:	687b      	ldr	r3, [r7, #4]
 800acba:	681b      	ldr	r3, [r3, #0]
 800acbc:	4a39      	ldr	r2, [pc, #228]	; (800ada4 <DMA_CalcBaseAndBitshift+0x130>)
 800acbe:	4293      	cmp	r3, r2
 800acc0:	d02c      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800acc2:	687b      	ldr	r3, [r7, #4]
 800acc4:	681b      	ldr	r3, [r3, #0]
 800acc6:	4a38      	ldr	r2, [pc, #224]	; (800ada8 <DMA_CalcBaseAndBitshift+0x134>)
 800acc8:	4293      	cmp	r3, r2
 800acca:	d027      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800accc:	687b      	ldr	r3, [r7, #4]
 800acce:	681b      	ldr	r3, [r3, #0]
 800acd0:	4a36      	ldr	r2, [pc, #216]	; (800adac <DMA_CalcBaseAndBitshift+0x138>)
 800acd2:	4293      	cmp	r3, r2
 800acd4:	d022      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800acd6:	687b      	ldr	r3, [r7, #4]
 800acd8:	681b      	ldr	r3, [r3, #0]
 800acda:	4a35      	ldr	r2, [pc, #212]	; (800adb0 <DMA_CalcBaseAndBitshift+0x13c>)
 800acdc:	4293      	cmp	r3, r2
 800acde:	d01d      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800ace0:	687b      	ldr	r3, [r7, #4]
 800ace2:	681b      	ldr	r3, [r3, #0]
 800ace4:	4a33      	ldr	r2, [pc, #204]	; (800adb4 <DMA_CalcBaseAndBitshift+0x140>)
 800ace6:	4293      	cmp	r3, r2
 800ace8:	d018      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800acea:	687b      	ldr	r3, [r7, #4]
 800acec:	681b      	ldr	r3, [r3, #0]
 800acee:	4a32      	ldr	r2, [pc, #200]	; (800adb8 <DMA_CalcBaseAndBitshift+0x144>)
 800acf0:	4293      	cmp	r3, r2
 800acf2:	d013      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800acf4:	687b      	ldr	r3, [r7, #4]
 800acf6:	681b      	ldr	r3, [r3, #0]
 800acf8:	4a30      	ldr	r2, [pc, #192]	; (800adbc <DMA_CalcBaseAndBitshift+0x148>)
 800acfa:	4293      	cmp	r3, r2
 800acfc:	d00e      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800acfe:	687b      	ldr	r3, [r7, #4]
 800ad00:	681b      	ldr	r3, [r3, #0]
 800ad02:	4a2f      	ldr	r2, [pc, #188]	; (800adc0 <DMA_CalcBaseAndBitshift+0x14c>)
 800ad04:	4293      	cmp	r3, r2
 800ad06:	d009      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800ad08:	687b      	ldr	r3, [r7, #4]
 800ad0a:	681b      	ldr	r3, [r3, #0]
 800ad0c:	4a2d      	ldr	r2, [pc, #180]	; (800adc4 <DMA_CalcBaseAndBitshift+0x150>)
 800ad0e:	4293      	cmp	r3, r2
 800ad10:	d004      	beq.n	800ad1c <DMA_CalcBaseAndBitshift+0xa8>
 800ad12:	687b      	ldr	r3, [r7, #4]
 800ad14:	681b      	ldr	r3, [r3, #0]
 800ad16:	4a2c      	ldr	r2, [pc, #176]	; (800adc8 <DMA_CalcBaseAndBitshift+0x154>)
 800ad18:	4293      	cmp	r3, r2
 800ad1a:	d101      	bne.n	800ad20 <DMA_CalcBaseAndBitshift+0xac>
 800ad1c:	2301      	movs	r3, #1
 800ad1e:	e000      	b.n	800ad22 <DMA_CalcBaseAndBitshift+0xae>
 800ad20:	2300      	movs	r3, #0
 800ad22:	2b00      	cmp	r3, #0
 800ad24:	d024      	beq.n	800ad70 <DMA_CalcBaseAndBitshift+0xfc>
 800ad26:	687b      	ldr	r3, [r7, #4]
 800ad28:	681b      	ldr	r3, [r3, #0]
 800ad2a:	b2db      	uxtb	r3, r3
 800ad2c:	3b10      	subs	r3, #16
 800ad2e:	4a27      	ldr	r2, [pc, #156]	; (800adcc <DMA_CalcBaseAndBitshift+0x158>)
 800ad30:	fba2 2303 	umull	r2, r3, r2, r3
 800ad34:	091b      	lsrs	r3, r3, #4
 800ad36:	60fb      	str	r3, [r7, #12]
 800ad38:	68fb      	ldr	r3, [r7, #12]
 800ad3a:	f003 0307 	and.w	r3, r3, #7
 800ad3e:	4a24      	ldr	r2, [pc, #144]	; (800add0 <DMA_CalcBaseAndBitshift+0x15c>)
 800ad40:	5cd3      	ldrb	r3, [r2, r3]
 800ad42:	461a      	mov	r2, r3
 800ad44:	687b      	ldr	r3, [r7, #4]
 800ad46:	65da      	str	r2, [r3, #92]	; 0x5c
 800ad48:	68fb      	ldr	r3, [r7, #12]
 800ad4a:	2b03      	cmp	r3, #3
 800ad4c:	d908      	bls.n	800ad60 <DMA_CalcBaseAndBitshift+0xec>
 800ad4e:	687b      	ldr	r3, [r7, #4]
 800ad50:	681b      	ldr	r3, [r3, #0]
 800ad52:	461a      	mov	r2, r3
 800ad54:	4b1f      	ldr	r3, [pc, #124]	; (800add4 <DMA_CalcBaseAndBitshift+0x160>)
 800ad56:	4013      	ands	r3, r2
 800ad58:	1d1a      	adds	r2, r3, #4
 800ad5a:	687b      	ldr	r3, [r7, #4]
 800ad5c:	659a      	str	r2, [r3, #88]	; 0x58
 800ad5e:	e00d      	b.n	800ad7c <DMA_CalcBaseAndBitshift+0x108>
 800ad60:	687b      	ldr	r3, [r7, #4]
 800ad62:	681b      	ldr	r3, [r3, #0]
 800ad64:	461a      	mov	r2, r3
 800ad66:	4b1b      	ldr	r3, [pc, #108]	; (800add4 <DMA_CalcBaseAndBitshift+0x160>)
 800ad68:	4013      	ands	r3, r2
 800ad6a:	687a      	ldr	r2, [r7, #4]
 800ad6c:	6593      	str	r3, [r2, #88]	; 0x58
 800ad6e:	e005      	b.n	800ad7c <DMA_CalcBaseAndBitshift+0x108>
 800ad70:	687b      	ldr	r3, [r7, #4]
 800ad72:	681b      	ldr	r3, [r3, #0]
 800ad74:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800ad78:	687b      	ldr	r3, [r7, #4]
 800ad7a:	659a      	str	r2, [r3, #88]	; 0x58
 800ad7c:	687b      	ldr	r3, [r7, #4]
 800ad7e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800ad80:	4618      	mov	r0, r3
 800ad82:	3714      	adds	r7, #20
 800ad84:	46bd      	mov	sp, r7
 800ad86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad8a:	4770      	bx	lr
 800ad8c:	40020010 	.word	0x40020010
 800ad90:	40020028 	.word	0x40020028
 800ad94:	40020040 	.word	0x40020040
 800ad98:	40020058 	.word	0x40020058
 800ad9c:	40020070 	.word	0x40020070
 800ada0:	40020088 	.word	0x40020088
 800ada4:	400200a0 	.word	0x400200a0
 800ada8:	400200b8 	.word	0x400200b8
 800adac:	40020410 	.word	0x40020410
 800adb0:	40020428 	.word	0x40020428
 800adb4:	40020440 	.word	0x40020440
 800adb8:	40020458 	.word	0x40020458
 800adbc:	40020470 	.word	0x40020470
 800adc0:	40020488 	.word	0x40020488
 800adc4:	400204a0 	.word	0x400204a0
 800adc8:	400204b8 	.word	0x400204b8
 800adcc:	aaaaaaab 	.word	0xaaaaaaab
 800add0:	0801b864 	.word	0x0801b864
 800add4:	fffffc00 	.word	0xfffffc00

0800add8 <DMA_CheckFifoParam>:
 800add8:	b480      	push	{r7}
 800adda:	b085      	sub	sp, #20
 800addc:	af00      	add	r7, sp, #0
 800adde:	6078      	str	r0, [r7, #4]
 800ade0:	2300      	movs	r3, #0
 800ade2:	73fb      	strb	r3, [r7, #15]
 800ade4:	687b      	ldr	r3, [r7, #4]
 800ade6:	699b      	ldr	r3, [r3, #24]
 800ade8:	2b00      	cmp	r3, #0
 800adea:	d120      	bne.n	800ae2e <DMA_CheckFifoParam+0x56>
 800adec:	687b      	ldr	r3, [r7, #4]
 800adee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800adf0:	2b03      	cmp	r3, #3
 800adf2:	d858      	bhi.n	800aea6 <DMA_CheckFifoParam+0xce>
 800adf4:	a201      	add	r2, pc, #4	; (adr r2, 800adfc <DMA_CheckFifoParam+0x24>)
 800adf6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800adfa:	bf00      	nop
 800adfc:	0800ae0d 	.word	0x0800ae0d
 800ae00:	0800ae1f 	.word	0x0800ae1f
 800ae04:	0800ae0d 	.word	0x0800ae0d
 800ae08:	0800aea7 	.word	0x0800aea7
 800ae0c:	687b      	ldr	r3, [r7, #4]
 800ae0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae10:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800ae14:	2b00      	cmp	r3, #0
 800ae16:	d048      	beq.n	800aeaa <DMA_CheckFifoParam+0xd2>
 800ae18:	2301      	movs	r3, #1
 800ae1a:	73fb      	strb	r3, [r7, #15]
 800ae1c:	e045      	b.n	800aeaa <DMA_CheckFifoParam+0xd2>
 800ae1e:	687b      	ldr	r3, [r7, #4]
 800ae20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae22:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800ae26:	d142      	bne.n	800aeae <DMA_CheckFifoParam+0xd6>
 800ae28:	2301      	movs	r3, #1
 800ae2a:	73fb      	strb	r3, [r7, #15]
 800ae2c:	e03f      	b.n	800aeae <DMA_CheckFifoParam+0xd6>
 800ae2e:	687b      	ldr	r3, [r7, #4]
 800ae30:	699b      	ldr	r3, [r3, #24]
 800ae32:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800ae36:	d123      	bne.n	800ae80 <DMA_CheckFifoParam+0xa8>
 800ae38:	687b      	ldr	r3, [r7, #4]
 800ae3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ae3c:	2b03      	cmp	r3, #3
 800ae3e:	d838      	bhi.n	800aeb2 <DMA_CheckFifoParam+0xda>
 800ae40:	a201      	add	r2, pc, #4	; (adr r2, 800ae48 <DMA_CheckFifoParam+0x70>)
 800ae42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ae46:	bf00      	nop
 800ae48:	0800ae59 	.word	0x0800ae59
 800ae4c:	0800ae5f 	.word	0x0800ae5f
 800ae50:	0800ae59 	.word	0x0800ae59
 800ae54:	0800ae71 	.word	0x0800ae71
 800ae58:	2301      	movs	r3, #1
 800ae5a:	73fb      	strb	r3, [r7, #15]
 800ae5c:	e030      	b.n	800aec0 <DMA_CheckFifoParam+0xe8>
 800ae5e:	687b      	ldr	r3, [r7, #4]
 800ae60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae62:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800ae66:	2b00      	cmp	r3, #0
 800ae68:	d025      	beq.n	800aeb6 <DMA_CheckFifoParam+0xde>
 800ae6a:	2301      	movs	r3, #1
 800ae6c:	73fb      	strb	r3, [r7, #15]
 800ae6e:	e022      	b.n	800aeb6 <DMA_CheckFifoParam+0xde>
 800ae70:	687b      	ldr	r3, [r7, #4]
 800ae72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae74:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800ae78:	d11f      	bne.n	800aeba <DMA_CheckFifoParam+0xe2>
 800ae7a:	2301      	movs	r3, #1
 800ae7c:	73fb      	strb	r3, [r7, #15]
 800ae7e:	e01c      	b.n	800aeba <DMA_CheckFifoParam+0xe2>
 800ae80:	687b      	ldr	r3, [r7, #4]
 800ae82:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ae84:	2b02      	cmp	r3, #2
 800ae86:	d902      	bls.n	800ae8e <DMA_CheckFifoParam+0xb6>
 800ae88:	2b03      	cmp	r3, #3
 800ae8a:	d003      	beq.n	800ae94 <DMA_CheckFifoParam+0xbc>
 800ae8c:	e018      	b.n	800aec0 <DMA_CheckFifoParam+0xe8>
 800ae8e:	2301      	movs	r3, #1
 800ae90:	73fb      	strb	r3, [r7, #15]
 800ae92:	e015      	b.n	800aec0 <DMA_CheckFifoParam+0xe8>
 800ae94:	687b      	ldr	r3, [r7, #4]
 800ae96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae98:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800ae9c:	2b00      	cmp	r3, #0
 800ae9e:	d00e      	beq.n	800aebe <DMA_CheckFifoParam+0xe6>
 800aea0:	2301      	movs	r3, #1
 800aea2:	73fb      	strb	r3, [r7, #15]
 800aea4:	e00b      	b.n	800aebe <DMA_CheckFifoParam+0xe6>
 800aea6:	bf00      	nop
 800aea8:	e00a      	b.n	800aec0 <DMA_CheckFifoParam+0xe8>
 800aeaa:	bf00      	nop
 800aeac:	e008      	b.n	800aec0 <DMA_CheckFifoParam+0xe8>
 800aeae:	bf00      	nop
 800aeb0:	e006      	b.n	800aec0 <DMA_CheckFifoParam+0xe8>
 800aeb2:	bf00      	nop
 800aeb4:	e004      	b.n	800aec0 <DMA_CheckFifoParam+0xe8>
 800aeb6:	bf00      	nop
 800aeb8:	e002      	b.n	800aec0 <DMA_CheckFifoParam+0xe8>
 800aeba:	bf00      	nop
 800aebc:	e000      	b.n	800aec0 <DMA_CheckFifoParam+0xe8>
 800aebe:	bf00      	nop
 800aec0:	7bfb      	ldrb	r3, [r7, #15]
 800aec2:	4618      	mov	r0, r3
 800aec4:	3714      	adds	r7, #20
 800aec6:	46bd      	mov	sp, r7
 800aec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aecc:	4770      	bx	lr
 800aece:	bf00      	nop

0800aed0 <DMA_CalcDMAMUXChannelBaseAndMask>:
 800aed0:	b480      	push	{r7}
 800aed2:	b085      	sub	sp, #20
 800aed4:	af00      	add	r7, sp, #0
 800aed6:	6078      	str	r0, [r7, #4]
 800aed8:	687b      	ldr	r3, [r7, #4]
 800aeda:	681b      	ldr	r3, [r3, #0]
 800aedc:	60bb      	str	r3, [r7, #8]
 800aede:	687b      	ldr	r3, [r7, #4]
 800aee0:	681b      	ldr	r3, [r3, #0]
 800aee2:	4a38      	ldr	r2, [pc, #224]	; (800afc4 <DMA_CalcDMAMUXChannelBaseAndMask+0xf4>)
 800aee4:	4293      	cmp	r3, r2
 800aee6:	d022      	beq.n	800af2e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	681b      	ldr	r3, [r3, #0]
 800aeec:	4a36      	ldr	r2, [pc, #216]	; (800afc8 <DMA_CalcDMAMUXChannelBaseAndMask+0xf8>)
 800aeee:	4293      	cmp	r3, r2
 800aef0:	d01d      	beq.n	800af2e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800aef2:	687b      	ldr	r3, [r7, #4]
 800aef4:	681b      	ldr	r3, [r3, #0]
 800aef6:	4a35      	ldr	r2, [pc, #212]	; (800afcc <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 800aef8:	4293      	cmp	r3, r2
 800aefa:	d018      	beq.n	800af2e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800aefc:	687b      	ldr	r3, [r7, #4]
 800aefe:	681b      	ldr	r3, [r3, #0]
 800af00:	4a33      	ldr	r2, [pc, #204]	; (800afd0 <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 800af02:	4293      	cmp	r3, r2
 800af04:	d013      	beq.n	800af2e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800af06:	687b      	ldr	r3, [r7, #4]
 800af08:	681b      	ldr	r3, [r3, #0]
 800af0a:	4a32      	ldr	r2, [pc, #200]	; (800afd4 <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 800af0c:	4293      	cmp	r3, r2
 800af0e:	d00e      	beq.n	800af2e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800af10:	687b      	ldr	r3, [r7, #4]
 800af12:	681b      	ldr	r3, [r3, #0]
 800af14:	4a30      	ldr	r2, [pc, #192]	; (800afd8 <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 800af16:	4293      	cmp	r3, r2
 800af18:	d009      	beq.n	800af2e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800af1a:	687b      	ldr	r3, [r7, #4]
 800af1c:	681b      	ldr	r3, [r3, #0]
 800af1e:	4a2f      	ldr	r2, [pc, #188]	; (800afdc <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 800af20:	4293      	cmp	r3, r2
 800af22:	d004      	beq.n	800af2e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800af24:	687b      	ldr	r3, [r7, #4]
 800af26:	681b      	ldr	r3, [r3, #0]
 800af28:	4a2d      	ldr	r2, [pc, #180]	; (800afe0 <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 800af2a:	4293      	cmp	r3, r2
 800af2c:	d101      	bne.n	800af32 <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 800af2e:	2301      	movs	r3, #1
 800af30:	e000      	b.n	800af34 <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 800af32:	2300      	movs	r3, #0
 800af34:	2b00      	cmp	r3, #0
 800af36:	d01a      	beq.n	800af6e <DMA_CalcDMAMUXChannelBaseAndMask+0x9e>
 800af38:	687b      	ldr	r3, [r7, #4]
 800af3a:	681b      	ldr	r3, [r3, #0]
 800af3c:	b2db      	uxtb	r3, r3
 800af3e:	3b08      	subs	r3, #8
 800af40:	4a28      	ldr	r2, [pc, #160]	; (800afe4 <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 800af42:	fba2 2303 	umull	r2, r3, r2, r3
 800af46:	091b      	lsrs	r3, r3, #4
 800af48:	60fb      	str	r3, [r7, #12]
 800af4a:	68fa      	ldr	r2, [r7, #12]
 800af4c:	4b26      	ldr	r3, [pc, #152]	; (800afe8 <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 800af4e:	4413      	add	r3, r2
 800af50:	009b      	lsls	r3, r3, #2
 800af52:	461a      	mov	r2, r3
 800af54:	687b      	ldr	r3, [r7, #4]
 800af56:	661a      	str	r2, [r3, #96]	; 0x60
 800af58:	687b      	ldr	r3, [r7, #4]
 800af5a:	4a24      	ldr	r2, [pc, #144]	; (800afec <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 800af5c:	665a      	str	r2, [r3, #100]	; 0x64
 800af5e:	68fb      	ldr	r3, [r7, #12]
 800af60:	f003 031f 	and.w	r3, r3, #31
 800af64:	2201      	movs	r2, #1
 800af66:	409a      	lsls	r2, r3
 800af68:	687b      	ldr	r3, [r7, #4]
 800af6a:	669a      	str	r2, [r3, #104]	; 0x68
 800af6c:	e024      	b.n	800afb8 <DMA_CalcDMAMUXChannelBaseAndMask+0xe8>
 800af6e:	687b      	ldr	r3, [r7, #4]
 800af70:	681b      	ldr	r3, [r3, #0]
 800af72:	b2db      	uxtb	r3, r3
 800af74:	3b10      	subs	r3, #16
 800af76:	4a1e      	ldr	r2, [pc, #120]	; (800aff0 <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 800af78:	fba2 2303 	umull	r2, r3, r2, r3
 800af7c:	091b      	lsrs	r3, r3, #4
 800af7e:	60fb      	str	r3, [r7, #12]
 800af80:	68bb      	ldr	r3, [r7, #8]
 800af82:	4a1c      	ldr	r2, [pc, #112]	; (800aff4 <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 800af84:	4293      	cmp	r3, r2
 800af86:	d806      	bhi.n	800af96 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 800af88:	68bb      	ldr	r3, [r7, #8]
 800af8a:	4a1b      	ldr	r2, [pc, #108]	; (800aff8 <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 800af8c:	4293      	cmp	r3, r2
 800af8e:	d902      	bls.n	800af96 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 800af90:	68fb      	ldr	r3, [r7, #12]
 800af92:	3308      	adds	r3, #8
 800af94:	60fb      	str	r3, [r7, #12]
 800af96:	68fa      	ldr	r2, [r7, #12]
 800af98:	4b18      	ldr	r3, [pc, #96]	; (800affc <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 800af9a:	4413      	add	r3, r2
 800af9c:	009b      	lsls	r3, r3, #2
 800af9e:	461a      	mov	r2, r3
 800afa0:	687b      	ldr	r3, [r7, #4]
 800afa2:	661a      	str	r2, [r3, #96]	; 0x60
 800afa4:	687b      	ldr	r3, [r7, #4]
 800afa6:	4a16      	ldr	r2, [pc, #88]	; (800b000 <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 800afa8:	665a      	str	r2, [r3, #100]	; 0x64
 800afaa:	68fb      	ldr	r3, [r7, #12]
 800afac:	f003 031f 	and.w	r3, r3, #31
 800afb0:	2201      	movs	r2, #1
 800afb2:	409a      	lsls	r2, r3
 800afb4:	687b      	ldr	r3, [r7, #4]
 800afb6:	669a      	str	r2, [r3, #104]	; 0x68
 800afb8:	bf00      	nop
 800afba:	3714      	adds	r7, #20
 800afbc:	46bd      	mov	sp, r7
 800afbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afc2:	4770      	bx	lr
 800afc4:	58025408 	.word	0x58025408
 800afc8:	5802541c 	.word	0x5802541c
 800afcc:	58025430 	.word	0x58025430
 800afd0:	58025444 	.word	0x58025444
 800afd4:	58025458 	.word	0x58025458
 800afd8:	5802546c 	.word	0x5802546c
 800afdc:	58025480 	.word	0x58025480
 800afe0:	58025494 	.word	0x58025494
 800afe4:	cccccccd 	.word	0xcccccccd
 800afe8:	16009600 	.word	0x16009600
 800afec:	58025880 	.word	0x58025880
 800aff0:	aaaaaaab 	.word	0xaaaaaaab
 800aff4:	400204b8 	.word	0x400204b8
 800aff8:	4002040f 	.word	0x4002040f
 800affc:	10008200 	.word	0x10008200
 800b000:	40020880 	.word	0x40020880

0800b004 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 800b004:	b480      	push	{r7}
 800b006:	b085      	sub	sp, #20
 800b008:	af00      	add	r7, sp, #0
 800b00a:	6078      	str	r0, [r7, #4]
 800b00c:	687b      	ldr	r3, [r7, #4]
 800b00e:	685b      	ldr	r3, [r3, #4]
 800b010:	b2db      	uxtb	r3, r3
 800b012:	60fb      	str	r3, [r7, #12]
 800b014:	68fb      	ldr	r3, [r7, #12]
 800b016:	2b00      	cmp	r3, #0
 800b018:	d04a      	beq.n	800b0b0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 800b01a:	68fb      	ldr	r3, [r7, #12]
 800b01c:	2b08      	cmp	r3, #8
 800b01e:	d847      	bhi.n	800b0b0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 800b020:	687b      	ldr	r3, [r7, #4]
 800b022:	681b      	ldr	r3, [r3, #0]
 800b024:	4a25      	ldr	r2, [pc, #148]	; (800b0bc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 800b026:	4293      	cmp	r3, r2
 800b028:	d022      	beq.n	800b070 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 800b02a:	687b      	ldr	r3, [r7, #4]
 800b02c:	681b      	ldr	r3, [r3, #0]
 800b02e:	4a24      	ldr	r2, [pc, #144]	; (800b0c0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 800b030:	4293      	cmp	r3, r2
 800b032:	d01d      	beq.n	800b070 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 800b034:	687b      	ldr	r3, [r7, #4]
 800b036:	681b      	ldr	r3, [r3, #0]
 800b038:	4a22      	ldr	r2, [pc, #136]	; (800b0c4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 800b03a:	4293      	cmp	r3, r2
 800b03c:	d018      	beq.n	800b070 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 800b03e:	687b      	ldr	r3, [r7, #4]
 800b040:	681b      	ldr	r3, [r3, #0]
 800b042:	4a21      	ldr	r2, [pc, #132]	; (800b0c8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 800b044:	4293      	cmp	r3, r2
 800b046:	d013      	beq.n	800b070 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 800b048:	687b      	ldr	r3, [r7, #4]
 800b04a:	681b      	ldr	r3, [r3, #0]
 800b04c:	4a1f      	ldr	r2, [pc, #124]	; (800b0cc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 800b04e:	4293      	cmp	r3, r2
 800b050:	d00e      	beq.n	800b070 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 800b052:	687b      	ldr	r3, [r7, #4]
 800b054:	681b      	ldr	r3, [r3, #0]
 800b056:	4a1e      	ldr	r2, [pc, #120]	; (800b0d0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 800b058:	4293      	cmp	r3, r2
 800b05a:	d009      	beq.n	800b070 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 800b05c:	687b      	ldr	r3, [r7, #4]
 800b05e:	681b      	ldr	r3, [r3, #0]
 800b060:	4a1c      	ldr	r2, [pc, #112]	; (800b0d4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 800b062:	4293      	cmp	r3, r2
 800b064:	d004      	beq.n	800b070 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 800b066:	687b      	ldr	r3, [r7, #4]
 800b068:	681b      	ldr	r3, [r3, #0]
 800b06a:	4a1b      	ldr	r2, [pc, #108]	; (800b0d8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 800b06c:	4293      	cmp	r3, r2
 800b06e:	d101      	bne.n	800b074 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 800b070:	2301      	movs	r3, #1
 800b072:	e000      	b.n	800b076 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 800b074:	2300      	movs	r3, #0
 800b076:	2b00      	cmp	r3, #0
 800b078:	d00a      	beq.n	800b090 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
 800b07a:	68fa      	ldr	r2, [r7, #12]
 800b07c:	4b17      	ldr	r3, [pc, #92]	; (800b0dc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 800b07e:	4413      	add	r3, r2
 800b080:	009b      	lsls	r3, r3, #2
 800b082:	461a      	mov	r2, r3
 800b084:	687b      	ldr	r3, [r7, #4]
 800b086:	66da      	str	r2, [r3, #108]	; 0x6c
 800b088:	687b      	ldr	r3, [r7, #4]
 800b08a:	4a15      	ldr	r2, [pc, #84]	; (800b0e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 800b08c:	671a      	str	r2, [r3, #112]	; 0x70
 800b08e:	e009      	b.n	800b0a4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
 800b090:	68fa      	ldr	r2, [r7, #12]
 800b092:	4b14      	ldr	r3, [pc, #80]	; (800b0e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 800b094:	4413      	add	r3, r2
 800b096:	009b      	lsls	r3, r3, #2
 800b098:	461a      	mov	r2, r3
 800b09a:	687b      	ldr	r3, [r7, #4]
 800b09c:	66da      	str	r2, [r3, #108]	; 0x6c
 800b09e:	687b      	ldr	r3, [r7, #4]
 800b0a0:	4a11      	ldr	r2, [pc, #68]	; (800b0e8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 800b0a2:	671a      	str	r2, [r3, #112]	; 0x70
 800b0a4:	68fb      	ldr	r3, [r7, #12]
 800b0a6:	3b01      	subs	r3, #1
 800b0a8:	2201      	movs	r2, #1
 800b0aa:	409a      	lsls	r2, r3
 800b0ac:	687b      	ldr	r3, [r7, #4]
 800b0ae:	675a      	str	r2, [r3, #116]	; 0x74
 800b0b0:	bf00      	nop
 800b0b2:	3714      	adds	r7, #20
 800b0b4:	46bd      	mov	sp, r7
 800b0b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0ba:	4770      	bx	lr
 800b0bc:	58025408 	.word	0x58025408
 800b0c0:	5802541c 	.word	0x5802541c
 800b0c4:	58025430 	.word	0x58025430
 800b0c8:	58025444 	.word	0x58025444
 800b0cc:	58025458 	.word	0x58025458
 800b0d0:	5802546c 	.word	0x5802546c
 800b0d4:	58025480 	.word	0x58025480
 800b0d8:	58025494 	.word	0x58025494
 800b0dc:	1600963f 	.word	0x1600963f
 800b0e0:	58025940 	.word	0x58025940
 800b0e4:	1000823f 	.word	0x1000823f
 800b0e8:	40020940 	.word	0x40020940

0800b0ec <HAL_FLASH_Program>:
 800b0ec:	b580      	push	{r7, lr}
 800b0ee:	b08a      	sub	sp, #40	; 0x28
 800b0f0:	af00      	add	r7, sp, #0
 800b0f2:	60f8      	str	r0, [r7, #12]
 800b0f4:	60b9      	str	r1, [r7, #8]
 800b0f6:	607a      	str	r2, [r7, #4]
 800b0f8:	68bb      	ldr	r3, [r7, #8]
 800b0fa:	623b      	str	r3, [r7, #32]
 800b0fc:	687b      	ldr	r3, [r7, #4]
 800b0fe:	61fb      	str	r3, [r7, #28]
 800b100:	2308      	movs	r3, #8
 800b102:	75fb      	strb	r3, [r7, #23]
 800b104:	4b40      	ldr	r3, [pc, #256]	; (800b208 <HAL_FLASH_Program+0x11c>)
 800b106:	7d1b      	ldrb	r3, [r3, #20]
 800b108:	2b01      	cmp	r3, #1
 800b10a:	d101      	bne.n	800b110 <HAL_FLASH_Program+0x24>
 800b10c:	2302      	movs	r3, #2
 800b10e:	e076      	b.n	800b1fe <HAL_FLASH_Program+0x112>
 800b110:	4b3d      	ldr	r3, [pc, #244]	; (800b208 <HAL_FLASH_Program+0x11c>)
 800b112:	2201      	movs	r2, #1
 800b114:	751a      	strb	r2, [r3, #20]
 800b116:	68bb      	ldr	r3, [r7, #8]
 800b118:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800b11c:	d306      	bcc.n	800b12c <HAL_FLASH_Program+0x40>
 800b11e:	68bb      	ldr	r3, [r7, #8]
 800b120:	f1b3 6f01 	cmp.w	r3, #135266304	; 0x8100000
 800b124:	d202      	bcs.n	800b12c <HAL_FLASH_Program+0x40>
 800b126:	2301      	movs	r3, #1
 800b128:	61bb      	str	r3, [r7, #24]
 800b12a:	e00c      	b.n	800b146 <HAL_FLASH_Program+0x5a>
 800b12c:	68bb      	ldr	r3, [r7, #8]
 800b12e:	f1b3 6f01 	cmp.w	r3, #135266304	; 0x8100000
 800b132:	d306      	bcc.n	800b142 <HAL_FLASH_Program+0x56>
 800b134:	68bb      	ldr	r3, [r7, #8]
 800b136:	f1b3 6f02 	cmp.w	r3, #136314880	; 0x8200000
 800b13a:	d202      	bcs.n	800b142 <HAL_FLASH_Program+0x56>
 800b13c:	2302      	movs	r3, #2
 800b13e:	61bb      	str	r3, [r7, #24]
 800b140:	e001      	b.n	800b146 <HAL_FLASH_Program+0x5a>
 800b142:	2301      	movs	r3, #1
 800b144:	e05b      	b.n	800b1fe <HAL_FLASH_Program+0x112>
 800b146:	4b30      	ldr	r3, [pc, #192]	; (800b208 <HAL_FLASH_Program+0x11c>)
 800b148:	2200      	movs	r2, #0
 800b14a:	619a      	str	r2, [r3, #24]
 800b14c:	69b9      	ldr	r1, [r7, #24]
 800b14e:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b152:	f000 f897 	bl	800b284 <FLASH_WaitForLastOperation>
 800b156:	4603      	mov	r3, r0
 800b158:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800b15c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800b160:	2b00      	cmp	r3, #0
 800b162:	d147      	bne.n	800b1f4 <HAL_FLASH_Program+0x108>
 800b164:	69bb      	ldr	r3, [r7, #24]
 800b166:	2b01      	cmp	r3, #1
 800b168:	d106      	bne.n	800b178 <HAL_FLASH_Program+0x8c>
 800b16a:	4b28      	ldr	r3, [pc, #160]	; (800b20c <HAL_FLASH_Program+0x120>)
 800b16c:	68db      	ldr	r3, [r3, #12]
 800b16e:	4a27      	ldr	r2, [pc, #156]	; (800b20c <HAL_FLASH_Program+0x120>)
 800b170:	f043 0302 	orr.w	r3, r3, #2
 800b174:	60d3      	str	r3, [r2, #12]
 800b176:	e007      	b.n	800b188 <HAL_FLASH_Program+0x9c>
 800b178:	4b24      	ldr	r3, [pc, #144]	; (800b20c <HAL_FLASH_Program+0x120>)
 800b17a:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800b17e:	4a23      	ldr	r2, [pc, #140]	; (800b20c <HAL_FLASH_Program+0x120>)
 800b180:	f043 0302 	orr.w	r3, r3, #2
 800b184:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
 800b188:	f3bf 8f6f 	isb	sy
 800b18c:	bf00      	nop
 800b18e:	f3bf 8f4f 	dsb	sy
 800b192:	bf00      	nop
 800b194:	69fb      	ldr	r3, [r7, #28]
 800b196:	681a      	ldr	r2, [r3, #0]
 800b198:	6a3b      	ldr	r3, [r7, #32]
 800b19a:	601a      	str	r2, [r3, #0]
 800b19c:	6a3b      	ldr	r3, [r7, #32]
 800b19e:	3304      	adds	r3, #4
 800b1a0:	623b      	str	r3, [r7, #32]
 800b1a2:	69fb      	ldr	r3, [r7, #28]
 800b1a4:	3304      	adds	r3, #4
 800b1a6:	61fb      	str	r3, [r7, #28]
 800b1a8:	7dfb      	ldrb	r3, [r7, #23]
 800b1aa:	3b01      	subs	r3, #1
 800b1ac:	75fb      	strb	r3, [r7, #23]
 800b1ae:	7dfb      	ldrb	r3, [r7, #23]
 800b1b0:	2b00      	cmp	r3, #0
 800b1b2:	d1ef      	bne.n	800b194 <HAL_FLASH_Program+0xa8>
 800b1b4:	f3bf 8f6f 	isb	sy
 800b1b8:	bf00      	nop
 800b1ba:	f3bf 8f4f 	dsb	sy
 800b1be:	bf00      	nop
 800b1c0:	69b9      	ldr	r1, [r7, #24]
 800b1c2:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b1c6:	f000 f85d 	bl	800b284 <FLASH_WaitForLastOperation>
 800b1ca:	4603      	mov	r3, r0
 800b1cc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800b1d0:	69bb      	ldr	r3, [r7, #24]
 800b1d2:	2b01      	cmp	r3, #1
 800b1d4:	d106      	bne.n	800b1e4 <HAL_FLASH_Program+0xf8>
 800b1d6:	4b0d      	ldr	r3, [pc, #52]	; (800b20c <HAL_FLASH_Program+0x120>)
 800b1d8:	68db      	ldr	r3, [r3, #12]
 800b1da:	4a0c      	ldr	r2, [pc, #48]	; (800b20c <HAL_FLASH_Program+0x120>)
 800b1dc:	f023 0302 	bic.w	r3, r3, #2
 800b1e0:	60d3      	str	r3, [r2, #12]
 800b1e2:	e007      	b.n	800b1f4 <HAL_FLASH_Program+0x108>
 800b1e4:	4b09      	ldr	r3, [pc, #36]	; (800b20c <HAL_FLASH_Program+0x120>)
 800b1e6:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800b1ea:	4a08      	ldr	r2, [pc, #32]	; (800b20c <HAL_FLASH_Program+0x120>)
 800b1ec:	f023 0302 	bic.w	r3, r3, #2
 800b1f0:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
 800b1f4:	4b04      	ldr	r3, [pc, #16]	; (800b208 <HAL_FLASH_Program+0x11c>)
 800b1f6:	2200      	movs	r2, #0
 800b1f8:	751a      	strb	r2, [r3, #20]
 800b1fa:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800b1fe:	4618      	mov	r0, r3
 800b200:	3728      	adds	r7, #40	; 0x28
 800b202:	46bd      	mov	sp, r7
 800b204:	bd80      	pop	{r7, pc}
 800b206:	bf00      	nop
 800b208:	2400206c 	.word	0x2400206c
 800b20c:	52002000 	.word	0x52002000

0800b210 <HAL_FLASH_Unlock>:
 800b210:	b480      	push	{r7}
 800b212:	af00      	add	r7, sp, #0
 800b214:	4b18      	ldr	r3, [pc, #96]	; (800b278 <HAL_FLASH_Unlock+0x68>)
 800b216:	68db      	ldr	r3, [r3, #12]
 800b218:	f003 0301 	and.w	r3, r3, #1
 800b21c:	2b00      	cmp	r3, #0
 800b21e:	d00d      	beq.n	800b23c <HAL_FLASH_Unlock+0x2c>
 800b220:	4b15      	ldr	r3, [pc, #84]	; (800b278 <HAL_FLASH_Unlock+0x68>)
 800b222:	4a16      	ldr	r2, [pc, #88]	; (800b27c <HAL_FLASH_Unlock+0x6c>)
 800b224:	605a      	str	r2, [r3, #4]
 800b226:	4b14      	ldr	r3, [pc, #80]	; (800b278 <HAL_FLASH_Unlock+0x68>)
 800b228:	4a15      	ldr	r2, [pc, #84]	; (800b280 <HAL_FLASH_Unlock+0x70>)
 800b22a:	605a      	str	r2, [r3, #4]
 800b22c:	4b12      	ldr	r3, [pc, #72]	; (800b278 <HAL_FLASH_Unlock+0x68>)
 800b22e:	68db      	ldr	r3, [r3, #12]
 800b230:	f003 0301 	and.w	r3, r3, #1
 800b234:	2b00      	cmp	r3, #0
 800b236:	d001      	beq.n	800b23c <HAL_FLASH_Unlock+0x2c>
 800b238:	2301      	movs	r3, #1
 800b23a:	e018      	b.n	800b26e <HAL_FLASH_Unlock+0x5e>
 800b23c:	4b0e      	ldr	r3, [pc, #56]	; (800b278 <HAL_FLASH_Unlock+0x68>)
 800b23e:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800b242:	f003 0301 	and.w	r3, r3, #1
 800b246:	2b00      	cmp	r3, #0
 800b248:	d010      	beq.n	800b26c <HAL_FLASH_Unlock+0x5c>
 800b24a:	4b0b      	ldr	r3, [pc, #44]	; (800b278 <HAL_FLASH_Unlock+0x68>)
 800b24c:	4a0b      	ldr	r2, [pc, #44]	; (800b27c <HAL_FLASH_Unlock+0x6c>)
 800b24e:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
 800b252:	4b09      	ldr	r3, [pc, #36]	; (800b278 <HAL_FLASH_Unlock+0x68>)
 800b254:	4a0a      	ldr	r2, [pc, #40]	; (800b280 <HAL_FLASH_Unlock+0x70>)
 800b256:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
 800b25a:	4b07      	ldr	r3, [pc, #28]	; (800b278 <HAL_FLASH_Unlock+0x68>)
 800b25c:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800b260:	f003 0301 	and.w	r3, r3, #1
 800b264:	2b00      	cmp	r3, #0
 800b266:	d001      	beq.n	800b26c <HAL_FLASH_Unlock+0x5c>
 800b268:	2301      	movs	r3, #1
 800b26a:	e000      	b.n	800b26e <HAL_FLASH_Unlock+0x5e>
 800b26c:	2300      	movs	r3, #0
 800b26e:	4618      	mov	r0, r3
 800b270:	46bd      	mov	sp, r7
 800b272:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b276:	4770      	bx	lr
 800b278:	52002000 	.word	0x52002000
 800b27c:	45670123 	.word	0x45670123
 800b280:	cdef89ab 	.word	0xcdef89ab

0800b284 <FLASH_WaitForLastOperation>:
 800b284:	b580      	push	{r7, lr}
 800b286:	b086      	sub	sp, #24
 800b288:	af00      	add	r7, sp, #0
 800b28a:	6078      	str	r0, [r7, #4]
 800b28c:	6039      	str	r1, [r7, #0]
 800b28e:	2304      	movs	r3, #4
 800b290:	617b      	str	r3, [r7, #20]
 800b292:	2300      	movs	r3, #0
 800b294:	613b      	str	r3, [r7, #16]
 800b296:	f7fa ffab 	bl	80061f0 <HAL_GetTick>
 800b29a:	60f8      	str	r0, [r7, #12]
 800b29c:	683b      	ldr	r3, [r7, #0]
 800b29e:	2b02      	cmp	r3, #2
 800b2a0:	d113      	bne.n	800b2ca <FLASH_WaitForLastOperation+0x46>
 800b2a2:	4b41      	ldr	r3, [pc, #260]	; (800b3a8 <FLASH_WaitForLastOperation+0x124>)
 800b2a4:	617b      	str	r3, [r7, #20]
 800b2a6:	e010      	b.n	800b2ca <FLASH_WaitForLastOperation+0x46>
 800b2a8:	687b      	ldr	r3, [r7, #4]
 800b2aa:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800b2ae:	d00c      	beq.n	800b2ca <FLASH_WaitForLastOperation+0x46>
 800b2b0:	f7fa ff9e 	bl	80061f0 <HAL_GetTick>
 800b2b4:	4602      	mov	r2, r0
 800b2b6:	68fb      	ldr	r3, [r7, #12]
 800b2b8:	1ad3      	subs	r3, r2, r3
 800b2ba:	687a      	ldr	r2, [r7, #4]
 800b2bc:	429a      	cmp	r2, r3
 800b2be:	d302      	bcc.n	800b2c6 <FLASH_WaitForLastOperation+0x42>
 800b2c0:	687b      	ldr	r3, [r7, #4]
 800b2c2:	2b00      	cmp	r3, #0
 800b2c4:	d101      	bne.n	800b2ca <FLASH_WaitForLastOperation+0x46>
 800b2c6:	2303      	movs	r3, #3
 800b2c8:	e06a      	b.n	800b3a0 <FLASH_WaitForLastOperation+0x11c>
 800b2ca:	697a      	ldr	r2, [r7, #20]
 800b2cc:	4b37      	ldr	r3, [pc, #220]	; (800b3ac <FLASH_WaitForLastOperation+0x128>)
 800b2ce:	4013      	ands	r3, r2
 800b2d0:	697a      	ldr	r2, [r7, #20]
 800b2d2:	429a      	cmp	r2, r3
 800b2d4:	d10a      	bne.n	800b2ec <FLASH_WaitForLastOperation+0x68>
 800b2d6:	4b36      	ldr	r3, [pc, #216]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b2d8:	691a      	ldr	r2, [r3, #16]
 800b2da:	697b      	ldr	r3, [r7, #20]
 800b2dc:	4013      	ands	r3, r2
 800b2de:	697a      	ldr	r2, [r7, #20]
 800b2e0:	429a      	cmp	r2, r3
 800b2e2:	bf0c      	ite	eq
 800b2e4:	2301      	moveq	r3, #1
 800b2e6:	2300      	movne	r3, #0
 800b2e8:	b2db      	uxtb	r3, r3
 800b2ea:	e00c      	b.n	800b306 <FLASH_WaitForLastOperation+0x82>
 800b2ec:	4b30      	ldr	r3, [pc, #192]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b2ee:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800b2f2:	43da      	mvns	r2, r3
 800b2f4:	697b      	ldr	r3, [r7, #20]
 800b2f6:	4013      	ands	r3, r2
 800b2f8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800b2fc:	2b00      	cmp	r3, #0
 800b2fe:	bf0c      	ite	eq
 800b300:	2301      	moveq	r3, #1
 800b302:	2300      	movne	r3, #0
 800b304:	b2db      	uxtb	r3, r3
 800b306:	2b00      	cmp	r3, #0
 800b308:	d1ce      	bne.n	800b2a8 <FLASH_WaitForLastOperation+0x24>
 800b30a:	683b      	ldr	r3, [r7, #0]
 800b30c:	2b01      	cmp	r3, #1
 800b30e:	d105      	bne.n	800b31c <FLASH_WaitForLastOperation+0x98>
 800b310:	4b27      	ldr	r3, [pc, #156]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b312:	691a      	ldr	r2, [r3, #16]
 800b314:	4b27      	ldr	r3, [pc, #156]	; (800b3b4 <FLASH_WaitForLastOperation+0x130>)
 800b316:	4013      	ands	r3, r2
 800b318:	613b      	str	r3, [r7, #16]
 800b31a:	e007      	b.n	800b32c <FLASH_WaitForLastOperation+0xa8>
 800b31c:	4b24      	ldr	r3, [pc, #144]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b31e:	f8d3 2110 	ldr.w	r2, [r3, #272]	; 0x110
 800b322:	4b24      	ldr	r3, [pc, #144]	; (800b3b4 <FLASH_WaitForLastOperation+0x130>)
 800b324:	4013      	ands	r3, r2
 800b326:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800b32a:	613b      	str	r3, [r7, #16]
 800b32c:	693b      	ldr	r3, [r7, #16]
 800b32e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800b332:	2b00      	cmp	r3, #0
 800b334:	d017      	beq.n	800b366 <FLASH_WaitForLastOperation+0xe2>
 800b336:	4b20      	ldr	r3, [pc, #128]	; (800b3b8 <FLASH_WaitForLastOperation+0x134>)
 800b338:	699a      	ldr	r2, [r3, #24]
 800b33a:	693b      	ldr	r3, [r7, #16]
 800b33c:	4313      	orrs	r3, r2
 800b33e:	4a1e      	ldr	r2, [pc, #120]	; (800b3b8 <FLASH_WaitForLastOperation+0x134>)
 800b340:	6193      	str	r3, [r2, #24]
 800b342:	693a      	ldr	r2, [r7, #16]
 800b344:	4b19      	ldr	r3, [pc, #100]	; (800b3ac <FLASH_WaitForLastOperation+0x128>)
 800b346:	4013      	ands	r3, r2
 800b348:	693a      	ldr	r2, [r7, #16]
 800b34a:	429a      	cmp	r2, r3
 800b34c:	d103      	bne.n	800b356 <FLASH_WaitForLastOperation+0xd2>
 800b34e:	4a18      	ldr	r2, [pc, #96]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b350:	693b      	ldr	r3, [r7, #16]
 800b352:	6153      	str	r3, [r2, #20]
 800b354:	e005      	b.n	800b362 <FLASH_WaitForLastOperation+0xde>
 800b356:	4a16      	ldr	r2, [pc, #88]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b358:	693b      	ldr	r3, [r7, #16]
 800b35a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800b35e:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
 800b362:	2301      	movs	r3, #1
 800b364:	e01c      	b.n	800b3a0 <FLASH_WaitForLastOperation+0x11c>
 800b366:	683b      	ldr	r3, [r7, #0]
 800b368:	2b01      	cmp	r3, #1
 800b36a:	d10b      	bne.n	800b384 <FLASH_WaitForLastOperation+0x100>
 800b36c:	4b10      	ldr	r3, [pc, #64]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b36e:	691b      	ldr	r3, [r3, #16]
 800b370:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800b374:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b378:	d111      	bne.n	800b39e <FLASH_WaitForLastOperation+0x11a>
 800b37a:	4b0d      	ldr	r3, [pc, #52]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b37c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800b380:	615a      	str	r2, [r3, #20]
 800b382:	e00c      	b.n	800b39e <FLASH_WaitForLastOperation+0x11a>
 800b384:	4b0a      	ldr	r3, [pc, #40]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b386:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800b38a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800b38e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b392:	d104      	bne.n	800b39e <FLASH_WaitForLastOperation+0x11a>
 800b394:	4b06      	ldr	r3, [pc, #24]	; (800b3b0 <FLASH_WaitForLastOperation+0x12c>)
 800b396:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800b39a:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
 800b39e:	2300      	movs	r3, #0
 800b3a0:	4618      	mov	r0, r3
 800b3a2:	3718      	adds	r7, #24
 800b3a4:	46bd      	mov	sp, r7
 800b3a6:	bd80      	pop	{r7, pc}
 800b3a8:	80000004 	.word	0x80000004
 800b3ac:	1fef000f 	.word	0x1fef000f
 800b3b0:	52002000 	.word	0x52002000
 800b3b4:	17ee0000 	.word	0x17ee0000
 800b3b8:	2400206c 	.word	0x2400206c

0800b3bc <HAL_FLASHEx_Erase>:
 800b3bc:	b580      	push	{r7, lr}
 800b3be:	b084      	sub	sp, #16
 800b3c0:	af00      	add	r7, sp, #0
 800b3c2:	6078      	str	r0, [r7, #4]
 800b3c4:	6039      	str	r1, [r7, #0]
 800b3c6:	2300      	movs	r3, #0
 800b3c8:	73fb      	strb	r3, [r7, #15]
 800b3ca:	4b5e      	ldr	r3, [pc, #376]	; (800b544 <HAL_FLASHEx_Erase+0x188>)
 800b3cc:	7d1b      	ldrb	r3, [r3, #20]
 800b3ce:	2b01      	cmp	r3, #1
 800b3d0:	d101      	bne.n	800b3d6 <HAL_FLASHEx_Erase+0x1a>
 800b3d2:	2302      	movs	r3, #2
 800b3d4:	e0b2      	b.n	800b53c <HAL_FLASHEx_Erase+0x180>
 800b3d6:	4b5b      	ldr	r3, [pc, #364]	; (800b544 <HAL_FLASHEx_Erase+0x188>)
 800b3d8:	2201      	movs	r2, #1
 800b3da:	751a      	strb	r2, [r3, #20]
 800b3dc:	4b59      	ldr	r3, [pc, #356]	; (800b544 <HAL_FLASHEx_Erase+0x188>)
 800b3de:	2200      	movs	r2, #0
 800b3e0:	619a      	str	r2, [r3, #24]
 800b3e2:	687b      	ldr	r3, [r7, #4]
 800b3e4:	685b      	ldr	r3, [r3, #4]
 800b3e6:	f003 0301 	and.w	r3, r3, #1
 800b3ea:	2b00      	cmp	r3, #0
 800b3ec:	d009      	beq.n	800b402 <HAL_FLASHEx_Erase+0x46>
 800b3ee:	2101      	movs	r1, #1
 800b3f0:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b3f4:	f7ff ff46 	bl	800b284 <FLASH_WaitForLastOperation>
 800b3f8:	4603      	mov	r3, r0
 800b3fa:	2b00      	cmp	r3, #0
 800b3fc:	d001      	beq.n	800b402 <HAL_FLASHEx_Erase+0x46>
 800b3fe:	2301      	movs	r3, #1
 800b400:	73fb      	strb	r3, [r7, #15]
 800b402:	687b      	ldr	r3, [r7, #4]
 800b404:	685b      	ldr	r3, [r3, #4]
 800b406:	f003 0302 	and.w	r3, r3, #2
 800b40a:	2b00      	cmp	r3, #0
 800b40c:	d009      	beq.n	800b422 <HAL_FLASHEx_Erase+0x66>
 800b40e:	2102      	movs	r1, #2
 800b410:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b414:	f7ff ff36 	bl	800b284 <FLASH_WaitForLastOperation>
 800b418:	4603      	mov	r3, r0
 800b41a:	2b00      	cmp	r3, #0
 800b41c:	d001      	beq.n	800b422 <HAL_FLASHEx_Erase+0x66>
 800b41e:	2301      	movs	r3, #1
 800b420:	73fb      	strb	r3, [r7, #15]
 800b422:	7bfb      	ldrb	r3, [r7, #15]
 800b424:	2b00      	cmp	r3, #0
 800b426:	f040 8085 	bne.w	800b534 <HAL_FLASHEx_Erase+0x178>
 800b42a:	687b      	ldr	r3, [r7, #4]
 800b42c:	681b      	ldr	r3, [r3, #0]
 800b42e:	2b01      	cmp	r3, #1
 800b430:	d136      	bne.n	800b4a0 <HAL_FLASHEx_Erase+0xe4>
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	691a      	ldr	r2, [r3, #16]
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	685b      	ldr	r3, [r3, #4]
 800b43a:	4619      	mov	r1, r3
 800b43c:	4610      	mov	r0, r2
 800b43e:	f000 f887 	bl	800b550 <FLASH_MassErase>
 800b442:	687b      	ldr	r3, [r7, #4]
 800b444:	685b      	ldr	r3, [r3, #4]
 800b446:	f003 0301 	and.w	r3, r3, #1
 800b44a:	2b00      	cmp	r3, #0
 800b44c:	d00f      	beq.n	800b46e <HAL_FLASHEx_Erase+0xb2>
 800b44e:	2101      	movs	r1, #1
 800b450:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b454:	f7ff ff16 	bl	800b284 <FLASH_WaitForLastOperation>
 800b458:	4603      	mov	r3, r0
 800b45a:	2b00      	cmp	r3, #0
 800b45c:	d001      	beq.n	800b462 <HAL_FLASHEx_Erase+0xa6>
 800b45e:	2301      	movs	r3, #1
 800b460:	73fb      	strb	r3, [r7, #15]
 800b462:	4b39      	ldr	r3, [pc, #228]	; (800b548 <HAL_FLASHEx_Erase+0x18c>)
 800b464:	68db      	ldr	r3, [r3, #12]
 800b466:	4a38      	ldr	r2, [pc, #224]	; (800b548 <HAL_FLASHEx_Erase+0x18c>)
 800b468:	f023 0308 	bic.w	r3, r3, #8
 800b46c:	60d3      	str	r3, [r2, #12]
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	685b      	ldr	r3, [r3, #4]
 800b472:	f003 0302 	and.w	r3, r3, #2
 800b476:	2b00      	cmp	r3, #0
 800b478:	d05c      	beq.n	800b534 <HAL_FLASHEx_Erase+0x178>
 800b47a:	2102      	movs	r1, #2
 800b47c:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b480:	f7ff ff00 	bl	800b284 <FLASH_WaitForLastOperation>
 800b484:	4603      	mov	r3, r0
 800b486:	2b00      	cmp	r3, #0
 800b488:	d001      	beq.n	800b48e <HAL_FLASHEx_Erase+0xd2>
 800b48a:	2301      	movs	r3, #1
 800b48c:	73fb      	strb	r3, [r7, #15]
 800b48e:	4b2e      	ldr	r3, [pc, #184]	; (800b548 <HAL_FLASHEx_Erase+0x18c>)
 800b490:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800b494:	4a2c      	ldr	r2, [pc, #176]	; (800b548 <HAL_FLASHEx_Erase+0x18c>)
 800b496:	f023 0308 	bic.w	r3, r3, #8
 800b49a:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
 800b49e:	e049      	b.n	800b534 <HAL_FLASHEx_Erase+0x178>
 800b4a0:	683b      	ldr	r3, [r7, #0]
 800b4a2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800b4a6:	601a      	str	r2, [r3, #0]
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	689b      	ldr	r3, [r3, #8]
 800b4ac:	60bb      	str	r3, [r7, #8]
 800b4ae:	e039      	b.n	800b524 <HAL_FLASHEx_Erase+0x168>
 800b4b0:	687b      	ldr	r3, [r7, #4]
 800b4b2:	6859      	ldr	r1, [r3, #4]
 800b4b4:	687b      	ldr	r3, [r7, #4]
 800b4b6:	691b      	ldr	r3, [r3, #16]
 800b4b8:	461a      	mov	r2, r3
 800b4ba:	68b8      	ldr	r0, [r7, #8]
 800b4bc:	f000 f8b2 	bl	800b624 <FLASH_Erase_Sector>
 800b4c0:	687b      	ldr	r3, [r7, #4]
 800b4c2:	685b      	ldr	r3, [r3, #4]
 800b4c4:	f003 0301 	and.w	r3, r3, #1
 800b4c8:	2b00      	cmp	r3, #0
 800b4ca:	d00c      	beq.n	800b4e6 <HAL_FLASHEx_Erase+0x12a>
 800b4cc:	2101      	movs	r1, #1
 800b4ce:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b4d2:	f7ff fed7 	bl	800b284 <FLASH_WaitForLastOperation>
 800b4d6:	4603      	mov	r3, r0
 800b4d8:	73fb      	strb	r3, [r7, #15]
 800b4da:	4b1b      	ldr	r3, [pc, #108]	; (800b548 <HAL_FLASHEx_Erase+0x18c>)
 800b4dc:	68da      	ldr	r2, [r3, #12]
 800b4de:	491a      	ldr	r1, [pc, #104]	; (800b548 <HAL_FLASHEx_Erase+0x18c>)
 800b4e0:	4b1a      	ldr	r3, [pc, #104]	; (800b54c <HAL_FLASHEx_Erase+0x190>)
 800b4e2:	4013      	ands	r3, r2
 800b4e4:	60cb      	str	r3, [r1, #12]
 800b4e6:	687b      	ldr	r3, [r7, #4]
 800b4e8:	685b      	ldr	r3, [r3, #4]
 800b4ea:	f003 0302 	and.w	r3, r3, #2
 800b4ee:	2b00      	cmp	r3, #0
 800b4f0:	d00e      	beq.n	800b510 <HAL_FLASHEx_Erase+0x154>
 800b4f2:	2102      	movs	r1, #2
 800b4f4:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b4f8:	f7ff fec4 	bl	800b284 <FLASH_WaitForLastOperation>
 800b4fc:	4603      	mov	r3, r0
 800b4fe:	73fb      	strb	r3, [r7, #15]
 800b500:	4b11      	ldr	r3, [pc, #68]	; (800b548 <HAL_FLASHEx_Erase+0x18c>)
 800b502:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
 800b506:	4910      	ldr	r1, [pc, #64]	; (800b548 <HAL_FLASHEx_Erase+0x18c>)
 800b508:	4b10      	ldr	r3, [pc, #64]	; (800b54c <HAL_FLASHEx_Erase+0x190>)
 800b50a:	4013      	ands	r3, r2
 800b50c:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
 800b510:	7bfb      	ldrb	r3, [r7, #15]
 800b512:	2b00      	cmp	r3, #0
 800b514:	d003      	beq.n	800b51e <HAL_FLASHEx_Erase+0x162>
 800b516:	683b      	ldr	r3, [r7, #0]
 800b518:	68ba      	ldr	r2, [r7, #8]
 800b51a:	601a      	str	r2, [r3, #0]
 800b51c:	e00a      	b.n	800b534 <HAL_FLASHEx_Erase+0x178>
 800b51e:	68bb      	ldr	r3, [r7, #8]
 800b520:	3301      	adds	r3, #1
 800b522:	60bb      	str	r3, [r7, #8]
 800b524:	687b      	ldr	r3, [r7, #4]
 800b526:	68da      	ldr	r2, [r3, #12]
 800b528:	687b      	ldr	r3, [r7, #4]
 800b52a:	689b      	ldr	r3, [r3, #8]
 800b52c:	4413      	add	r3, r2
 800b52e:	68ba      	ldr	r2, [r7, #8]
 800b530:	429a      	cmp	r2, r3
 800b532:	d3bd      	bcc.n	800b4b0 <HAL_FLASHEx_Erase+0xf4>
 800b534:	4b03      	ldr	r3, [pc, #12]	; (800b544 <HAL_FLASHEx_Erase+0x188>)
 800b536:	2200      	movs	r2, #0
 800b538:	751a      	strb	r2, [r3, #20]
 800b53a:	7bfb      	ldrb	r3, [r7, #15]
 800b53c:	4618      	mov	r0, r3
 800b53e:	3710      	adds	r7, #16
 800b540:	46bd      	mov	sp, r7
 800b542:	bd80      	pop	{r7, pc}
 800b544:	2400206c 	.word	0x2400206c
 800b548:	52002000 	.word	0x52002000
 800b54c:	fffff8fb 	.word	0xfffff8fb

0800b550 <FLASH_MassErase>:
 800b550:	b480      	push	{r7}
 800b552:	b083      	sub	sp, #12
 800b554:	af00      	add	r7, sp, #0
 800b556:	6078      	str	r0, [r7, #4]
 800b558:	6039      	str	r1, [r7, #0]
 800b55a:	683b      	ldr	r3, [r7, #0]
 800b55c:	f003 0303 	and.w	r3, r3, #3
 800b560:	2b03      	cmp	r3, #3
 800b562:	d122      	bne.n	800b5aa <FLASH_MassErase+0x5a>
 800b564:	4b2e      	ldr	r3, [pc, #184]	; (800b620 <FLASH_MassErase+0xd0>)
 800b566:	68db      	ldr	r3, [r3, #12]
 800b568:	4a2d      	ldr	r2, [pc, #180]	; (800b620 <FLASH_MassErase+0xd0>)
 800b56a:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800b56e:	60d3      	str	r3, [r2, #12]
 800b570:	4b2b      	ldr	r3, [pc, #172]	; (800b620 <FLASH_MassErase+0xd0>)
 800b572:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800b576:	4a2a      	ldr	r2, [pc, #168]	; (800b620 <FLASH_MassErase+0xd0>)
 800b578:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800b57c:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
 800b580:	4b27      	ldr	r3, [pc, #156]	; (800b620 <FLASH_MassErase+0xd0>)
 800b582:	68da      	ldr	r2, [r3, #12]
 800b584:	4926      	ldr	r1, [pc, #152]	; (800b620 <FLASH_MassErase+0xd0>)
 800b586:	687b      	ldr	r3, [r7, #4]
 800b588:	4313      	orrs	r3, r2
 800b58a:	60cb      	str	r3, [r1, #12]
 800b58c:	4b24      	ldr	r3, [pc, #144]	; (800b620 <FLASH_MassErase+0xd0>)
 800b58e:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
 800b592:	4923      	ldr	r1, [pc, #140]	; (800b620 <FLASH_MassErase+0xd0>)
 800b594:	687b      	ldr	r3, [r7, #4]
 800b596:	4313      	orrs	r3, r2
 800b598:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
 800b59c:	4b20      	ldr	r3, [pc, #128]	; (800b620 <FLASH_MassErase+0xd0>)
 800b59e:	699b      	ldr	r3, [r3, #24]
 800b5a0:	4a1f      	ldr	r2, [pc, #124]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5a2:	f043 0310 	orr.w	r3, r3, #16
 800b5a6:	6193      	str	r3, [r2, #24]
 800b5a8:	e033      	b.n	800b612 <FLASH_MassErase+0xc2>
 800b5aa:	683b      	ldr	r3, [r7, #0]
 800b5ac:	f003 0301 	and.w	r3, r3, #1
 800b5b0:	2b00      	cmp	r3, #0
 800b5b2:	d011      	beq.n	800b5d8 <FLASH_MassErase+0x88>
 800b5b4:	4b1a      	ldr	r3, [pc, #104]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5b6:	68db      	ldr	r3, [r3, #12]
 800b5b8:	4a19      	ldr	r2, [pc, #100]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5ba:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800b5be:	60d3      	str	r3, [r2, #12]
 800b5c0:	4b17      	ldr	r3, [pc, #92]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5c2:	68da      	ldr	r2, [r3, #12]
 800b5c4:	4916      	ldr	r1, [pc, #88]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	4313      	orrs	r3, r2
 800b5ca:	60cb      	str	r3, [r1, #12]
 800b5cc:	4b14      	ldr	r3, [pc, #80]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5ce:	68db      	ldr	r3, [r3, #12]
 800b5d0:	4a13      	ldr	r2, [pc, #76]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5d2:	f043 0388 	orr.w	r3, r3, #136	; 0x88
 800b5d6:	60d3      	str	r3, [r2, #12]
 800b5d8:	683b      	ldr	r3, [r7, #0]
 800b5da:	f003 0302 	and.w	r3, r3, #2
 800b5de:	2b00      	cmp	r3, #0
 800b5e0:	d017      	beq.n	800b612 <FLASH_MassErase+0xc2>
 800b5e2:	4b0f      	ldr	r3, [pc, #60]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5e4:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800b5e8:	4a0d      	ldr	r2, [pc, #52]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5ea:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800b5ee:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
 800b5f2:	4b0b      	ldr	r3, [pc, #44]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5f4:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
 800b5f8:	4909      	ldr	r1, [pc, #36]	; (800b620 <FLASH_MassErase+0xd0>)
 800b5fa:	687b      	ldr	r3, [r7, #4]
 800b5fc:	4313      	orrs	r3, r2
 800b5fe:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
 800b602:	4b07      	ldr	r3, [pc, #28]	; (800b620 <FLASH_MassErase+0xd0>)
 800b604:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800b608:	4a05      	ldr	r2, [pc, #20]	; (800b620 <FLASH_MassErase+0xd0>)
 800b60a:	f043 0388 	orr.w	r3, r3, #136	; 0x88
 800b60e:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
 800b612:	bf00      	nop
 800b614:	370c      	adds	r7, #12
 800b616:	46bd      	mov	sp, r7
 800b618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b61c:	4770      	bx	lr
 800b61e:	bf00      	nop
 800b620:	52002000 	.word	0x52002000

0800b624 <FLASH_Erase_Sector>:
 800b624:	b480      	push	{r7}
 800b626:	b085      	sub	sp, #20
 800b628:	af00      	add	r7, sp, #0
 800b62a:	60f8      	str	r0, [r7, #12]
 800b62c:	60b9      	str	r1, [r7, #8]
 800b62e:	607a      	str	r2, [r7, #4]
 800b630:	68bb      	ldr	r3, [r7, #8]
 800b632:	f003 0301 	and.w	r3, r3, #1
 800b636:	2b00      	cmp	r3, #0
 800b638:	d010      	beq.n	800b65c <FLASH_Erase_Sector+0x38>
 800b63a:	4b18      	ldr	r3, [pc, #96]	; (800b69c <FLASH_Erase_Sector+0x78>)
 800b63c:	68db      	ldr	r3, [r3, #12]
 800b63e:	4a17      	ldr	r2, [pc, #92]	; (800b69c <FLASH_Erase_Sector+0x78>)
 800b640:	f423 63e6 	bic.w	r3, r3, #1840	; 0x730
 800b644:	60d3      	str	r3, [r2, #12]
 800b646:	4b15      	ldr	r3, [pc, #84]	; (800b69c <FLASH_Erase_Sector+0x78>)
 800b648:	68da      	ldr	r2, [r3, #12]
 800b64a:	68fb      	ldr	r3, [r7, #12]
 800b64c:	0219      	lsls	r1, r3, #8
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	430b      	orrs	r3, r1
 800b652:	4313      	orrs	r3, r2
 800b654:	4a11      	ldr	r2, [pc, #68]	; (800b69c <FLASH_Erase_Sector+0x78>)
 800b656:	f043 0384 	orr.w	r3, r3, #132	; 0x84
 800b65a:	60d3      	str	r3, [r2, #12]
 800b65c:	68bb      	ldr	r3, [r7, #8]
 800b65e:	f003 0302 	and.w	r3, r3, #2
 800b662:	2b00      	cmp	r3, #0
 800b664:	d014      	beq.n	800b690 <FLASH_Erase_Sector+0x6c>
 800b666:	4b0d      	ldr	r3, [pc, #52]	; (800b69c <FLASH_Erase_Sector+0x78>)
 800b668:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800b66c:	4a0b      	ldr	r2, [pc, #44]	; (800b69c <FLASH_Erase_Sector+0x78>)
 800b66e:	f423 63e6 	bic.w	r3, r3, #1840	; 0x730
 800b672:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
 800b676:	4b09      	ldr	r3, [pc, #36]	; (800b69c <FLASH_Erase_Sector+0x78>)
 800b678:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
 800b67c:	68fb      	ldr	r3, [r7, #12]
 800b67e:	0219      	lsls	r1, r3, #8
 800b680:	687b      	ldr	r3, [r7, #4]
 800b682:	430b      	orrs	r3, r1
 800b684:	4313      	orrs	r3, r2
 800b686:	4a05      	ldr	r2, [pc, #20]	; (800b69c <FLASH_Erase_Sector+0x78>)
 800b688:	f043 0384 	orr.w	r3, r3, #132	; 0x84
 800b68c:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
 800b690:	bf00      	nop
 800b692:	3714      	adds	r7, #20
 800b694:	46bd      	mov	sp, r7
 800b696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b69a:	4770      	bx	lr
 800b69c:	52002000 	.word	0x52002000

0800b6a0 <HAL_GPIO_Init>:
 800b6a0:	b480      	push	{r7}
 800b6a2:	b089      	sub	sp, #36	; 0x24
 800b6a4:	af00      	add	r7, sp, #0
 800b6a6:	6078      	str	r0, [r7, #4]
 800b6a8:	6039      	str	r1, [r7, #0]
 800b6aa:	2300      	movs	r3, #0
 800b6ac:	61fb      	str	r3, [r7, #28]
 800b6ae:	4b89      	ldr	r3, [pc, #548]	; (800b8d4 <HAL_GPIO_Init+0x234>)
 800b6b0:	617b      	str	r3, [r7, #20]
 800b6b2:	e194      	b.n	800b9de <HAL_GPIO_Init+0x33e>
 800b6b4:	683b      	ldr	r3, [r7, #0]
 800b6b6:	681a      	ldr	r2, [r3, #0]
 800b6b8:	2101      	movs	r1, #1
 800b6ba:	69fb      	ldr	r3, [r7, #28]
 800b6bc:	fa01 f303 	lsl.w	r3, r1, r3
 800b6c0:	4013      	ands	r3, r2
 800b6c2:	613b      	str	r3, [r7, #16]
 800b6c4:	693b      	ldr	r3, [r7, #16]
 800b6c6:	2b00      	cmp	r3, #0
 800b6c8:	f000 8186 	beq.w	800b9d8 <HAL_GPIO_Init+0x338>
 800b6cc:	683b      	ldr	r3, [r7, #0]
 800b6ce:	685b      	ldr	r3, [r3, #4]
 800b6d0:	f003 0303 	and.w	r3, r3, #3
 800b6d4:	2b01      	cmp	r3, #1
 800b6d6:	d005      	beq.n	800b6e4 <HAL_GPIO_Init+0x44>
 800b6d8:	683b      	ldr	r3, [r7, #0]
 800b6da:	685b      	ldr	r3, [r3, #4]
 800b6dc:	f003 0303 	and.w	r3, r3, #3
 800b6e0:	2b02      	cmp	r3, #2
 800b6e2:	d130      	bne.n	800b746 <HAL_GPIO_Init+0xa6>
 800b6e4:	687b      	ldr	r3, [r7, #4]
 800b6e6:	689b      	ldr	r3, [r3, #8]
 800b6e8:	61bb      	str	r3, [r7, #24]
 800b6ea:	69fb      	ldr	r3, [r7, #28]
 800b6ec:	005b      	lsls	r3, r3, #1
 800b6ee:	2203      	movs	r2, #3
 800b6f0:	fa02 f303 	lsl.w	r3, r2, r3
 800b6f4:	43db      	mvns	r3, r3
 800b6f6:	69ba      	ldr	r2, [r7, #24]
 800b6f8:	4013      	ands	r3, r2
 800b6fa:	61bb      	str	r3, [r7, #24]
 800b6fc:	683b      	ldr	r3, [r7, #0]
 800b6fe:	68da      	ldr	r2, [r3, #12]
 800b700:	69fb      	ldr	r3, [r7, #28]
 800b702:	005b      	lsls	r3, r3, #1
 800b704:	fa02 f303 	lsl.w	r3, r2, r3
 800b708:	69ba      	ldr	r2, [r7, #24]
 800b70a:	4313      	orrs	r3, r2
 800b70c:	61bb      	str	r3, [r7, #24]
 800b70e:	687b      	ldr	r3, [r7, #4]
 800b710:	69ba      	ldr	r2, [r7, #24]
 800b712:	609a      	str	r2, [r3, #8]
 800b714:	687b      	ldr	r3, [r7, #4]
 800b716:	685b      	ldr	r3, [r3, #4]
 800b718:	61bb      	str	r3, [r7, #24]
 800b71a:	2201      	movs	r2, #1
 800b71c:	69fb      	ldr	r3, [r7, #28]
 800b71e:	fa02 f303 	lsl.w	r3, r2, r3
 800b722:	43db      	mvns	r3, r3
 800b724:	69ba      	ldr	r2, [r7, #24]
 800b726:	4013      	ands	r3, r2
 800b728:	61bb      	str	r3, [r7, #24]
 800b72a:	683b      	ldr	r3, [r7, #0]
 800b72c:	685b      	ldr	r3, [r3, #4]
 800b72e:	091b      	lsrs	r3, r3, #4
 800b730:	f003 0201 	and.w	r2, r3, #1
 800b734:	69fb      	ldr	r3, [r7, #28]
 800b736:	fa02 f303 	lsl.w	r3, r2, r3
 800b73a:	69ba      	ldr	r2, [r7, #24]
 800b73c:	4313      	orrs	r3, r2
 800b73e:	61bb      	str	r3, [r7, #24]
 800b740:	687b      	ldr	r3, [r7, #4]
 800b742:	69ba      	ldr	r2, [r7, #24]
 800b744:	605a      	str	r2, [r3, #4]
 800b746:	683b      	ldr	r3, [r7, #0]
 800b748:	685b      	ldr	r3, [r3, #4]
 800b74a:	f003 0303 	and.w	r3, r3, #3
 800b74e:	2b03      	cmp	r3, #3
 800b750:	d017      	beq.n	800b782 <HAL_GPIO_Init+0xe2>
 800b752:	687b      	ldr	r3, [r7, #4]
 800b754:	68db      	ldr	r3, [r3, #12]
 800b756:	61bb      	str	r3, [r7, #24]
 800b758:	69fb      	ldr	r3, [r7, #28]
 800b75a:	005b      	lsls	r3, r3, #1
 800b75c:	2203      	movs	r2, #3
 800b75e:	fa02 f303 	lsl.w	r3, r2, r3
 800b762:	43db      	mvns	r3, r3
 800b764:	69ba      	ldr	r2, [r7, #24]
 800b766:	4013      	ands	r3, r2
 800b768:	61bb      	str	r3, [r7, #24]
 800b76a:	683b      	ldr	r3, [r7, #0]
 800b76c:	689a      	ldr	r2, [r3, #8]
 800b76e:	69fb      	ldr	r3, [r7, #28]
 800b770:	005b      	lsls	r3, r3, #1
 800b772:	fa02 f303 	lsl.w	r3, r2, r3
 800b776:	69ba      	ldr	r2, [r7, #24]
 800b778:	4313      	orrs	r3, r2
 800b77a:	61bb      	str	r3, [r7, #24]
 800b77c:	687b      	ldr	r3, [r7, #4]
 800b77e:	69ba      	ldr	r2, [r7, #24]
 800b780:	60da      	str	r2, [r3, #12]
 800b782:	683b      	ldr	r3, [r7, #0]
 800b784:	685b      	ldr	r3, [r3, #4]
 800b786:	f003 0303 	and.w	r3, r3, #3
 800b78a:	2b02      	cmp	r3, #2
 800b78c:	d123      	bne.n	800b7d6 <HAL_GPIO_Init+0x136>
 800b78e:	69fb      	ldr	r3, [r7, #28]
 800b790:	08da      	lsrs	r2, r3, #3
 800b792:	687b      	ldr	r3, [r7, #4]
 800b794:	3208      	adds	r2, #8
 800b796:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800b79a:	61bb      	str	r3, [r7, #24]
 800b79c:	69fb      	ldr	r3, [r7, #28]
 800b79e:	f003 0307 	and.w	r3, r3, #7
 800b7a2:	009b      	lsls	r3, r3, #2
 800b7a4:	220f      	movs	r2, #15
 800b7a6:	fa02 f303 	lsl.w	r3, r2, r3
 800b7aa:	43db      	mvns	r3, r3
 800b7ac:	69ba      	ldr	r2, [r7, #24]
 800b7ae:	4013      	ands	r3, r2
 800b7b0:	61bb      	str	r3, [r7, #24]
 800b7b2:	683b      	ldr	r3, [r7, #0]
 800b7b4:	691a      	ldr	r2, [r3, #16]
 800b7b6:	69fb      	ldr	r3, [r7, #28]
 800b7b8:	f003 0307 	and.w	r3, r3, #7
 800b7bc:	009b      	lsls	r3, r3, #2
 800b7be:	fa02 f303 	lsl.w	r3, r2, r3
 800b7c2:	69ba      	ldr	r2, [r7, #24]
 800b7c4:	4313      	orrs	r3, r2
 800b7c6:	61bb      	str	r3, [r7, #24]
 800b7c8:	69fb      	ldr	r3, [r7, #28]
 800b7ca:	08da      	lsrs	r2, r3, #3
 800b7cc:	687b      	ldr	r3, [r7, #4]
 800b7ce:	3208      	adds	r2, #8
 800b7d0:	69b9      	ldr	r1, [r7, #24]
 800b7d2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800b7d6:	687b      	ldr	r3, [r7, #4]
 800b7d8:	681b      	ldr	r3, [r3, #0]
 800b7da:	61bb      	str	r3, [r7, #24]
 800b7dc:	69fb      	ldr	r3, [r7, #28]
 800b7de:	005b      	lsls	r3, r3, #1
 800b7e0:	2203      	movs	r2, #3
 800b7e2:	fa02 f303 	lsl.w	r3, r2, r3
 800b7e6:	43db      	mvns	r3, r3
 800b7e8:	69ba      	ldr	r2, [r7, #24]
 800b7ea:	4013      	ands	r3, r2
 800b7ec:	61bb      	str	r3, [r7, #24]
 800b7ee:	683b      	ldr	r3, [r7, #0]
 800b7f0:	685b      	ldr	r3, [r3, #4]
 800b7f2:	f003 0203 	and.w	r2, r3, #3
 800b7f6:	69fb      	ldr	r3, [r7, #28]
 800b7f8:	005b      	lsls	r3, r3, #1
 800b7fa:	fa02 f303 	lsl.w	r3, r2, r3
 800b7fe:	69ba      	ldr	r2, [r7, #24]
 800b800:	4313      	orrs	r3, r2
 800b802:	61bb      	str	r3, [r7, #24]
 800b804:	687b      	ldr	r3, [r7, #4]
 800b806:	69ba      	ldr	r2, [r7, #24]
 800b808:	601a      	str	r2, [r3, #0]
 800b80a:	683b      	ldr	r3, [r7, #0]
 800b80c:	685b      	ldr	r3, [r3, #4]
 800b80e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800b812:	2b00      	cmp	r3, #0
 800b814:	f000 80e0 	beq.w	800b9d8 <HAL_GPIO_Init+0x338>
 800b818:	4b2f      	ldr	r3, [pc, #188]	; (800b8d8 <HAL_GPIO_Init+0x238>)
 800b81a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 800b81e:	4a2e      	ldr	r2, [pc, #184]	; (800b8d8 <HAL_GPIO_Init+0x238>)
 800b820:	f043 0302 	orr.w	r3, r3, #2
 800b824:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 800b828:	4b2b      	ldr	r3, [pc, #172]	; (800b8d8 <HAL_GPIO_Init+0x238>)
 800b82a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 800b82e:	f003 0302 	and.w	r3, r3, #2
 800b832:	60fb      	str	r3, [r7, #12]
 800b834:	68fb      	ldr	r3, [r7, #12]
 800b836:	4a29      	ldr	r2, [pc, #164]	; (800b8dc <HAL_GPIO_Init+0x23c>)
 800b838:	69fb      	ldr	r3, [r7, #28]
 800b83a:	089b      	lsrs	r3, r3, #2
 800b83c:	3302      	adds	r3, #2
 800b83e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b842:	61bb      	str	r3, [r7, #24]
 800b844:	69fb      	ldr	r3, [r7, #28]
 800b846:	f003 0303 	and.w	r3, r3, #3
 800b84a:	009b      	lsls	r3, r3, #2
 800b84c:	220f      	movs	r2, #15
 800b84e:	fa02 f303 	lsl.w	r3, r2, r3
 800b852:	43db      	mvns	r3, r3
 800b854:	69ba      	ldr	r2, [r7, #24]
 800b856:	4013      	ands	r3, r2
 800b858:	61bb      	str	r3, [r7, #24]
 800b85a:	687b      	ldr	r3, [r7, #4]
 800b85c:	4a20      	ldr	r2, [pc, #128]	; (800b8e0 <HAL_GPIO_Init+0x240>)
 800b85e:	4293      	cmp	r3, r2
 800b860:	d052      	beq.n	800b908 <HAL_GPIO_Init+0x268>
 800b862:	687b      	ldr	r3, [r7, #4]
 800b864:	4a1f      	ldr	r2, [pc, #124]	; (800b8e4 <HAL_GPIO_Init+0x244>)
 800b866:	4293      	cmp	r3, r2
 800b868:	d031      	beq.n	800b8ce <HAL_GPIO_Init+0x22e>
 800b86a:	687b      	ldr	r3, [r7, #4]
 800b86c:	4a1e      	ldr	r2, [pc, #120]	; (800b8e8 <HAL_GPIO_Init+0x248>)
 800b86e:	4293      	cmp	r3, r2
 800b870:	d02b      	beq.n	800b8ca <HAL_GPIO_Init+0x22a>
 800b872:	687b      	ldr	r3, [r7, #4]
 800b874:	4a1d      	ldr	r2, [pc, #116]	; (800b8ec <HAL_GPIO_Init+0x24c>)
 800b876:	4293      	cmp	r3, r2
 800b878:	d025      	beq.n	800b8c6 <HAL_GPIO_Init+0x226>
 800b87a:	687b      	ldr	r3, [r7, #4]
 800b87c:	4a1c      	ldr	r2, [pc, #112]	; (800b8f0 <HAL_GPIO_Init+0x250>)
 800b87e:	4293      	cmp	r3, r2
 800b880:	d01f      	beq.n	800b8c2 <HAL_GPIO_Init+0x222>
 800b882:	687b      	ldr	r3, [r7, #4]
 800b884:	4a1b      	ldr	r2, [pc, #108]	; (800b8f4 <HAL_GPIO_Init+0x254>)
 800b886:	4293      	cmp	r3, r2
 800b888:	d019      	beq.n	800b8be <HAL_GPIO_Init+0x21e>
 800b88a:	687b      	ldr	r3, [r7, #4]
 800b88c:	4a1a      	ldr	r2, [pc, #104]	; (800b8f8 <HAL_GPIO_Init+0x258>)
 800b88e:	4293      	cmp	r3, r2
 800b890:	d013      	beq.n	800b8ba <HAL_GPIO_Init+0x21a>
 800b892:	687b      	ldr	r3, [r7, #4]
 800b894:	4a19      	ldr	r2, [pc, #100]	; (800b8fc <HAL_GPIO_Init+0x25c>)
 800b896:	4293      	cmp	r3, r2
 800b898:	d00d      	beq.n	800b8b6 <HAL_GPIO_Init+0x216>
 800b89a:	687b      	ldr	r3, [r7, #4]
 800b89c:	4a18      	ldr	r2, [pc, #96]	; (800b900 <HAL_GPIO_Init+0x260>)
 800b89e:	4293      	cmp	r3, r2
 800b8a0:	d007      	beq.n	800b8b2 <HAL_GPIO_Init+0x212>
 800b8a2:	687b      	ldr	r3, [r7, #4]
 800b8a4:	4a17      	ldr	r2, [pc, #92]	; (800b904 <HAL_GPIO_Init+0x264>)
 800b8a6:	4293      	cmp	r3, r2
 800b8a8:	d101      	bne.n	800b8ae <HAL_GPIO_Init+0x20e>
 800b8aa:	2309      	movs	r3, #9
 800b8ac:	e02d      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8ae:	230a      	movs	r3, #10
 800b8b0:	e02b      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8b2:	2308      	movs	r3, #8
 800b8b4:	e029      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8b6:	2307      	movs	r3, #7
 800b8b8:	e027      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8ba:	2306      	movs	r3, #6
 800b8bc:	e025      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8be:	2305      	movs	r3, #5
 800b8c0:	e023      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8c2:	2304      	movs	r3, #4
 800b8c4:	e021      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8c6:	2303      	movs	r3, #3
 800b8c8:	e01f      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8ca:	2302      	movs	r3, #2
 800b8cc:	e01d      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8ce:	2301      	movs	r3, #1
 800b8d0:	e01b      	b.n	800b90a <HAL_GPIO_Init+0x26a>
 800b8d2:	bf00      	nop
 800b8d4:	58000080 	.word	0x58000080
 800b8d8:	58024400 	.word	0x58024400
 800b8dc:	58000400 	.word	0x58000400
 800b8e0:	58020000 	.word	0x58020000
 800b8e4:	58020400 	.word	0x58020400
 800b8e8:	58020800 	.word	0x58020800
 800b8ec:	58020c00 	.word	0x58020c00
 800b8f0:	58021000 	.word	0x58021000
 800b8f4:	58021400 	.word	0x58021400
 800b8f8:	58021800 	.word	0x58021800
 800b8fc:	58021c00 	.word	0x58021c00
 800b900:	58022000 	.word	0x58022000
 800b904:	58022400 	.word	0x58022400
 800b908:	2300      	movs	r3, #0
 800b90a:	69fa      	ldr	r2, [r7, #28]
 800b90c:	f002 0203 	and.w	r2, r2, #3
 800b910:	0092      	lsls	r2, r2, #2
 800b912:	4093      	lsls	r3, r2
 800b914:	69ba      	ldr	r2, [r7, #24]
 800b916:	4313      	orrs	r3, r2
 800b918:	61bb      	str	r3, [r7, #24]
 800b91a:	4938      	ldr	r1, [pc, #224]	; (800b9fc <HAL_GPIO_Init+0x35c>)
 800b91c:	69fb      	ldr	r3, [r7, #28]
 800b91e:	089b      	lsrs	r3, r3, #2
 800b920:	3302      	adds	r3, #2
 800b922:	69ba      	ldr	r2, [r7, #24]
 800b924:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800b928:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b92c:	681b      	ldr	r3, [r3, #0]
 800b92e:	61bb      	str	r3, [r7, #24]
 800b930:	693b      	ldr	r3, [r7, #16]
 800b932:	43db      	mvns	r3, r3
 800b934:	69ba      	ldr	r2, [r7, #24]
 800b936:	4013      	ands	r3, r2
 800b938:	61bb      	str	r3, [r7, #24]
 800b93a:	683b      	ldr	r3, [r7, #0]
 800b93c:	685b      	ldr	r3, [r3, #4]
 800b93e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800b942:	2b00      	cmp	r3, #0
 800b944:	d003      	beq.n	800b94e <HAL_GPIO_Init+0x2ae>
 800b946:	69ba      	ldr	r2, [r7, #24]
 800b948:	693b      	ldr	r3, [r7, #16]
 800b94a:	4313      	orrs	r3, r2
 800b94c:	61bb      	str	r3, [r7, #24]
 800b94e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b952:	69bb      	ldr	r3, [r7, #24]
 800b954:	6013      	str	r3, [r2, #0]
 800b956:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b95a:	685b      	ldr	r3, [r3, #4]
 800b95c:	61bb      	str	r3, [r7, #24]
 800b95e:	693b      	ldr	r3, [r7, #16]
 800b960:	43db      	mvns	r3, r3
 800b962:	69ba      	ldr	r2, [r7, #24]
 800b964:	4013      	ands	r3, r2
 800b966:	61bb      	str	r3, [r7, #24]
 800b968:	683b      	ldr	r3, [r7, #0]
 800b96a:	685b      	ldr	r3, [r3, #4]
 800b96c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800b970:	2b00      	cmp	r3, #0
 800b972:	d003      	beq.n	800b97c <HAL_GPIO_Init+0x2dc>
 800b974:	69ba      	ldr	r2, [r7, #24]
 800b976:	693b      	ldr	r3, [r7, #16]
 800b978:	4313      	orrs	r3, r2
 800b97a:	61bb      	str	r3, [r7, #24]
 800b97c:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b980:	69bb      	ldr	r3, [r7, #24]
 800b982:	6053      	str	r3, [r2, #4]
 800b984:	697b      	ldr	r3, [r7, #20]
 800b986:	685b      	ldr	r3, [r3, #4]
 800b988:	61bb      	str	r3, [r7, #24]
 800b98a:	693b      	ldr	r3, [r7, #16]
 800b98c:	43db      	mvns	r3, r3
 800b98e:	69ba      	ldr	r2, [r7, #24]
 800b990:	4013      	ands	r3, r2
 800b992:	61bb      	str	r3, [r7, #24]
 800b994:	683b      	ldr	r3, [r7, #0]
 800b996:	685b      	ldr	r3, [r3, #4]
 800b998:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b99c:	2b00      	cmp	r3, #0
 800b99e:	d003      	beq.n	800b9a8 <HAL_GPIO_Init+0x308>
 800b9a0:	69ba      	ldr	r2, [r7, #24]
 800b9a2:	693b      	ldr	r3, [r7, #16]
 800b9a4:	4313      	orrs	r3, r2
 800b9a6:	61bb      	str	r3, [r7, #24]
 800b9a8:	697b      	ldr	r3, [r7, #20]
 800b9aa:	69ba      	ldr	r2, [r7, #24]
 800b9ac:	605a      	str	r2, [r3, #4]
 800b9ae:	697b      	ldr	r3, [r7, #20]
 800b9b0:	681b      	ldr	r3, [r3, #0]
 800b9b2:	61bb      	str	r3, [r7, #24]
 800b9b4:	693b      	ldr	r3, [r7, #16]
 800b9b6:	43db      	mvns	r3, r3
 800b9b8:	69ba      	ldr	r2, [r7, #24]
 800b9ba:	4013      	ands	r3, r2
 800b9bc:	61bb      	str	r3, [r7, #24]
 800b9be:	683b      	ldr	r3, [r7, #0]
 800b9c0:	685b      	ldr	r3, [r3, #4]
 800b9c2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800b9c6:	2b00      	cmp	r3, #0
 800b9c8:	d003      	beq.n	800b9d2 <HAL_GPIO_Init+0x332>
 800b9ca:	69ba      	ldr	r2, [r7, #24]
 800b9cc:	693b      	ldr	r3, [r7, #16]
 800b9ce:	4313      	orrs	r3, r2
 800b9d0:	61bb      	str	r3, [r7, #24]
 800b9d2:	697b      	ldr	r3, [r7, #20]
 800b9d4:	69ba      	ldr	r2, [r7, #24]
 800b9d6:	601a      	str	r2, [r3, #0]
 800b9d8:	69fb      	ldr	r3, [r7, #28]
 800b9da:	3301      	adds	r3, #1
 800b9dc:	61fb      	str	r3, [r7, #28]
 800b9de:	683b      	ldr	r3, [r7, #0]
 800b9e0:	681a      	ldr	r2, [r3, #0]
 800b9e2:	69fb      	ldr	r3, [r7, #28]
 800b9e4:	fa22 f303 	lsr.w	r3, r2, r3
 800b9e8:	2b00      	cmp	r3, #0
 800b9ea:	f47f ae63 	bne.w	800b6b4 <HAL_GPIO_Init+0x14>
 800b9ee:	bf00      	nop
 800b9f0:	bf00      	nop
 800b9f2:	3724      	adds	r7, #36	; 0x24
 800b9f4:	46bd      	mov	sp, r7
 800b9f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9fa:	4770      	bx	lr
 800b9fc:	58000400 	.word	0x58000400

0800ba00 <HAL_GPIO_ReadPin>:
 800ba00:	b480      	push	{r7}
 800ba02:	b085      	sub	sp, #20
 800ba04:	af00      	add	r7, sp, #0
 800ba06:	6078      	str	r0, [r7, #4]
 800ba08:	460b      	mov	r3, r1
 800ba0a:	807b      	strh	r3, [r7, #2]
 800ba0c:	687b      	ldr	r3, [r7, #4]
 800ba0e:	691a      	ldr	r2, [r3, #16]
 800ba10:	887b      	ldrh	r3, [r7, #2]
 800ba12:	4013      	ands	r3, r2
 800ba14:	2b00      	cmp	r3, #0
 800ba16:	d002      	beq.n	800ba1e <HAL_GPIO_ReadPin+0x1e>
 800ba18:	2301      	movs	r3, #1
 800ba1a:	73fb      	strb	r3, [r7, #15]
 800ba1c:	e001      	b.n	800ba22 <HAL_GPIO_ReadPin+0x22>
 800ba1e:	2300      	movs	r3, #0
 800ba20:	73fb      	strb	r3, [r7, #15]
 800ba22:	7bfb      	ldrb	r3, [r7, #15]
 800ba24:	4618      	mov	r0, r3
 800ba26:	3714      	adds	r7, #20
 800ba28:	46bd      	mov	sp, r7
 800ba2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba2e:	4770      	bx	lr

0800ba30 <HAL_GPIO_WritePin>:
 800ba30:	b480      	push	{r7}
 800ba32:	b083      	sub	sp, #12
 800ba34:	af00      	add	r7, sp, #0
 800ba36:	6078      	str	r0, [r7, #4]
 800ba38:	460b      	mov	r3, r1
 800ba3a:	807b      	strh	r3, [r7, #2]
 800ba3c:	4613      	mov	r3, r2
 800ba3e:	707b      	strb	r3, [r7, #1]
 800ba40:	787b      	ldrb	r3, [r7, #1]
 800ba42:	2b00      	cmp	r3, #0
 800ba44:	d003      	beq.n	800ba4e <HAL_GPIO_WritePin+0x1e>
 800ba46:	887a      	ldrh	r2, [r7, #2]
 800ba48:	687b      	ldr	r3, [r7, #4]
 800ba4a:	619a      	str	r2, [r3, #24]
 800ba4c:	e003      	b.n	800ba56 <HAL_GPIO_WritePin+0x26>
 800ba4e:	887b      	ldrh	r3, [r7, #2]
 800ba50:	041a      	lsls	r2, r3, #16
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	619a      	str	r2, [r3, #24]
 800ba56:	bf00      	nop
 800ba58:	370c      	adds	r7, #12
 800ba5a:	46bd      	mov	sp, r7
 800ba5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba60:	4770      	bx	lr
	...

0800ba64 <HAL_I2C_Init>:
 800ba64:	b580      	push	{r7, lr}
 800ba66:	b082      	sub	sp, #8
 800ba68:	af00      	add	r7, sp, #0
 800ba6a:	6078      	str	r0, [r7, #4]
 800ba6c:	687b      	ldr	r3, [r7, #4]
 800ba6e:	2b00      	cmp	r3, #0
 800ba70:	d101      	bne.n	800ba76 <HAL_I2C_Init+0x12>
 800ba72:	2301      	movs	r3, #1
 800ba74:	e08b      	b.n	800bb8e <HAL_I2C_Init+0x12a>
 800ba76:	687b      	ldr	r3, [r7, #4]
 800ba78:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800ba7c:	b2db      	uxtb	r3, r3
 800ba7e:	2b00      	cmp	r3, #0
 800ba80:	d106      	bne.n	800ba90 <HAL_I2C_Init+0x2c>
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	2200      	movs	r2, #0
 800ba86:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800ba8a:	6878      	ldr	r0, [r7, #4]
 800ba8c:	f7f7 f870 	bl	8002b70 <HAL_I2C_MspInit>
 800ba90:	687b      	ldr	r3, [r7, #4]
 800ba92:	2224      	movs	r2, #36	; 0x24
 800ba94:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800ba98:	687b      	ldr	r3, [r7, #4]
 800ba9a:	681b      	ldr	r3, [r3, #0]
 800ba9c:	681a      	ldr	r2, [r3, #0]
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	681b      	ldr	r3, [r3, #0]
 800baa2:	f022 0201 	bic.w	r2, r2, #1
 800baa6:	601a      	str	r2, [r3, #0]
 800baa8:	687b      	ldr	r3, [r7, #4]
 800baaa:	685a      	ldr	r2, [r3, #4]
 800baac:	687b      	ldr	r3, [r7, #4]
 800baae:	681b      	ldr	r3, [r3, #0]
 800bab0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800bab4:	611a      	str	r2, [r3, #16]
 800bab6:	687b      	ldr	r3, [r7, #4]
 800bab8:	681b      	ldr	r3, [r3, #0]
 800baba:	689a      	ldr	r2, [r3, #8]
 800babc:	687b      	ldr	r3, [r7, #4]
 800babe:	681b      	ldr	r3, [r3, #0]
 800bac0:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800bac4:	609a      	str	r2, [r3, #8]
 800bac6:	687b      	ldr	r3, [r7, #4]
 800bac8:	68db      	ldr	r3, [r3, #12]
 800baca:	2b01      	cmp	r3, #1
 800bacc:	d107      	bne.n	800bade <HAL_I2C_Init+0x7a>
 800bace:	687b      	ldr	r3, [r7, #4]
 800bad0:	689a      	ldr	r2, [r3, #8]
 800bad2:	687b      	ldr	r3, [r7, #4]
 800bad4:	681b      	ldr	r3, [r3, #0]
 800bad6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800bada:	609a      	str	r2, [r3, #8]
 800badc:	e006      	b.n	800baec <HAL_I2C_Init+0x88>
 800bade:	687b      	ldr	r3, [r7, #4]
 800bae0:	689a      	ldr	r2, [r3, #8]
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	681b      	ldr	r3, [r3, #0]
 800bae6:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 800baea:	609a      	str	r2, [r3, #8]
 800baec:	687b      	ldr	r3, [r7, #4]
 800baee:	68db      	ldr	r3, [r3, #12]
 800baf0:	2b02      	cmp	r3, #2
 800baf2:	d108      	bne.n	800bb06 <HAL_I2C_Init+0xa2>
 800baf4:	687b      	ldr	r3, [r7, #4]
 800baf6:	681b      	ldr	r3, [r3, #0]
 800baf8:	685a      	ldr	r2, [r3, #4]
 800bafa:	687b      	ldr	r3, [r7, #4]
 800bafc:	681b      	ldr	r3, [r3, #0]
 800bafe:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bb02:	605a      	str	r2, [r3, #4]
 800bb04:	e007      	b.n	800bb16 <HAL_I2C_Init+0xb2>
 800bb06:	687b      	ldr	r3, [r7, #4]
 800bb08:	681b      	ldr	r3, [r3, #0]
 800bb0a:	685a      	ldr	r2, [r3, #4]
 800bb0c:	687b      	ldr	r3, [r7, #4]
 800bb0e:	681b      	ldr	r3, [r3, #0]
 800bb10:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bb14:	605a      	str	r2, [r3, #4]
 800bb16:	687b      	ldr	r3, [r7, #4]
 800bb18:	681b      	ldr	r3, [r3, #0]
 800bb1a:	6859      	ldr	r1, [r3, #4]
 800bb1c:	687b      	ldr	r3, [r7, #4]
 800bb1e:	681a      	ldr	r2, [r3, #0]
 800bb20:	4b1d      	ldr	r3, [pc, #116]	; (800bb98 <HAL_I2C_Init+0x134>)
 800bb22:	430b      	orrs	r3, r1
 800bb24:	6053      	str	r3, [r2, #4]
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	681b      	ldr	r3, [r3, #0]
 800bb2a:	68da      	ldr	r2, [r3, #12]
 800bb2c:	687b      	ldr	r3, [r7, #4]
 800bb2e:	681b      	ldr	r3, [r3, #0]
 800bb30:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800bb34:	60da      	str	r2, [r3, #12]
 800bb36:	687b      	ldr	r3, [r7, #4]
 800bb38:	691a      	ldr	r2, [r3, #16]
 800bb3a:	687b      	ldr	r3, [r7, #4]
 800bb3c:	695b      	ldr	r3, [r3, #20]
 800bb3e:	ea42 0103 	orr.w	r1, r2, r3
 800bb42:	687b      	ldr	r3, [r7, #4]
 800bb44:	699b      	ldr	r3, [r3, #24]
 800bb46:	021a      	lsls	r2, r3, #8
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	681b      	ldr	r3, [r3, #0]
 800bb4c:	430a      	orrs	r2, r1
 800bb4e:	60da      	str	r2, [r3, #12]
 800bb50:	687b      	ldr	r3, [r7, #4]
 800bb52:	69d9      	ldr	r1, [r3, #28]
 800bb54:	687b      	ldr	r3, [r7, #4]
 800bb56:	6a1a      	ldr	r2, [r3, #32]
 800bb58:	687b      	ldr	r3, [r7, #4]
 800bb5a:	681b      	ldr	r3, [r3, #0]
 800bb5c:	430a      	orrs	r2, r1
 800bb5e:	601a      	str	r2, [r3, #0]
 800bb60:	687b      	ldr	r3, [r7, #4]
 800bb62:	681b      	ldr	r3, [r3, #0]
 800bb64:	681a      	ldr	r2, [r3, #0]
 800bb66:	687b      	ldr	r3, [r7, #4]
 800bb68:	681b      	ldr	r3, [r3, #0]
 800bb6a:	f042 0201 	orr.w	r2, r2, #1
 800bb6e:	601a      	str	r2, [r3, #0]
 800bb70:	687b      	ldr	r3, [r7, #4]
 800bb72:	2200      	movs	r2, #0
 800bb74:	645a      	str	r2, [r3, #68]	; 0x44
 800bb76:	687b      	ldr	r3, [r7, #4]
 800bb78:	2220      	movs	r2, #32
 800bb7a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800bb7e:	687b      	ldr	r3, [r7, #4]
 800bb80:	2200      	movs	r2, #0
 800bb82:	631a      	str	r2, [r3, #48]	; 0x30
 800bb84:	687b      	ldr	r3, [r7, #4]
 800bb86:	2200      	movs	r2, #0
 800bb88:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800bb8c:	2300      	movs	r3, #0
 800bb8e:	4618      	mov	r0, r3
 800bb90:	3708      	adds	r7, #8
 800bb92:	46bd      	mov	sp, r7
 800bb94:	bd80      	pop	{r7, pc}
 800bb96:	bf00      	nop
 800bb98:	02008000 	.word	0x02008000

0800bb9c <HAL_I2C_Master_Transmit_DMA>:
 800bb9c:	b580      	push	{r7, lr}
 800bb9e:	b08a      	sub	sp, #40	; 0x28
 800bba0:	af02      	add	r7, sp, #8
 800bba2:	60f8      	str	r0, [r7, #12]
 800bba4:	607a      	str	r2, [r7, #4]
 800bba6:	461a      	mov	r2, r3
 800bba8:	460b      	mov	r3, r1
 800bbaa:	817b      	strh	r3, [r7, #10]
 800bbac:	4613      	mov	r3, r2
 800bbae:	813b      	strh	r3, [r7, #8]
 800bbb0:	2300      	movs	r3, #0
 800bbb2:	61bb      	str	r3, [r7, #24]
 800bbb4:	68fb      	ldr	r3, [r7, #12]
 800bbb6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800bbba:	b2db      	uxtb	r3, r3
 800bbbc:	2b20      	cmp	r3, #32
 800bbbe:	f040 80ef 	bne.w	800bda0 <HAL_I2C_Master_Transmit_DMA+0x204>
 800bbc2:	68fb      	ldr	r3, [r7, #12]
 800bbc4:	681b      	ldr	r3, [r3, #0]
 800bbc6:	699b      	ldr	r3, [r3, #24]
 800bbc8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800bbcc:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800bbd0:	d101      	bne.n	800bbd6 <HAL_I2C_Master_Transmit_DMA+0x3a>
 800bbd2:	2302      	movs	r3, #2
 800bbd4:	e0e5      	b.n	800bda2 <HAL_I2C_Master_Transmit_DMA+0x206>
 800bbd6:	68fb      	ldr	r3, [r7, #12]
 800bbd8:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800bbdc:	2b01      	cmp	r3, #1
 800bbde:	d101      	bne.n	800bbe4 <HAL_I2C_Master_Transmit_DMA+0x48>
 800bbe0:	2302      	movs	r3, #2
 800bbe2:	e0de      	b.n	800bda2 <HAL_I2C_Master_Transmit_DMA+0x206>
 800bbe4:	68fb      	ldr	r3, [r7, #12]
 800bbe6:	2201      	movs	r2, #1
 800bbe8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800bbec:	68fb      	ldr	r3, [r7, #12]
 800bbee:	2221      	movs	r2, #33	; 0x21
 800bbf0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800bbf4:	68fb      	ldr	r3, [r7, #12]
 800bbf6:	2210      	movs	r2, #16
 800bbf8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800bbfc:	68fb      	ldr	r3, [r7, #12]
 800bbfe:	2200      	movs	r2, #0
 800bc00:	645a      	str	r2, [r3, #68]	; 0x44
 800bc02:	68fb      	ldr	r3, [r7, #12]
 800bc04:	687a      	ldr	r2, [r7, #4]
 800bc06:	625a      	str	r2, [r3, #36]	; 0x24
 800bc08:	68fb      	ldr	r3, [r7, #12]
 800bc0a:	893a      	ldrh	r2, [r7, #8]
 800bc0c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800bc0e:	68fb      	ldr	r3, [r7, #12]
 800bc10:	4a66      	ldr	r2, [pc, #408]	; (800bdac <HAL_I2C_Master_Transmit_DMA+0x210>)
 800bc12:	62da      	str	r2, [r3, #44]	; 0x2c
 800bc14:	68fb      	ldr	r3, [r7, #12]
 800bc16:	4a66      	ldr	r2, [pc, #408]	; (800bdb0 <HAL_I2C_Master_Transmit_DMA+0x214>)
 800bc18:	635a      	str	r2, [r3, #52]	; 0x34
 800bc1a:	68fb      	ldr	r3, [r7, #12]
 800bc1c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800bc1e:	b29b      	uxth	r3, r3
 800bc20:	2bff      	cmp	r3, #255	; 0xff
 800bc22:	d906      	bls.n	800bc32 <HAL_I2C_Master_Transmit_DMA+0x96>
 800bc24:	68fb      	ldr	r3, [r7, #12]
 800bc26:	22ff      	movs	r2, #255	; 0xff
 800bc28:	851a      	strh	r2, [r3, #40]	; 0x28
 800bc2a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800bc2e:	61fb      	str	r3, [r7, #28]
 800bc30:	e007      	b.n	800bc42 <HAL_I2C_Master_Transmit_DMA+0xa6>
 800bc32:	68fb      	ldr	r3, [r7, #12]
 800bc34:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800bc36:	b29a      	uxth	r2, r3
 800bc38:	68fb      	ldr	r3, [r7, #12]
 800bc3a:	851a      	strh	r2, [r3, #40]	; 0x28
 800bc3c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800bc40:	61fb      	str	r3, [r7, #28]
 800bc42:	68fb      	ldr	r3, [r7, #12]
 800bc44:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bc46:	2b00      	cmp	r3, #0
 800bc48:	d01a      	beq.n	800bc80 <HAL_I2C_Master_Transmit_DMA+0xe4>
 800bc4a:	68fb      	ldr	r3, [r7, #12]
 800bc4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bc4e:	781a      	ldrb	r2, [r3, #0]
 800bc50:	68fb      	ldr	r3, [r7, #12]
 800bc52:	681b      	ldr	r3, [r3, #0]
 800bc54:	629a      	str	r2, [r3, #40]	; 0x28
 800bc56:	68fb      	ldr	r3, [r7, #12]
 800bc58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bc5a:	1c5a      	adds	r2, r3, #1
 800bc5c:	68fb      	ldr	r3, [r7, #12]
 800bc5e:	625a      	str	r2, [r3, #36]	; 0x24
 800bc60:	68fb      	ldr	r3, [r7, #12]
 800bc62:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bc64:	61bb      	str	r3, [r7, #24]
 800bc66:	68fb      	ldr	r3, [r7, #12]
 800bc68:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800bc6a:	b29b      	uxth	r3, r3
 800bc6c:	3b01      	subs	r3, #1
 800bc6e:	b29a      	uxth	r2, r3
 800bc70:	68fb      	ldr	r3, [r7, #12]
 800bc72:	855a      	strh	r2, [r3, #42]	; 0x2a
 800bc74:	68fb      	ldr	r3, [r7, #12]
 800bc76:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bc78:	3b01      	subs	r3, #1
 800bc7a:	b29a      	uxth	r2, r3
 800bc7c:	68fb      	ldr	r3, [r7, #12]
 800bc7e:	851a      	strh	r2, [r3, #40]	; 0x28
 800bc80:	68fb      	ldr	r3, [r7, #12]
 800bc82:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bc84:	2b00      	cmp	r3, #0
 800bc86:	d074      	beq.n	800bd72 <HAL_I2C_Master_Transmit_DMA+0x1d6>
 800bc88:	68fb      	ldr	r3, [r7, #12]
 800bc8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc8c:	2b00      	cmp	r3, #0
 800bc8e:	d022      	beq.n	800bcd6 <HAL_I2C_Master_Transmit_DMA+0x13a>
 800bc90:	68fb      	ldr	r3, [r7, #12]
 800bc92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc94:	4a47      	ldr	r2, [pc, #284]	; (800bdb4 <HAL_I2C_Master_Transmit_DMA+0x218>)
 800bc96:	63da      	str	r2, [r3, #60]	; 0x3c
 800bc98:	68fb      	ldr	r3, [r7, #12]
 800bc9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc9c:	4a46      	ldr	r2, [pc, #280]	; (800bdb8 <HAL_I2C_Master_Transmit_DMA+0x21c>)
 800bc9e:	64da      	str	r2, [r3, #76]	; 0x4c
 800bca0:	68fb      	ldr	r3, [r7, #12]
 800bca2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bca4:	2200      	movs	r2, #0
 800bca6:	641a      	str	r2, [r3, #64]	; 0x40
 800bca8:	68fb      	ldr	r3, [r7, #12]
 800bcaa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bcac:	2200      	movs	r2, #0
 800bcae:	651a      	str	r2, [r3, #80]	; 0x50
 800bcb0:	68fb      	ldr	r3, [r7, #12]
 800bcb2:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800bcb4:	68fb      	ldr	r3, [r7, #12]
 800bcb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bcb8:	4619      	mov	r1, r3
 800bcba:	68fb      	ldr	r3, [r7, #12]
 800bcbc:	681b      	ldr	r3, [r3, #0]
 800bcbe:	3328      	adds	r3, #40	; 0x28
 800bcc0:	461a      	mov	r2, r3
 800bcc2:	68fb      	ldr	r3, [r7, #12]
 800bcc4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bcc6:	f7fc ff17 	bl	8008af8 <HAL_DMA_Start_IT>
 800bcca:	4603      	mov	r3, r0
 800bccc:	75fb      	strb	r3, [r7, #23]
 800bcce:	7dfb      	ldrb	r3, [r7, #23]
 800bcd0:	2b00      	cmp	r3, #0
 800bcd2:	d13a      	bne.n	800bd4a <HAL_I2C_Master_Transmit_DMA+0x1ae>
 800bcd4:	e013      	b.n	800bcfe <HAL_I2C_Master_Transmit_DMA+0x162>
 800bcd6:	68fb      	ldr	r3, [r7, #12]
 800bcd8:	2220      	movs	r2, #32
 800bcda:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800bcde:	68fb      	ldr	r3, [r7, #12]
 800bce0:	2200      	movs	r2, #0
 800bce2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800bce6:	68fb      	ldr	r3, [r7, #12]
 800bce8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bcea:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800bcee:	68fb      	ldr	r3, [r7, #12]
 800bcf0:	645a      	str	r2, [r3, #68]	; 0x44
 800bcf2:	68fb      	ldr	r3, [r7, #12]
 800bcf4:	2200      	movs	r2, #0
 800bcf6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800bcfa:	2301      	movs	r3, #1
 800bcfc:	e051      	b.n	800bda2 <HAL_I2C_Master_Transmit_DMA+0x206>
 800bcfe:	68fb      	ldr	r3, [r7, #12]
 800bd00:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bd02:	b2db      	uxtb	r3, r3
 800bd04:	3301      	adds	r3, #1
 800bd06:	b2da      	uxtb	r2, r3
 800bd08:	8979      	ldrh	r1, [r7, #10]
 800bd0a:	4b2c      	ldr	r3, [pc, #176]	; (800bdbc <HAL_I2C_Master_Transmit_DMA+0x220>)
 800bd0c:	9300      	str	r3, [sp, #0]
 800bd0e:	69fb      	ldr	r3, [r7, #28]
 800bd10:	68f8      	ldr	r0, [r7, #12]
 800bd12:	f002 f83b 	bl	800dd8c <I2C_TransferConfig>
 800bd16:	68fb      	ldr	r3, [r7, #12]
 800bd18:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800bd1a:	b29a      	uxth	r2, r3
 800bd1c:	68fb      	ldr	r3, [r7, #12]
 800bd1e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bd20:	1ad3      	subs	r3, r2, r3
 800bd22:	b29a      	uxth	r2, r3
 800bd24:	68fb      	ldr	r3, [r7, #12]
 800bd26:	855a      	strh	r2, [r3, #42]	; 0x2a
 800bd28:	68fb      	ldr	r3, [r7, #12]
 800bd2a:	2200      	movs	r2, #0
 800bd2c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800bd30:	2110      	movs	r1, #16
 800bd32:	68f8      	ldr	r0, [r7, #12]
 800bd34:	f002 f85c 	bl	800ddf0 <I2C_Enable_IRQ>
 800bd38:	68fb      	ldr	r3, [r7, #12]
 800bd3a:	681b      	ldr	r3, [r3, #0]
 800bd3c:	681a      	ldr	r2, [r3, #0]
 800bd3e:	68fb      	ldr	r3, [r7, #12]
 800bd40:	681b      	ldr	r3, [r3, #0]
 800bd42:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800bd46:	601a      	str	r2, [r3, #0]
 800bd48:	e028      	b.n	800bd9c <HAL_I2C_Master_Transmit_DMA+0x200>
 800bd4a:	68fb      	ldr	r3, [r7, #12]
 800bd4c:	2220      	movs	r2, #32
 800bd4e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800bd52:	68fb      	ldr	r3, [r7, #12]
 800bd54:	2200      	movs	r2, #0
 800bd56:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800bd5a:	68fb      	ldr	r3, [r7, #12]
 800bd5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bd5e:	f043 0210 	orr.w	r2, r3, #16
 800bd62:	68fb      	ldr	r3, [r7, #12]
 800bd64:	645a      	str	r2, [r3, #68]	; 0x44
 800bd66:	68fb      	ldr	r3, [r7, #12]
 800bd68:	2200      	movs	r2, #0
 800bd6a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800bd6e:	2301      	movs	r3, #1
 800bd70:	e017      	b.n	800bda2 <HAL_I2C_Master_Transmit_DMA+0x206>
 800bd72:	68fb      	ldr	r3, [r7, #12]
 800bd74:	4a12      	ldr	r2, [pc, #72]	; (800bdc0 <HAL_I2C_Master_Transmit_DMA+0x224>)
 800bd76:	635a      	str	r2, [r3, #52]	; 0x34
 800bd78:	69bb      	ldr	r3, [r7, #24]
 800bd7a:	b2da      	uxtb	r2, r3
 800bd7c:	8979      	ldrh	r1, [r7, #10]
 800bd7e:	4b0f      	ldr	r3, [pc, #60]	; (800bdbc <HAL_I2C_Master_Transmit_DMA+0x220>)
 800bd80:	9300      	str	r3, [sp, #0]
 800bd82:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800bd86:	68f8      	ldr	r0, [r7, #12]
 800bd88:	f002 f800 	bl	800dd8c <I2C_TransferConfig>
 800bd8c:	68fb      	ldr	r3, [r7, #12]
 800bd8e:	2200      	movs	r2, #0
 800bd90:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800bd94:	2101      	movs	r1, #1
 800bd96:	68f8      	ldr	r0, [r7, #12]
 800bd98:	f002 f82a 	bl	800ddf0 <I2C_Enable_IRQ>
 800bd9c:	2300      	movs	r3, #0
 800bd9e:	e000      	b.n	800bda2 <HAL_I2C_Master_Transmit_DMA+0x206>
 800bda0:	2302      	movs	r3, #2
 800bda2:	4618      	mov	r0, r3
 800bda4:	3720      	adds	r7, #32
 800bda6:	46bd      	mov	sp, r7
 800bda8:	bd80      	pop	{r7, pc}
 800bdaa:	bf00      	nop
 800bdac:	ffff0000 	.word	0xffff0000
 800bdb0:	0800c5f7 	.word	0x0800c5f7
 800bdb4:	0800d9af 	.word	0x0800d9af
 800bdb8:	0800dadd 	.word	0x0800dadd
 800bdbc:	80002000 	.word	0x80002000
 800bdc0:	0800c187 	.word	0x0800c187

0800bdc4 <HAL_I2C_Master_Receive_DMA>:
 800bdc4:	b580      	push	{r7, lr}
 800bdc6:	b088      	sub	sp, #32
 800bdc8:	af02      	add	r7, sp, #8
 800bdca:	60f8      	str	r0, [r7, #12]
 800bdcc:	607a      	str	r2, [r7, #4]
 800bdce:	461a      	mov	r2, r3
 800bdd0:	460b      	mov	r3, r1
 800bdd2:	817b      	strh	r3, [r7, #10]
 800bdd4:	4613      	mov	r3, r2
 800bdd6:	813b      	strh	r3, [r7, #8]
 800bdd8:	68fb      	ldr	r3, [r7, #12]
 800bdda:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800bdde:	b2db      	uxtb	r3, r3
 800bde0:	2b20      	cmp	r3, #32
 800bde2:	f040 80cd 	bne.w	800bf80 <HAL_I2C_Master_Receive_DMA+0x1bc>
 800bde6:	68fb      	ldr	r3, [r7, #12]
 800bde8:	681b      	ldr	r3, [r3, #0]
 800bdea:	699b      	ldr	r3, [r3, #24]
 800bdec:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800bdf0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800bdf4:	d101      	bne.n	800bdfa <HAL_I2C_Master_Receive_DMA+0x36>
 800bdf6:	2302      	movs	r3, #2
 800bdf8:	e0c3      	b.n	800bf82 <HAL_I2C_Master_Receive_DMA+0x1be>
 800bdfa:	68fb      	ldr	r3, [r7, #12]
 800bdfc:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800be00:	2b01      	cmp	r3, #1
 800be02:	d101      	bne.n	800be08 <HAL_I2C_Master_Receive_DMA+0x44>
 800be04:	2302      	movs	r3, #2
 800be06:	e0bc      	b.n	800bf82 <HAL_I2C_Master_Receive_DMA+0x1be>
 800be08:	68fb      	ldr	r3, [r7, #12]
 800be0a:	2201      	movs	r2, #1
 800be0c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800be10:	68fb      	ldr	r3, [r7, #12]
 800be12:	2222      	movs	r2, #34	; 0x22
 800be14:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800be18:	68fb      	ldr	r3, [r7, #12]
 800be1a:	2210      	movs	r2, #16
 800be1c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800be20:	68fb      	ldr	r3, [r7, #12]
 800be22:	2200      	movs	r2, #0
 800be24:	645a      	str	r2, [r3, #68]	; 0x44
 800be26:	68fb      	ldr	r3, [r7, #12]
 800be28:	687a      	ldr	r2, [r7, #4]
 800be2a:	625a      	str	r2, [r3, #36]	; 0x24
 800be2c:	68fb      	ldr	r3, [r7, #12]
 800be2e:	893a      	ldrh	r2, [r7, #8]
 800be30:	855a      	strh	r2, [r3, #42]	; 0x2a
 800be32:	68fb      	ldr	r3, [r7, #12]
 800be34:	4a55      	ldr	r2, [pc, #340]	; (800bf8c <HAL_I2C_Master_Receive_DMA+0x1c8>)
 800be36:	62da      	str	r2, [r3, #44]	; 0x2c
 800be38:	68fb      	ldr	r3, [r7, #12]
 800be3a:	4a55      	ldr	r2, [pc, #340]	; (800bf90 <HAL_I2C_Master_Receive_DMA+0x1cc>)
 800be3c:	635a      	str	r2, [r3, #52]	; 0x34
 800be3e:	68fb      	ldr	r3, [r7, #12]
 800be40:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800be42:	b29b      	uxth	r3, r3
 800be44:	2bff      	cmp	r3, #255	; 0xff
 800be46:	d906      	bls.n	800be56 <HAL_I2C_Master_Receive_DMA+0x92>
 800be48:	68fb      	ldr	r3, [r7, #12]
 800be4a:	22ff      	movs	r2, #255	; 0xff
 800be4c:	851a      	strh	r2, [r3, #40]	; 0x28
 800be4e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800be52:	617b      	str	r3, [r7, #20]
 800be54:	e007      	b.n	800be66 <HAL_I2C_Master_Receive_DMA+0xa2>
 800be56:	68fb      	ldr	r3, [r7, #12]
 800be58:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800be5a:	b29a      	uxth	r2, r3
 800be5c:	68fb      	ldr	r3, [r7, #12]
 800be5e:	851a      	strh	r2, [r3, #40]	; 0x28
 800be60:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800be64:	617b      	str	r3, [r7, #20]
 800be66:	68fb      	ldr	r3, [r7, #12]
 800be68:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800be6a:	2b00      	cmp	r3, #0
 800be6c:	d070      	beq.n	800bf50 <HAL_I2C_Master_Receive_DMA+0x18c>
 800be6e:	68fb      	ldr	r3, [r7, #12]
 800be70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be72:	2b00      	cmp	r3, #0
 800be74:	d020      	beq.n	800beb8 <HAL_I2C_Master_Receive_DMA+0xf4>
 800be76:	68fb      	ldr	r3, [r7, #12]
 800be78:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be7a:	4a46      	ldr	r2, [pc, #280]	; (800bf94 <HAL_I2C_Master_Receive_DMA+0x1d0>)
 800be7c:	63da      	str	r2, [r3, #60]	; 0x3c
 800be7e:	68fb      	ldr	r3, [r7, #12]
 800be80:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be82:	4a45      	ldr	r2, [pc, #276]	; (800bf98 <HAL_I2C_Master_Receive_DMA+0x1d4>)
 800be84:	64da      	str	r2, [r3, #76]	; 0x4c
 800be86:	68fb      	ldr	r3, [r7, #12]
 800be88:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be8a:	2200      	movs	r2, #0
 800be8c:	641a      	str	r2, [r3, #64]	; 0x40
 800be8e:	68fb      	ldr	r3, [r7, #12]
 800be90:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be92:	2200      	movs	r2, #0
 800be94:	651a      	str	r2, [r3, #80]	; 0x50
 800be96:	68fb      	ldr	r3, [r7, #12]
 800be98:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800be9a:	68fb      	ldr	r3, [r7, #12]
 800be9c:	681b      	ldr	r3, [r3, #0]
 800be9e:	3324      	adds	r3, #36	; 0x24
 800bea0:	4619      	mov	r1, r3
 800bea2:	687a      	ldr	r2, [r7, #4]
 800bea4:	68fb      	ldr	r3, [r7, #12]
 800bea6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bea8:	f7fc fe26 	bl	8008af8 <HAL_DMA_Start_IT>
 800beac:	4603      	mov	r3, r0
 800beae:	74fb      	strb	r3, [r7, #19]
 800beb0:	7cfb      	ldrb	r3, [r7, #19]
 800beb2:	2b00      	cmp	r3, #0
 800beb4:	d138      	bne.n	800bf28 <HAL_I2C_Master_Receive_DMA+0x164>
 800beb6:	e013      	b.n	800bee0 <HAL_I2C_Master_Receive_DMA+0x11c>
 800beb8:	68fb      	ldr	r3, [r7, #12]
 800beba:	2220      	movs	r2, #32
 800bebc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800bec0:	68fb      	ldr	r3, [r7, #12]
 800bec2:	2200      	movs	r2, #0
 800bec4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800bec8:	68fb      	ldr	r3, [r7, #12]
 800beca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800becc:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800bed0:	68fb      	ldr	r3, [r7, #12]
 800bed2:	645a      	str	r2, [r3, #68]	; 0x44
 800bed4:	68fb      	ldr	r3, [r7, #12]
 800bed6:	2200      	movs	r2, #0
 800bed8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800bedc:	2301      	movs	r3, #1
 800bede:	e050      	b.n	800bf82 <HAL_I2C_Master_Receive_DMA+0x1be>
 800bee0:	68fb      	ldr	r3, [r7, #12]
 800bee2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bee4:	b2da      	uxtb	r2, r3
 800bee6:	8979      	ldrh	r1, [r7, #10]
 800bee8:	4b2c      	ldr	r3, [pc, #176]	; (800bf9c <HAL_I2C_Master_Receive_DMA+0x1d8>)
 800beea:	9300      	str	r3, [sp, #0]
 800beec:	697b      	ldr	r3, [r7, #20]
 800beee:	68f8      	ldr	r0, [r7, #12]
 800bef0:	f001 ff4c 	bl	800dd8c <I2C_TransferConfig>
 800bef4:	68fb      	ldr	r3, [r7, #12]
 800bef6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800bef8:	b29a      	uxth	r2, r3
 800befa:	68fb      	ldr	r3, [r7, #12]
 800befc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800befe:	1ad3      	subs	r3, r2, r3
 800bf00:	b29a      	uxth	r2, r3
 800bf02:	68fb      	ldr	r3, [r7, #12]
 800bf04:	855a      	strh	r2, [r3, #42]	; 0x2a
 800bf06:	68fb      	ldr	r3, [r7, #12]
 800bf08:	2200      	movs	r2, #0
 800bf0a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800bf0e:	2110      	movs	r1, #16
 800bf10:	68f8      	ldr	r0, [r7, #12]
 800bf12:	f001 ff6d 	bl	800ddf0 <I2C_Enable_IRQ>
 800bf16:	68fb      	ldr	r3, [r7, #12]
 800bf18:	681b      	ldr	r3, [r3, #0]
 800bf1a:	681a      	ldr	r2, [r3, #0]
 800bf1c:	68fb      	ldr	r3, [r7, #12]
 800bf1e:	681b      	ldr	r3, [r3, #0]
 800bf20:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800bf24:	601a      	str	r2, [r3, #0]
 800bf26:	e029      	b.n	800bf7c <HAL_I2C_Master_Receive_DMA+0x1b8>
 800bf28:	68fb      	ldr	r3, [r7, #12]
 800bf2a:	2220      	movs	r2, #32
 800bf2c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800bf30:	68fb      	ldr	r3, [r7, #12]
 800bf32:	2200      	movs	r2, #0
 800bf34:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800bf38:	68fb      	ldr	r3, [r7, #12]
 800bf3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bf3c:	f043 0210 	orr.w	r2, r3, #16
 800bf40:	68fb      	ldr	r3, [r7, #12]
 800bf42:	645a      	str	r2, [r3, #68]	; 0x44
 800bf44:	68fb      	ldr	r3, [r7, #12]
 800bf46:	2200      	movs	r2, #0
 800bf48:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800bf4c:	2301      	movs	r3, #1
 800bf4e:	e018      	b.n	800bf82 <HAL_I2C_Master_Receive_DMA+0x1be>
 800bf50:	68fb      	ldr	r3, [r7, #12]
 800bf52:	4a13      	ldr	r2, [pc, #76]	; (800bfa0 <HAL_I2C_Master_Receive_DMA+0x1dc>)
 800bf54:	635a      	str	r2, [r3, #52]	; 0x34
 800bf56:	68fb      	ldr	r3, [r7, #12]
 800bf58:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800bf5a:	b2da      	uxtb	r2, r3
 800bf5c:	8979      	ldrh	r1, [r7, #10]
 800bf5e:	4b0f      	ldr	r3, [pc, #60]	; (800bf9c <HAL_I2C_Master_Receive_DMA+0x1d8>)
 800bf60:	9300      	str	r3, [sp, #0]
 800bf62:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800bf66:	68f8      	ldr	r0, [r7, #12]
 800bf68:	f001 ff10 	bl	800dd8c <I2C_TransferConfig>
 800bf6c:	68fb      	ldr	r3, [r7, #12]
 800bf6e:	2200      	movs	r2, #0
 800bf70:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800bf74:	2102      	movs	r1, #2
 800bf76:	68f8      	ldr	r0, [r7, #12]
 800bf78:	f001 ff3a 	bl	800ddf0 <I2C_Enable_IRQ>
 800bf7c:	2300      	movs	r3, #0
 800bf7e:	e000      	b.n	800bf82 <HAL_I2C_Master_Receive_DMA+0x1be>
 800bf80:	2302      	movs	r3, #2
 800bf82:	4618      	mov	r0, r3
 800bf84:	3718      	adds	r7, #24
 800bf86:	46bd      	mov	sp, r7
 800bf88:	bd80      	pop	{r7, pc}
 800bf8a:	bf00      	nop
 800bf8c:	ffff0000 	.word	0xffff0000
 800bf90:	0800c5f7 	.word	0x0800c5f7
 800bf94:	0800da45 	.word	0x0800da45
 800bf98:	0800dadd 	.word	0x0800dadd
 800bf9c:	80002400 	.word	0x80002400
 800bfa0:	0800c187 	.word	0x0800c187

0800bfa4 <HAL_I2C_EV_IRQHandler>:
 800bfa4:	b580      	push	{r7, lr}
 800bfa6:	b084      	sub	sp, #16
 800bfa8:	af00      	add	r7, sp, #0
 800bfaa:	6078      	str	r0, [r7, #4]
 800bfac:	687b      	ldr	r3, [r7, #4]
 800bfae:	681b      	ldr	r3, [r3, #0]
 800bfb0:	699b      	ldr	r3, [r3, #24]
 800bfb2:	60fb      	str	r3, [r7, #12]
 800bfb4:	687b      	ldr	r3, [r7, #4]
 800bfb6:	681b      	ldr	r3, [r3, #0]
 800bfb8:	681b      	ldr	r3, [r3, #0]
 800bfba:	60bb      	str	r3, [r7, #8]
 800bfbc:	687b      	ldr	r3, [r7, #4]
 800bfbe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bfc0:	2b00      	cmp	r3, #0
 800bfc2:	d005      	beq.n	800bfd0 <HAL_I2C_EV_IRQHandler+0x2c>
 800bfc4:	687b      	ldr	r3, [r7, #4]
 800bfc6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bfc8:	68ba      	ldr	r2, [r7, #8]
 800bfca:	68f9      	ldr	r1, [r7, #12]
 800bfcc:	6878      	ldr	r0, [r7, #4]
 800bfce:	4798      	blx	r3
 800bfd0:	bf00      	nop
 800bfd2:	3710      	adds	r7, #16
 800bfd4:	46bd      	mov	sp, r7
 800bfd6:	bd80      	pop	{r7, pc}

0800bfd8 <HAL_I2C_ER_IRQHandler>:
 800bfd8:	b580      	push	{r7, lr}
 800bfda:	b086      	sub	sp, #24
 800bfdc:	af00      	add	r7, sp, #0
 800bfde:	6078      	str	r0, [r7, #4]
 800bfe0:	687b      	ldr	r3, [r7, #4]
 800bfe2:	681b      	ldr	r3, [r3, #0]
 800bfe4:	699b      	ldr	r3, [r3, #24]
 800bfe6:	617b      	str	r3, [r7, #20]
 800bfe8:	687b      	ldr	r3, [r7, #4]
 800bfea:	681b      	ldr	r3, [r3, #0]
 800bfec:	681b      	ldr	r3, [r3, #0]
 800bfee:	613b      	str	r3, [r7, #16]
 800bff0:	697b      	ldr	r3, [r7, #20]
 800bff2:	0a1b      	lsrs	r3, r3, #8
 800bff4:	f003 0301 	and.w	r3, r3, #1
 800bff8:	2b00      	cmp	r3, #0
 800bffa:	d010      	beq.n	800c01e <HAL_I2C_ER_IRQHandler+0x46>
 800bffc:	693b      	ldr	r3, [r7, #16]
 800bffe:	09db      	lsrs	r3, r3, #7
 800c000:	f003 0301 	and.w	r3, r3, #1
 800c004:	2b00      	cmp	r3, #0
 800c006:	d00a      	beq.n	800c01e <HAL_I2C_ER_IRQHandler+0x46>
 800c008:	687b      	ldr	r3, [r7, #4]
 800c00a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c00c:	f043 0201 	orr.w	r2, r3, #1
 800c010:	687b      	ldr	r3, [r7, #4]
 800c012:	645a      	str	r2, [r3, #68]	; 0x44
 800c014:	687b      	ldr	r3, [r7, #4]
 800c016:	681b      	ldr	r3, [r3, #0]
 800c018:	f44f 7280 	mov.w	r2, #256	; 0x100
 800c01c:	61da      	str	r2, [r3, #28]
 800c01e:	697b      	ldr	r3, [r7, #20]
 800c020:	0a9b      	lsrs	r3, r3, #10
 800c022:	f003 0301 	and.w	r3, r3, #1
 800c026:	2b00      	cmp	r3, #0
 800c028:	d010      	beq.n	800c04c <HAL_I2C_ER_IRQHandler+0x74>
 800c02a:	693b      	ldr	r3, [r7, #16]
 800c02c:	09db      	lsrs	r3, r3, #7
 800c02e:	f003 0301 	and.w	r3, r3, #1
 800c032:	2b00      	cmp	r3, #0
 800c034:	d00a      	beq.n	800c04c <HAL_I2C_ER_IRQHandler+0x74>
 800c036:	687b      	ldr	r3, [r7, #4]
 800c038:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c03a:	f043 0208 	orr.w	r2, r3, #8
 800c03e:	687b      	ldr	r3, [r7, #4]
 800c040:	645a      	str	r2, [r3, #68]	; 0x44
 800c042:	687b      	ldr	r3, [r7, #4]
 800c044:	681b      	ldr	r3, [r3, #0]
 800c046:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c04a:	61da      	str	r2, [r3, #28]
 800c04c:	697b      	ldr	r3, [r7, #20]
 800c04e:	0a5b      	lsrs	r3, r3, #9
 800c050:	f003 0301 	and.w	r3, r3, #1
 800c054:	2b00      	cmp	r3, #0
 800c056:	d010      	beq.n	800c07a <HAL_I2C_ER_IRQHandler+0xa2>
 800c058:	693b      	ldr	r3, [r7, #16]
 800c05a:	09db      	lsrs	r3, r3, #7
 800c05c:	f003 0301 	and.w	r3, r3, #1
 800c060:	2b00      	cmp	r3, #0
 800c062:	d00a      	beq.n	800c07a <HAL_I2C_ER_IRQHandler+0xa2>
 800c064:	687b      	ldr	r3, [r7, #4]
 800c066:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c068:	f043 0202 	orr.w	r2, r3, #2
 800c06c:	687b      	ldr	r3, [r7, #4]
 800c06e:	645a      	str	r2, [r3, #68]	; 0x44
 800c070:	687b      	ldr	r3, [r7, #4]
 800c072:	681b      	ldr	r3, [r3, #0]
 800c074:	f44f 7200 	mov.w	r2, #512	; 0x200
 800c078:	61da      	str	r2, [r3, #28]
 800c07a:	687b      	ldr	r3, [r7, #4]
 800c07c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c07e:	60fb      	str	r3, [r7, #12]
 800c080:	68fb      	ldr	r3, [r7, #12]
 800c082:	f003 030b 	and.w	r3, r3, #11
 800c086:	2b00      	cmp	r3, #0
 800c088:	d003      	beq.n	800c092 <HAL_I2C_ER_IRQHandler+0xba>
 800c08a:	68f9      	ldr	r1, [r7, #12]
 800c08c:	6878      	ldr	r0, [r7, #4]
 800c08e:	f001 fb53 	bl	800d738 <I2C_ITError>
 800c092:	bf00      	nop
 800c094:	3718      	adds	r7, #24
 800c096:	46bd      	mov	sp, r7
 800c098:	bd80      	pop	{r7, pc}

0800c09a <HAL_I2C_MasterTxCpltCallback>:
 800c09a:	b480      	push	{r7}
 800c09c:	b083      	sub	sp, #12
 800c09e:	af00      	add	r7, sp, #0
 800c0a0:	6078      	str	r0, [r7, #4]
 800c0a2:	bf00      	nop
 800c0a4:	370c      	adds	r7, #12
 800c0a6:	46bd      	mov	sp, r7
 800c0a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0ac:	4770      	bx	lr

0800c0ae <HAL_I2C_MasterRxCpltCallback>:
 800c0ae:	b480      	push	{r7}
 800c0b0:	b083      	sub	sp, #12
 800c0b2:	af00      	add	r7, sp, #0
 800c0b4:	6078      	str	r0, [r7, #4]
 800c0b6:	bf00      	nop
 800c0b8:	370c      	adds	r7, #12
 800c0ba:	46bd      	mov	sp, r7
 800c0bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0c0:	4770      	bx	lr

0800c0c2 <HAL_I2C_SlaveTxCpltCallback>:
 800c0c2:	b480      	push	{r7}
 800c0c4:	b083      	sub	sp, #12
 800c0c6:	af00      	add	r7, sp, #0
 800c0c8:	6078      	str	r0, [r7, #4]
 800c0ca:	bf00      	nop
 800c0cc:	370c      	adds	r7, #12
 800c0ce:	46bd      	mov	sp, r7
 800c0d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0d4:	4770      	bx	lr

0800c0d6 <HAL_I2C_SlaveRxCpltCallback>:
 800c0d6:	b480      	push	{r7}
 800c0d8:	b083      	sub	sp, #12
 800c0da:	af00      	add	r7, sp, #0
 800c0dc:	6078      	str	r0, [r7, #4]
 800c0de:	bf00      	nop
 800c0e0:	370c      	adds	r7, #12
 800c0e2:	46bd      	mov	sp, r7
 800c0e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0e8:	4770      	bx	lr

0800c0ea <HAL_I2C_AddrCallback>:
 800c0ea:	b480      	push	{r7}
 800c0ec:	b083      	sub	sp, #12
 800c0ee:	af00      	add	r7, sp, #0
 800c0f0:	6078      	str	r0, [r7, #4]
 800c0f2:	460b      	mov	r3, r1
 800c0f4:	70fb      	strb	r3, [r7, #3]
 800c0f6:	4613      	mov	r3, r2
 800c0f8:	803b      	strh	r3, [r7, #0]
 800c0fa:	bf00      	nop
 800c0fc:	370c      	adds	r7, #12
 800c0fe:	46bd      	mov	sp, r7
 800c100:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c104:	4770      	bx	lr

0800c106 <HAL_I2C_ListenCpltCallback>:
 800c106:	b480      	push	{r7}
 800c108:	b083      	sub	sp, #12
 800c10a:	af00      	add	r7, sp, #0
 800c10c:	6078      	str	r0, [r7, #4]
 800c10e:	bf00      	nop
 800c110:	370c      	adds	r7, #12
 800c112:	46bd      	mov	sp, r7
 800c114:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c118:	4770      	bx	lr

0800c11a <HAL_I2C_MemTxCpltCallback>:
 800c11a:	b480      	push	{r7}
 800c11c:	b083      	sub	sp, #12
 800c11e:	af00      	add	r7, sp, #0
 800c120:	6078      	str	r0, [r7, #4]
 800c122:	bf00      	nop
 800c124:	370c      	adds	r7, #12
 800c126:	46bd      	mov	sp, r7
 800c128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c12c:	4770      	bx	lr

0800c12e <HAL_I2C_MemRxCpltCallback>:
 800c12e:	b480      	push	{r7}
 800c130:	b083      	sub	sp, #12
 800c132:	af00      	add	r7, sp, #0
 800c134:	6078      	str	r0, [r7, #4]
 800c136:	bf00      	nop
 800c138:	370c      	adds	r7, #12
 800c13a:	46bd      	mov	sp, r7
 800c13c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c140:	4770      	bx	lr

0800c142 <HAL_I2C_ErrorCallback>:
 800c142:	b480      	push	{r7}
 800c144:	b083      	sub	sp, #12
 800c146:	af00      	add	r7, sp, #0
 800c148:	6078      	str	r0, [r7, #4]
 800c14a:	bf00      	nop
 800c14c:	370c      	adds	r7, #12
 800c14e:	46bd      	mov	sp, r7
 800c150:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c154:	4770      	bx	lr

0800c156 <HAL_I2C_AbortCpltCallback>:
 800c156:	b480      	push	{r7}
 800c158:	b083      	sub	sp, #12
 800c15a:	af00      	add	r7, sp, #0
 800c15c:	6078      	str	r0, [r7, #4]
 800c15e:	bf00      	nop
 800c160:	370c      	adds	r7, #12
 800c162:	46bd      	mov	sp, r7
 800c164:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c168:	4770      	bx	lr

0800c16a <HAL_I2C_GetState>:
 800c16a:	b480      	push	{r7}
 800c16c:	b083      	sub	sp, #12
 800c16e:	af00      	add	r7, sp, #0
 800c170:	6078      	str	r0, [r7, #4]
 800c172:	687b      	ldr	r3, [r7, #4]
 800c174:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800c178:	b2db      	uxtb	r3, r3
 800c17a:	4618      	mov	r0, r3
 800c17c:	370c      	adds	r7, #12
 800c17e:	46bd      	mov	sp, r7
 800c180:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c184:	4770      	bx	lr

0800c186 <I2C_Master_ISR_IT>:
 800c186:	b580      	push	{r7, lr}
 800c188:	b088      	sub	sp, #32
 800c18a:	af02      	add	r7, sp, #8
 800c18c:	60f8      	str	r0, [r7, #12]
 800c18e:	60b9      	str	r1, [r7, #8]
 800c190:	607a      	str	r2, [r7, #4]
 800c192:	68bb      	ldr	r3, [r7, #8]
 800c194:	617b      	str	r3, [r7, #20]
 800c196:	68fb      	ldr	r3, [r7, #12]
 800c198:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800c19c:	2b01      	cmp	r3, #1
 800c19e:	d101      	bne.n	800c1a4 <I2C_Master_ISR_IT+0x1e>
 800c1a0:	2302      	movs	r3, #2
 800c1a2:	e120      	b.n	800c3e6 <I2C_Master_ISR_IT+0x260>
 800c1a4:	68fb      	ldr	r3, [r7, #12]
 800c1a6:	2201      	movs	r2, #1
 800c1a8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c1ac:	697b      	ldr	r3, [r7, #20]
 800c1ae:	091b      	lsrs	r3, r3, #4
 800c1b0:	f003 0301 	and.w	r3, r3, #1
 800c1b4:	2b00      	cmp	r3, #0
 800c1b6:	d013      	beq.n	800c1e0 <I2C_Master_ISR_IT+0x5a>
 800c1b8:	687b      	ldr	r3, [r7, #4]
 800c1ba:	091b      	lsrs	r3, r3, #4
 800c1bc:	f003 0301 	and.w	r3, r3, #1
 800c1c0:	2b00      	cmp	r3, #0
 800c1c2:	d00d      	beq.n	800c1e0 <I2C_Master_ISR_IT+0x5a>
 800c1c4:	68fb      	ldr	r3, [r7, #12]
 800c1c6:	681b      	ldr	r3, [r3, #0]
 800c1c8:	2210      	movs	r2, #16
 800c1ca:	61da      	str	r2, [r3, #28]
 800c1cc:	68fb      	ldr	r3, [r7, #12]
 800c1ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c1d0:	f043 0204 	orr.w	r2, r3, #4
 800c1d4:	68fb      	ldr	r3, [r7, #12]
 800c1d6:	645a      	str	r2, [r3, #68]	; 0x44
 800c1d8:	68f8      	ldr	r0, [r7, #12]
 800c1da:	f001 fbc4 	bl	800d966 <I2C_Flush_TXDR>
 800c1de:	e0ed      	b.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c1e0:	697b      	ldr	r3, [r7, #20]
 800c1e2:	089b      	lsrs	r3, r3, #2
 800c1e4:	f003 0301 	and.w	r3, r3, #1
 800c1e8:	2b00      	cmp	r3, #0
 800c1ea:	d023      	beq.n	800c234 <I2C_Master_ISR_IT+0xae>
 800c1ec:	687b      	ldr	r3, [r7, #4]
 800c1ee:	089b      	lsrs	r3, r3, #2
 800c1f0:	f003 0301 	and.w	r3, r3, #1
 800c1f4:	2b00      	cmp	r3, #0
 800c1f6:	d01d      	beq.n	800c234 <I2C_Master_ISR_IT+0xae>
 800c1f8:	697b      	ldr	r3, [r7, #20]
 800c1fa:	f023 0304 	bic.w	r3, r3, #4
 800c1fe:	617b      	str	r3, [r7, #20]
 800c200:	68fb      	ldr	r3, [r7, #12]
 800c202:	681b      	ldr	r3, [r3, #0]
 800c204:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800c206:	68fb      	ldr	r3, [r7, #12]
 800c208:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c20a:	b2d2      	uxtb	r2, r2
 800c20c:	701a      	strb	r2, [r3, #0]
 800c20e:	68fb      	ldr	r3, [r7, #12]
 800c210:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c212:	1c5a      	adds	r2, r3, #1
 800c214:	68fb      	ldr	r3, [r7, #12]
 800c216:	625a      	str	r2, [r3, #36]	; 0x24
 800c218:	68fb      	ldr	r3, [r7, #12]
 800c21a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c21c:	3b01      	subs	r3, #1
 800c21e:	b29a      	uxth	r2, r3
 800c220:	68fb      	ldr	r3, [r7, #12]
 800c222:	851a      	strh	r2, [r3, #40]	; 0x28
 800c224:	68fb      	ldr	r3, [r7, #12]
 800c226:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c228:	b29b      	uxth	r3, r3
 800c22a:	3b01      	subs	r3, #1
 800c22c:	b29a      	uxth	r2, r3
 800c22e:	68fb      	ldr	r3, [r7, #12]
 800c230:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c232:	e0c3      	b.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c234:	697b      	ldr	r3, [r7, #20]
 800c236:	099b      	lsrs	r3, r3, #6
 800c238:	f003 0301 	and.w	r3, r3, #1
 800c23c:	2b00      	cmp	r3, #0
 800c23e:	d12a      	bne.n	800c296 <I2C_Master_ISR_IT+0x110>
 800c240:	697b      	ldr	r3, [r7, #20]
 800c242:	085b      	lsrs	r3, r3, #1
 800c244:	f003 0301 	and.w	r3, r3, #1
 800c248:	2b00      	cmp	r3, #0
 800c24a:	d024      	beq.n	800c296 <I2C_Master_ISR_IT+0x110>
 800c24c:	687b      	ldr	r3, [r7, #4]
 800c24e:	085b      	lsrs	r3, r3, #1
 800c250:	f003 0301 	and.w	r3, r3, #1
 800c254:	2b00      	cmp	r3, #0
 800c256:	d01e      	beq.n	800c296 <I2C_Master_ISR_IT+0x110>
 800c258:	68fb      	ldr	r3, [r7, #12]
 800c25a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c25c:	b29b      	uxth	r3, r3
 800c25e:	2b00      	cmp	r3, #0
 800c260:	f000 80ac 	beq.w	800c3bc <I2C_Master_ISR_IT+0x236>
 800c264:	68fb      	ldr	r3, [r7, #12]
 800c266:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c268:	781a      	ldrb	r2, [r3, #0]
 800c26a:	68fb      	ldr	r3, [r7, #12]
 800c26c:	681b      	ldr	r3, [r3, #0]
 800c26e:	629a      	str	r2, [r3, #40]	; 0x28
 800c270:	68fb      	ldr	r3, [r7, #12]
 800c272:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c274:	1c5a      	adds	r2, r3, #1
 800c276:	68fb      	ldr	r3, [r7, #12]
 800c278:	625a      	str	r2, [r3, #36]	; 0x24
 800c27a:	68fb      	ldr	r3, [r7, #12]
 800c27c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c27e:	3b01      	subs	r3, #1
 800c280:	b29a      	uxth	r2, r3
 800c282:	68fb      	ldr	r3, [r7, #12]
 800c284:	851a      	strh	r2, [r3, #40]	; 0x28
 800c286:	68fb      	ldr	r3, [r7, #12]
 800c288:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c28a:	b29b      	uxth	r3, r3
 800c28c:	3b01      	subs	r3, #1
 800c28e:	b29a      	uxth	r2, r3
 800c290:	68fb      	ldr	r3, [r7, #12]
 800c292:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c294:	e092      	b.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c296:	697b      	ldr	r3, [r7, #20]
 800c298:	09db      	lsrs	r3, r3, #7
 800c29a:	f003 0301 	and.w	r3, r3, #1
 800c29e:	2b00      	cmp	r3, #0
 800c2a0:	d05d      	beq.n	800c35e <I2C_Master_ISR_IT+0x1d8>
 800c2a2:	687b      	ldr	r3, [r7, #4]
 800c2a4:	099b      	lsrs	r3, r3, #6
 800c2a6:	f003 0301 	and.w	r3, r3, #1
 800c2aa:	2b00      	cmp	r3, #0
 800c2ac:	d057      	beq.n	800c35e <I2C_Master_ISR_IT+0x1d8>
 800c2ae:	68fb      	ldr	r3, [r7, #12]
 800c2b0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c2b2:	b29b      	uxth	r3, r3
 800c2b4:	2b00      	cmp	r3, #0
 800c2b6:	d040      	beq.n	800c33a <I2C_Master_ISR_IT+0x1b4>
 800c2b8:	68fb      	ldr	r3, [r7, #12]
 800c2ba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c2bc:	2b00      	cmp	r3, #0
 800c2be:	d13c      	bne.n	800c33a <I2C_Master_ISR_IT+0x1b4>
 800c2c0:	68fb      	ldr	r3, [r7, #12]
 800c2c2:	681b      	ldr	r3, [r3, #0]
 800c2c4:	685b      	ldr	r3, [r3, #4]
 800c2c6:	b29b      	uxth	r3, r3
 800c2c8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800c2cc:	827b      	strh	r3, [r7, #18]
 800c2ce:	68fb      	ldr	r3, [r7, #12]
 800c2d0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c2d2:	b29b      	uxth	r3, r3
 800c2d4:	2bff      	cmp	r3, #255	; 0xff
 800c2d6:	d90e      	bls.n	800c2f6 <I2C_Master_ISR_IT+0x170>
 800c2d8:	68fb      	ldr	r3, [r7, #12]
 800c2da:	22ff      	movs	r2, #255	; 0xff
 800c2dc:	851a      	strh	r2, [r3, #40]	; 0x28
 800c2de:	68fb      	ldr	r3, [r7, #12]
 800c2e0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c2e2:	b2da      	uxtb	r2, r3
 800c2e4:	8a79      	ldrh	r1, [r7, #18]
 800c2e6:	2300      	movs	r3, #0
 800c2e8:	9300      	str	r3, [sp, #0]
 800c2ea:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800c2ee:	68f8      	ldr	r0, [r7, #12]
 800c2f0:	f001 fd4c 	bl	800dd8c <I2C_TransferConfig>
 800c2f4:	e032      	b.n	800c35c <I2C_Master_ISR_IT+0x1d6>
 800c2f6:	68fb      	ldr	r3, [r7, #12]
 800c2f8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c2fa:	b29a      	uxth	r2, r3
 800c2fc:	68fb      	ldr	r3, [r7, #12]
 800c2fe:	851a      	strh	r2, [r3, #40]	; 0x28
 800c300:	68fb      	ldr	r3, [r7, #12]
 800c302:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c304:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800c308:	d00b      	beq.n	800c322 <I2C_Master_ISR_IT+0x19c>
 800c30a:	68fb      	ldr	r3, [r7, #12]
 800c30c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c30e:	b2da      	uxtb	r2, r3
 800c310:	68fb      	ldr	r3, [r7, #12]
 800c312:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c314:	8a79      	ldrh	r1, [r7, #18]
 800c316:	2000      	movs	r0, #0
 800c318:	9000      	str	r0, [sp, #0]
 800c31a:	68f8      	ldr	r0, [r7, #12]
 800c31c:	f001 fd36 	bl	800dd8c <I2C_TransferConfig>
 800c320:	e01c      	b.n	800c35c <I2C_Master_ISR_IT+0x1d6>
 800c322:	68fb      	ldr	r3, [r7, #12]
 800c324:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c326:	b2da      	uxtb	r2, r3
 800c328:	8a79      	ldrh	r1, [r7, #18]
 800c32a:	2300      	movs	r3, #0
 800c32c:	9300      	str	r3, [sp, #0]
 800c32e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800c332:	68f8      	ldr	r0, [r7, #12]
 800c334:	f001 fd2a 	bl	800dd8c <I2C_TransferConfig>
 800c338:	e010      	b.n	800c35c <I2C_Master_ISR_IT+0x1d6>
 800c33a:	68fb      	ldr	r3, [r7, #12]
 800c33c:	681b      	ldr	r3, [r3, #0]
 800c33e:	685b      	ldr	r3, [r3, #4]
 800c340:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800c344:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800c348:	d003      	beq.n	800c352 <I2C_Master_ISR_IT+0x1cc>
 800c34a:	68f8      	ldr	r0, [r7, #12]
 800c34c:	f000 fdde 	bl	800cf0c <I2C_ITMasterSeqCplt>
 800c350:	e034      	b.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c352:	2140      	movs	r1, #64	; 0x40
 800c354:	68f8      	ldr	r0, [r7, #12]
 800c356:	f001 f9ef 	bl	800d738 <I2C_ITError>
 800c35a:	e02f      	b.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c35c:	e02e      	b.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c35e:	697b      	ldr	r3, [r7, #20]
 800c360:	099b      	lsrs	r3, r3, #6
 800c362:	f003 0301 	and.w	r3, r3, #1
 800c366:	2b00      	cmp	r3, #0
 800c368:	d028      	beq.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c36a:	687b      	ldr	r3, [r7, #4]
 800c36c:	099b      	lsrs	r3, r3, #6
 800c36e:	f003 0301 	and.w	r3, r3, #1
 800c372:	2b00      	cmp	r3, #0
 800c374:	d022      	beq.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c376:	68fb      	ldr	r3, [r7, #12]
 800c378:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c37a:	b29b      	uxth	r3, r3
 800c37c:	2b00      	cmp	r3, #0
 800c37e:	d119      	bne.n	800c3b4 <I2C_Master_ISR_IT+0x22e>
 800c380:	68fb      	ldr	r3, [r7, #12]
 800c382:	681b      	ldr	r3, [r3, #0]
 800c384:	685b      	ldr	r3, [r3, #4]
 800c386:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800c38a:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800c38e:	d015      	beq.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c390:	68fb      	ldr	r3, [r7, #12]
 800c392:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c394:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800c398:	d108      	bne.n	800c3ac <I2C_Master_ISR_IT+0x226>
 800c39a:	68fb      	ldr	r3, [r7, #12]
 800c39c:	681b      	ldr	r3, [r3, #0]
 800c39e:	685a      	ldr	r2, [r3, #4]
 800c3a0:	68fb      	ldr	r3, [r7, #12]
 800c3a2:	681b      	ldr	r3, [r3, #0]
 800c3a4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800c3a8:	605a      	str	r2, [r3, #4]
 800c3aa:	e007      	b.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c3ac:	68f8      	ldr	r0, [r7, #12]
 800c3ae:	f000 fdad 	bl	800cf0c <I2C_ITMasterSeqCplt>
 800c3b2:	e003      	b.n	800c3bc <I2C_Master_ISR_IT+0x236>
 800c3b4:	2140      	movs	r1, #64	; 0x40
 800c3b6:	68f8      	ldr	r0, [r7, #12]
 800c3b8:	f001 f9be 	bl	800d738 <I2C_ITError>
 800c3bc:	697b      	ldr	r3, [r7, #20]
 800c3be:	095b      	lsrs	r3, r3, #5
 800c3c0:	f003 0301 	and.w	r3, r3, #1
 800c3c4:	2b00      	cmp	r3, #0
 800c3c6:	d009      	beq.n	800c3dc <I2C_Master_ISR_IT+0x256>
 800c3c8:	687b      	ldr	r3, [r7, #4]
 800c3ca:	095b      	lsrs	r3, r3, #5
 800c3cc:	f003 0301 	and.w	r3, r3, #1
 800c3d0:	2b00      	cmp	r3, #0
 800c3d2:	d003      	beq.n	800c3dc <I2C_Master_ISR_IT+0x256>
 800c3d4:	6979      	ldr	r1, [r7, #20]
 800c3d6:	68f8      	ldr	r0, [r7, #12]
 800c3d8:	f000 fe34 	bl	800d044 <I2C_ITMasterCplt>
 800c3dc:	68fb      	ldr	r3, [r7, #12]
 800c3de:	2200      	movs	r2, #0
 800c3e0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c3e4:	2300      	movs	r3, #0
 800c3e6:	4618      	mov	r0, r3
 800c3e8:	3718      	adds	r7, #24
 800c3ea:	46bd      	mov	sp, r7
 800c3ec:	bd80      	pop	{r7, pc}

0800c3ee <I2C_Slave_ISR_IT>:
 800c3ee:	b580      	push	{r7, lr}
 800c3f0:	b086      	sub	sp, #24
 800c3f2:	af00      	add	r7, sp, #0
 800c3f4:	60f8      	str	r0, [r7, #12]
 800c3f6:	60b9      	str	r1, [r7, #8]
 800c3f8:	607a      	str	r2, [r7, #4]
 800c3fa:	68fb      	ldr	r3, [r7, #12]
 800c3fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c3fe:	617b      	str	r3, [r7, #20]
 800c400:	68bb      	ldr	r3, [r7, #8]
 800c402:	613b      	str	r3, [r7, #16]
 800c404:	68fb      	ldr	r3, [r7, #12]
 800c406:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800c40a:	2b01      	cmp	r3, #1
 800c40c:	d101      	bne.n	800c412 <I2C_Slave_ISR_IT+0x24>
 800c40e:	2302      	movs	r3, #2
 800c410:	e0ed      	b.n	800c5ee <I2C_Slave_ISR_IT+0x200>
 800c412:	68fb      	ldr	r3, [r7, #12]
 800c414:	2201      	movs	r2, #1
 800c416:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c41a:	693b      	ldr	r3, [r7, #16]
 800c41c:	095b      	lsrs	r3, r3, #5
 800c41e:	f003 0301 	and.w	r3, r3, #1
 800c422:	2b00      	cmp	r3, #0
 800c424:	d00a      	beq.n	800c43c <I2C_Slave_ISR_IT+0x4e>
 800c426:	687b      	ldr	r3, [r7, #4]
 800c428:	095b      	lsrs	r3, r3, #5
 800c42a:	f003 0301 	and.w	r3, r3, #1
 800c42e:	2b00      	cmp	r3, #0
 800c430:	d004      	beq.n	800c43c <I2C_Slave_ISR_IT+0x4e>
 800c432:	6939      	ldr	r1, [r7, #16]
 800c434:	68f8      	ldr	r0, [r7, #12]
 800c436:	f000 fecf 	bl	800d1d8 <I2C_ITSlaveCplt>
 800c43a:	e0d3      	b.n	800c5e4 <I2C_Slave_ISR_IT+0x1f6>
 800c43c:	693b      	ldr	r3, [r7, #16]
 800c43e:	091b      	lsrs	r3, r3, #4
 800c440:	f003 0301 	and.w	r3, r3, #1
 800c444:	2b00      	cmp	r3, #0
 800c446:	d04d      	beq.n	800c4e4 <I2C_Slave_ISR_IT+0xf6>
 800c448:	687b      	ldr	r3, [r7, #4]
 800c44a:	091b      	lsrs	r3, r3, #4
 800c44c:	f003 0301 	and.w	r3, r3, #1
 800c450:	2b00      	cmp	r3, #0
 800c452:	d047      	beq.n	800c4e4 <I2C_Slave_ISR_IT+0xf6>
 800c454:	68fb      	ldr	r3, [r7, #12]
 800c456:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c458:	b29b      	uxth	r3, r3
 800c45a:	2b00      	cmp	r3, #0
 800c45c:	d128      	bne.n	800c4b0 <I2C_Slave_ISR_IT+0xc2>
 800c45e:	68fb      	ldr	r3, [r7, #12]
 800c460:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800c464:	b2db      	uxtb	r3, r3
 800c466:	2b28      	cmp	r3, #40	; 0x28
 800c468:	d108      	bne.n	800c47c <I2C_Slave_ISR_IT+0x8e>
 800c46a:	697b      	ldr	r3, [r7, #20]
 800c46c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800c470:	d104      	bne.n	800c47c <I2C_Slave_ISR_IT+0x8e>
 800c472:	6939      	ldr	r1, [r7, #16]
 800c474:	68f8      	ldr	r0, [r7, #12]
 800c476:	f001 f909 	bl	800d68c <I2C_ITListenCplt>
 800c47a:	e032      	b.n	800c4e2 <I2C_Slave_ISR_IT+0xf4>
 800c47c:	68fb      	ldr	r3, [r7, #12]
 800c47e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800c482:	b2db      	uxtb	r3, r3
 800c484:	2b29      	cmp	r3, #41	; 0x29
 800c486:	d10e      	bne.n	800c4a6 <I2C_Slave_ISR_IT+0xb8>
 800c488:	697b      	ldr	r3, [r7, #20]
 800c48a:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800c48e:	d00a      	beq.n	800c4a6 <I2C_Slave_ISR_IT+0xb8>
 800c490:	68fb      	ldr	r3, [r7, #12]
 800c492:	681b      	ldr	r3, [r3, #0]
 800c494:	2210      	movs	r2, #16
 800c496:	61da      	str	r2, [r3, #28]
 800c498:	68f8      	ldr	r0, [r7, #12]
 800c49a:	f001 fa64 	bl	800d966 <I2C_Flush_TXDR>
 800c49e:	68f8      	ldr	r0, [r7, #12]
 800c4a0:	f000 fd71 	bl	800cf86 <I2C_ITSlaveSeqCplt>
 800c4a4:	e01d      	b.n	800c4e2 <I2C_Slave_ISR_IT+0xf4>
 800c4a6:	68fb      	ldr	r3, [r7, #12]
 800c4a8:	681b      	ldr	r3, [r3, #0]
 800c4aa:	2210      	movs	r2, #16
 800c4ac:	61da      	str	r2, [r3, #28]
 800c4ae:	e096      	b.n	800c5de <I2C_Slave_ISR_IT+0x1f0>
 800c4b0:	68fb      	ldr	r3, [r7, #12]
 800c4b2:	681b      	ldr	r3, [r3, #0]
 800c4b4:	2210      	movs	r2, #16
 800c4b6:	61da      	str	r2, [r3, #28]
 800c4b8:	68fb      	ldr	r3, [r7, #12]
 800c4ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c4bc:	f043 0204 	orr.w	r2, r3, #4
 800c4c0:	68fb      	ldr	r3, [r7, #12]
 800c4c2:	645a      	str	r2, [r3, #68]	; 0x44
 800c4c4:	697b      	ldr	r3, [r7, #20]
 800c4c6:	2b00      	cmp	r3, #0
 800c4c8:	d004      	beq.n	800c4d4 <I2C_Slave_ISR_IT+0xe6>
 800c4ca:	697b      	ldr	r3, [r7, #20]
 800c4cc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800c4d0:	f040 8085 	bne.w	800c5de <I2C_Slave_ISR_IT+0x1f0>
 800c4d4:	68fb      	ldr	r3, [r7, #12]
 800c4d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c4d8:	4619      	mov	r1, r3
 800c4da:	68f8      	ldr	r0, [r7, #12]
 800c4dc:	f001 f92c 	bl	800d738 <I2C_ITError>
 800c4e0:	e07d      	b.n	800c5de <I2C_Slave_ISR_IT+0x1f0>
 800c4e2:	e07c      	b.n	800c5de <I2C_Slave_ISR_IT+0x1f0>
 800c4e4:	693b      	ldr	r3, [r7, #16]
 800c4e6:	089b      	lsrs	r3, r3, #2
 800c4e8:	f003 0301 	and.w	r3, r3, #1
 800c4ec:	2b00      	cmp	r3, #0
 800c4ee:	d030      	beq.n	800c552 <I2C_Slave_ISR_IT+0x164>
 800c4f0:	687b      	ldr	r3, [r7, #4]
 800c4f2:	089b      	lsrs	r3, r3, #2
 800c4f4:	f003 0301 	and.w	r3, r3, #1
 800c4f8:	2b00      	cmp	r3, #0
 800c4fa:	d02a      	beq.n	800c552 <I2C_Slave_ISR_IT+0x164>
 800c4fc:	68fb      	ldr	r3, [r7, #12]
 800c4fe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c500:	b29b      	uxth	r3, r3
 800c502:	2b00      	cmp	r3, #0
 800c504:	d018      	beq.n	800c538 <I2C_Slave_ISR_IT+0x14a>
 800c506:	68fb      	ldr	r3, [r7, #12]
 800c508:	681b      	ldr	r3, [r3, #0]
 800c50a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800c50c:	68fb      	ldr	r3, [r7, #12]
 800c50e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c510:	b2d2      	uxtb	r2, r2
 800c512:	701a      	strb	r2, [r3, #0]
 800c514:	68fb      	ldr	r3, [r7, #12]
 800c516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c518:	1c5a      	adds	r2, r3, #1
 800c51a:	68fb      	ldr	r3, [r7, #12]
 800c51c:	625a      	str	r2, [r3, #36]	; 0x24
 800c51e:	68fb      	ldr	r3, [r7, #12]
 800c520:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c522:	3b01      	subs	r3, #1
 800c524:	b29a      	uxth	r2, r3
 800c526:	68fb      	ldr	r3, [r7, #12]
 800c528:	851a      	strh	r2, [r3, #40]	; 0x28
 800c52a:	68fb      	ldr	r3, [r7, #12]
 800c52c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c52e:	b29b      	uxth	r3, r3
 800c530:	3b01      	subs	r3, #1
 800c532:	b29a      	uxth	r2, r3
 800c534:	68fb      	ldr	r3, [r7, #12]
 800c536:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c538:	68fb      	ldr	r3, [r7, #12]
 800c53a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c53c:	b29b      	uxth	r3, r3
 800c53e:	2b00      	cmp	r3, #0
 800c540:	d14f      	bne.n	800c5e2 <I2C_Slave_ISR_IT+0x1f4>
 800c542:	697b      	ldr	r3, [r7, #20]
 800c544:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800c548:	d04b      	beq.n	800c5e2 <I2C_Slave_ISR_IT+0x1f4>
 800c54a:	68f8      	ldr	r0, [r7, #12]
 800c54c:	f000 fd1b 	bl	800cf86 <I2C_ITSlaveSeqCplt>
 800c550:	e047      	b.n	800c5e2 <I2C_Slave_ISR_IT+0x1f4>
 800c552:	693b      	ldr	r3, [r7, #16]
 800c554:	08db      	lsrs	r3, r3, #3
 800c556:	f003 0301 	and.w	r3, r3, #1
 800c55a:	2b00      	cmp	r3, #0
 800c55c:	d00a      	beq.n	800c574 <I2C_Slave_ISR_IT+0x186>
 800c55e:	687b      	ldr	r3, [r7, #4]
 800c560:	08db      	lsrs	r3, r3, #3
 800c562:	f003 0301 	and.w	r3, r3, #1
 800c566:	2b00      	cmp	r3, #0
 800c568:	d004      	beq.n	800c574 <I2C_Slave_ISR_IT+0x186>
 800c56a:	6939      	ldr	r1, [r7, #16]
 800c56c:	68f8      	ldr	r0, [r7, #12]
 800c56e:	f000 fc49 	bl	800ce04 <I2C_ITAddrCplt>
 800c572:	e037      	b.n	800c5e4 <I2C_Slave_ISR_IT+0x1f6>
 800c574:	693b      	ldr	r3, [r7, #16]
 800c576:	085b      	lsrs	r3, r3, #1
 800c578:	f003 0301 	and.w	r3, r3, #1
 800c57c:	2b00      	cmp	r3, #0
 800c57e:	d031      	beq.n	800c5e4 <I2C_Slave_ISR_IT+0x1f6>
 800c580:	687b      	ldr	r3, [r7, #4]
 800c582:	085b      	lsrs	r3, r3, #1
 800c584:	f003 0301 	and.w	r3, r3, #1
 800c588:	2b00      	cmp	r3, #0
 800c58a:	d02b      	beq.n	800c5e4 <I2C_Slave_ISR_IT+0x1f6>
 800c58c:	68fb      	ldr	r3, [r7, #12]
 800c58e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c590:	b29b      	uxth	r3, r3
 800c592:	2b00      	cmp	r3, #0
 800c594:	d018      	beq.n	800c5c8 <I2C_Slave_ISR_IT+0x1da>
 800c596:	68fb      	ldr	r3, [r7, #12]
 800c598:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c59a:	781a      	ldrb	r2, [r3, #0]
 800c59c:	68fb      	ldr	r3, [r7, #12]
 800c59e:	681b      	ldr	r3, [r3, #0]
 800c5a0:	629a      	str	r2, [r3, #40]	; 0x28
 800c5a2:	68fb      	ldr	r3, [r7, #12]
 800c5a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c5a6:	1c5a      	adds	r2, r3, #1
 800c5a8:	68fb      	ldr	r3, [r7, #12]
 800c5aa:	625a      	str	r2, [r3, #36]	; 0x24
 800c5ac:	68fb      	ldr	r3, [r7, #12]
 800c5ae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c5b0:	b29b      	uxth	r3, r3
 800c5b2:	3b01      	subs	r3, #1
 800c5b4:	b29a      	uxth	r2, r3
 800c5b6:	68fb      	ldr	r3, [r7, #12]
 800c5b8:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c5ba:	68fb      	ldr	r3, [r7, #12]
 800c5bc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c5be:	3b01      	subs	r3, #1
 800c5c0:	b29a      	uxth	r2, r3
 800c5c2:	68fb      	ldr	r3, [r7, #12]
 800c5c4:	851a      	strh	r2, [r3, #40]	; 0x28
 800c5c6:	e00d      	b.n	800c5e4 <I2C_Slave_ISR_IT+0x1f6>
 800c5c8:	697b      	ldr	r3, [r7, #20]
 800c5ca:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800c5ce:	d002      	beq.n	800c5d6 <I2C_Slave_ISR_IT+0x1e8>
 800c5d0:	697b      	ldr	r3, [r7, #20]
 800c5d2:	2b00      	cmp	r3, #0
 800c5d4:	d106      	bne.n	800c5e4 <I2C_Slave_ISR_IT+0x1f6>
 800c5d6:	68f8      	ldr	r0, [r7, #12]
 800c5d8:	f000 fcd5 	bl	800cf86 <I2C_ITSlaveSeqCplt>
 800c5dc:	e002      	b.n	800c5e4 <I2C_Slave_ISR_IT+0x1f6>
 800c5de:	bf00      	nop
 800c5e0:	e000      	b.n	800c5e4 <I2C_Slave_ISR_IT+0x1f6>
 800c5e2:	bf00      	nop
 800c5e4:	68fb      	ldr	r3, [r7, #12]
 800c5e6:	2200      	movs	r2, #0
 800c5e8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c5ec:	2300      	movs	r3, #0
 800c5ee:	4618      	mov	r0, r3
 800c5f0:	3718      	adds	r7, #24
 800c5f2:	46bd      	mov	sp, r7
 800c5f4:	bd80      	pop	{r7, pc}

0800c5f6 <I2C_Master_ISR_DMA>:
 800c5f6:	b580      	push	{r7, lr}
 800c5f8:	b088      	sub	sp, #32
 800c5fa:	af02      	add	r7, sp, #8
 800c5fc:	60f8      	str	r0, [r7, #12]
 800c5fe:	60b9      	str	r1, [r7, #8]
 800c600:	607a      	str	r2, [r7, #4]
 800c602:	68fb      	ldr	r3, [r7, #12]
 800c604:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800c608:	2b01      	cmp	r3, #1
 800c60a:	d101      	bne.n	800c610 <I2C_Master_ISR_DMA+0x1a>
 800c60c:	2302      	movs	r3, #2
 800c60e:	e0e1      	b.n	800c7d4 <I2C_Master_ISR_DMA+0x1de>
 800c610:	68fb      	ldr	r3, [r7, #12]
 800c612:	2201      	movs	r2, #1
 800c614:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c618:	68bb      	ldr	r3, [r7, #8]
 800c61a:	091b      	lsrs	r3, r3, #4
 800c61c:	f003 0301 	and.w	r3, r3, #1
 800c620:	2b00      	cmp	r3, #0
 800c622:	d017      	beq.n	800c654 <I2C_Master_ISR_DMA+0x5e>
 800c624:	687b      	ldr	r3, [r7, #4]
 800c626:	091b      	lsrs	r3, r3, #4
 800c628:	f003 0301 	and.w	r3, r3, #1
 800c62c:	2b00      	cmp	r3, #0
 800c62e:	d011      	beq.n	800c654 <I2C_Master_ISR_DMA+0x5e>
 800c630:	68fb      	ldr	r3, [r7, #12]
 800c632:	681b      	ldr	r3, [r3, #0]
 800c634:	2210      	movs	r2, #16
 800c636:	61da      	str	r2, [r3, #28]
 800c638:	68fb      	ldr	r3, [r7, #12]
 800c63a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c63c:	f043 0204 	orr.w	r2, r3, #4
 800c640:	68fb      	ldr	r3, [r7, #12]
 800c642:	645a      	str	r2, [r3, #68]	; 0x44
 800c644:	2120      	movs	r1, #32
 800c646:	68f8      	ldr	r0, [r7, #12]
 800c648:	f001 fbd2 	bl	800ddf0 <I2C_Enable_IRQ>
 800c64c:	68f8      	ldr	r0, [r7, #12]
 800c64e:	f001 f98a 	bl	800d966 <I2C_Flush_TXDR>
 800c652:	e0ba      	b.n	800c7ca <I2C_Master_ISR_DMA+0x1d4>
 800c654:	68bb      	ldr	r3, [r7, #8]
 800c656:	09db      	lsrs	r3, r3, #7
 800c658:	f003 0301 	and.w	r3, r3, #1
 800c65c:	2b00      	cmp	r3, #0
 800c65e:	d072      	beq.n	800c746 <I2C_Master_ISR_DMA+0x150>
 800c660:	687b      	ldr	r3, [r7, #4]
 800c662:	099b      	lsrs	r3, r3, #6
 800c664:	f003 0301 	and.w	r3, r3, #1
 800c668:	2b00      	cmp	r3, #0
 800c66a:	d06c      	beq.n	800c746 <I2C_Master_ISR_DMA+0x150>
 800c66c:	68fb      	ldr	r3, [r7, #12]
 800c66e:	681b      	ldr	r3, [r3, #0]
 800c670:	681a      	ldr	r2, [r3, #0]
 800c672:	68fb      	ldr	r3, [r7, #12]
 800c674:	681b      	ldr	r3, [r3, #0]
 800c676:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c67a:	601a      	str	r2, [r3, #0]
 800c67c:	68fb      	ldr	r3, [r7, #12]
 800c67e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c680:	b29b      	uxth	r3, r3
 800c682:	2b00      	cmp	r3, #0
 800c684:	d04e      	beq.n	800c724 <I2C_Master_ISR_DMA+0x12e>
 800c686:	68fb      	ldr	r3, [r7, #12]
 800c688:	681b      	ldr	r3, [r3, #0]
 800c68a:	685b      	ldr	r3, [r3, #4]
 800c68c:	b29b      	uxth	r3, r3
 800c68e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800c692:	827b      	strh	r3, [r7, #18]
 800c694:	68fb      	ldr	r3, [r7, #12]
 800c696:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c698:	b29b      	uxth	r3, r3
 800c69a:	2bff      	cmp	r3, #255	; 0xff
 800c69c:	d906      	bls.n	800c6ac <I2C_Master_ISR_DMA+0xb6>
 800c69e:	68fb      	ldr	r3, [r7, #12]
 800c6a0:	22ff      	movs	r2, #255	; 0xff
 800c6a2:	851a      	strh	r2, [r3, #40]	; 0x28
 800c6a4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800c6a8:	617b      	str	r3, [r7, #20]
 800c6aa:	e010      	b.n	800c6ce <I2C_Master_ISR_DMA+0xd8>
 800c6ac:	68fb      	ldr	r3, [r7, #12]
 800c6ae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c6b0:	b29a      	uxth	r2, r3
 800c6b2:	68fb      	ldr	r3, [r7, #12]
 800c6b4:	851a      	strh	r2, [r3, #40]	; 0x28
 800c6b6:	68fb      	ldr	r3, [r7, #12]
 800c6b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c6ba:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800c6be:	d003      	beq.n	800c6c8 <I2C_Master_ISR_DMA+0xd2>
 800c6c0:	68fb      	ldr	r3, [r7, #12]
 800c6c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c6c4:	617b      	str	r3, [r7, #20]
 800c6c6:	e002      	b.n	800c6ce <I2C_Master_ISR_DMA+0xd8>
 800c6c8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800c6cc:	617b      	str	r3, [r7, #20]
 800c6ce:	68fb      	ldr	r3, [r7, #12]
 800c6d0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c6d2:	b2da      	uxtb	r2, r3
 800c6d4:	8a79      	ldrh	r1, [r7, #18]
 800c6d6:	2300      	movs	r3, #0
 800c6d8:	9300      	str	r3, [sp, #0]
 800c6da:	697b      	ldr	r3, [r7, #20]
 800c6dc:	68f8      	ldr	r0, [r7, #12]
 800c6de:	f001 fb55 	bl	800dd8c <I2C_TransferConfig>
 800c6e2:	68fb      	ldr	r3, [r7, #12]
 800c6e4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c6e6:	b29a      	uxth	r2, r3
 800c6e8:	68fb      	ldr	r3, [r7, #12]
 800c6ea:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c6ec:	1ad3      	subs	r3, r2, r3
 800c6ee:	b29a      	uxth	r2, r3
 800c6f0:	68fb      	ldr	r3, [r7, #12]
 800c6f2:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c6f4:	68fb      	ldr	r3, [r7, #12]
 800c6f6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800c6fa:	b2db      	uxtb	r3, r3
 800c6fc:	2b22      	cmp	r3, #34	; 0x22
 800c6fe:	d108      	bne.n	800c712 <I2C_Master_ISR_DMA+0x11c>
 800c700:	68fb      	ldr	r3, [r7, #12]
 800c702:	681b      	ldr	r3, [r3, #0]
 800c704:	681a      	ldr	r2, [r3, #0]
 800c706:	68fb      	ldr	r3, [r7, #12]
 800c708:	681b      	ldr	r3, [r3, #0]
 800c70a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c70e:	601a      	str	r2, [r3, #0]
 800c710:	e05b      	b.n	800c7ca <I2C_Master_ISR_DMA+0x1d4>
 800c712:	68fb      	ldr	r3, [r7, #12]
 800c714:	681b      	ldr	r3, [r3, #0]
 800c716:	681a      	ldr	r2, [r3, #0]
 800c718:	68fb      	ldr	r3, [r7, #12]
 800c71a:	681b      	ldr	r3, [r3, #0]
 800c71c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800c720:	601a      	str	r2, [r3, #0]
 800c722:	e052      	b.n	800c7ca <I2C_Master_ISR_DMA+0x1d4>
 800c724:	68fb      	ldr	r3, [r7, #12]
 800c726:	681b      	ldr	r3, [r3, #0]
 800c728:	685b      	ldr	r3, [r3, #4]
 800c72a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800c72e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800c732:	d003      	beq.n	800c73c <I2C_Master_ISR_DMA+0x146>
 800c734:	68f8      	ldr	r0, [r7, #12]
 800c736:	f000 fbe9 	bl	800cf0c <I2C_ITMasterSeqCplt>
 800c73a:	e046      	b.n	800c7ca <I2C_Master_ISR_DMA+0x1d4>
 800c73c:	2140      	movs	r1, #64	; 0x40
 800c73e:	68f8      	ldr	r0, [r7, #12]
 800c740:	f000 fffa 	bl	800d738 <I2C_ITError>
 800c744:	e041      	b.n	800c7ca <I2C_Master_ISR_DMA+0x1d4>
 800c746:	68bb      	ldr	r3, [r7, #8]
 800c748:	099b      	lsrs	r3, r3, #6
 800c74a:	f003 0301 	and.w	r3, r3, #1
 800c74e:	2b00      	cmp	r3, #0
 800c750:	d029      	beq.n	800c7a6 <I2C_Master_ISR_DMA+0x1b0>
 800c752:	687b      	ldr	r3, [r7, #4]
 800c754:	099b      	lsrs	r3, r3, #6
 800c756:	f003 0301 	and.w	r3, r3, #1
 800c75a:	2b00      	cmp	r3, #0
 800c75c:	d023      	beq.n	800c7a6 <I2C_Master_ISR_DMA+0x1b0>
 800c75e:	68fb      	ldr	r3, [r7, #12]
 800c760:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c762:	b29b      	uxth	r3, r3
 800c764:	2b00      	cmp	r3, #0
 800c766:	d119      	bne.n	800c79c <I2C_Master_ISR_DMA+0x1a6>
 800c768:	68fb      	ldr	r3, [r7, #12]
 800c76a:	681b      	ldr	r3, [r3, #0]
 800c76c:	685b      	ldr	r3, [r3, #4]
 800c76e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800c772:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800c776:	d027      	beq.n	800c7c8 <I2C_Master_ISR_DMA+0x1d2>
 800c778:	68fb      	ldr	r3, [r7, #12]
 800c77a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c77c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800c780:	d108      	bne.n	800c794 <I2C_Master_ISR_DMA+0x19e>
 800c782:	68fb      	ldr	r3, [r7, #12]
 800c784:	681b      	ldr	r3, [r3, #0]
 800c786:	685a      	ldr	r2, [r3, #4]
 800c788:	68fb      	ldr	r3, [r7, #12]
 800c78a:	681b      	ldr	r3, [r3, #0]
 800c78c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800c790:	605a      	str	r2, [r3, #4]
 800c792:	e019      	b.n	800c7c8 <I2C_Master_ISR_DMA+0x1d2>
 800c794:	68f8      	ldr	r0, [r7, #12]
 800c796:	f000 fbb9 	bl	800cf0c <I2C_ITMasterSeqCplt>
 800c79a:	e015      	b.n	800c7c8 <I2C_Master_ISR_DMA+0x1d2>
 800c79c:	2140      	movs	r1, #64	; 0x40
 800c79e:	68f8      	ldr	r0, [r7, #12]
 800c7a0:	f000 ffca 	bl	800d738 <I2C_ITError>
 800c7a4:	e010      	b.n	800c7c8 <I2C_Master_ISR_DMA+0x1d2>
 800c7a6:	68bb      	ldr	r3, [r7, #8]
 800c7a8:	095b      	lsrs	r3, r3, #5
 800c7aa:	f003 0301 	and.w	r3, r3, #1
 800c7ae:	2b00      	cmp	r3, #0
 800c7b0:	d00b      	beq.n	800c7ca <I2C_Master_ISR_DMA+0x1d4>
 800c7b2:	687b      	ldr	r3, [r7, #4]
 800c7b4:	095b      	lsrs	r3, r3, #5
 800c7b6:	f003 0301 	and.w	r3, r3, #1
 800c7ba:	2b00      	cmp	r3, #0
 800c7bc:	d005      	beq.n	800c7ca <I2C_Master_ISR_DMA+0x1d4>
 800c7be:	68b9      	ldr	r1, [r7, #8]
 800c7c0:	68f8      	ldr	r0, [r7, #12]
 800c7c2:	f000 fc3f 	bl	800d044 <I2C_ITMasterCplt>
 800c7c6:	e000      	b.n	800c7ca <I2C_Master_ISR_DMA+0x1d4>
 800c7c8:	bf00      	nop
 800c7ca:	68fb      	ldr	r3, [r7, #12]
 800c7cc:	2200      	movs	r2, #0
 800c7ce:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c7d2:	2300      	movs	r3, #0
 800c7d4:	4618      	mov	r0, r3
 800c7d6:	3718      	adds	r7, #24
 800c7d8:	46bd      	mov	sp, r7
 800c7da:	bd80      	pop	{r7, pc}

0800c7dc <I2C_Mem_ISR_DMA>:
 800c7dc:	b580      	push	{r7, lr}
 800c7de:	b088      	sub	sp, #32
 800c7e0:	af02      	add	r7, sp, #8
 800c7e2:	60f8      	str	r0, [r7, #12]
 800c7e4:	60b9      	str	r1, [r7, #8]
 800c7e6:	607a      	str	r2, [r7, #4]
 800c7e8:	4b92      	ldr	r3, [pc, #584]	; (800ca34 <I2C_Mem_ISR_DMA+0x258>)
 800c7ea:	617b      	str	r3, [r7, #20]
 800c7ec:	68fb      	ldr	r3, [r7, #12]
 800c7ee:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800c7f2:	2b01      	cmp	r3, #1
 800c7f4:	d101      	bne.n	800c7fa <I2C_Mem_ISR_DMA+0x1e>
 800c7f6:	2302      	movs	r3, #2
 800c7f8:	e118      	b.n	800ca2c <I2C_Mem_ISR_DMA+0x250>
 800c7fa:	68fb      	ldr	r3, [r7, #12]
 800c7fc:	2201      	movs	r2, #1
 800c7fe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c802:	68bb      	ldr	r3, [r7, #8]
 800c804:	091b      	lsrs	r3, r3, #4
 800c806:	f003 0301 	and.w	r3, r3, #1
 800c80a:	2b00      	cmp	r3, #0
 800c80c:	d017      	beq.n	800c83e <I2C_Mem_ISR_DMA+0x62>
 800c80e:	687b      	ldr	r3, [r7, #4]
 800c810:	091b      	lsrs	r3, r3, #4
 800c812:	f003 0301 	and.w	r3, r3, #1
 800c816:	2b00      	cmp	r3, #0
 800c818:	d011      	beq.n	800c83e <I2C_Mem_ISR_DMA+0x62>
 800c81a:	68fb      	ldr	r3, [r7, #12]
 800c81c:	681b      	ldr	r3, [r3, #0]
 800c81e:	2210      	movs	r2, #16
 800c820:	61da      	str	r2, [r3, #28]
 800c822:	68fb      	ldr	r3, [r7, #12]
 800c824:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c826:	f043 0204 	orr.w	r2, r3, #4
 800c82a:	68fb      	ldr	r3, [r7, #12]
 800c82c:	645a      	str	r2, [r3, #68]	; 0x44
 800c82e:	2120      	movs	r1, #32
 800c830:	68f8      	ldr	r0, [r7, #12]
 800c832:	f001 fadd 	bl	800ddf0 <I2C_Enable_IRQ>
 800c836:	68f8      	ldr	r0, [r7, #12]
 800c838:	f001 f895 	bl	800d966 <I2C_Flush_TXDR>
 800c83c:	e0f1      	b.n	800ca22 <I2C_Mem_ISR_DMA+0x246>
 800c83e:	68bb      	ldr	r3, [r7, #8]
 800c840:	085b      	lsrs	r3, r3, #1
 800c842:	f003 0301 	and.w	r3, r3, #1
 800c846:	2b00      	cmp	r3, #0
 800c848:	d00f      	beq.n	800c86a <I2C_Mem_ISR_DMA+0x8e>
 800c84a:	687b      	ldr	r3, [r7, #4]
 800c84c:	085b      	lsrs	r3, r3, #1
 800c84e:	f003 0301 	and.w	r3, r3, #1
 800c852:	2b00      	cmp	r3, #0
 800c854:	d009      	beq.n	800c86a <I2C_Mem_ISR_DMA+0x8e>
 800c856:	68fb      	ldr	r3, [r7, #12]
 800c858:	681b      	ldr	r3, [r3, #0]
 800c85a:	68fa      	ldr	r2, [r7, #12]
 800c85c:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800c85e:	629a      	str	r2, [r3, #40]	; 0x28
 800c860:	68fb      	ldr	r3, [r7, #12]
 800c862:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800c866:	651a      	str	r2, [r3, #80]	; 0x50
 800c868:	e0db      	b.n	800ca22 <I2C_Mem_ISR_DMA+0x246>
 800c86a:	68bb      	ldr	r3, [r7, #8]
 800c86c:	09db      	lsrs	r3, r3, #7
 800c86e:	f003 0301 	and.w	r3, r3, #1
 800c872:	2b00      	cmp	r3, #0
 800c874:	d060      	beq.n	800c938 <I2C_Mem_ISR_DMA+0x15c>
 800c876:	687b      	ldr	r3, [r7, #4]
 800c878:	099b      	lsrs	r3, r3, #6
 800c87a:	f003 0301 	and.w	r3, r3, #1
 800c87e:	2b00      	cmp	r3, #0
 800c880:	d05a      	beq.n	800c938 <I2C_Mem_ISR_DMA+0x15c>
 800c882:	2101      	movs	r1, #1
 800c884:	68f8      	ldr	r0, [r7, #12]
 800c886:	f001 fb37 	bl	800def8 <I2C_Disable_IRQ>
 800c88a:	2110      	movs	r1, #16
 800c88c:	68f8      	ldr	r0, [r7, #12]
 800c88e:	f001 faaf 	bl	800ddf0 <I2C_Enable_IRQ>
 800c892:	68fb      	ldr	r3, [r7, #12]
 800c894:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c896:	b29b      	uxth	r3, r3
 800c898:	2b00      	cmp	r3, #0
 800c89a:	d048      	beq.n	800c92e <I2C_Mem_ISR_DMA+0x152>
 800c89c:	68fb      	ldr	r3, [r7, #12]
 800c89e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c8a0:	b29b      	uxth	r3, r3
 800c8a2:	2bff      	cmp	r3, #255	; 0xff
 800c8a4:	d910      	bls.n	800c8c8 <I2C_Mem_ISR_DMA+0xec>
 800c8a6:	68fb      	ldr	r3, [r7, #12]
 800c8a8:	22ff      	movs	r2, #255	; 0xff
 800c8aa:	851a      	strh	r2, [r3, #40]	; 0x28
 800c8ac:	68fb      	ldr	r3, [r7, #12]
 800c8ae:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c8b0:	b299      	uxth	r1, r3
 800c8b2:	68fb      	ldr	r3, [r7, #12]
 800c8b4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c8b6:	b2da      	uxtb	r2, r3
 800c8b8:	2300      	movs	r3, #0
 800c8ba:	9300      	str	r3, [sp, #0]
 800c8bc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800c8c0:	68f8      	ldr	r0, [r7, #12]
 800c8c2:	f001 fa63 	bl	800dd8c <I2C_TransferConfig>
 800c8c6:	e011      	b.n	800c8ec <I2C_Mem_ISR_DMA+0x110>
 800c8c8:	68fb      	ldr	r3, [r7, #12]
 800c8ca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c8cc:	b29a      	uxth	r2, r3
 800c8ce:	68fb      	ldr	r3, [r7, #12]
 800c8d0:	851a      	strh	r2, [r3, #40]	; 0x28
 800c8d2:	68fb      	ldr	r3, [r7, #12]
 800c8d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c8d6:	b299      	uxth	r1, r3
 800c8d8:	68fb      	ldr	r3, [r7, #12]
 800c8da:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c8dc:	b2da      	uxtb	r2, r3
 800c8de:	2300      	movs	r3, #0
 800c8e0:	9300      	str	r3, [sp, #0]
 800c8e2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800c8e6:	68f8      	ldr	r0, [r7, #12]
 800c8e8:	f001 fa50 	bl	800dd8c <I2C_TransferConfig>
 800c8ec:	68fb      	ldr	r3, [r7, #12]
 800c8ee:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c8f0:	b29a      	uxth	r2, r3
 800c8f2:	68fb      	ldr	r3, [r7, #12]
 800c8f4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c8f6:	1ad3      	subs	r3, r2, r3
 800c8f8:	b29a      	uxth	r2, r3
 800c8fa:	68fb      	ldr	r3, [r7, #12]
 800c8fc:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c8fe:	68fb      	ldr	r3, [r7, #12]
 800c900:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800c904:	b2db      	uxtb	r3, r3
 800c906:	2b22      	cmp	r3, #34	; 0x22
 800c908:	d108      	bne.n	800c91c <I2C_Mem_ISR_DMA+0x140>
 800c90a:	68fb      	ldr	r3, [r7, #12]
 800c90c:	681b      	ldr	r3, [r3, #0]
 800c90e:	681a      	ldr	r2, [r3, #0]
 800c910:	68fb      	ldr	r3, [r7, #12]
 800c912:	681b      	ldr	r3, [r3, #0]
 800c914:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c918:	601a      	str	r2, [r3, #0]
 800c91a:	e082      	b.n	800ca22 <I2C_Mem_ISR_DMA+0x246>
 800c91c:	68fb      	ldr	r3, [r7, #12]
 800c91e:	681b      	ldr	r3, [r3, #0]
 800c920:	681a      	ldr	r2, [r3, #0]
 800c922:	68fb      	ldr	r3, [r7, #12]
 800c924:	681b      	ldr	r3, [r3, #0]
 800c926:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800c92a:	601a      	str	r2, [r3, #0]
 800c92c:	e079      	b.n	800ca22 <I2C_Mem_ISR_DMA+0x246>
 800c92e:	2140      	movs	r1, #64	; 0x40
 800c930:	68f8      	ldr	r0, [r7, #12]
 800c932:	f000 ff01 	bl	800d738 <I2C_ITError>
 800c936:	e074      	b.n	800ca22 <I2C_Mem_ISR_DMA+0x246>
 800c938:	68bb      	ldr	r3, [r7, #8]
 800c93a:	099b      	lsrs	r3, r3, #6
 800c93c:	f003 0301 	and.w	r3, r3, #1
 800c940:	2b00      	cmp	r3, #0
 800c942:	d05e      	beq.n	800ca02 <I2C_Mem_ISR_DMA+0x226>
 800c944:	687b      	ldr	r3, [r7, #4]
 800c946:	099b      	lsrs	r3, r3, #6
 800c948:	f003 0301 	and.w	r3, r3, #1
 800c94c:	2b00      	cmp	r3, #0
 800c94e:	d058      	beq.n	800ca02 <I2C_Mem_ISR_DMA+0x226>
 800c950:	2101      	movs	r1, #1
 800c952:	68f8      	ldr	r0, [r7, #12]
 800c954:	f001 fad0 	bl	800def8 <I2C_Disable_IRQ>
 800c958:	2110      	movs	r1, #16
 800c95a:	68f8      	ldr	r0, [r7, #12]
 800c95c:	f001 fa48 	bl	800ddf0 <I2C_Enable_IRQ>
 800c960:	68fb      	ldr	r3, [r7, #12]
 800c962:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800c966:	b2db      	uxtb	r3, r3
 800c968:	2b22      	cmp	r3, #34	; 0x22
 800c96a:	d101      	bne.n	800c970 <I2C_Mem_ISR_DMA+0x194>
 800c96c:	4b32      	ldr	r3, [pc, #200]	; (800ca38 <I2C_Mem_ISR_DMA+0x25c>)
 800c96e:	617b      	str	r3, [r7, #20]
 800c970:	68fb      	ldr	r3, [r7, #12]
 800c972:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c974:	b29b      	uxth	r3, r3
 800c976:	2bff      	cmp	r3, #255	; 0xff
 800c978:	d910      	bls.n	800c99c <I2C_Mem_ISR_DMA+0x1c0>
 800c97a:	68fb      	ldr	r3, [r7, #12]
 800c97c:	22ff      	movs	r2, #255	; 0xff
 800c97e:	851a      	strh	r2, [r3, #40]	; 0x28
 800c980:	68fb      	ldr	r3, [r7, #12]
 800c982:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c984:	b299      	uxth	r1, r3
 800c986:	68fb      	ldr	r3, [r7, #12]
 800c988:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c98a:	b2da      	uxtb	r2, r3
 800c98c:	697b      	ldr	r3, [r7, #20]
 800c98e:	9300      	str	r3, [sp, #0]
 800c990:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800c994:	68f8      	ldr	r0, [r7, #12]
 800c996:	f001 f9f9 	bl	800dd8c <I2C_TransferConfig>
 800c99a:	e011      	b.n	800c9c0 <I2C_Mem_ISR_DMA+0x1e4>
 800c99c:	68fb      	ldr	r3, [r7, #12]
 800c99e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c9a0:	b29a      	uxth	r2, r3
 800c9a2:	68fb      	ldr	r3, [r7, #12]
 800c9a4:	851a      	strh	r2, [r3, #40]	; 0x28
 800c9a6:	68fb      	ldr	r3, [r7, #12]
 800c9a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c9aa:	b299      	uxth	r1, r3
 800c9ac:	68fb      	ldr	r3, [r7, #12]
 800c9ae:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c9b0:	b2da      	uxtb	r2, r3
 800c9b2:	697b      	ldr	r3, [r7, #20]
 800c9b4:	9300      	str	r3, [sp, #0]
 800c9b6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800c9ba:	68f8      	ldr	r0, [r7, #12]
 800c9bc:	f001 f9e6 	bl	800dd8c <I2C_TransferConfig>
 800c9c0:	68fb      	ldr	r3, [r7, #12]
 800c9c2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c9c4:	b29a      	uxth	r2, r3
 800c9c6:	68fb      	ldr	r3, [r7, #12]
 800c9c8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800c9ca:	1ad3      	subs	r3, r2, r3
 800c9cc:	b29a      	uxth	r2, r3
 800c9ce:	68fb      	ldr	r3, [r7, #12]
 800c9d0:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c9d2:	68fb      	ldr	r3, [r7, #12]
 800c9d4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800c9d8:	b2db      	uxtb	r3, r3
 800c9da:	2b22      	cmp	r3, #34	; 0x22
 800c9dc:	d108      	bne.n	800c9f0 <I2C_Mem_ISR_DMA+0x214>
 800c9de:	68fb      	ldr	r3, [r7, #12]
 800c9e0:	681b      	ldr	r3, [r3, #0]
 800c9e2:	681a      	ldr	r2, [r3, #0]
 800c9e4:	68fb      	ldr	r3, [r7, #12]
 800c9e6:	681b      	ldr	r3, [r3, #0]
 800c9e8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c9ec:	601a      	str	r2, [r3, #0]
 800c9ee:	e018      	b.n	800ca22 <I2C_Mem_ISR_DMA+0x246>
 800c9f0:	68fb      	ldr	r3, [r7, #12]
 800c9f2:	681b      	ldr	r3, [r3, #0]
 800c9f4:	681a      	ldr	r2, [r3, #0]
 800c9f6:	68fb      	ldr	r3, [r7, #12]
 800c9f8:	681b      	ldr	r3, [r3, #0]
 800c9fa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800c9fe:	601a      	str	r2, [r3, #0]
 800ca00:	e00f      	b.n	800ca22 <I2C_Mem_ISR_DMA+0x246>
 800ca02:	68bb      	ldr	r3, [r7, #8]
 800ca04:	095b      	lsrs	r3, r3, #5
 800ca06:	f003 0301 	and.w	r3, r3, #1
 800ca0a:	2b00      	cmp	r3, #0
 800ca0c:	d009      	beq.n	800ca22 <I2C_Mem_ISR_DMA+0x246>
 800ca0e:	687b      	ldr	r3, [r7, #4]
 800ca10:	095b      	lsrs	r3, r3, #5
 800ca12:	f003 0301 	and.w	r3, r3, #1
 800ca16:	2b00      	cmp	r3, #0
 800ca18:	d003      	beq.n	800ca22 <I2C_Mem_ISR_DMA+0x246>
 800ca1a:	68b9      	ldr	r1, [r7, #8]
 800ca1c:	68f8      	ldr	r0, [r7, #12]
 800ca1e:	f000 fb11 	bl	800d044 <I2C_ITMasterCplt>
 800ca22:	68fb      	ldr	r3, [r7, #12]
 800ca24:	2200      	movs	r2, #0
 800ca26:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800ca2a:	2300      	movs	r3, #0
 800ca2c:	4618      	mov	r0, r3
 800ca2e:	3718      	adds	r7, #24
 800ca30:	46bd      	mov	sp, r7
 800ca32:	bd80      	pop	{r7, pc}
 800ca34:	80002000 	.word	0x80002000
 800ca38:	80002400 	.word	0x80002400

0800ca3c <I2C_Slave_ISR_DMA>:
 800ca3c:	b580      	push	{r7, lr}
 800ca3e:	b088      	sub	sp, #32
 800ca40:	af00      	add	r7, sp, #0
 800ca42:	60f8      	str	r0, [r7, #12]
 800ca44:	60b9      	str	r1, [r7, #8]
 800ca46:	607a      	str	r2, [r7, #4]
 800ca48:	68fb      	ldr	r3, [r7, #12]
 800ca4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ca4c:	61bb      	str	r3, [r7, #24]
 800ca4e:	2300      	movs	r3, #0
 800ca50:	61fb      	str	r3, [r7, #28]
 800ca52:	68fb      	ldr	r3, [r7, #12]
 800ca54:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800ca58:	2b01      	cmp	r3, #1
 800ca5a:	d101      	bne.n	800ca60 <I2C_Slave_ISR_DMA+0x24>
 800ca5c:	2302      	movs	r3, #2
 800ca5e:	e1cc      	b.n	800cdfa <I2C_Slave_ISR_DMA+0x3be>
 800ca60:	68fb      	ldr	r3, [r7, #12]
 800ca62:	2201      	movs	r2, #1
 800ca64:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800ca68:	68bb      	ldr	r3, [r7, #8]
 800ca6a:	095b      	lsrs	r3, r3, #5
 800ca6c:	f003 0301 	and.w	r3, r3, #1
 800ca70:	2b00      	cmp	r3, #0
 800ca72:	d00a      	beq.n	800ca8a <I2C_Slave_ISR_DMA+0x4e>
 800ca74:	687b      	ldr	r3, [r7, #4]
 800ca76:	095b      	lsrs	r3, r3, #5
 800ca78:	f003 0301 	and.w	r3, r3, #1
 800ca7c:	2b00      	cmp	r3, #0
 800ca7e:	d004      	beq.n	800ca8a <I2C_Slave_ISR_DMA+0x4e>
 800ca80:	68b9      	ldr	r1, [r7, #8]
 800ca82:	68f8      	ldr	r0, [r7, #12]
 800ca84:	f000 fba8 	bl	800d1d8 <I2C_ITSlaveCplt>
 800ca88:	e1b2      	b.n	800cdf0 <I2C_Slave_ISR_DMA+0x3b4>
 800ca8a:	68bb      	ldr	r3, [r7, #8]
 800ca8c:	091b      	lsrs	r3, r3, #4
 800ca8e:	f003 0301 	and.w	r3, r3, #1
 800ca92:	2b00      	cmp	r3, #0
 800ca94:	f000 819c 	beq.w	800cdd0 <I2C_Slave_ISR_DMA+0x394>
 800ca98:	687b      	ldr	r3, [r7, #4]
 800ca9a:	091b      	lsrs	r3, r3, #4
 800ca9c:	f003 0301 	and.w	r3, r3, #1
 800caa0:	2b00      	cmp	r3, #0
 800caa2:	f000 8195 	beq.w	800cdd0 <I2C_Slave_ISR_DMA+0x394>
 800caa6:	687b      	ldr	r3, [r7, #4]
 800caa8:	0b9b      	lsrs	r3, r3, #14
 800caaa:	f003 0301 	and.w	r3, r3, #1
 800caae:	2b00      	cmp	r3, #0
 800cab0:	d106      	bne.n	800cac0 <I2C_Slave_ISR_DMA+0x84>
 800cab2:	687b      	ldr	r3, [r7, #4]
 800cab4:	0bdb      	lsrs	r3, r3, #15
 800cab6:	f003 0301 	and.w	r3, r3, #1
 800caba:	2b00      	cmp	r3, #0
 800cabc:	f000 8181 	beq.w	800cdc2 <I2C_Slave_ISR_DMA+0x386>
 800cac0:	68fb      	ldr	r3, [r7, #12]
 800cac2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cac4:	2b00      	cmp	r3, #0
 800cac6:	d07c      	beq.n	800cbc2 <I2C_Slave_ISR_DMA+0x186>
 800cac8:	687b      	ldr	r3, [r7, #4]
 800caca:	0bdb      	lsrs	r3, r3, #15
 800cacc:	f003 0301 	and.w	r3, r3, #1
 800cad0:	2b00      	cmp	r3, #0
 800cad2:	d076      	beq.n	800cbc2 <I2C_Slave_ISR_DMA+0x186>
 800cad4:	68fb      	ldr	r3, [r7, #12]
 800cad6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cad8:	681b      	ldr	r3, [r3, #0]
 800cada:	4a75      	ldr	r2, [pc, #468]	; (800ccb0 <I2C_Slave_ISR_DMA+0x274>)
 800cadc:	4293      	cmp	r3, r2
 800cade:	d059      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cae0:	68fb      	ldr	r3, [r7, #12]
 800cae2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cae4:	681b      	ldr	r3, [r3, #0]
 800cae6:	4a73      	ldr	r2, [pc, #460]	; (800ccb4 <I2C_Slave_ISR_DMA+0x278>)
 800cae8:	4293      	cmp	r3, r2
 800caea:	d053      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800caec:	68fb      	ldr	r3, [r7, #12]
 800caee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800caf0:	681b      	ldr	r3, [r3, #0]
 800caf2:	4a71      	ldr	r2, [pc, #452]	; (800ccb8 <I2C_Slave_ISR_DMA+0x27c>)
 800caf4:	4293      	cmp	r3, r2
 800caf6:	d04d      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800caf8:	68fb      	ldr	r3, [r7, #12]
 800cafa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cafc:	681b      	ldr	r3, [r3, #0]
 800cafe:	4a6f      	ldr	r2, [pc, #444]	; (800ccbc <I2C_Slave_ISR_DMA+0x280>)
 800cb00:	4293      	cmp	r3, r2
 800cb02:	d047      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb04:	68fb      	ldr	r3, [r7, #12]
 800cb06:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb08:	681b      	ldr	r3, [r3, #0]
 800cb0a:	4a6d      	ldr	r2, [pc, #436]	; (800ccc0 <I2C_Slave_ISR_DMA+0x284>)
 800cb0c:	4293      	cmp	r3, r2
 800cb0e:	d041      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb10:	68fb      	ldr	r3, [r7, #12]
 800cb12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb14:	681b      	ldr	r3, [r3, #0]
 800cb16:	4a6b      	ldr	r2, [pc, #428]	; (800ccc4 <I2C_Slave_ISR_DMA+0x288>)
 800cb18:	4293      	cmp	r3, r2
 800cb1a:	d03b      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb1c:	68fb      	ldr	r3, [r7, #12]
 800cb1e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb20:	681b      	ldr	r3, [r3, #0]
 800cb22:	4a69      	ldr	r2, [pc, #420]	; (800ccc8 <I2C_Slave_ISR_DMA+0x28c>)
 800cb24:	4293      	cmp	r3, r2
 800cb26:	d035      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb28:	68fb      	ldr	r3, [r7, #12]
 800cb2a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb2c:	681b      	ldr	r3, [r3, #0]
 800cb2e:	4a67      	ldr	r2, [pc, #412]	; (800cccc <I2C_Slave_ISR_DMA+0x290>)
 800cb30:	4293      	cmp	r3, r2
 800cb32:	d02f      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb34:	68fb      	ldr	r3, [r7, #12]
 800cb36:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb38:	681b      	ldr	r3, [r3, #0]
 800cb3a:	4a65      	ldr	r2, [pc, #404]	; (800ccd0 <I2C_Slave_ISR_DMA+0x294>)
 800cb3c:	4293      	cmp	r3, r2
 800cb3e:	d029      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb40:	68fb      	ldr	r3, [r7, #12]
 800cb42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb44:	681b      	ldr	r3, [r3, #0]
 800cb46:	4a63      	ldr	r2, [pc, #396]	; (800ccd4 <I2C_Slave_ISR_DMA+0x298>)
 800cb48:	4293      	cmp	r3, r2
 800cb4a:	d023      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb4c:	68fb      	ldr	r3, [r7, #12]
 800cb4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb50:	681b      	ldr	r3, [r3, #0]
 800cb52:	4a61      	ldr	r2, [pc, #388]	; (800ccd8 <I2C_Slave_ISR_DMA+0x29c>)
 800cb54:	4293      	cmp	r3, r2
 800cb56:	d01d      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb58:	68fb      	ldr	r3, [r7, #12]
 800cb5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb5c:	681b      	ldr	r3, [r3, #0]
 800cb5e:	4a5f      	ldr	r2, [pc, #380]	; (800ccdc <I2C_Slave_ISR_DMA+0x2a0>)
 800cb60:	4293      	cmp	r3, r2
 800cb62:	d017      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb64:	68fb      	ldr	r3, [r7, #12]
 800cb66:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb68:	681b      	ldr	r3, [r3, #0]
 800cb6a:	4a5d      	ldr	r2, [pc, #372]	; (800cce0 <I2C_Slave_ISR_DMA+0x2a4>)
 800cb6c:	4293      	cmp	r3, r2
 800cb6e:	d011      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb70:	68fb      	ldr	r3, [r7, #12]
 800cb72:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb74:	681b      	ldr	r3, [r3, #0]
 800cb76:	4a5b      	ldr	r2, [pc, #364]	; (800cce4 <I2C_Slave_ISR_DMA+0x2a8>)
 800cb78:	4293      	cmp	r3, r2
 800cb7a:	d00b      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb7c:	68fb      	ldr	r3, [r7, #12]
 800cb7e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb80:	681b      	ldr	r3, [r3, #0]
 800cb82:	4a59      	ldr	r2, [pc, #356]	; (800cce8 <I2C_Slave_ISR_DMA+0x2ac>)
 800cb84:	4293      	cmp	r3, r2
 800cb86:	d005      	beq.n	800cb94 <I2C_Slave_ISR_DMA+0x158>
 800cb88:	68fb      	ldr	r3, [r7, #12]
 800cb8a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb8c:	681b      	ldr	r3, [r3, #0]
 800cb8e:	4a57      	ldr	r2, [pc, #348]	; (800ccec <I2C_Slave_ISR_DMA+0x2b0>)
 800cb90:	4293      	cmp	r3, r2
 800cb92:	d109      	bne.n	800cba8 <I2C_Slave_ISR_DMA+0x16c>
 800cb94:	68fb      	ldr	r3, [r7, #12]
 800cb96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb98:	681b      	ldr	r3, [r3, #0]
 800cb9a:	685b      	ldr	r3, [r3, #4]
 800cb9c:	2b00      	cmp	r3, #0
 800cb9e:	bf0c      	ite	eq
 800cba0:	2301      	moveq	r3, #1
 800cba2:	2300      	movne	r3, #0
 800cba4:	b2db      	uxtb	r3, r3
 800cba6:	e008      	b.n	800cbba <I2C_Slave_ISR_DMA+0x17e>
 800cba8:	68fb      	ldr	r3, [r7, #12]
 800cbaa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cbac:	681b      	ldr	r3, [r3, #0]
 800cbae:	685b      	ldr	r3, [r3, #4]
 800cbb0:	2b00      	cmp	r3, #0
 800cbb2:	bf0c      	ite	eq
 800cbb4:	2301      	moveq	r3, #1
 800cbb6:	2300      	movne	r3, #0
 800cbb8:	b2db      	uxtb	r3, r3
 800cbba:	2b00      	cmp	r3, #0
 800cbbc:	d001      	beq.n	800cbc2 <I2C_Slave_ISR_DMA+0x186>
 800cbbe:	2301      	movs	r3, #1
 800cbc0:	61fb      	str	r3, [r7, #28]
 800cbc2:	68fb      	ldr	r3, [r7, #12]
 800cbc4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cbc6:	2b00      	cmp	r3, #0
 800cbc8:	f000 809f 	beq.w	800cd0a <I2C_Slave_ISR_DMA+0x2ce>
 800cbcc:	687b      	ldr	r3, [r7, #4]
 800cbce:	0b9b      	lsrs	r3, r3, #14
 800cbd0:	f003 0301 	and.w	r3, r3, #1
 800cbd4:	2b00      	cmp	r3, #0
 800cbd6:	f000 8098 	beq.w	800cd0a <I2C_Slave_ISR_DMA+0x2ce>
 800cbda:	68fb      	ldr	r3, [r7, #12]
 800cbdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cbde:	681b      	ldr	r3, [r3, #0]
 800cbe0:	4a33      	ldr	r2, [pc, #204]	; (800ccb0 <I2C_Slave_ISR_DMA+0x274>)
 800cbe2:	4293      	cmp	r3, r2
 800cbe4:	d059      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cbe6:	68fb      	ldr	r3, [r7, #12]
 800cbe8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cbea:	681b      	ldr	r3, [r3, #0]
 800cbec:	4a31      	ldr	r2, [pc, #196]	; (800ccb4 <I2C_Slave_ISR_DMA+0x278>)
 800cbee:	4293      	cmp	r3, r2
 800cbf0:	d053      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cbf2:	68fb      	ldr	r3, [r7, #12]
 800cbf4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cbf6:	681b      	ldr	r3, [r3, #0]
 800cbf8:	4a2f      	ldr	r2, [pc, #188]	; (800ccb8 <I2C_Slave_ISR_DMA+0x27c>)
 800cbfa:	4293      	cmp	r3, r2
 800cbfc:	d04d      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cbfe:	68fb      	ldr	r3, [r7, #12]
 800cc00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc02:	681b      	ldr	r3, [r3, #0]
 800cc04:	4a2d      	ldr	r2, [pc, #180]	; (800ccbc <I2C_Slave_ISR_DMA+0x280>)
 800cc06:	4293      	cmp	r3, r2
 800cc08:	d047      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc0a:	68fb      	ldr	r3, [r7, #12]
 800cc0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc0e:	681b      	ldr	r3, [r3, #0]
 800cc10:	4a2b      	ldr	r2, [pc, #172]	; (800ccc0 <I2C_Slave_ISR_DMA+0x284>)
 800cc12:	4293      	cmp	r3, r2
 800cc14:	d041      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc16:	68fb      	ldr	r3, [r7, #12]
 800cc18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc1a:	681b      	ldr	r3, [r3, #0]
 800cc1c:	4a29      	ldr	r2, [pc, #164]	; (800ccc4 <I2C_Slave_ISR_DMA+0x288>)
 800cc1e:	4293      	cmp	r3, r2
 800cc20:	d03b      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc22:	68fb      	ldr	r3, [r7, #12]
 800cc24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc26:	681b      	ldr	r3, [r3, #0]
 800cc28:	4a27      	ldr	r2, [pc, #156]	; (800ccc8 <I2C_Slave_ISR_DMA+0x28c>)
 800cc2a:	4293      	cmp	r3, r2
 800cc2c:	d035      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc2e:	68fb      	ldr	r3, [r7, #12]
 800cc30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc32:	681b      	ldr	r3, [r3, #0]
 800cc34:	4a25      	ldr	r2, [pc, #148]	; (800cccc <I2C_Slave_ISR_DMA+0x290>)
 800cc36:	4293      	cmp	r3, r2
 800cc38:	d02f      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc3a:	68fb      	ldr	r3, [r7, #12]
 800cc3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc3e:	681b      	ldr	r3, [r3, #0]
 800cc40:	4a23      	ldr	r2, [pc, #140]	; (800ccd0 <I2C_Slave_ISR_DMA+0x294>)
 800cc42:	4293      	cmp	r3, r2
 800cc44:	d029      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc46:	68fb      	ldr	r3, [r7, #12]
 800cc48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc4a:	681b      	ldr	r3, [r3, #0]
 800cc4c:	4a21      	ldr	r2, [pc, #132]	; (800ccd4 <I2C_Slave_ISR_DMA+0x298>)
 800cc4e:	4293      	cmp	r3, r2
 800cc50:	d023      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc52:	68fb      	ldr	r3, [r7, #12]
 800cc54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc56:	681b      	ldr	r3, [r3, #0]
 800cc58:	4a1f      	ldr	r2, [pc, #124]	; (800ccd8 <I2C_Slave_ISR_DMA+0x29c>)
 800cc5a:	4293      	cmp	r3, r2
 800cc5c:	d01d      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc5e:	68fb      	ldr	r3, [r7, #12]
 800cc60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc62:	681b      	ldr	r3, [r3, #0]
 800cc64:	4a1d      	ldr	r2, [pc, #116]	; (800ccdc <I2C_Slave_ISR_DMA+0x2a0>)
 800cc66:	4293      	cmp	r3, r2
 800cc68:	d017      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc6a:	68fb      	ldr	r3, [r7, #12]
 800cc6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc6e:	681b      	ldr	r3, [r3, #0]
 800cc70:	4a1b      	ldr	r2, [pc, #108]	; (800cce0 <I2C_Slave_ISR_DMA+0x2a4>)
 800cc72:	4293      	cmp	r3, r2
 800cc74:	d011      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc76:	68fb      	ldr	r3, [r7, #12]
 800cc78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc7a:	681b      	ldr	r3, [r3, #0]
 800cc7c:	4a19      	ldr	r2, [pc, #100]	; (800cce4 <I2C_Slave_ISR_DMA+0x2a8>)
 800cc7e:	4293      	cmp	r3, r2
 800cc80:	d00b      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc82:	68fb      	ldr	r3, [r7, #12]
 800cc84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc86:	681b      	ldr	r3, [r3, #0]
 800cc88:	4a17      	ldr	r2, [pc, #92]	; (800cce8 <I2C_Slave_ISR_DMA+0x2ac>)
 800cc8a:	4293      	cmp	r3, r2
 800cc8c:	d005      	beq.n	800cc9a <I2C_Slave_ISR_DMA+0x25e>
 800cc8e:	68fb      	ldr	r3, [r7, #12]
 800cc90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc92:	681b      	ldr	r3, [r3, #0]
 800cc94:	4a15      	ldr	r2, [pc, #84]	; (800ccec <I2C_Slave_ISR_DMA+0x2b0>)
 800cc96:	4293      	cmp	r3, r2
 800cc98:	d12a      	bne.n	800ccf0 <I2C_Slave_ISR_DMA+0x2b4>
 800cc9a:	68fb      	ldr	r3, [r7, #12]
 800cc9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc9e:	681b      	ldr	r3, [r3, #0]
 800cca0:	685b      	ldr	r3, [r3, #4]
 800cca2:	2b00      	cmp	r3, #0
 800cca4:	bf0c      	ite	eq
 800cca6:	2301      	moveq	r3, #1
 800cca8:	2300      	movne	r3, #0
 800ccaa:	b2db      	uxtb	r3, r3
 800ccac:	e029      	b.n	800cd02 <I2C_Slave_ISR_DMA+0x2c6>
 800ccae:	bf00      	nop
 800ccb0:	40020010 	.word	0x40020010
 800ccb4:	40020028 	.word	0x40020028
 800ccb8:	40020040 	.word	0x40020040
 800ccbc:	40020058 	.word	0x40020058
 800ccc0:	40020070 	.word	0x40020070
 800ccc4:	40020088 	.word	0x40020088
 800ccc8:	400200a0 	.word	0x400200a0
 800cccc:	400200b8 	.word	0x400200b8
 800ccd0:	40020410 	.word	0x40020410
 800ccd4:	40020428 	.word	0x40020428
 800ccd8:	40020440 	.word	0x40020440
 800ccdc:	40020458 	.word	0x40020458
 800cce0:	40020470 	.word	0x40020470
 800cce4:	40020488 	.word	0x40020488
 800cce8:	400204a0 	.word	0x400204a0
 800ccec:	400204b8 	.word	0x400204b8
 800ccf0:	68fb      	ldr	r3, [r7, #12]
 800ccf2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ccf4:	681b      	ldr	r3, [r3, #0]
 800ccf6:	685b      	ldr	r3, [r3, #4]
 800ccf8:	2b00      	cmp	r3, #0
 800ccfa:	bf0c      	ite	eq
 800ccfc:	2301      	moveq	r3, #1
 800ccfe:	2300      	movne	r3, #0
 800cd00:	b2db      	uxtb	r3, r3
 800cd02:	2b00      	cmp	r3, #0
 800cd04:	d001      	beq.n	800cd0a <I2C_Slave_ISR_DMA+0x2ce>
 800cd06:	2301      	movs	r3, #1
 800cd08:	61fb      	str	r3, [r7, #28]
 800cd0a:	69fb      	ldr	r3, [r7, #28]
 800cd0c:	2b01      	cmp	r3, #1
 800cd0e:	d128      	bne.n	800cd62 <I2C_Slave_ISR_DMA+0x326>
 800cd10:	68fb      	ldr	r3, [r7, #12]
 800cd12:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800cd16:	b2db      	uxtb	r3, r3
 800cd18:	2b28      	cmp	r3, #40	; 0x28
 800cd1a:	d108      	bne.n	800cd2e <I2C_Slave_ISR_DMA+0x2f2>
 800cd1c:	69bb      	ldr	r3, [r7, #24]
 800cd1e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800cd22:	d104      	bne.n	800cd2e <I2C_Slave_ISR_DMA+0x2f2>
 800cd24:	68b9      	ldr	r1, [r7, #8]
 800cd26:	68f8      	ldr	r0, [r7, #12]
 800cd28:	f000 fcb0 	bl	800d68c <I2C_ITListenCplt>
 800cd2c:	e048      	b.n	800cdc0 <I2C_Slave_ISR_DMA+0x384>
 800cd2e:	68fb      	ldr	r3, [r7, #12]
 800cd30:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800cd34:	b2db      	uxtb	r3, r3
 800cd36:	2b29      	cmp	r3, #41	; 0x29
 800cd38:	d10e      	bne.n	800cd58 <I2C_Slave_ISR_DMA+0x31c>
 800cd3a:	69bb      	ldr	r3, [r7, #24]
 800cd3c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800cd40:	d00a      	beq.n	800cd58 <I2C_Slave_ISR_DMA+0x31c>
 800cd42:	68fb      	ldr	r3, [r7, #12]
 800cd44:	681b      	ldr	r3, [r3, #0]
 800cd46:	2210      	movs	r2, #16
 800cd48:	61da      	str	r2, [r3, #28]
 800cd4a:	68f8      	ldr	r0, [r7, #12]
 800cd4c:	f000 fe0b 	bl	800d966 <I2C_Flush_TXDR>
 800cd50:	68f8      	ldr	r0, [r7, #12]
 800cd52:	f000 f918 	bl	800cf86 <I2C_ITSlaveSeqCplt>
 800cd56:	e033      	b.n	800cdc0 <I2C_Slave_ISR_DMA+0x384>
 800cd58:	68fb      	ldr	r3, [r7, #12]
 800cd5a:	681b      	ldr	r3, [r3, #0]
 800cd5c:	2210      	movs	r2, #16
 800cd5e:	61da      	str	r2, [r3, #28]
 800cd60:	e034      	b.n	800cdcc <I2C_Slave_ISR_DMA+0x390>
 800cd62:	68fb      	ldr	r3, [r7, #12]
 800cd64:	681b      	ldr	r3, [r3, #0]
 800cd66:	2210      	movs	r2, #16
 800cd68:	61da      	str	r2, [r3, #28]
 800cd6a:	68fb      	ldr	r3, [r7, #12]
 800cd6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cd6e:	f043 0204 	orr.w	r2, r3, #4
 800cd72:	68fb      	ldr	r3, [r7, #12]
 800cd74:	645a      	str	r2, [r3, #68]	; 0x44
 800cd76:	68fb      	ldr	r3, [r7, #12]
 800cd78:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800cd7c:	75fb      	strb	r3, [r7, #23]
 800cd7e:	69bb      	ldr	r3, [r7, #24]
 800cd80:	2b00      	cmp	r3, #0
 800cd82:	d003      	beq.n	800cd8c <I2C_Slave_ISR_DMA+0x350>
 800cd84:	69bb      	ldr	r3, [r7, #24]
 800cd86:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800cd8a:	d11f      	bne.n	800cdcc <I2C_Slave_ISR_DMA+0x390>
 800cd8c:	7dfb      	ldrb	r3, [r7, #23]
 800cd8e:	2b21      	cmp	r3, #33	; 0x21
 800cd90:	d002      	beq.n	800cd98 <I2C_Slave_ISR_DMA+0x35c>
 800cd92:	7dfb      	ldrb	r3, [r7, #23]
 800cd94:	2b29      	cmp	r3, #41	; 0x29
 800cd96:	d103      	bne.n	800cda0 <I2C_Slave_ISR_DMA+0x364>
 800cd98:	68fb      	ldr	r3, [r7, #12]
 800cd9a:	2221      	movs	r2, #33	; 0x21
 800cd9c:	631a      	str	r2, [r3, #48]	; 0x30
 800cd9e:	e008      	b.n	800cdb2 <I2C_Slave_ISR_DMA+0x376>
 800cda0:	7dfb      	ldrb	r3, [r7, #23]
 800cda2:	2b22      	cmp	r3, #34	; 0x22
 800cda4:	d002      	beq.n	800cdac <I2C_Slave_ISR_DMA+0x370>
 800cda6:	7dfb      	ldrb	r3, [r7, #23]
 800cda8:	2b2a      	cmp	r3, #42	; 0x2a
 800cdaa:	d102      	bne.n	800cdb2 <I2C_Slave_ISR_DMA+0x376>
 800cdac:	68fb      	ldr	r3, [r7, #12]
 800cdae:	2222      	movs	r2, #34	; 0x22
 800cdb0:	631a      	str	r2, [r3, #48]	; 0x30
 800cdb2:	68fb      	ldr	r3, [r7, #12]
 800cdb4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cdb6:	4619      	mov	r1, r3
 800cdb8:	68f8      	ldr	r0, [r7, #12]
 800cdba:	f000 fcbd 	bl	800d738 <I2C_ITError>
 800cdbe:	e005      	b.n	800cdcc <I2C_Slave_ISR_DMA+0x390>
 800cdc0:	e004      	b.n	800cdcc <I2C_Slave_ISR_DMA+0x390>
 800cdc2:	68fb      	ldr	r3, [r7, #12]
 800cdc4:	681b      	ldr	r3, [r3, #0]
 800cdc6:	2210      	movs	r2, #16
 800cdc8:	61da      	str	r2, [r3, #28]
 800cdca:	e011      	b.n	800cdf0 <I2C_Slave_ISR_DMA+0x3b4>
 800cdcc:	bf00      	nop
 800cdce:	e00f      	b.n	800cdf0 <I2C_Slave_ISR_DMA+0x3b4>
 800cdd0:	68bb      	ldr	r3, [r7, #8]
 800cdd2:	08db      	lsrs	r3, r3, #3
 800cdd4:	f003 0301 	and.w	r3, r3, #1
 800cdd8:	2b00      	cmp	r3, #0
 800cdda:	d009      	beq.n	800cdf0 <I2C_Slave_ISR_DMA+0x3b4>
 800cddc:	687b      	ldr	r3, [r7, #4]
 800cdde:	08db      	lsrs	r3, r3, #3
 800cde0:	f003 0301 	and.w	r3, r3, #1
 800cde4:	2b00      	cmp	r3, #0
 800cde6:	d003      	beq.n	800cdf0 <I2C_Slave_ISR_DMA+0x3b4>
 800cde8:	68b9      	ldr	r1, [r7, #8]
 800cdea:	68f8      	ldr	r0, [r7, #12]
 800cdec:	f000 f80a 	bl	800ce04 <I2C_ITAddrCplt>
 800cdf0:	68fb      	ldr	r3, [r7, #12]
 800cdf2:	2200      	movs	r2, #0
 800cdf4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800cdf8:	2300      	movs	r3, #0
 800cdfa:	4618      	mov	r0, r3
 800cdfc:	3720      	adds	r7, #32
 800cdfe:	46bd      	mov	sp, r7
 800ce00:	bd80      	pop	{r7, pc}
 800ce02:	bf00      	nop

0800ce04 <I2C_ITAddrCplt>:
 800ce04:	b580      	push	{r7, lr}
 800ce06:	b084      	sub	sp, #16
 800ce08:	af00      	add	r7, sp, #0
 800ce0a:	6078      	str	r0, [r7, #4]
 800ce0c:	6039      	str	r1, [r7, #0]
 800ce0e:	687b      	ldr	r3, [r7, #4]
 800ce10:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800ce14:	b2db      	uxtb	r3, r3
 800ce16:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800ce1a:	2b28      	cmp	r3, #40	; 0x28
 800ce1c:	d16a      	bne.n	800cef4 <I2C_ITAddrCplt+0xf0>
 800ce1e:	687b      	ldr	r3, [r7, #4]
 800ce20:	681b      	ldr	r3, [r3, #0]
 800ce22:	699b      	ldr	r3, [r3, #24]
 800ce24:	0c1b      	lsrs	r3, r3, #16
 800ce26:	b2db      	uxtb	r3, r3
 800ce28:	f003 0301 	and.w	r3, r3, #1
 800ce2c:	73fb      	strb	r3, [r7, #15]
 800ce2e:	687b      	ldr	r3, [r7, #4]
 800ce30:	681b      	ldr	r3, [r3, #0]
 800ce32:	699b      	ldr	r3, [r3, #24]
 800ce34:	0c1b      	lsrs	r3, r3, #16
 800ce36:	b29b      	uxth	r3, r3
 800ce38:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800ce3c:	81bb      	strh	r3, [r7, #12]
 800ce3e:	687b      	ldr	r3, [r7, #4]
 800ce40:	681b      	ldr	r3, [r3, #0]
 800ce42:	689b      	ldr	r3, [r3, #8]
 800ce44:	b29b      	uxth	r3, r3
 800ce46:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800ce4a:	817b      	strh	r3, [r7, #10]
 800ce4c:	687b      	ldr	r3, [r7, #4]
 800ce4e:	681b      	ldr	r3, [r3, #0]
 800ce50:	68db      	ldr	r3, [r3, #12]
 800ce52:	b29b      	uxth	r3, r3
 800ce54:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800ce58:	813b      	strh	r3, [r7, #8]
 800ce5a:	687b      	ldr	r3, [r7, #4]
 800ce5c:	68db      	ldr	r3, [r3, #12]
 800ce5e:	2b02      	cmp	r3, #2
 800ce60:	d138      	bne.n	800ced4 <I2C_ITAddrCplt+0xd0>
 800ce62:	897b      	ldrh	r3, [r7, #10]
 800ce64:	09db      	lsrs	r3, r3, #7
 800ce66:	b29a      	uxth	r2, r3
 800ce68:	89bb      	ldrh	r3, [r7, #12]
 800ce6a:	4053      	eors	r3, r2
 800ce6c:	b29b      	uxth	r3, r3
 800ce6e:	f003 0306 	and.w	r3, r3, #6
 800ce72:	2b00      	cmp	r3, #0
 800ce74:	d11c      	bne.n	800ceb0 <I2C_ITAddrCplt+0xac>
 800ce76:	897b      	ldrh	r3, [r7, #10]
 800ce78:	81bb      	strh	r3, [r7, #12]
 800ce7a:	687b      	ldr	r3, [r7, #4]
 800ce7c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ce7e:	1c5a      	adds	r2, r3, #1
 800ce80:	687b      	ldr	r3, [r7, #4]
 800ce82:	649a      	str	r2, [r3, #72]	; 0x48
 800ce84:	687b      	ldr	r3, [r7, #4]
 800ce86:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ce88:	2b02      	cmp	r3, #2
 800ce8a:	d13b      	bne.n	800cf04 <I2C_ITAddrCplt+0x100>
 800ce8c:	687b      	ldr	r3, [r7, #4]
 800ce8e:	2200      	movs	r2, #0
 800ce90:	649a      	str	r2, [r3, #72]	; 0x48
 800ce92:	687b      	ldr	r3, [r7, #4]
 800ce94:	681b      	ldr	r3, [r3, #0]
 800ce96:	2208      	movs	r2, #8
 800ce98:	61da      	str	r2, [r3, #28]
 800ce9a:	687b      	ldr	r3, [r7, #4]
 800ce9c:	2200      	movs	r2, #0
 800ce9e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800cea2:	89ba      	ldrh	r2, [r7, #12]
 800cea4:	7bfb      	ldrb	r3, [r7, #15]
 800cea6:	4619      	mov	r1, r3
 800cea8:	6878      	ldr	r0, [r7, #4]
 800ceaa:	f7ff f91e 	bl	800c0ea <HAL_I2C_AddrCallback>
 800ceae:	e029      	b.n	800cf04 <I2C_ITAddrCplt+0x100>
 800ceb0:	893b      	ldrh	r3, [r7, #8]
 800ceb2:	81bb      	strh	r3, [r7, #12]
 800ceb4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800ceb8:	6878      	ldr	r0, [r7, #4]
 800ceba:	f001 f81d 	bl	800def8 <I2C_Disable_IRQ>
 800cebe:	687b      	ldr	r3, [r7, #4]
 800cec0:	2200      	movs	r2, #0
 800cec2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800cec6:	89ba      	ldrh	r2, [r7, #12]
 800cec8:	7bfb      	ldrb	r3, [r7, #15]
 800ceca:	4619      	mov	r1, r3
 800cecc:	6878      	ldr	r0, [r7, #4]
 800cece:	f7ff f90c 	bl	800c0ea <HAL_I2C_AddrCallback>
 800ced2:	e017      	b.n	800cf04 <I2C_ITAddrCplt+0x100>
 800ced4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800ced8:	6878      	ldr	r0, [r7, #4]
 800ceda:	f001 f80d 	bl	800def8 <I2C_Disable_IRQ>
 800cede:	687b      	ldr	r3, [r7, #4]
 800cee0:	2200      	movs	r2, #0
 800cee2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800cee6:	89ba      	ldrh	r2, [r7, #12]
 800cee8:	7bfb      	ldrb	r3, [r7, #15]
 800ceea:	4619      	mov	r1, r3
 800ceec:	6878      	ldr	r0, [r7, #4]
 800ceee:	f7ff f8fc 	bl	800c0ea <HAL_I2C_AddrCallback>
 800cef2:	e007      	b.n	800cf04 <I2C_ITAddrCplt+0x100>
 800cef4:	687b      	ldr	r3, [r7, #4]
 800cef6:	681b      	ldr	r3, [r3, #0]
 800cef8:	2208      	movs	r2, #8
 800cefa:	61da      	str	r2, [r3, #28]
 800cefc:	687b      	ldr	r3, [r7, #4]
 800cefe:	2200      	movs	r2, #0
 800cf00:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800cf04:	bf00      	nop
 800cf06:	3710      	adds	r7, #16
 800cf08:	46bd      	mov	sp, r7
 800cf0a:	bd80      	pop	{r7, pc}

0800cf0c <I2C_ITMasterSeqCplt>:
 800cf0c:	b580      	push	{r7, lr}
 800cf0e:	b082      	sub	sp, #8
 800cf10:	af00      	add	r7, sp, #0
 800cf12:	6078      	str	r0, [r7, #4]
 800cf14:	687b      	ldr	r3, [r7, #4]
 800cf16:	2200      	movs	r2, #0
 800cf18:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800cf1c:	687b      	ldr	r3, [r7, #4]
 800cf1e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800cf22:	b2db      	uxtb	r3, r3
 800cf24:	2b21      	cmp	r3, #33	; 0x21
 800cf26:	d115      	bne.n	800cf54 <I2C_ITMasterSeqCplt+0x48>
 800cf28:	687b      	ldr	r3, [r7, #4]
 800cf2a:	2220      	movs	r2, #32
 800cf2c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800cf30:	687b      	ldr	r3, [r7, #4]
 800cf32:	2211      	movs	r2, #17
 800cf34:	631a      	str	r2, [r3, #48]	; 0x30
 800cf36:	687b      	ldr	r3, [r7, #4]
 800cf38:	2200      	movs	r2, #0
 800cf3a:	635a      	str	r2, [r3, #52]	; 0x34
 800cf3c:	2101      	movs	r1, #1
 800cf3e:	6878      	ldr	r0, [r7, #4]
 800cf40:	f000 ffda 	bl	800def8 <I2C_Disable_IRQ>
 800cf44:	687b      	ldr	r3, [r7, #4]
 800cf46:	2200      	movs	r2, #0
 800cf48:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800cf4c:	6878      	ldr	r0, [r7, #4]
 800cf4e:	f7ff f8a4 	bl	800c09a <HAL_I2C_MasterTxCpltCallback>
 800cf52:	e014      	b.n	800cf7e <I2C_ITMasterSeqCplt+0x72>
 800cf54:	687b      	ldr	r3, [r7, #4]
 800cf56:	2220      	movs	r2, #32
 800cf58:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800cf5c:	687b      	ldr	r3, [r7, #4]
 800cf5e:	2212      	movs	r2, #18
 800cf60:	631a      	str	r2, [r3, #48]	; 0x30
 800cf62:	687b      	ldr	r3, [r7, #4]
 800cf64:	2200      	movs	r2, #0
 800cf66:	635a      	str	r2, [r3, #52]	; 0x34
 800cf68:	2102      	movs	r1, #2
 800cf6a:	6878      	ldr	r0, [r7, #4]
 800cf6c:	f000 ffc4 	bl	800def8 <I2C_Disable_IRQ>
 800cf70:	687b      	ldr	r3, [r7, #4]
 800cf72:	2200      	movs	r2, #0
 800cf74:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800cf78:	6878      	ldr	r0, [r7, #4]
 800cf7a:	f7ff f898 	bl	800c0ae <HAL_I2C_MasterRxCpltCallback>
 800cf7e:	bf00      	nop
 800cf80:	3708      	adds	r7, #8
 800cf82:	46bd      	mov	sp, r7
 800cf84:	bd80      	pop	{r7, pc}

0800cf86 <I2C_ITSlaveSeqCplt>:
 800cf86:	b580      	push	{r7, lr}
 800cf88:	b084      	sub	sp, #16
 800cf8a:	af00      	add	r7, sp, #0
 800cf8c:	6078      	str	r0, [r7, #4]
 800cf8e:	687b      	ldr	r3, [r7, #4]
 800cf90:	681b      	ldr	r3, [r3, #0]
 800cf92:	681b      	ldr	r3, [r3, #0]
 800cf94:	60fb      	str	r3, [r7, #12]
 800cf96:	687b      	ldr	r3, [r7, #4]
 800cf98:	2200      	movs	r2, #0
 800cf9a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800cf9e:	68fb      	ldr	r3, [r7, #12]
 800cfa0:	0b9b      	lsrs	r3, r3, #14
 800cfa2:	f003 0301 	and.w	r3, r3, #1
 800cfa6:	2b00      	cmp	r3, #0
 800cfa8:	d008      	beq.n	800cfbc <I2C_ITSlaveSeqCplt+0x36>
 800cfaa:	687b      	ldr	r3, [r7, #4]
 800cfac:	681b      	ldr	r3, [r3, #0]
 800cfae:	681a      	ldr	r2, [r3, #0]
 800cfb0:	687b      	ldr	r3, [r7, #4]
 800cfb2:	681b      	ldr	r3, [r3, #0]
 800cfb4:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800cfb8:	601a      	str	r2, [r3, #0]
 800cfba:	e00d      	b.n	800cfd8 <I2C_ITSlaveSeqCplt+0x52>
 800cfbc:	68fb      	ldr	r3, [r7, #12]
 800cfbe:	0bdb      	lsrs	r3, r3, #15
 800cfc0:	f003 0301 	and.w	r3, r3, #1
 800cfc4:	2b00      	cmp	r3, #0
 800cfc6:	d007      	beq.n	800cfd8 <I2C_ITSlaveSeqCplt+0x52>
 800cfc8:	687b      	ldr	r3, [r7, #4]
 800cfca:	681b      	ldr	r3, [r3, #0]
 800cfcc:	681a      	ldr	r2, [r3, #0]
 800cfce:	687b      	ldr	r3, [r7, #4]
 800cfd0:	681b      	ldr	r3, [r3, #0]
 800cfd2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800cfd6:	601a      	str	r2, [r3, #0]
 800cfd8:	687b      	ldr	r3, [r7, #4]
 800cfda:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800cfde:	b2db      	uxtb	r3, r3
 800cfe0:	2b29      	cmp	r3, #41	; 0x29
 800cfe2:	d112      	bne.n	800d00a <I2C_ITSlaveSeqCplt+0x84>
 800cfe4:	687b      	ldr	r3, [r7, #4]
 800cfe6:	2228      	movs	r2, #40	; 0x28
 800cfe8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800cfec:	687b      	ldr	r3, [r7, #4]
 800cfee:	2221      	movs	r2, #33	; 0x21
 800cff0:	631a      	str	r2, [r3, #48]	; 0x30
 800cff2:	2101      	movs	r1, #1
 800cff4:	6878      	ldr	r0, [r7, #4]
 800cff6:	f000 ff7f 	bl	800def8 <I2C_Disable_IRQ>
 800cffa:	687b      	ldr	r3, [r7, #4]
 800cffc:	2200      	movs	r2, #0
 800cffe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d002:	6878      	ldr	r0, [r7, #4]
 800d004:	f7ff f85d 	bl	800c0c2 <HAL_I2C_SlaveTxCpltCallback>
 800d008:	e017      	b.n	800d03a <I2C_ITSlaveSeqCplt+0xb4>
 800d00a:	687b      	ldr	r3, [r7, #4]
 800d00c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d010:	b2db      	uxtb	r3, r3
 800d012:	2b2a      	cmp	r3, #42	; 0x2a
 800d014:	d111      	bne.n	800d03a <I2C_ITSlaveSeqCplt+0xb4>
 800d016:	687b      	ldr	r3, [r7, #4]
 800d018:	2228      	movs	r2, #40	; 0x28
 800d01a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d01e:	687b      	ldr	r3, [r7, #4]
 800d020:	2222      	movs	r2, #34	; 0x22
 800d022:	631a      	str	r2, [r3, #48]	; 0x30
 800d024:	2102      	movs	r1, #2
 800d026:	6878      	ldr	r0, [r7, #4]
 800d028:	f000 ff66 	bl	800def8 <I2C_Disable_IRQ>
 800d02c:	687b      	ldr	r3, [r7, #4]
 800d02e:	2200      	movs	r2, #0
 800d030:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d034:	6878      	ldr	r0, [r7, #4]
 800d036:	f7ff f84e 	bl	800c0d6 <HAL_I2C_SlaveRxCpltCallback>
 800d03a:	bf00      	nop
 800d03c:	3710      	adds	r7, #16
 800d03e:	46bd      	mov	sp, r7
 800d040:	bd80      	pop	{r7, pc}
	...

0800d044 <I2C_ITMasterCplt>:
 800d044:	b580      	push	{r7, lr}
 800d046:	b086      	sub	sp, #24
 800d048:	af00      	add	r7, sp, #0
 800d04a:	6078      	str	r0, [r7, #4]
 800d04c:	6039      	str	r1, [r7, #0]
 800d04e:	683b      	ldr	r3, [r7, #0]
 800d050:	617b      	str	r3, [r7, #20]
 800d052:	687b      	ldr	r3, [r7, #4]
 800d054:	681b      	ldr	r3, [r3, #0]
 800d056:	2220      	movs	r2, #32
 800d058:	61da      	str	r2, [r3, #28]
 800d05a:	687b      	ldr	r3, [r7, #4]
 800d05c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d060:	b2db      	uxtb	r3, r3
 800d062:	2b21      	cmp	r3, #33	; 0x21
 800d064:	d107      	bne.n	800d076 <I2C_ITMasterCplt+0x32>
 800d066:	2101      	movs	r1, #1
 800d068:	6878      	ldr	r0, [r7, #4]
 800d06a:	f000 ff45 	bl	800def8 <I2C_Disable_IRQ>
 800d06e:	687b      	ldr	r3, [r7, #4]
 800d070:	2211      	movs	r2, #17
 800d072:	631a      	str	r2, [r3, #48]	; 0x30
 800d074:	e00c      	b.n	800d090 <I2C_ITMasterCplt+0x4c>
 800d076:	687b      	ldr	r3, [r7, #4]
 800d078:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d07c:	b2db      	uxtb	r3, r3
 800d07e:	2b22      	cmp	r3, #34	; 0x22
 800d080:	d106      	bne.n	800d090 <I2C_ITMasterCplt+0x4c>
 800d082:	2102      	movs	r1, #2
 800d084:	6878      	ldr	r0, [r7, #4]
 800d086:	f000 ff37 	bl	800def8 <I2C_Disable_IRQ>
 800d08a:	687b      	ldr	r3, [r7, #4]
 800d08c:	2212      	movs	r2, #18
 800d08e:	631a      	str	r2, [r3, #48]	; 0x30
 800d090:	687b      	ldr	r3, [r7, #4]
 800d092:	681b      	ldr	r3, [r3, #0]
 800d094:	6859      	ldr	r1, [r3, #4]
 800d096:	687b      	ldr	r3, [r7, #4]
 800d098:	681a      	ldr	r2, [r3, #0]
 800d09a:	4b4d      	ldr	r3, [pc, #308]	; (800d1d0 <I2C_ITMasterCplt+0x18c>)
 800d09c:	400b      	ands	r3, r1
 800d09e:	6053      	str	r3, [r2, #4]
 800d0a0:	687b      	ldr	r3, [r7, #4]
 800d0a2:	2200      	movs	r2, #0
 800d0a4:	635a      	str	r2, [r3, #52]	; 0x34
 800d0a6:	687b      	ldr	r3, [r7, #4]
 800d0a8:	4a4a      	ldr	r2, [pc, #296]	; (800d1d4 <I2C_ITMasterCplt+0x190>)
 800d0aa:	62da      	str	r2, [r3, #44]	; 0x2c
 800d0ac:	697b      	ldr	r3, [r7, #20]
 800d0ae:	091b      	lsrs	r3, r3, #4
 800d0b0:	f003 0301 	and.w	r3, r3, #1
 800d0b4:	2b00      	cmp	r3, #0
 800d0b6:	d009      	beq.n	800d0cc <I2C_ITMasterCplt+0x88>
 800d0b8:	687b      	ldr	r3, [r7, #4]
 800d0ba:	681b      	ldr	r3, [r3, #0]
 800d0bc:	2210      	movs	r2, #16
 800d0be:	61da      	str	r2, [r3, #28]
 800d0c0:	687b      	ldr	r3, [r7, #4]
 800d0c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d0c4:	f043 0204 	orr.w	r2, r3, #4
 800d0c8:	687b      	ldr	r3, [r7, #4]
 800d0ca:	645a      	str	r2, [r3, #68]	; 0x44
 800d0cc:	687b      	ldr	r3, [r7, #4]
 800d0ce:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d0d2:	b2db      	uxtb	r3, r3
 800d0d4:	2b60      	cmp	r3, #96	; 0x60
 800d0d6:	d10b      	bne.n	800d0f0 <I2C_ITMasterCplt+0xac>
 800d0d8:	697b      	ldr	r3, [r7, #20]
 800d0da:	089b      	lsrs	r3, r3, #2
 800d0dc:	f003 0301 	and.w	r3, r3, #1
 800d0e0:	2b00      	cmp	r3, #0
 800d0e2:	d005      	beq.n	800d0f0 <I2C_ITMasterCplt+0xac>
 800d0e4:	687b      	ldr	r3, [r7, #4]
 800d0e6:	681b      	ldr	r3, [r3, #0]
 800d0e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d0ea:	b2db      	uxtb	r3, r3
 800d0ec:	60fb      	str	r3, [r7, #12]
 800d0ee:	68fb      	ldr	r3, [r7, #12]
 800d0f0:	6878      	ldr	r0, [r7, #4]
 800d0f2:	f000 fc38 	bl	800d966 <I2C_Flush_TXDR>
 800d0f6:	687b      	ldr	r3, [r7, #4]
 800d0f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d0fa:	613b      	str	r3, [r7, #16]
 800d0fc:	687b      	ldr	r3, [r7, #4]
 800d0fe:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d102:	b2db      	uxtb	r3, r3
 800d104:	2b60      	cmp	r3, #96	; 0x60
 800d106:	d002      	beq.n	800d10e <I2C_ITMasterCplt+0xca>
 800d108:	693b      	ldr	r3, [r7, #16]
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	d006      	beq.n	800d11c <I2C_ITMasterCplt+0xd8>
 800d10e:	687b      	ldr	r3, [r7, #4]
 800d110:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d112:	4619      	mov	r1, r3
 800d114:	6878      	ldr	r0, [r7, #4]
 800d116:	f000 fb0f 	bl	800d738 <I2C_ITError>
 800d11a:	e054      	b.n	800d1c6 <I2C_ITMasterCplt+0x182>
 800d11c:	687b      	ldr	r3, [r7, #4]
 800d11e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d122:	b2db      	uxtb	r3, r3
 800d124:	2b21      	cmp	r3, #33	; 0x21
 800d126:	d124      	bne.n	800d172 <I2C_ITMasterCplt+0x12e>
 800d128:	687b      	ldr	r3, [r7, #4]
 800d12a:	2220      	movs	r2, #32
 800d12c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d130:	687b      	ldr	r3, [r7, #4]
 800d132:	2200      	movs	r2, #0
 800d134:	631a      	str	r2, [r3, #48]	; 0x30
 800d136:	687b      	ldr	r3, [r7, #4]
 800d138:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800d13c:	b2db      	uxtb	r3, r3
 800d13e:	2b40      	cmp	r3, #64	; 0x40
 800d140:	d10b      	bne.n	800d15a <I2C_ITMasterCplt+0x116>
 800d142:	687b      	ldr	r3, [r7, #4]
 800d144:	2200      	movs	r2, #0
 800d146:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800d14a:	687b      	ldr	r3, [r7, #4]
 800d14c:	2200      	movs	r2, #0
 800d14e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d152:	6878      	ldr	r0, [r7, #4]
 800d154:	f7fe ffe1 	bl	800c11a <HAL_I2C_MemTxCpltCallback>
 800d158:	e035      	b.n	800d1c6 <I2C_ITMasterCplt+0x182>
 800d15a:	687b      	ldr	r3, [r7, #4]
 800d15c:	2200      	movs	r2, #0
 800d15e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800d162:	687b      	ldr	r3, [r7, #4]
 800d164:	2200      	movs	r2, #0
 800d166:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d16a:	6878      	ldr	r0, [r7, #4]
 800d16c:	f7fe ff95 	bl	800c09a <HAL_I2C_MasterTxCpltCallback>
 800d170:	e029      	b.n	800d1c6 <I2C_ITMasterCplt+0x182>
 800d172:	687b      	ldr	r3, [r7, #4]
 800d174:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d178:	b2db      	uxtb	r3, r3
 800d17a:	2b22      	cmp	r3, #34	; 0x22
 800d17c:	d123      	bne.n	800d1c6 <I2C_ITMasterCplt+0x182>
 800d17e:	687b      	ldr	r3, [r7, #4]
 800d180:	2220      	movs	r2, #32
 800d182:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d186:	687b      	ldr	r3, [r7, #4]
 800d188:	2200      	movs	r2, #0
 800d18a:	631a      	str	r2, [r3, #48]	; 0x30
 800d18c:	687b      	ldr	r3, [r7, #4]
 800d18e:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800d192:	b2db      	uxtb	r3, r3
 800d194:	2b40      	cmp	r3, #64	; 0x40
 800d196:	d10b      	bne.n	800d1b0 <I2C_ITMasterCplt+0x16c>
 800d198:	687b      	ldr	r3, [r7, #4]
 800d19a:	2200      	movs	r2, #0
 800d19c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800d1a0:	687b      	ldr	r3, [r7, #4]
 800d1a2:	2200      	movs	r2, #0
 800d1a4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d1a8:	6878      	ldr	r0, [r7, #4]
 800d1aa:	f7fe ffc0 	bl	800c12e <HAL_I2C_MemRxCpltCallback>
 800d1ae:	e00a      	b.n	800d1c6 <I2C_ITMasterCplt+0x182>
 800d1b0:	687b      	ldr	r3, [r7, #4]
 800d1b2:	2200      	movs	r2, #0
 800d1b4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800d1b8:	687b      	ldr	r3, [r7, #4]
 800d1ba:	2200      	movs	r2, #0
 800d1bc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d1c0:	6878      	ldr	r0, [r7, #4]
 800d1c2:	f7fe ff74 	bl	800c0ae <HAL_I2C_MasterRxCpltCallback>
 800d1c6:	bf00      	nop
 800d1c8:	3718      	adds	r7, #24
 800d1ca:	46bd      	mov	sp, r7
 800d1cc:	bd80      	pop	{r7, pc}
 800d1ce:	bf00      	nop
 800d1d0:	fe00e800 	.word	0xfe00e800
 800d1d4:	ffff0000 	.word	0xffff0000

0800d1d8 <I2C_ITSlaveCplt>:
 800d1d8:	b580      	push	{r7, lr}
 800d1da:	b086      	sub	sp, #24
 800d1dc:	af00      	add	r7, sp, #0
 800d1de:	6078      	str	r0, [r7, #4]
 800d1e0:	6039      	str	r1, [r7, #0]
 800d1e2:	687b      	ldr	r3, [r7, #4]
 800d1e4:	681b      	ldr	r3, [r3, #0]
 800d1e6:	681b      	ldr	r3, [r3, #0]
 800d1e8:	613b      	str	r3, [r7, #16]
 800d1ea:	683b      	ldr	r3, [r7, #0]
 800d1ec:	617b      	str	r3, [r7, #20]
 800d1ee:	687b      	ldr	r3, [r7, #4]
 800d1f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d1f2:	60fb      	str	r3, [r7, #12]
 800d1f4:	687b      	ldr	r3, [r7, #4]
 800d1f6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d1fa:	72fb      	strb	r3, [r7, #11]
 800d1fc:	687b      	ldr	r3, [r7, #4]
 800d1fe:	681b      	ldr	r3, [r3, #0]
 800d200:	2220      	movs	r2, #32
 800d202:	61da      	str	r2, [r3, #28]
 800d204:	7afb      	ldrb	r3, [r7, #11]
 800d206:	2b21      	cmp	r3, #33	; 0x21
 800d208:	d002      	beq.n	800d210 <I2C_ITSlaveCplt+0x38>
 800d20a:	7afb      	ldrb	r3, [r7, #11]
 800d20c:	2b29      	cmp	r3, #41	; 0x29
 800d20e:	d108      	bne.n	800d222 <I2C_ITSlaveCplt+0x4a>
 800d210:	f248 0101 	movw	r1, #32769	; 0x8001
 800d214:	6878      	ldr	r0, [r7, #4]
 800d216:	f000 fe6f 	bl	800def8 <I2C_Disable_IRQ>
 800d21a:	687b      	ldr	r3, [r7, #4]
 800d21c:	2221      	movs	r2, #33	; 0x21
 800d21e:	631a      	str	r2, [r3, #48]	; 0x30
 800d220:	e019      	b.n	800d256 <I2C_ITSlaveCplt+0x7e>
 800d222:	7afb      	ldrb	r3, [r7, #11]
 800d224:	2b22      	cmp	r3, #34	; 0x22
 800d226:	d002      	beq.n	800d22e <I2C_ITSlaveCplt+0x56>
 800d228:	7afb      	ldrb	r3, [r7, #11]
 800d22a:	2b2a      	cmp	r3, #42	; 0x2a
 800d22c:	d108      	bne.n	800d240 <I2C_ITSlaveCplt+0x68>
 800d22e:	f248 0102 	movw	r1, #32770	; 0x8002
 800d232:	6878      	ldr	r0, [r7, #4]
 800d234:	f000 fe60 	bl	800def8 <I2C_Disable_IRQ>
 800d238:	687b      	ldr	r3, [r7, #4]
 800d23a:	2222      	movs	r2, #34	; 0x22
 800d23c:	631a      	str	r2, [r3, #48]	; 0x30
 800d23e:	e00a      	b.n	800d256 <I2C_ITSlaveCplt+0x7e>
 800d240:	7afb      	ldrb	r3, [r7, #11]
 800d242:	2b28      	cmp	r3, #40	; 0x28
 800d244:	d107      	bne.n	800d256 <I2C_ITSlaveCplt+0x7e>
 800d246:	f248 0103 	movw	r1, #32771	; 0x8003
 800d24a:	6878      	ldr	r0, [r7, #4]
 800d24c:	f000 fe54 	bl	800def8 <I2C_Disable_IRQ>
 800d250:	687b      	ldr	r3, [r7, #4]
 800d252:	2200      	movs	r2, #0
 800d254:	631a      	str	r2, [r3, #48]	; 0x30
 800d256:	687b      	ldr	r3, [r7, #4]
 800d258:	681b      	ldr	r3, [r3, #0]
 800d25a:	685a      	ldr	r2, [r3, #4]
 800d25c:	687b      	ldr	r3, [r7, #4]
 800d25e:	681b      	ldr	r3, [r3, #0]
 800d260:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800d264:	605a      	str	r2, [r3, #4]
 800d266:	687b      	ldr	r3, [r7, #4]
 800d268:	681b      	ldr	r3, [r3, #0]
 800d26a:	6859      	ldr	r1, [r3, #4]
 800d26c:	687b      	ldr	r3, [r7, #4]
 800d26e:	681a      	ldr	r2, [r3, #0]
 800d270:	4b80      	ldr	r3, [pc, #512]	; (800d474 <I2C_ITSlaveCplt+0x29c>)
 800d272:	400b      	ands	r3, r1
 800d274:	6053      	str	r3, [r2, #4]
 800d276:	6878      	ldr	r0, [r7, #4]
 800d278:	f000 fb75 	bl	800d966 <I2C_Flush_TXDR>
 800d27c:	693b      	ldr	r3, [r7, #16]
 800d27e:	0b9b      	lsrs	r3, r3, #14
 800d280:	f003 0301 	and.w	r3, r3, #1
 800d284:	2b00      	cmp	r3, #0
 800d286:	d07a      	beq.n	800d37e <I2C_ITSlaveCplt+0x1a6>
 800d288:	687b      	ldr	r3, [r7, #4]
 800d28a:	681b      	ldr	r3, [r3, #0]
 800d28c:	681a      	ldr	r2, [r3, #0]
 800d28e:	687b      	ldr	r3, [r7, #4]
 800d290:	681b      	ldr	r3, [r3, #0]
 800d292:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d296:	601a      	str	r2, [r3, #0]
 800d298:	687b      	ldr	r3, [r7, #4]
 800d29a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d29c:	2b00      	cmp	r3, #0
 800d29e:	f000 8112 	beq.w	800d4c6 <I2C_ITSlaveCplt+0x2ee>
 800d2a2:	687b      	ldr	r3, [r7, #4]
 800d2a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2a6:	681b      	ldr	r3, [r3, #0]
 800d2a8:	4a73      	ldr	r2, [pc, #460]	; (800d478 <I2C_ITSlaveCplt+0x2a0>)
 800d2aa:	4293      	cmp	r3, r2
 800d2ac:	d059      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d2ae:	687b      	ldr	r3, [r7, #4]
 800d2b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2b2:	681b      	ldr	r3, [r3, #0]
 800d2b4:	4a71      	ldr	r2, [pc, #452]	; (800d47c <I2C_ITSlaveCplt+0x2a4>)
 800d2b6:	4293      	cmp	r3, r2
 800d2b8:	d053      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d2ba:	687b      	ldr	r3, [r7, #4]
 800d2bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2be:	681b      	ldr	r3, [r3, #0]
 800d2c0:	4a6f      	ldr	r2, [pc, #444]	; (800d480 <I2C_ITSlaveCplt+0x2a8>)
 800d2c2:	4293      	cmp	r3, r2
 800d2c4:	d04d      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d2c6:	687b      	ldr	r3, [r7, #4]
 800d2c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2ca:	681b      	ldr	r3, [r3, #0]
 800d2cc:	4a6d      	ldr	r2, [pc, #436]	; (800d484 <I2C_ITSlaveCplt+0x2ac>)
 800d2ce:	4293      	cmp	r3, r2
 800d2d0:	d047      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d2d2:	687b      	ldr	r3, [r7, #4]
 800d2d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2d6:	681b      	ldr	r3, [r3, #0]
 800d2d8:	4a6b      	ldr	r2, [pc, #428]	; (800d488 <I2C_ITSlaveCplt+0x2b0>)
 800d2da:	4293      	cmp	r3, r2
 800d2dc:	d041      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d2de:	687b      	ldr	r3, [r7, #4]
 800d2e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2e2:	681b      	ldr	r3, [r3, #0]
 800d2e4:	4a69      	ldr	r2, [pc, #420]	; (800d48c <I2C_ITSlaveCplt+0x2b4>)
 800d2e6:	4293      	cmp	r3, r2
 800d2e8:	d03b      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d2ea:	687b      	ldr	r3, [r7, #4]
 800d2ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2ee:	681b      	ldr	r3, [r3, #0]
 800d2f0:	4a67      	ldr	r2, [pc, #412]	; (800d490 <I2C_ITSlaveCplt+0x2b8>)
 800d2f2:	4293      	cmp	r3, r2
 800d2f4:	d035      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d2f6:	687b      	ldr	r3, [r7, #4]
 800d2f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2fa:	681b      	ldr	r3, [r3, #0]
 800d2fc:	4a65      	ldr	r2, [pc, #404]	; (800d494 <I2C_ITSlaveCplt+0x2bc>)
 800d2fe:	4293      	cmp	r3, r2
 800d300:	d02f      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d302:	687b      	ldr	r3, [r7, #4]
 800d304:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d306:	681b      	ldr	r3, [r3, #0]
 800d308:	4a63      	ldr	r2, [pc, #396]	; (800d498 <I2C_ITSlaveCplt+0x2c0>)
 800d30a:	4293      	cmp	r3, r2
 800d30c:	d029      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d30e:	687b      	ldr	r3, [r7, #4]
 800d310:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d312:	681b      	ldr	r3, [r3, #0]
 800d314:	4a61      	ldr	r2, [pc, #388]	; (800d49c <I2C_ITSlaveCplt+0x2c4>)
 800d316:	4293      	cmp	r3, r2
 800d318:	d023      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d31a:	687b      	ldr	r3, [r7, #4]
 800d31c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d31e:	681b      	ldr	r3, [r3, #0]
 800d320:	4a5f      	ldr	r2, [pc, #380]	; (800d4a0 <I2C_ITSlaveCplt+0x2c8>)
 800d322:	4293      	cmp	r3, r2
 800d324:	d01d      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d326:	687b      	ldr	r3, [r7, #4]
 800d328:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d32a:	681b      	ldr	r3, [r3, #0]
 800d32c:	4a5d      	ldr	r2, [pc, #372]	; (800d4a4 <I2C_ITSlaveCplt+0x2cc>)
 800d32e:	4293      	cmp	r3, r2
 800d330:	d017      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d332:	687b      	ldr	r3, [r7, #4]
 800d334:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d336:	681b      	ldr	r3, [r3, #0]
 800d338:	4a5b      	ldr	r2, [pc, #364]	; (800d4a8 <I2C_ITSlaveCplt+0x2d0>)
 800d33a:	4293      	cmp	r3, r2
 800d33c:	d011      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d33e:	687b      	ldr	r3, [r7, #4]
 800d340:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d342:	681b      	ldr	r3, [r3, #0]
 800d344:	4a59      	ldr	r2, [pc, #356]	; (800d4ac <I2C_ITSlaveCplt+0x2d4>)
 800d346:	4293      	cmp	r3, r2
 800d348:	d00b      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d34a:	687b      	ldr	r3, [r7, #4]
 800d34c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d34e:	681b      	ldr	r3, [r3, #0]
 800d350:	4a57      	ldr	r2, [pc, #348]	; (800d4b0 <I2C_ITSlaveCplt+0x2d8>)
 800d352:	4293      	cmp	r3, r2
 800d354:	d005      	beq.n	800d362 <I2C_ITSlaveCplt+0x18a>
 800d356:	687b      	ldr	r3, [r7, #4]
 800d358:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d35a:	681b      	ldr	r3, [r3, #0]
 800d35c:	4a55      	ldr	r2, [pc, #340]	; (800d4b4 <I2C_ITSlaveCplt+0x2dc>)
 800d35e:	4293      	cmp	r3, r2
 800d360:	d105      	bne.n	800d36e <I2C_ITSlaveCplt+0x196>
 800d362:	687b      	ldr	r3, [r7, #4]
 800d364:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d366:	681b      	ldr	r3, [r3, #0]
 800d368:	685b      	ldr	r3, [r3, #4]
 800d36a:	b29b      	uxth	r3, r3
 800d36c:	e004      	b.n	800d378 <I2C_ITSlaveCplt+0x1a0>
 800d36e:	687b      	ldr	r3, [r7, #4]
 800d370:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d372:	681b      	ldr	r3, [r3, #0]
 800d374:	685b      	ldr	r3, [r3, #4]
 800d376:	b29b      	uxth	r3, r3
 800d378:	687a      	ldr	r2, [r7, #4]
 800d37a:	8553      	strh	r3, [r2, #42]	; 0x2a
 800d37c:	e0a3      	b.n	800d4c6 <I2C_ITSlaveCplt+0x2ee>
 800d37e:	693b      	ldr	r3, [r7, #16]
 800d380:	0bdb      	lsrs	r3, r3, #15
 800d382:	f003 0301 	and.w	r3, r3, #1
 800d386:	2b00      	cmp	r3, #0
 800d388:	f000 809d 	beq.w	800d4c6 <I2C_ITSlaveCplt+0x2ee>
 800d38c:	687b      	ldr	r3, [r7, #4]
 800d38e:	681b      	ldr	r3, [r3, #0]
 800d390:	681a      	ldr	r2, [r3, #0]
 800d392:	687b      	ldr	r3, [r7, #4]
 800d394:	681b      	ldr	r3, [r3, #0]
 800d396:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800d39a:	601a      	str	r2, [r3, #0]
 800d39c:	687b      	ldr	r3, [r7, #4]
 800d39e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3a0:	2b00      	cmp	r3, #0
 800d3a2:	f000 8090 	beq.w	800d4c6 <I2C_ITSlaveCplt+0x2ee>
 800d3a6:	687b      	ldr	r3, [r7, #4]
 800d3a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3aa:	681b      	ldr	r3, [r3, #0]
 800d3ac:	4a32      	ldr	r2, [pc, #200]	; (800d478 <I2C_ITSlaveCplt+0x2a0>)
 800d3ae:	4293      	cmp	r3, r2
 800d3b0:	d059      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d3b2:	687b      	ldr	r3, [r7, #4]
 800d3b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3b6:	681b      	ldr	r3, [r3, #0]
 800d3b8:	4a30      	ldr	r2, [pc, #192]	; (800d47c <I2C_ITSlaveCplt+0x2a4>)
 800d3ba:	4293      	cmp	r3, r2
 800d3bc:	d053      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d3be:	687b      	ldr	r3, [r7, #4]
 800d3c0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3c2:	681b      	ldr	r3, [r3, #0]
 800d3c4:	4a2e      	ldr	r2, [pc, #184]	; (800d480 <I2C_ITSlaveCplt+0x2a8>)
 800d3c6:	4293      	cmp	r3, r2
 800d3c8:	d04d      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d3ca:	687b      	ldr	r3, [r7, #4]
 800d3cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3ce:	681b      	ldr	r3, [r3, #0]
 800d3d0:	4a2c      	ldr	r2, [pc, #176]	; (800d484 <I2C_ITSlaveCplt+0x2ac>)
 800d3d2:	4293      	cmp	r3, r2
 800d3d4:	d047      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d3d6:	687b      	ldr	r3, [r7, #4]
 800d3d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3da:	681b      	ldr	r3, [r3, #0]
 800d3dc:	4a2a      	ldr	r2, [pc, #168]	; (800d488 <I2C_ITSlaveCplt+0x2b0>)
 800d3de:	4293      	cmp	r3, r2
 800d3e0:	d041      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d3e2:	687b      	ldr	r3, [r7, #4]
 800d3e4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3e6:	681b      	ldr	r3, [r3, #0]
 800d3e8:	4a28      	ldr	r2, [pc, #160]	; (800d48c <I2C_ITSlaveCplt+0x2b4>)
 800d3ea:	4293      	cmp	r3, r2
 800d3ec:	d03b      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d3ee:	687b      	ldr	r3, [r7, #4]
 800d3f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3f2:	681b      	ldr	r3, [r3, #0]
 800d3f4:	4a26      	ldr	r2, [pc, #152]	; (800d490 <I2C_ITSlaveCplt+0x2b8>)
 800d3f6:	4293      	cmp	r3, r2
 800d3f8:	d035      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d3fa:	687b      	ldr	r3, [r7, #4]
 800d3fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3fe:	681b      	ldr	r3, [r3, #0]
 800d400:	4a24      	ldr	r2, [pc, #144]	; (800d494 <I2C_ITSlaveCplt+0x2bc>)
 800d402:	4293      	cmp	r3, r2
 800d404:	d02f      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d406:	687b      	ldr	r3, [r7, #4]
 800d408:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d40a:	681b      	ldr	r3, [r3, #0]
 800d40c:	4a22      	ldr	r2, [pc, #136]	; (800d498 <I2C_ITSlaveCplt+0x2c0>)
 800d40e:	4293      	cmp	r3, r2
 800d410:	d029      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d412:	687b      	ldr	r3, [r7, #4]
 800d414:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d416:	681b      	ldr	r3, [r3, #0]
 800d418:	4a20      	ldr	r2, [pc, #128]	; (800d49c <I2C_ITSlaveCplt+0x2c4>)
 800d41a:	4293      	cmp	r3, r2
 800d41c:	d023      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d41e:	687b      	ldr	r3, [r7, #4]
 800d420:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d422:	681b      	ldr	r3, [r3, #0]
 800d424:	4a1e      	ldr	r2, [pc, #120]	; (800d4a0 <I2C_ITSlaveCplt+0x2c8>)
 800d426:	4293      	cmp	r3, r2
 800d428:	d01d      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d42a:	687b      	ldr	r3, [r7, #4]
 800d42c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d42e:	681b      	ldr	r3, [r3, #0]
 800d430:	4a1c      	ldr	r2, [pc, #112]	; (800d4a4 <I2C_ITSlaveCplt+0x2cc>)
 800d432:	4293      	cmp	r3, r2
 800d434:	d017      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d436:	687b      	ldr	r3, [r7, #4]
 800d438:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d43a:	681b      	ldr	r3, [r3, #0]
 800d43c:	4a1a      	ldr	r2, [pc, #104]	; (800d4a8 <I2C_ITSlaveCplt+0x2d0>)
 800d43e:	4293      	cmp	r3, r2
 800d440:	d011      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d442:	687b      	ldr	r3, [r7, #4]
 800d444:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d446:	681b      	ldr	r3, [r3, #0]
 800d448:	4a18      	ldr	r2, [pc, #96]	; (800d4ac <I2C_ITSlaveCplt+0x2d4>)
 800d44a:	4293      	cmp	r3, r2
 800d44c:	d00b      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d44e:	687b      	ldr	r3, [r7, #4]
 800d450:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d452:	681b      	ldr	r3, [r3, #0]
 800d454:	4a16      	ldr	r2, [pc, #88]	; (800d4b0 <I2C_ITSlaveCplt+0x2d8>)
 800d456:	4293      	cmp	r3, r2
 800d458:	d005      	beq.n	800d466 <I2C_ITSlaveCplt+0x28e>
 800d45a:	687b      	ldr	r3, [r7, #4]
 800d45c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d45e:	681b      	ldr	r3, [r3, #0]
 800d460:	4a14      	ldr	r2, [pc, #80]	; (800d4b4 <I2C_ITSlaveCplt+0x2dc>)
 800d462:	4293      	cmp	r3, r2
 800d464:	d128      	bne.n	800d4b8 <I2C_ITSlaveCplt+0x2e0>
 800d466:	687b      	ldr	r3, [r7, #4]
 800d468:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d46a:	681b      	ldr	r3, [r3, #0]
 800d46c:	685b      	ldr	r3, [r3, #4]
 800d46e:	b29b      	uxth	r3, r3
 800d470:	e027      	b.n	800d4c2 <I2C_ITSlaveCplt+0x2ea>
 800d472:	bf00      	nop
 800d474:	fe00e800 	.word	0xfe00e800
 800d478:	40020010 	.word	0x40020010
 800d47c:	40020028 	.word	0x40020028
 800d480:	40020040 	.word	0x40020040
 800d484:	40020058 	.word	0x40020058
 800d488:	40020070 	.word	0x40020070
 800d48c:	40020088 	.word	0x40020088
 800d490:	400200a0 	.word	0x400200a0
 800d494:	400200b8 	.word	0x400200b8
 800d498:	40020410 	.word	0x40020410
 800d49c:	40020428 	.word	0x40020428
 800d4a0:	40020440 	.word	0x40020440
 800d4a4:	40020458 	.word	0x40020458
 800d4a8:	40020470 	.word	0x40020470
 800d4ac:	40020488 	.word	0x40020488
 800d4b0:	400204a0 	.word	0x400204a0
 800d4b4:	400204b8 	.word	0x400204b8
 800d4b8:	687b      	ldr	r3, [r7, #4]
 800d4ba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d4bc:	681b      	ldr	r3, [r3, #0]
 800d4be:	685b      	ldr	r3, [r3, #4]
 800d4c0:	b29b      	uxth	r3, r3
 800d4c2:	687a      	ldr	r2, [r7, #4]
 800d4c4:	8553      	strh	r3, [r2, #42]	; 0x2a
 800d4c6:	697b      	ldr	r3, [r7, #20]
 800d4c8:	089b      	lsrs	r3, r3, #2
 800d4ca:	f003 0301 	and.w	r3, r3, #1
 800d4ce:	2b00      	cmp	r3, #0
 800d4d0:	d020      	beq.n	800d514 <I2C_ITSlaveCplt+0x33c>
 800d4d2:	697b      	ldr	r3, [r7, #20]
 800d4d4:	f023 0304 	bic.w	r3, r3, #4
 800d4d8:	617b      	str	r3, [r7, #20]
 800d4da:	687b      	ldr	r3, [r7, #4]
 800d4dc:	681b      	ldr	r3, [r3, #0]
 800d4de:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d4e0:	687b      	ldr	r3, [r7, #4]
 800d4e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d4e4:	b2d2      	uxtb	r2, r2
 800d4e6:	701a      	strb	r2, [r3, #0]
 800d4e8:	687b      	ldr	r3, [r7, #4]
 800d4ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d4ec:	1c5a      	adds	r2, r3, #1
 800d4ee:	687b      	ldr	r3, [r7, #4]
 800d4f0:	625a      	str	r2, [r3, #36]	; 0x24
 800d4f2:	687b      	ldr	r3, [r7, #4]
 800d4f4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800d4f6:	2b00      	cmp	r3, #0
 800d4f8:	d00c      	beq.n	800d514 <I2C_ITSlaveCplt+0x33c>
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800d4fe:	3b01      	subs	r3, #1
 800d500:	b29a      	uxth	r2, r3
 800d502:	687b      	ldr	r3, [r7, #4]
 800d504:	851a      	strh	r2, [r3, #40]	; 0x28
 800d506:	687b      	ldr	r3, [r7, #4]
 800d508:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800d50a:	b29b      	uxth	r3, r3
 800d50c:	3b01      	subs	r3, #1
 800d50e:	b29a      	uxth	r2, r3
 800d510:	687b      	ldr	r3, [r7, #4]
 800d512:	855a      	strh	r2, [r3, #42]	; 0x2a
 800d514:	687b      	ldr	r3, [r7, #4]
 800d516:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800d518:	b29b      	uxth	r3, r3
 800d51a:	2b00      	cmp	r3, #0
 800d51c:	d005      	beq.n	800d52a <I2C_ITSlaveCplt+0x352>
 800d51e:	687b      	ldr	r3, [r7, #4]
 800d520:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d522:	f043 0204 	orr.w	r2, r3, #4
 800d526:	687b      	ldr	r3, [r7, #4]
 800d528:	645a      	str	r2, [r3, #68]	; 0x44
 800d52a:	697b      	ldr	r3, [r7, #20]
 800d52c:	091b      	lsrs	r3, r3, #4
 800d52e:	f003 0301 	and.w	r3, r3, #1
 800d532:	2b00      	cmp	r3, #0
 800d534:	d04a      	beq.n	800d5cc <I2C_ITSlaveCplt+0x3f4>
 800d536:	693b      	ldr	r3, [r7, #16]
 800d538:	091b      	lsrs	r3, r3, #4
 800d53a:	f003 0301 	and.w	r3, r3, #1
 800d53e:	2b00      	cmp	r3, #0
 800d540:	d044      	beq.n	800d5cc <I2C_ITSlaveCplt+0x3f4>
 800d542:	687b      	ldr	r3, [r7, #4]
 800d544:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800d546:	b29b      	uxth	r3, r3
 800d548:	2b00      	cmp	r3, #0
 800d54a:	d128      	bne.n	800d59e <I2C_ITSlaveCplt+0x3c6>
 800d54c:	687b      	ldr	r3, [r7, #4]
 800d54e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d552:	b2db      	uxtb	r3, r3
 800d554:	2b28      	cmp	r3, #40	; 0x28
 800d556:	d108      	bne.n	800d56a <I2C_ITSlaveCplt+0x392>
 800d558:	68fb      	ldr	r3, [r7, #12]
 800d55a:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800d55e:	d104      	bne.n	800d56a <I2C_ITSlaveCplt+0x392>
 800d560:	6979      	ldr	r1, [r7, #20]
 800d562:	6878      	ldr	r0, [r7, #4]
 800d564:	f000 f892 	bl	800d68c <I2C_ITListenCplt>
 800d568:	e030      	b.n	800d5cc <I2C_ITSlaveCplt+0x3f4>
 800d56a:	687b      	ldr	r3, [r7, #4]
 800d56c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d570:	b2db      	uxtb	r3, r3
 800d572:	2b29      	cmp	r3, #41	; 0x29
 800d574:	d10e      	bne.n	800d594 <I2C_ITSlaveCplt+0x3bc>
 800d576:	68fb      	ldr	r3, [r7, #12]
 800d578:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800d57c:	d00a      	beq.n	800d594 <I2C_ITSlaveCplt+0x3bc>
 800d57e:	687b      	ldr	r3, [r7, #4]
 800d580:	681b      	ldr	r3, [r3, #0]
 800d582:	2210      	movs	r2, #16
 800d584:	61da      	str	r2, [r3, #28]
 800d586:	6878      	ldr	r0, [r7, #4]
 800d588:	f000 f9ed 	bl	800d966 <I2C_Flush_TXDR>
 800d58c:	6878      	ldr	r0, [r7, #4]
 800d58e:	f7ff fcfa 	bl	800cf86 <I2C_ITSlaveSeqCplt>
 800d592:	e01b      	b.n	800d5cc <I2C_ITSlaveCplt+0x3f4>
 800d594:	687b      	ldr	r3, [r7, #4]
 800d596:	681b      	ldr	r3, [r3, #0]
 800d598:	2210      	movs	r2, #16
 800d59a:	61da      	str	r2, [r3, #28]
 800d59c:	e016      	b.n	800d5cc <I2C_ITSlaveCplt+0x3f4>
 800d59e:	687b      	ldr	r3, [r7, #4]
 800d5a0:	681b      	ldr	r3, [r3, #0]
 800d5a2:	2210      	movs	r2, #16
 800d5a4:	61da      	str	r2, [r3, #28]
 800d5a6:	687b      	ldr	r3, [r7, #4]
 800d5a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d5aa:	f043 0204 	orr.w	r2, r3, #4
 800d5ae:	687b      	ldr	r3, [r7, #4]
 800d5b0:	645a      	str	r2, [r3, #68]	; 0x44
 800d5b2:	68fb      	ldr	r3, [r7, #12]
 800d5b4:	2b00      	cmp	r3, #0
 800d5b6:	d003      	beq.n	800d5c0 <I2C_ITSlaveCplt+0x3e8>
 800d5b8:	68fb      	ldr	r3, [r7, #12]
 800d5ba:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800d5be:	d105      	bne.n	800d5cc <I2C_ITSlaveCplt+0x3f4>
 800d5c0:	687b      	ldr	r3, [r7, #4]
 800d5c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d5c4:	4619      	mov	r1, r3
 800d5c6:	6878      	ldr	r0, [r7, #4]
 800d5c8:	f000 f8b6 	bl	800d738 <I2C_ITError>
 800d5cc:	687b      	ldr	r3, [r7, #4]
 800d5ce:	2200      	movs	r2, #0
 800d5d0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800d5d4:	687b      	ldr	r3, [r7, #4]
 800d5d6:	2200      	movs	r2, #0
 800d5d8:	635a      	str	r2, [r3, #52]	; 0x34
 800d5da:	687b      	ldr	r3, [r7, #4]
 800d5dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d5de:	2b00      	cmp	r3, #0
 800d5e0:	d010      	beq.n	800d604 <I2C_ITSlaveCplt+0x42c>
 800d5e2:	687b      	ldr	r3, [r7, #4]
 800d5e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d5e6:	4619      	mov	r1, r3
 800d5e8:	6878      	ldr	r0, [r7, #4]
 800d5ea:	f000 f8a5 	bl	800d738 <I2C_ITError>
 800d5ee:	687b      	ldr	r3, [r7, #4]
 800d5f0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d5f4:	b2db      	uxtb	r3, r3
 800d5f6:	2b28      	cmp	r3, #40	; 0x28
 800d5f8:	d141      	bne.n	800d67e <I2C_ITSlaveCplt+0x4a6>
 800d5fa:	6979      	ldr	r1, [r7, #20]
 800d5fc:	6878      	ldr	r0, [r7, #4]
 800d5fe:	f000 f845 	bl	800d68c <I2C_ITListenCplt>
 800d602:	e03c      	b.n	800d67e <I2C_ITSlaveCplt+0x4a6>
 800d604:	687b      	ldr	r3, [r7, #4]
 800d606:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d608:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800d60c:	d014      	beq.n	800d638 <I2C_ITSlaveCplt+0x460>
 800d60e:	6878      	ldr	r0, [r7, #4]
 800d610:	f7ff fcb9 	bl	800cf86 <I2C_ITSlaveSeqCplt>
 800d614:	687b      	ldr	r3, [r7, #4]
 800d616:	4a1c      	ldr	r2, [pc, #112]	; (800d688 <I2C_ITSlaveCplt+0x4b0>)
 800d618:	62da      	str	r2, [r3, #44]	; 0x2c
 800d61a:	687b      	ldr	r3, [r7, #4]
 800d61c:	2220      	movs	r2, #32
 800d61e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d622:	687b      	ldr	r3, [r7, #4]
 800d624:	2200      	movs	r2, #0
 800d626:	631a      	str	r2, [r3, #48]	; 0x30
 800d628:	687b      	ldr	r3, [r7, #4]
 800d62a:	2200      	movs	r2, #0
 800d62c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d630:	6878      	ldr	r0, [r7, #4]
 800d632:	f7fe fd68 	bl	800c106 <HAL_I2C_ListenCpltCallback>
 800d636:	e022      	b.n	800d67e <I2C_ITSlaveCplt+0x4a6>
 800d638:	687b      	ldr	r3, [r7, #4]
 800d63a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d63e:	b2db      	uxtb	r3, r3
 800d640:	2b22      	cmp	r3, #34	; 0x22
 800d642:	d10e      	bne.n	800d662 <I2C_ITSlaveCplt+0x48a>
 800d644:	687b      	ldr	r3, [r7, #4]
 800d646:	2220      	movs	r2, #32
 800d648:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d64c:	687b      	ldr	r3, [r7, #4]
 800d64e:	2200      	movs	r2, #0
 800d650:	631a      	str	r2, [r3, #48]	; 0x30
 800d652:	687b      	ldr	r3, [r7, #4]
 800d654:	2200      	movs	r2, #0
 800d656:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d65a:	6878      	ldr	r0, [r7, #4]
 800d65c:	f7fe fd3b 	bl	800c0d6 <HAL_I2C_SlaveRxCpltCallback>
 800d660:	e00d      	b.n	800d67e <I2C_ITSlaveCplt+0x4a6>
 800d662:	687b      	ldr	r3, [r7, #4]
 800d664:	2220      	movs	r2, #32
 800d666:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d66a:	687b      	ldr	r3, [r7, #4]
 800d66c:	2200      	movs	r2, #0
 800d66e:	631a      	str	r2, [r3, #48]	; 0x30
 800d670:	687b      	ldr	r3, [r7, #4]
 800d672:	2200      	movs	r2, #0
 800d674:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d678:	6878      	ldr	r0, [r7, #4]
 800d67a:	f7fe fd22 	bl	800c0c2 <HAL_I2C_SlaveTxCpltCallback>
 800d67e:	bf00      	nop
 800d680:	3718      	adds	r7, #24
 800d682:	46bd      	mov	sp, r7
 800d684:	bd80      	pop	{r7, pc}
 800d686:	bf00      	nop
 800d688:	ffff0000 	.word	0xffff0000

0800d68c <I2C_ITListenCplt>:
 800d68c:	b580      	push	{r7, lr}
 800d68e:	b082      	sub	sp, #8
 800d690:	af00      	add	r7, sp, #0
 800d692:	6078      	str	r0, [r7, #4]
 800d694:	6039      	str	r1, [r7, #0]
 800d696:	687b      	ldr	r3, [r7, #4]
 800d698:	4a26      	ldr	r2, [pc, #152]	; (800d734 <I2C_ITListenCplt+0xa8>)
 800d69a:	62da      	str	r2, [r3, #44]	; 0x2c
 800d69c:	687b      	ldr	r3, [r7, #4]
 800d69e:	2200      	movs	r2, #0
 800d6a0:	631a      	str	r2, [r3, #48]	; 0x30
 800d6a2:	687b      	ldr	r3, [r7, #4]
 800d6a4:	2220      	movs	r2, #32
 800d6a6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d6aa:	687b      	ldr	r3, [r7, #4]
 800d6ac:	2200      	movs	r2, #0
 800d6ae:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800d6b2:	687b      	ldr	r3, [r7, #4]
 800d6b4:	2200      	movs	r2, #0
 800d6b6:	635a      	str	r2, [r3, #52]	; 0x34
 800d6b8:	683b      	ldr	r3, [r7, #0]
 800d6ba:	089b      	lsrs	r3, r3, #2
 800d6bc:	f003 0301 	and.w	r3, r3, #1
 800d6c0:	2b00      	cmp	r3, #0
 800d6c2:	d022      	beq.n	800d70a <I2C_ITListenCplt+0x7e>
 800d6c4:	687b      	ldr	r3, [r7, #4]
 800d6c6:	681b      	ldr	r3, [r3, #0]
 800d6c8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d6ca:	687b      	ldr	r3, [r7, #4]
 800d6cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d6ce:	b2d2      	uxtb	r2, r2
 800d6d0:	701a      	strb	r2, [r3, #0]
 800d6d2:	687b      	ldr	r3, [r7, #4]
 800d6d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d6d6:	1c5a      	adds	r2, r3, #1
 800d6d8:	687b      	ldr	r3, [r7, #4]
 800d6da:	625a      	str	r2, [r3, #36]	; 0x24
 800d6dc:	687b      	ldr	r3, [r7, #4]
 800d6de:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800d6e0:	2b00      	cmp	r3, #0
 800d6e2:	d012      	beq.n	800d70a <I2C_ITListenCplt+0x7e>
 800d6e4:	687b      	ldr	r3, [r7, #4]
 800d6e6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800d6e8:	3b01      	subs	r3, #1
 800d6ea:	b29a      	uxth	r2, r3
 800d6ec:	687b      	ldr	r3, [r7, #4]
 800d6ee:	851a      	strh	r2, [r3, #40]	; 0x28
 800d6f0:	687b      	ldr	r3, [r7, #4]
 800d6f2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800d6f4:	b29b      	uxth	r3, r3
 800d6f6:	3b01      	subs	r3, #1
 800d6f8:	b29a      	uxth	r2, r3
 800d6fa:	687b      	ldr	r3, [r7, #4]
 800d6fc:	855a      	strh	r2, [r3, #42]	; 0x2a
 800d6fe:	687b      	ldr	r3, [r7, #4]
 800d700:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d702:	f043 0204 	orr.w	r2, r3, #4
 800d706:	687b      	ldr	r3, [r7, #4]
 800d708:	645a      	str	r2, [r3, #68]	; 0x44
 800d70a:	f248 0103 	movw	r1, #32771	; 0x8003
 800d70e:	6878      	ldr	r0, [r7, #4]
 800d710:	f000 fbf2 	bl	800def8 <I2C_Disable_IRQ>
 800d714:	687b      	ldr	r3, [r7, #4]
 800d716:	681b      	ldr	r3, [r3, #0]
 800d718:	2210      	movs	r2, #16
 800d71a:	61da      	str	r2, [r3, #28]
 800d71c:	687b      	ldr	r3, [r7, #4]
 800d71e:	2200      	movs	r2, #0
 800d720:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d724:	6878      	ldr	r0, [r7, #4]
 800d726:	f7fe fcee 	bl	800c106 <HAL_I2C_ListenCpltCallback>
 800d72a:	bf00      	nop
 800d72c:	3708      	adds	r7, #8
 800d72e:	46bd      	mov	sp, r7
 800d730:	bd80      	pop	{r7, pc}
 800d732:	bf00      	nop
 800d734:	ffff0000 	.word	0xffff0000

0800d738 <I2C_ITError>:
 800d738:	b580      	push	{r7, lr}
 800d73a:	b084      	sub	sp, #16
 800d73c:	af00      	add	r7, sp, #0
 800d73e:	6078      	str	r0, [r7, #4]
 800d740:	6039      	str	r1, [r7, #0]
 800d742:	687b      	ldr	r3, [r7, #4]
 800d744:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d748:	73fb      	strb	r3, [r7, #15]
 800d74a:	687b      	ldr	r3, [r7, #4]
 800d74c:	2200      	movs	r2, #0
 800d74e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800d752:	687b      	ldr	r3, [r7, #4]
 800d754:	4a6d      	ldr	r2, [pc, #436]	; (800d90c <I2C_ITError+0x1d4>)
 800d756:	62da      	str	r2, [r3, #44]	; 0x2c
 800d758:	687b      	ldr	r3, [r7, #4]
 800d75a:	2200      	movs	r2, #0
 800d75c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800d75e:	687b      	ldr	r3, [r7, #4]
 800d760:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800d762:	683b      	ldr	r3, [r7, #0]
 800d764:	431a      	orrs	r2, r3
 800d766:	687b      	ldr	r3, [r7, #4]
 800d768:	645a      	str	r2, [r3, #68]	; 0x44
 800d76a:	7bfb      	ldrb	r3, [r7, #15]
 800d76c:	2b28      	cmp	r3, #40	; 0x28
 800d76e:	d005      	beq.n	800d77c <I2C_ITError+0x44>
 800d770:	7bfb      	ldrb	r3, [r7, #15]
 800d772:	2b29      	cmp	r3, #41	; 0x29
 800d774:	d002      	beq.n	800d77c <I2C_ITError+0x44>
 800d776:	7bfb      	ldrb	r3, [r7, #15]
 800d778:	2b2a      	cmp	r3, #42	; 0x2a
 800d77a:	d10b      	bne.n	800d794 <I2C_ITError+0x5c>
 800d77c:	2103      	movs	r1, #3
 800d77e:	6878      	ldr	r0, [r7, #4]
 800d780:	f000 fbba 	bl	800def8 <I2C_Disable_IRQ>
 800d784:	687b      	ldr	r3, [r7, #4]
 800d786:	2228      	movs	r2, #40	; 0x28
 800d788:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d78c:	687b      	ldr	r3, [r7, #4]
 800d78e:	4a60      	ldr	r2, [pc, #384]	; (800d910 <I2C_ITError+0x1d8>)
 800d790:	635a      	str	r2, [r3, #52]	; 0x34
 800d792:	e030      	b.n	800d7f6 <I2C_ITError+0xbe>
 800d794:	f248 0103 	movw	r1, #32771	; 0x8003
 800d798:	6878      	ldr	r0, [r7, #4]
 800d79a:	f000 fbad 	bl	800def8 <I2C_Disable_IRQ>
 800d79e:	6878      	ldr	r0, [r7, #4]
 800d7a0:	f000 f8e1 	bl	800d966 <I2C_Flush_TXDR>
 800d7a4:	687b      	ldr	r3, [r7, #4]
 800d7a6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d7aa:	b2db      	uxtb	r3, r3
 800d7ac:	2b60      	cmp	r3, #96	; 0x60
 800d7ae:	d01f      	beq.n	800d7f0 <I2C_ITError+0xb8>
 800d7b0:	687b      	ldr	r3, [r7, #4]
 800d7b2:	2220      	movs	r2, #32
 800d7b4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d7b8:	687b      	ldr	r3, [r7, #4]
 800d7ba:	681b      	ldr	r3, [r3, #0]
 800d7bc:	699b      	ldr	r3, [r3, #24]
 800d7be:	f003 0320 	and.w	r3, r3, #32
 800d7c2:	2b20      	cmp	r3, #32
 800d7c4:	d114      	bne.n	800d7f0 <I2C_ITError+0xb8>
 800d7c6:	687b      	ldr	r3, [r7, #4]
 800d7c8:	681b      	ldr	r3, [r3, #0]
 800d7ca:	699b      	ldr	r3, [r3, #24]
 800d7cc:	f003 0310 	and.w	r3, r3, #16
 800d7d0:	2b10      	cmp	r3, #16
 800d7d2:	d109      	bne.n	800d7e8 <I2C_ITError+0xb0>
 800d7d4:	687b      	ldr	r3, [r7, #4]
 800d7d6:	681b      	ldr	r3, [r3, #0]
 800d7d8:	2210      	movs	r2, #16
 800d7da:	61da      	str	r2, [r3, #28]
 800d7dc:	687b      	ldr	r3, [r7, #4]
 800d7de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d7e0:	f043 0204 	orr.w	r2, r3, #4
 800d7e4:	687b      	ldr	r3, [r7, #4]
 800d7e6:	645a      	str	r2, [r3, #68]	; 0x44
 800d7e8:	687b      	ldr	r3, [r7, #4]
 800d7ea:	681b      	ldr	r3, [r3, #0]
 800d7ec:	2220      	movs	r2, #32
 800d7ee:	61da      	str	r2, [r3, #28]
 800d7f0:	687b      	ldr	r3, [r7, #4]
 800d7f2:	2200      	movs	r2, #0
 800d7f4:	635a      	str	r2, [r3, #52]	; 0x34
 800d7f6:	687b      	ldr	r3, [r7, #4]
 800d7f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d7fa:	60bb      	str	r3, [r7, #8]
 800d7fc:	687b      	ldr	r3, [r7, #4]
 800d7fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d800:	2b00      	cmp	r3, #0
 800d802:	d039      	beq.n	800d878 <I2C_ITError+0x140>
 800d804:	68bb      	ldr	r3, [r7, #8]
 800d806:	2b11      	cmp	r3, #17
 800d808:	d002      	beq.n	800d810 <I2C_ITError+0xd8>
 800d80a:	68bb      	ldr	r3, [r7, #8]
 800d80c:	2b21      	cmp	r3, #33	; 0x21
 800d80e:	d133      	bne.n	800d878 <I2C_ITError+0x140>
 800d810:	687b      	ldr	r3, [r7, #4]
 800d812:	681b      	ldr	r3, [r3, #0]
 800d814:	681b      	ldr	r3, [r3, #0]
 800d816:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800d81a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800d81e:	d107      	bne.n	800d830 <I2C_ITError+0xf8>
 800d820:	687b      	ldr	r3, [r7, #4]
 800d822:	681b      	ldr	r3, [r3, #0]
 800d824:	681a      	ldr	r2, [r3, #0]
 800d826:	687b      	ldr	r3, [r7, #4]
 800d828:	681b      	ldr	r3, [r3, #0]
 800d82a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d82e:	601a      	str	r2, [r3, #0]
 800d830:	687b      	ldr	r3, [r7, #4]
 800d832:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d834:	4618      	mov	r0, r3
 800d836:	f7fd f857 	bl	800a8e8 <HAL_DMA_GetState>
 800d83a:	4603      	mov	r3, r0
 800d83c:	2b01      	cmp	r3, #1
 800d83e:	d017      	beq.n	800d870 <I2C_ITError+0x138>
 800d840:	687b      	ldr	r3, [r7, #4]
 800d842:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d844:	4a33      	ldr	r2, [pc, #204]	; (800d914 <I2C_ITError+0x1dc>)
 800d846:	651a      	str	r2, [r3, #80]	; 0x50
 800d848:	687b      	ldr	r3, [r7, #4]
 800d84a:	2200      	movs	r2, #0
 800d84c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d850:	687b      	ldr	r3, [r7, #4]
 800d852:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d854:	4618      	mov	r0, r3
 800d856:	f7fb fed7 	bl	8009608 <HAL_DMA_Abort_IT>
 800d85a:	4603      	mov	r3, r0
 800d85c:	2b00      	cmp	r3, #0
 800d85e:	d04d      	beq.n	800d8fc <I2C_ITError+0x1c4>
 800d860:	687b      	ldr	r3, [r7, #4]
 800d862:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d864:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d866:	687a      	ldr	r2, [r7, #4]
 800d868:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800d86a:	4610      	mov	r0, r2
 800d86c:	4798      	blx	r3
 800d86e:	e045      	b.n	800d8fc <I2C_ITError+0x1c4>
 800d870:	6878      	ldr	r0, [r7, #4]
 800d872:	f000 f851 	bl	800d918 <I2C_TreatErrorCallback>
 800d876:	e041      	b.n	800d8fc <I2C_ITError+0x1c4>
 800d878:	687b      	ldr	r3, [r7, #4]
 800d87a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d87c:	2b00      	cmp	r3, #0
 800d87e:	d039      	beq.n	800d8f4 <I2C_ITError+0x1bc>
 800d880:	68bb      	ldr	r3, [r7, #8]
 800d882:	2b12      	cmp	r3, #18
 800d884:	d002      	beq.n	800d88c <I2C_ITError+0x154>
 800d886:	68bb      	ldr	r3, [r7, #8]
 800d888:	2b22      	cmp	r3, #34	; 0x22
 800d88a:	d133      	bne.n	800d8f4 <I2C_ITError+0x1bc>
 800d88c:	687b      	ldr	r3, [r7, #4]
 800d88e:	681b      	ldr	r3, [r3, #0]
 800d890:	681b      	ldr	r3, [r3, #0]
 800d892:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800d896:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800d89a:	d107      	bne.n	800d8ac <I2C_ITError+0x174>
 800d89c:	687b      	ldr	r3, [r7, #4]
 800d89e:	681b      	ldr	r3, [r3, #0]
 800d8a0:	681a      	ldr	r2, [r3, #0]
 800d8a2:	687b      	ldr	r3, [r7, #4]
 800d8a4:	681b      	ldr	r3, [r3, #0]
 800d8a6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800d8aa:	601a      	str	r2, [r3, #0]
 800d8ac:	687b      	ldr	r3, [r7, #4]
 800d8ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d8b0:	4618      	mov	r0, r3
 800d8b2:	f7fd f819 	bl	800a8e8 <HAL_DMA_GetState>
 800d8b6:	4603      	mov	r3, r0
 800d8b8:	2b01      	cmp	r3, #1
 800d8ba:	d017      	beq.n	800d8ec <I2C_ITError+0x1b4>
 800d8bc:	687b      	ldr	r3, [r7, #4]
 800d8be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d8c0:	4a14      	ldr	r2, [pc, #80]	; (800d914 <I2C_ITError+0x1dc>)
 800d8c2:	651a      	str	r2, [r3, #80]	; 0x50
 800d8c4:	687b      	ldr	r3, [r7, #4]
 800d8c6:	2200      	movs	r2, #0
 800d8c8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d8cc:	687b      	ldr	r3, [r7, #4]
 800d8ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d8d0:	4618      	mov	r0, r3
 800d8d2:	f7fb fe99 	bl	8009608 <HAL_DMA_Abort_IT>
 800d8d6:	4603      	mov	r3, r0
 800d8d8:	2b00      	cmp	r3, #0
 800d8da:	d011      	beq.n	800d900 <I2C_ITError+0x1c8>
 800d8dc:	687b      	ldr	r3, [r7, #4]
 800d8de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d8e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d8e2:	687a      	ldr	r2, [r7, #4]
 800d8e4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d8e6:	4610      	mov	r0, r2
 800d8e8:	4798      	blx	r3
 800d8ea:	e009      	b.n	800d900 <I2C_ITError+0x1c8>
 800d8ec:	6878      	ldr	r0, [r7, #4]
 800d8ee:	f000 f813 	bl	800d918 <I2C_TreatErrorCallback>
 800d8f2:	e005      	b.n	800d900 <I2C_ITError+0x1c8>
 800d8f4:	6878      	ldr	r0, [r7, #4]
 800d8f6:	f000 f80f 	bl	800d918 <I2C_TreatErrorCallback>
 800d8fa:	e002      	b.n	800d902 <I2C_ITError+0x1ca>
 800d8fc:	bf00      	nop
 800d8fe:	e000      	b.n	800d902 <I2C_ITError+0x1ca>
 800d900:	bf00      	nop
 800d902:	bf00      	nop
 800d904:	3710      	adds	r7, #16
 800d906:	46bd      	mov	sp, r7
 800d908:	bd80      	pop	{r7, pc}
 800d90a:	bf00      	nop
 800d90c:	ffff0000 	.word	0xffff0000
 800d910:	0800c3ef 	.word	0x0800c3ef
 800d914:	0800dd51 	.word	0x0800dd51

0800d918 <I2C_TreatErrorCallback>:
 800d918:	b580      	push	{r7, lr}
 800d91a:	b082      	sub	sp, #8
 800d91c:	af00      	add	r7, sp, #0
 800d91e:	6078      	str	r0, [r7, #4]
 800d920:	687b      	ldr	r3, [r7, #4]
 800d922:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800d926:	b2db      	uxtb	r3, r3
 800d928:	2b60      	cmp	r3, #96	; 0x60
 800d92a:	d10e      	bne.n	800d94a <I2C_TreatErrorCallback+0x32>
 800d92c:	687b      	ldr	r3, [r7, #4]
 800d92e:	2220      	movs	r2, #32
 800d930:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800d934:	687b      	ldr	r3, [r7, #4]
 800d936:	2200      	movs	r2, #0
 800d938:	631a      	str	r2, [r3, #48]	; 0x30
 800d93a:	687b      	ldr	r3, [r7, #4]
 800d93c:	2200      	movs	r2, #0
 800d93e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d942:	6878      	ldr	r0, [r7, #4]
 800d944:	f7fe fc07 	bl	800c156 <HAL_I2C_AbortCpltCallback>
 800d948:	e009      	b.n	800d95e <I2C_TreatErrorCallback+0x46>
 800d94a:	687b      	ldr	r3, [r7, #4]
 800d94c:	2200      	movs	r2, #0
 800d94e:	631a      	str	r2, [r3, #48]	; 0x30
 800d950:	687b      	ldr	r3, [r7, #4]
 800d952:	2200      	movs	r2, #0
 800d954:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800d958:	6878      	ldr	r0, [r7, #4]
 800d95a:	f7fe fbf2 	bl	800c142 <HAL_I2C_ErrorCallback>
 800d95e:	bf00      	nop
 800d960:	3708      	adds	r7, #8
 800d962:	46bd      	mov	sp, r7
 800d964:	bd80      	pop	{r7, pc}

0800d966 <I2C_Flush_TXDR>:
 800d966:	b480      	push	{r7}
 800d968:	b083      	sub	sp, #12
 800d96a:	af00      	add	r7, sp, #0
 800d96c:	6078      	str	r0, [r7, #4]
 800d96e:	687b      	ldr	r3, [r7, #4]
 800d970:	681b      	ldr	r3, [r3, #0]
 800d972:	699b      	ldr	r3, [r3, #24]
 800d974:	f003 0302 	and.w	r3, r3, #2
 800d978:	2b02      	cmp	r3, #2
 800d97a:	d103      	bne.n	800d984 <I2C_Flush_TXDR+0x1e>
 800d97c:	687b      	ldr	r3, [r7, #4]
 800d97e:	681b      	ldr	r3, [r3, #0]
 800d980:	2200      	movs	r2, #0
 800d982:	629a      	str	r2, [r3, #40]	; 0x28
 800d984:	687b      	ldr	r3, [r7, #4]
 800d986:	681b      	ldr	r3, [r3, #0]
 800d988:	699b      	ldr	r3, [r3, #24]
 800d98a:	f003 0301 	and.w	r3, r3, #1
 800d98e:	2b01      	cmp	r3, #1
 800d990:	d007      	beq.n	800d9a2 <I2C_Flush_TXDR+0x3c>
 800d992:	687b      	ldr	r3, [r7, #4]
 800d994:	681b      	ldr	r3, [r3, #0]
 800d996:	699a      	ldr	r2, [r3, #24]
 800d998:	687b      	ldr	r3, [r7, #4]
 800d99a:	681b      	ldr	r3, [r3, #0]
 800d99c:	f042 0201 	orr.w	r2, r2, #1
 800d9a0:	619a      	str	r2, [r3, #24]
 800d9a2:	bf00      	nop
 800d9a4:	370c      	adds	r7, #12
 800d9a6:	46bd      	mov	sp, r7
 800d9a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9ac:	4770      	bx	lr

0800d9ae <I2C_DMAMasterTransmitCplt>:
 800d9ae:	b580      	push	{r7, lr}
 800d9b0:	b084      	sub	sp, #16
 800d9b2:	af00      	add	r7, sp, #0
 800d9b4:	6078      	str	r0, [r7, #4]
 800d9b6:	687b      	ldr	r3, [r7, #4]
 800d9b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d9ba:	60fb      	str	r3, [r7, #12]
 800d9bc:	68fb      	ldr	r3, [r7, #12]
 800d9be:	681b      	ldr	r3, [r3, #0]
 800d9c0:	681a      	ldr	r2, [r3, #0]
 800d9c2:	68fb      	ldr	r3, [r7, #12]
 800d9c4:	681b      	ldr	r3, [r3, #0]
 800d9c6:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d9ca:	601a      	str	r2, [r3, #0]
 800d9cc:	68fb      	ldr	r3, [r7, #12]
 800d9ce:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800d9d0:	b29b      	uxth	r3, r3
 800d9d2:	2b00      	cmp	r3, #0
 800d9d4:	d104      	bne.n	800d9e0 <I2C_DMAMasterTransmitCplt+0x32>
 800d9d6:	2120      	movs	r1, #32
 800d9d8:	68f8      	ldr	r0, [r7, #12]
 800d9da:	f000 fa09 	bl	800ddf0 <I2C_Enable_IRQ>
 800d9de:	e02d      	b.n	800da3c <I2C_DMAMasterTransmitCplt+0x8e>
 800d9e0:	68fb      	ldr	r3, [r7, #12]
 800d9e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d9e4:	68fa      	ldr	r2, [r7, #12]
 800d9e6:	8d12      	ldrh	r2, [r2, #40]	; 0x28
 800d9e8:	441a      	add	r2, r3
 800d9ea:	68fb      	ldr	r3, [r7, #12]
 800d9ec:	625a      	str	r2, [r3, #36]	; 0x24
 800d9ee:	68fb      	ldr	r3, [r7, #12]
 800d9f0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800d9f2:	b29b      	uxth	r3, r3
 800d9f4:	2bff      	cmp	r3, #255	; 0xff
 800d9f6:	d903      	bls.n	800da00 <I2C_DMAMasterTransmitCplt+0x52>
 800d9f8:	68fb      	ldr	r3, [r7, #12]
 800d9fa:	22ff      	movs	r2, #255	; 0xff
 800d9fc:	851a      	strh	r2, [r3, #40]	; 0x28
 800d9fe:	e004      	b.n	800da0a <I2C_DMAMasterTransmitCplt+0x5c>
 800da00:	68fb      	ldr	r3, [r7, #12]
 800da02:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800da04:	b29a      	uxth	r2, r3
 800da06:	68fb      	ldr	r3, [r7, #12]
 800da08:	851a      	strh	r2, [r3, #40]	; 0x28
 800da0a:	68fb      	ldr	r3, [r7, #12]
 800da0c:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800da0e:	68fb      	ldr	r3, [r7, #12]
 800da10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800da12:	4619      	mov	r1, r3
 800da14:	68fb      	ldr	r3, [r7, #12]
 800da16:	681b      	ldr	r3, [r3, #0]
 800da18:	3328      	adds	r3, #40	; 0x28
 800da1a:	461a      	mov	r2, r3
 800da1c:	68fb      	ldr	r3, [r7, #12]
 800da1e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800da20:	f7fb f86a 	bl	8008af8 <HAL_DMA_Start_IT>
 800da24:	4603      	mov	r3, r0
 800da26:	2b00      	cmp	r3, #0
 800da28:	d004      	beq.n	800da34 <I2C_DMAMasterTransmitCplt+0x86>
 800da2a:	2110      	movs	r1, #16
 800da2c:	68f8      	ldr	r0, [r7, #12]
 800da2e:	f7ff fe83 	bl	800d738 <I2C_ITError>
 800da32:	e003      	b.n	800da3c <I2C_DMAMasterTransmitCplt+0x8e>
 800da34:	2140      	movs	r1, #64	; 0x40
 800da36:	68f8      	ldr	r0, [r7, #12]
 800da38:	f000 f9da 	bl	800ddf0 <I2C_Enable_IRQ>
 800da3c:	bf00      	nop
 800da3e:	3710      	adds	r7, #16
 800da40:	46bd      	mov	sp, r7
 800da42:	bd80      	pop	{r7, pc}

0800da44 <I2C_DMAMasterReceiveCplt>:
 800da44:	b580      	push	{r7, lr}
 800da46:	b084      	sub	sp, #16
 800da48:	af00      	add	r7, sp, #0
 800da4a:	6078      	str	r0, [r7, #4]
 800da4c:	687b      	ldr	r3, [r7, #4]
 800da4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800da50:	60fb      	str	r3, [r7, #12]
 800da52:	68fb      	ldr	r3, [r7, #12]
 800da54:	681b      	ldr	r3, [r3, #0]
 800da56:	681a      	ldr	r2, [r3, #0]
 800da58:	68fb      	ldr	r3, [r7, #12]
 800da5a:	681b      	ldr	r3, [r3, #0]
 800da5c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800da60:	601a      	str	r2, [r3, #0]
 800da62:	68fb      	ldr	r3, [r7, #12]
 800da64:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800da66:	b29b      	uxth	r3, r3
 800da68:	2b00      	cmp	r3, #0
 800da6a:	d104      	bne.n	800da76 <I2C_DMAMasterReceiveCplt+0x32>
 800da6c:	2120      	movs	r1, #32
 800da6e:	68f8      	ldr	r0, [r7, #12]
 800da70:	f000 f9be 	bl	800ddf0 <I2C_Enable_IRQ>
 800da74:	e02d      	b.n	800dad2 <I2C_DMAMasterReceiveCplt+0x8e>
 800da76:	68fb      	ldr	r3, [r7, #12]
 800da78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800da7a:	68fa      	ldr	r2, [r7, #12]
 800da7c:	8d12      	ldrh	r2, [r2, #40]	; 0x28
 800da7e:	441a      	add	r2, r3
 800da80:	68fb      	ldr	r3, [r7, #12]
 800da82:	625a      	str	r2, [r3, #36]	; 0x24
 800da84:	68fb      	ldr	r3, [r7, #12]
 800da86:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800da88:	b29b      	uxth	r3, r3
 800da8a:	2bff      	cmp	r3, #255	; 0xff
 800da8c:	d903      	bls.n	800da96 <I2C_DMAMasterReceiveCplt+0x52>
 800da8e:	68fb      	ldr	r3, [r7, #12]
 800da90:	22ff      	movs	r2, #255	; 0xff
 800da92:	851a      	strh	r2, [r3, #40]	; 0x28
 800da94:	e004      	b.n	800daa0 <I2C_DMAMasterReceiveCplt+0x5c>
 800da96:	68fb      	ldr	r3, [r7, #12]
 800da98:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800da9a:	b29a      	uxth	r2, r3
 800da9c:	68fb      	ldr	r3, [r7, #12]
 800da9e:	851a      	strh	r2, [r3, #40]	; 0x28
 800daa0:	68fb      	ldr	r3, [r7, #12]
 800daa2:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800daa4:	68fb      	ldr	r3, [r7, #12]
 800daa6:	681b      	ldr	r3, [r3, #0]
 800daa8:	3324      	adds	r3, #36	; 0x24
 800daaa:	4619      	mov	r1, r3
 800daac:	68fb      	ldr	r3, [r7, #12]
 800daae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dab0:	461a      	mov	r2, r3
 800dab2:	68fb      	ldr	r3, [r7, #12]
 800dab4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800dab6:	f7fb f81f 	bl	8008af8 <HAL_DMA_Start_IT>
 800daba:	4603      	mov	r3, r0
 800dabc:	2b00      	cmp	r3, #0
 800dabe:	d004      	beq.n	800daca <I2C_DMAMasterReceiveCplt+0x86>
 800dac0:	2110      	movs	r1, #16
 800dac2:	68f8      	ldr	r0, [r7, #12]
 800dac4:	f7ff fe38 	bl	800d738 <I2C_ITError>
 800dac8:	e003      	b.n	800dad2 <I2C_DMAMasterReceiveCplt+0x8e>
 800daca:	2140      	movs	r1, #64	; 0x40
 800dacc:	68f8      	ldr	r0, [r7, #12]
 800dace:	f000 f98f 	bl	800ddf0 <I2C_Enable_IRQ>
 800dad2:	bf00      	nop
 800dad4:	3710      	adds	r7, #16
 800dad6:	46bd      	mov	sp, r7
 800dad8:	bd80      	pop	{r7, pc}
	...

0800dadc <I2C_DMAError>:
 800dadc:	b580      	push	{r7, lr}
 800dade:	b084      	sub	sp, #16
 800dae0:	af00      	add	r7, sp, #0
 800dae2:	6078      	str	r0, [r7, #4]
 800dae4:	2300      	movs	r3, #0
 800dae6:	60fb      	str	r3, [r7, #12]
 800dae8:	687b      	ldr	r3, [r7, #4]
 800daea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800daec:	60bb      	str	r3, [r7, #8]
 800daee:	68bb      	ldr	r3, [r7, #8]
 800daf0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800daf2:	2b00      	cmp	r3, #0
 800daf4:	d076      	beq.n	800dbe4 <I2C_DMAError+0x108>
 800daf6:	68bb      	ldr	r3, [r7, #8]
 800daf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dafa:	681b      	ldr	r3, [r3, #0]
 800dafc:	4a71      	ldr	r2, [pc, #452]	; (800dcc4 <I2C_DMAError+0x1e8>)
 800dafe:	4293      	cmp	r3, r2
 800db00:	d059      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db02:	68bb      	ldr	r3, [r7, #8]
 800db04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db06:	681b      	ldr	r3, [r3, #0]
 800db08:	4a6f      	ldr	r2, [pc, #444]	; (800dcc8 <I2C_DMAError+0x1ec>)
 800db0a:	4293      	cmp	r3, r2
 800db0c:	d053      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db0e:	68bb      	ldr	r3, [r7, #8]
 800db10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db12:	681b      	ldr	r3, [r3, #0]
 800db14:	4a6d      	ldr	r2, [pc, #436]	; (800dccc <I2C_DMAError+0x1f0>)
 800db16:	4293      	cmp	r3, r2
 800db18:	d04d      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db1a:	68bb      	ldr	r3, [r7, #8]
 800db1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db1e:	681b      	ldr	r3, [r3, #0]
 800db20:	4a6b      	ldr	r2, [pc, #428]	; (800dcd0 <I2C_DMAError+0x1f4>)
 800db22:	4293      	cmp	r3, r2
 800db24:	d047      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db26:	68bb      	ldr	r3, [r7, #8]
 800db28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db2a:	681b      	ldr	r3, [r3, #0]
 800db2c:	4a69      	ldr	r2, [pc, #420]	; (800dcd4 <I2C_DMAError+0x1f8>)
 800db2e:	4293      	cmp	r3, r2
 800db30:	d041      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db32:	68bb      	ldr	r3, [r7, #8]
 800db34:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db36:	681b      	ldr	r3, [r3, #0]
 800db38:	4a67      	ldr	r2, [pc, #412]	; (800dcd8 <I2C_DMAError+0x1fc>)
 800db3a:	4293      	cmp	r3, r2
 800db3c:	d03b      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db3e:	68bb      	ldr	r3, [r7, #8]
 800db40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db42:	681b      	ldr	r3, [r3, #0]
 800db44:	4a65      	ldr	r2, [pc, #404]	; (800dcdc <I2C_DMAError+0x200>)
 800db46:	4293      	cmp	r3, r2
 800db48:	d035      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db4a:	68bb      	ldr	r3, [r7, #8]
 800db4c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db4e:	681b      	ldr	r3, [r3, #0]
 800db50:	4a63      	ldr	r2, [pc, #396]	; (800dce0 <I2C_DMAError+0x204>)
 800db52:	4293      	cmp	r3, r2
 800db54:	d02f      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db56:	68bb      	ldr	r3, [r7, #8]
 800db58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db5a:	681b      	ldr	r3, [r3, #0]
 800db5c:	4a61      	ldr	r2, [pc, #388]	; (800dce4 <I2C_DMAError+0x208>)
 800db5e:	4293      	cmp	r3, r2
 800db60:	d029      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db62:	68bb      	ldr	r3, [r7, #8]
 800db64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db66:	681b      	ldr	r3, [r3, #0]
 800db68:	4a5f      	ldr	r2, [pc, #380]	; (800dce8 <I2C_DMAError+0x20c>)
 800db6a:	4293      	cmp	r3, r2
 800db6c:	d023      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db6e:	68bb      	ldr	r3, [r7, #8]
 800db70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db72:	681b      	ldr	r3, [r3, #0]
 800db74:	4a5d      	ldr	r2, [pc, #372]	; (800dcec <I2C_DMAError+0x210>)
 800db76:	4293      	cmp	r3, r2
 800db78:	d01d      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db7a:	68bb      	ldr	r3, [r7, #8]
 800db7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db7e:	681b      	ldr	r3, [r3, #0]
 800db80:	4a5b      	ldr	r2, [pc, #364]	; (800dcf0 <I2C_DMAError+0x214>)
 800db82:	4293      	cmp	r3, r2
 800db84:	d017      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db86:	68bb      	ldr	r3, [r7, #8]
 800db88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db8a:	681b      	ldr	r3, [r3, #0]
 800db8c:	4a59      	ldr	r2, [pc, #356]	; (800dcf4 <I2C_DMAError+0x218>)
 800db8e:	4293      	cmp	r3, r2
 800db90:	d011      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db92:	68bb      	ldr	r3, [r7, #8]
 800db94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db96:	681b      	ldr	r3, [r3, #0]
 800db98:	4a57      	ldr	r2, [pc, #348]	; (800dcf8 <I2C_DMAError+0x21c>)
 800db9a:	4293      	cmp	r3, r2
 800db9c:	d00b      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800db9e:	68bb      	ldr	r3, [r7, #8]
 800dba0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dba2:	681b      	ldr	r3, [r3, #0]
 800dba4:	4a55      	ldr	r2, [pc, #340]	; (800dcfc <I2C_DMAError+0x220>)
 800dba6:	4293      	cmp	r3, r2
 800dba8:	d005      	beq.n	800dbb6 <I2C_DMAError+0xda>
 800dbaa:	68bb      	ldr	r3, [r7, #8]
 800dbac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dbae:	681b      	ldr	r3, [r3, #0]
 800dbb0:	4a53      	ldr	r2, [pc, #332]	; (800dd00 <I2C_DMAError+0x224>)
 800dbb2:	4293      	cmp	r3, r2
 800dbb4:	d109      	bne.n	800dbca <I2C_DMAError+0xee>
 800dbb6:	68bb      	ldr	r3, [r7, #8]
 800dbb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dbba:	681b      	ldr	r3, [r3, #0]
 800dbbc:	685b      	ldr	r3, [r3, #4]
 800dbbe:	2b00      	cmp	r3, #0
 800dbc0:	bf0c      	ite	eq
 800dbc2:	2301      	moveq	r3, #1
 800dbc4:	2300      	movne	r3, #0
 800dbc6:	b2db      	uxtb	r3, r3
 800dbc8:	e008      	b.n	800dbdc <I2C_DMAError+0x100>
 800dbca:	68bb      	ldr	r3, [r7, #8]
 800dbcc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dbce:	681b      	ldr	r3, [r3, #0]
 800dbd0:	685b      	ldr	r3, [r3, #4]
 800dbd2:	2b00      	cmp	r3, #0
 800dbd4:	bf0c      	ite	eq
 800dbd6:	2301      	moveq	r3, #1
 800dbd8:	2300      	movne	r3, #0
 800dbda:	b2db      	uxtb	r3, r3
 800dbdc:	2b00      	cmp	r3, #0
 800dbde:	d001      	beq.n	800dbe4 <I2C_DMAError+0x108>
 800dbe0:	2301      	movs	r3, #1
 800dbe2:	60fb      	str	r3, [r7, #12]
 800dbe4:	68bb      	ldr	r3, [r7, #8]
 800dbe6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dbe8:	2b00      	cmp	r3, #0
 800dbea:	f000 8098 	beq.w	800dd1e <I2C_DMAError+0x242>
 800dbee:	68bb      	ldr	r3, [r7, #8]
 800dbf0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dbf2:	681b      	ldr	r3, [r3, #0]
 800dbf4:	4a33      	ldr	r2, [pc, #204]	; (800dcc4 <I2C_DMAError+0x1e8>)
 800dbf6:	4293      	cmp	r3, r2
 800dbf8:	d059      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dbfa:	68bb      	ldr	r3, [r7, #8]
 800dbfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dbfe:	681b      	ldr	r3, [r3, #0]
 800dc00:	4a31      	ldr	r2, [pc, #196]	; (800dcc8 <I2C_DMAError+0x1ec>)
 800dc02:	4293      	cmp	r3, r2
 800dc04:	d053      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc06:	68bb      	ldr	r3, [r7, #8]
 800dc08:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc0a:	681b      	ldr	r3, [r3, #0]
 800dc0c:	4a2f      	ldr	r2, [pc, #188]	; (800dccc <I2C_DMAError+0x1f0>)
 800dc0e:	4293      	cmp	r3, r2
 800dc10:	d04d      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc12:	68bb      	ldr	r3, [r7, #8]
 800dc14:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc16:	681b      	ldr	r3, [r3, #0]
 800dc18:	4a2d      	ldr	r2, [pc, #180]	; (800dcd0 <I2C_DMAError+0x1f4>)
 800dc1a:	4293      	cmp	r3, r2
 800dc1c:	d047      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc1e:	68bb      	ldr	r3, [r7, #8]
 800dc20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc22:	681b      	ldr	r3, [r3, #0]
 800dc24:	4a2b      	ldr	r2, [pc, #172]	; (800dcd4 <I2C_DMAError+0x1f8>)
 800dc26:	4293      	cmp	r3, r2
 800dc28:	d041      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc2a:	68bb      	ldr	r3, [r7, #8]
 800dc2c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc2e:	681b      	ldr	r3, [r3, #0]
 800dc30:	4a29      	ldr	r2, [pc, #164]	; (800dcd8 <I2C_DMAError+0x1fc>)
 800dc32:	4293      	cmp	r3, r2
 800dc34:	d03b      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc36:	68bb      	ldr	r3, [r7, #8]
 800dc38:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc3a:	681b      	ldr	r3, [r3, #0]
 800dc3c:	4a27      	ldr	r2, [pc, #156]	; (800dcdc <I2C_DMAError+0x200>)
 800dc3e:	4293      	cmp	r3, r2
 800dc40:	d035      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc42:	68bb      	ldr	r3, [r7, #8]
 800dc44:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc46:	681b      	ldr	r3, [r3, #0]
 800dc48:	4a25      	ldr	r2, [pc, #148]	; (800dce0 <I2C_DMAError+0x204>)
 800dc4a:	4293      	cmp	r3, r2
 800dc4c:	d02f      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc4e:	68bb      	ldr	r3, [r7, #8]
 800dc50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc52:	681b      	ldr	r3, [r3, #0]
 800dc54:	4a23      	ldr	r2, [pc, #140]	; (800dce4 <I2C_DMAError+0x208>)
 800dc56:	4293      	cmp	r3, r2
 800dc58:	d029      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc5a:	68bb      	ldr	r3, [r7, #8]
 800dc5c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc5e:	681b      	ldr	r3, [r3, #0]
 800dc60:	4a21      	ldr	r2, [pc, #132]	; (800dce8 <I2C_DMAError+0x20c>)
 800dc62:	4293      	cmp	r3, r2
 800dc64:	d023      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc66:	68bb      	ldr	r3, [r7, #8]
 800dc68:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc6a:	681b      	ldr	r3, [r3, #0]
 800dc6c:	4a1f      	ldr	r2, [pc, #124]	; (800dcec <I2C_DMAError+0x210>)
 800dc6e:	4293      	cmp	r3, r2
 800dc70:	d01d      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc72:	68bb      	ldr	r3, [r7, #8]
 800dc74:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc76:	681b      	ldr	r3, [r3, #0]
 800dc78:	4a1d      	ldr	r2, [pc, #116]	; (800dcf0 <I2C_DMAError+0x214>)
 800dc7a:	4293      	cmp	r3, r2
 800dc7c:	d017      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc7e:	68bb      	ldr	r3, [r7, #8]
 800dc80:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc82:	681b      	ldr	r3, [r3, #0]
 800dc84:	4a1b      	ldr	r2, [pc, #108]	; (800dcf4 <I2C_DMAError+0x218>)
 800dc86:	4293      	cmp	r3, r2
 800dc88:	d011      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc8a:	68bb      	ldr	r3, [r7, #8]
 800dc8c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc8e:	681b      	ldr	r3, [r3, #0]
 800dc90:	4a19      	ldr	r2, [pc, #100]	; (800dcf8 <I2C_DMAError+0x21c>)
 800dc92:	4293      	cmp	r3, r2
 800dc94:	d00b      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dc96:	68bb      	ldr	r3, [r7, #8]
 800dc98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc9a:	681b      	ldr	r3, [r3, #0]
 800dc9c:	4a17      	ldr	r2, [pc, #92]	; (800dcfc <I2C_DMAError+0x220>)
 800dc9e:	4293      	cmp	r3, r2
 800dca0:	d005      	beq.n	800dcae <I2C_DMAError+0x1d2>
 800dca2:	68bb      	ldr	r3, [r7, #8]
 800dca4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dca6:	681b      	ldr	r3, [r3, #0]
 800dca8:	4a15      	ldr	r2, [pc, #84]	; (800dd00 <I2C_DMAError+0x224>)
 800dcaa:	4293      	cmp	r3, r2
 800dcac:	d12a      	bne.n	800dd04 <I2C_DMAError+0x228>
 800dcae:	68bb      	ldr	r3, [r7, #8]
 800dcb0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dcb2:	681b      	ldr	r3, [r3, #0]
 800dcb4:	685b      	ldr	r3, [r3, #4]
 800dcb6:	2b00      	cmp	r3, #0
 800dcb8:	bf0c      	ite	eq
 800dcba:	2301      	moveq	r3, #1
 800dcbc:	2300      	movne	r3, #0
 800dcbe:	b2db      	uxtb	r3, r3
 800dcc0:	e029      	b.n	800dd16 <I2C_DMAError+0x23a>
 800dcc2:	bf00      	nop
 800dcc4:	40020010 	.word	0x40020010
 800dcc8:	40020028 	.word	0x40020028
 800dccc:	40020040 	.word	0x40020040
 800dcd0:	40020058 	.word	0x40020058
 800dcd4:	40020070 	.word	0x40020070
 800dcd8:	40020088 	.word	0x40020088
 800dcdc:	400200a0 	.word	0x400200a0
 800dce0:	400200b8 	.word	0x400200b8
 800dce4:	40020410 	.word	0x40020410
 800dce8:	40020428 	.word	0x40020428
 800dcec:	40020440 	.word	0x40020440
 800dcf0:	40020458 	.word	0x40020458
 800dcf4:	40020470 	.word	0x40020470
 800dcf8:	40020488 	.word	0x40020488
 800dcfc:	400204a0 	.word	0x400204a0
 800dd00:	400204b8 	.word	0x400204b8
 800dd04:	68bb      	ldr	r3, [r7, #8]
 800dd06:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd08:	681b      	ldr	r3, [r3, #0]
 800dd0a:	685b      	ldr	r3, [r3, #4]
 800dd0c:	2b00      	cmp	r3, #0
 800dd0e:	bf0c      	ite	eq
 800dd10:	2301      	moveq	r3, #1
 800dd12:	2300      	movne	r3, #0
 800dd14:	b2db      	uxtb	r3, r3
 800dd16:	2b00      	cmp	r3, #0
 800dd18:	d001      	beq.n	800dd1e <I2C_DMAError+0x242>
 800dd1a:	2301      	movs	r3, #1
 800dd1c:	60fb      	str	r3, [r7, #12]
 800dd1e:	6878      	ldr	r0, [r7, #4]
 800dd20:	f7fc fdf0 	bl	800a904 <HAL_DMA_GetError>
 800dd24:	4603      	mov	r3, r0
 800dd26:	2b02      	cmp	r3, #2
 800dd28:	d00e      	beq.n	800dd48 <I2C_DMAError+0x26c>
 800dd2a:	68fb      	ldr	r3, [r7, #12]
 800dd2c:	2b00      	cmp	r3, #0
 800dd2e:	d00b      	beq.n	800dd48 <I2C_DMAError+0x26c>
 800dd30:	68bb      	ldr	r3, [r7, #8]
 800dd32:	681b      	ldr	r3, [r3, #0]
 800dd34:	685a      	ldr	r2, [r3, #4]
 800dd36:	68bb      	ldr	r3, [r7, #8]
 800dd38:	681b      	ldr	r3, [r3, #0]
 800dd3a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800dd3e:	605a      	str	r2, [r3, #4]
 800dd40:	2110      	movs	r1, #16
 800dd42:	68b8      	ldr	r0, [r7, #8]
 800dd44:	f7ff fcf8 	bl	800d738 <I2C_ITError>
 800dd48:	bf00      	nop
 800dd4a:	3710      	adds	r7, #16
 800dd4c:	46bd      	mov	sp, r7
 800dd4e:	bd80      	pop	{r7, pc}

0800dd50 <I2C_DMAAbort>:
 800dd50:	b580      	push	{r7, lr}
 800dd52:	b084      	sub	sp, #16
 800dd54:	af00      	add	r7, sp, #0
 800dd56:	6078      	str	r0, [r7, #4]
 800dd58:	687b      	ldr	r3, [r7, #4]
 800dd5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dd5c:	60fb      	str	r3, [r7, #12]
 800dd5e:	68fb      	ldr	r3, [r7, #12]
 800dd60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dd62:	2b00      	cmp	r3, #0
 800dd64:	d003      	beq.n	800dd6e <I2C_DMAAbort+0x1e>
 800dd66:	68fb      	ldr	r3, [r7, #12]
 800dd68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dd6a:	2200      	movs	r2, #0
 800dd6c:	651a      	str	r2, [r3, #80]	; 0x50
 800dd6e:	68fb      	ldr	r3, [r7, #12]
 800dd70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd72:	2b00      	cmp	r3, #0
 800dd74:	d003      	beq.n	800dd7e <I2C_DMAAbort+0x2e>
 800dd76:	68fb      	ldr	r3, [r7, #12]
 800dd78:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd7a:	2200      	movs	r2, #0
 800dd7c:	651a      	str	r2, [r3, #80]	; 0x50
 800dd7e:	68f8      	ldr	r0, [r7, #12]
 800dd80:	f7ff fdca 	bl	800d918 <I2C_TreatErrorCallback>
 800dd84:	bf00      	nop
 800dd86:	3710      	adds	r7, #16
 800dd88:	46bd      	mov	sp, r7
 800dd8a:	bd80      	pop	{r7, pc}

0800dd8c <I2C_TransferConfig>:
 800dd8c:	b480      	push	{r7}
 800dd8e:	b087      	sub	sp, #28
 800dd90:	af00      	add	r7, sp, #0
 800dd92:	60f8      	str	r0, [r7, #12]
 800dd94:	607b      	str	r3, [r7, #4]
 800dd96:	460b      	mov	r3, r1
 800dd98:	817b      	strh	r3, [r7, #10]
 800dd9a:	4613      	mov	r3, r2
 800dd9c:	727b      	strb	r3, [r7, #9]
 800dd9e:	897b      	ldrh	r3, [r7, #10]
 800dda0:	f3c3 0209 	ubfx	r2, r3, #0, #10
 800dda4:	7a7b      	ldrb	r3, [r7, #9]
 800dda6:	041b      	lsls	r3, r3, #16
 800dda8:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800ddac:	431a      	orrs	r2, r3
 800ddae:	687b      	ldr	r3, [r7, #4]
 800ddb0:	431a      	orrs	r2, r3
 800ddb2:	6a3b      	ldr	r3, [r7, #32]
 800ddb4:	4313      	orrs	r3, r2
 800ddb6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800ddba:	617b      	str	r3, [r7, #20]
 800ddbc:	68fb      	ldr	r3, [r7, #12]
 800ddbe:	681b      	ldr	r3, [r3, #0]
 800ddc0:	685a      	ldr	r2, [r3, #4]
 800ddc2:	6a3b      	ldr	r3, [r7, #32]
 800ddc4:	0d5b      	lsrs	r3, r3, #21
 800ddc6:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 800ddca:	4b08      	ldr	r3, [pc, #32]	; (800ddec <I2C_TransferConfig+0x60>)
 800ddcc:	430b      	orrs	r3, r1
 800ddce:	43db      	mvns	r3, r3
 800ddd0:	ea02 0103 	and.w	r1, r2, r3
 800ddd4:	68fb      	ldr	r3, [r7, #12]
 800ddd6:	681b      	ldr	r3, [r3, #0]
 800ddd8:	697a      	ldr	r2, [r7, #20]
 800ddda:	430a      	orrs	r2, r1
 800dddc:	605a      	str	r2, [r3, #4]
 800ddde:	bf00      	nop
 800dde0:	371c      	adds	r7, #28
 800dde2:	46bd      	mov	sp, r7
 800dde4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dde8:	4770      	bx	lr
 800ddea:	bf00      	nop
 800ddec:	03ff63ff 	.word	0x03ff63ff

0800ddf0 <I2C_Enable_IRQ>:
 800ddf0:	b480      	push	{r7}
 800ddf2:	b085      	sub	sp, #20
 800ddf4:	af00      	add	r7, sp, #0
 800ddf6:	6078      	str	r0, [r7, #4]
 800ddf8:	460b      	mov	r3, r1
 800ddfa:	807b      	strh	r3, [r7, #2]
 800ddfc:	2300      	movs	r3, #0
 800ddfe:	60fb      	str	r3, [r7, #12]
 800de00:	687b      	ldr	r3, [r7, #4]
 800de02:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800de04:	4a39      	ldr	r2, [pc, #228]	; (800deec <I2C_Enable_IRQ+0xfc>)
 800de06:	4293      	cmp	r3, r2
 800de08:	d032      	beq.n	800de70 <I2C_Enable_IRQ+0x80>
 800de0a:	687b      	ldr	r3, [r7, #4]
 800de0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800de0e:	4a38      	ldr	r2, [pc, #224]	; (800def0 <I2C_Enable_IRQ+0x100>)
 800de10:	4293      	cmp	r3, r2
 800de12:	d02d      	beq.n	800de70 <I2C_Enable_IRQ+0x80>
 800de14:	687b      	ldr	r3, [r7, #4]
 800de16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800de18:	4a36      	ldr	r2, [pc, #216]	; (800def4 <I2C_Enable_IRQ+0x104>)
 800de1a:	4293      	cmp	r3, r2
 800de1c:	d028      	beq.n	800de70 <I2C_Enable_IRQ+0x80>
 800de1e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800de22:	2b00      	cmp	r3, #0
 800de24:	da03      	bge.n	800de2e <I2C_Enable_IRQ+0x3e>
 800de26:	68fb      	ldr	r3, [r7, #12]
 800de28:	f043 03b8 	orr.w	r3, r3, #184	; 0xb8
 800de2c:	60fb      	str	r3, [r7, #12]
 800de2e:	887b      	ldrh	r3, [r7, #2]
 800de30:	f003 0301 	and.w	r3, r3, #1
 800de34:	2b00      	cmp	r3, #0
 800de36:	d003      	beq.n	800de40 <I2C_Enable_IRQ+0x50>
 800de38:	68fb      	ldr	r3, [r7, #12]
 800de3a:	f043 03f2 	orr.w	r3, r3, #242	; 0xf2
 800de3e:	60fb      	str	r3, [r7, #12]
 800de40:	887b      	ldrh	r3, [r7, #2]
 800de42:	f003 0302 	and.w	r3, r3, #2
 800de46:	2b00      	cmp	r3, #0
 800de48:	d003      	beq.n	800de52 <I2C_Enable_IRQ+0x62>
 800de4a:	68fb      	ldr	r3, [r7, #12]
 800de4c:	f043 03f4 	orr.w	r3, r3, #244	; 0xf4
 800de50:	60fb      	str	r3, [r7, #12]
 800de52:	887b      	ldrh	r3, [r7, #2]
 800de54:	2b10      	cmp	r3, #16
 800de56:	d103      	bne.n	800de60 <I2C_Enable_IRQ+0x70>
 800de58:	68fb      	ldr	r3, [r7, #12]
 800de5a:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 800de5e:	60fb      	str	r3, [r7, #12]
 800de60:	887b      	ldrh	r3, [r7, #2]
 800de62:	2b20      	cmp	r3, #32
 800de64:	d133      	bne.n	800dece <I2C_Enable_IRQ+0xde>
 800de66:	68fb      	ldr	r3, [r7, #12]
 800de68:	f043 0320 	orr.w	r3, r3, #32
 800de6c:	60fb      	str	r3, [r7, #12]
 800de6e:	e02e      	b.n	800dece <I2C_Enable_IRQ+0xde>
 800de70:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800de74:	2b00      	cmp	r3, #0
 800de76:	da03      	bge.n	800de80 <I2C_Enable_IRQ+0x90>
 800de78:	68fb      	ldr	r3, [r7, #12]
 800de7a:	f043 03b8 	orr.w	r3, r3, #184	; 0xb8
 800de7e:	60fb      	str	r3, [r7, #12]
 800de80:	887b      	ldrh	r3, [r7, #2]
 800de82:	f003 0301 	and.w	r3, r3, #1
 800de86:	2b00      	cmp	r3, #0
 800de88:	d003      	beq.n	800de92 <I2C_Enable_IRQ+0xa2>
 800de8a:	68fb      	ldr	r3, [r7, #12]
 800de8c:	f043 03f2 	orr.w	r3, r3, #242	; 0xf2
 800de90:	60fb      	str	r3, [r7, #12]
 800de92:	887b      	ldrh	r3, [r7, #2]
 800de94:	f003 0302 	and.w	r3, r3, #2
 800de98:	2b00      	cmp	r3, #0
 800de9a:	d003      	beq.n	800dea4 <I2C_Enable_IRQ+0xb4>
 800de9c:	68fb      	ldr	r3, [r7, #12]
 800de9e:	f043 03f4 	orr.w	r3, r3, #244	; 0xf4
 800dea2:	60fb      	str	r3, [r7, #12]
 800dea4:	887b      	ldrh	r3, [r7, #2]
 800dea6:	2b10      	cmp	r3, #16
 800dea8:	d103      	bne.n	800deb2 <I2C_Enable_IRQ+0xc2>
 800deaa:	68fb      	ldr	r3, [r7, #12]
 800deac:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 800deb0:	60fb      	str	r3, [r7, #12]
 800deb2:	887b      	ldrh	r3, [r7, #2]
 800deb4:	2b20      	cmp	r3, #32
 800deb6:	d103      	bne.n	800dec0 <I2C_Enable_IRQ+0xd0>
 800deb8:	68fb      	ldr	r3, [r7, #12]
 800deba:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 800debe:	60fb      	str	r3, [r7, #12]
 800dec0:	887b      	ldrh	r3, [r7, #2]
 800dec2:	2b40      	cmp	r3, #64	; 0x40
 800dec4:	d103      	bne.n	800dece <I2C_Enable_IRQ+0xde>
 800dec6:	68fb      	ldr	r3, [r7, #12]
 800dec8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800decc:	60fb      	str	r3, [r7, #12]
 800dece:	687b      	ldr	r3, [r7, #4]
 800ded0:	681b      	ldr	r3, [r3, #0]
 800ded2:	6819      	ldr	r1, [r3, #0]
 800ded4:	687b      	ldr	r3, [r7, #4]
 800ded6:	681b      	ldr	r3, [r3, #0]
 800ded8:	68fa      	ldr	r2, [r7, #12]
 800deda:	430a      	orrs	r2, r1
 800dedc:	601a      	str	r2, [r3, #0]
 800dede:	bf00      	nop
 800dee0:	3714      	adds	r7, #20
 800dee2:	46bd      	mov	sp, r7
 800dee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dee8:	4770      	bx	lr
 800deea:	bf00      	nop
 800deec:	0800c5f7 	.word	0x0800c5f7
 800def0:	0800ca3d 	.word	0x0800ca3d
 800def4:	0800c7dd 	.word	0x0800c7dd

0800def8 <I2C_Disable_IRQ>:
 800def8:	b480      	push	{r7}
 800defa:	b085      	sub	sp, #20
 800defc:	af00      	add	r7, sp, #0
 800defe:	6078      	str	r0, [r7, #4]
 800df00:	460b      	mov	r3, r1
 800df02:	807b      	strh	r3, [r7, #2]
 800df04:	2300      	movs	r3, #0
 800df06:	60fb      	str	r3, [r7, #12]
 800df08:	887b      	ldrh	r3, [r7, #2]
 800df0a:	f003 0301 	and.w	r3, r3, #1
 800df0e:	2b00      	cmp	r3, #0
 800df10:	d00f      	beq.n	800df32 <I2C_Disable_IRQ+0x3a>
 800df12:	68fb      	ldr	r3, [r7, #12]
 800df14:	f043 0342 	orr.w	r3, r3, #66	; 0x42
 800df18:	60fb      	str	r3, [r7, #12]
 800df1a:	687b      	ldr	r3, [r7, #4]
 800df1c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800df20:	b2db      	uxtb	r3, r3
 800df22:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800df26:	2b28      	cmp	r3, #40	; 0x28
 800df28:	d003      	beq.n	800df32 <I2C_Disable_IRQ+0x3a>
 800df2a:	68fb      	ldr	r3, [r7, #12]
 800df2c:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 800df30:	60fb      	str	r3, [r7, #12]
 800df32:	887b      	ldrh	r3, [r7, #2]
 800df34:	f003 0302 	and.w	r3, r3, #2
 800df38:	2b00      	cmp	r3, #0
 800df3a:	d00f      	beq.n	800df5c <I2C_Disable_IRQ+0x64>
 800df3c:	68fb      	ldr	r3, [r7, #12]
 800df3e:	f043 0344 	orr.w	r3, r3, #68	; 0x44
 800df42:	60fb      	str	r3, [r7, #12]
 800df44:	687b      	ldr	r3, [r7, #4]
 800df46:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800df4a:	b2db      	uxtb	r3, r3
 800df4c:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800df50:	2b28      	cmp	r3, #40	; 0x28
 800df52:	d003      	beq.n	800df5c <I2C_Disable_IRQ+0x64>
 800df54:	68fb      	ldr	r3, [r7, #12]
 800df56:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 800df5a:	60fb      	str	r3, [r7, #12]
 800df5c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800df60:	2b00      	cmp	r3, #0
 800df62:	da03      	bge.n	800df6c <I2C_Disable_IRQ+0x74>
 800df64:	68fb      	ldr	r3, [r7, #12]
 800df66:	f043 03b8 	orr.w	r3, r3, #184	; 0xb8
 800df6a:	60fb      	str	r3, [r7, #12]
 800df6c:	887b      	ldrh	r3, [r7, #2]
 800df6e:	2b10      	cmp	r3, #16
 800df70:	d103      	bne.n	800df7a <I2C_Disable_IRQ+0x82>
 800df72:	68fb      	ldr	r3, [r7, #12]
 800df74:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 800df78:	60fb      	str	r3, [r7, #12]
 800df7a:	887b      	ldrh	r3, [r7, #2]
 800df7c:	2b20      	cmp	r3, #32
 800df7e:	d103      	bne.n	800df88 <I2C_Disable_IRQ+0x90>
 800df80:	68fb      	ldr	r3, [r7, #12]
 800df82:	f043 0320 	orr.w	r3, r3, #32
 800df86:	60fb      	str	r3, [r7, #12]
 800df88:	887b      	ldrh	r3, [r7, #2]
 800df8a:	2b40      	cmp	r3, #64	; 0x40
 800df8c:	d103      	bne.n	800df96 <I2C_Disable_IRQ+0x9e>
 800df8e:	68fb      	ldr	r3, [r7, #12]
 800df90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800df94:	60fb      	str	r3, [r7, #12]
 800df96:	687b      	ldr	r3, [r7, #4]
 800df98:	681b      	ldr	r3, [r3, #0]
 800df9a:	6819      	ldr	r1, [r3, #0]
 800df9c:	68fb      	ldr	r3, [r7, #12]
 800df9e:	43da      	mvns	r2, r3
 800dfa0:	687b      	ldr	r3, [r7, #4]
 800dfa2:	681b      	ldr	r3, [r3, #0]
 800dfa4:	400a      	ands	r2, r1
 800dfa6:	601a      	str	r2, [r3, #0]
 800dfa8:	bf00      	nop
 800dfaa:	3714      	adds	r7, #20
 800dfac:	46bd      	mov	sp, r7
 800dfae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfb2:	4770      	bx	lr

0800dfb4 <HAL_I2CEx_ConfigAnalogFilter>:
 800dfb4:	b480      	push	{r7}
 800dfb6:	b083      	sub	sp, #12
 800dfb8:	af00      	add	r7, sp, #0
 800dfba:	6078      	str	r0, [r7, #4]
 800dfbc:	6039      	str	r1, [r7, #0]
 800dfbe:	687b      	ldr	r3, [r7, #4]
 800dfc0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800dfc4:	b2db      	uxtb	r3, r3
 800dfc6:	2b20      	cmp	r3, #32
 800dfc8:	d138      	bne.n	800e03c <HAL_I2CEx_ConfigAnalogFilter+0x88>
 800dfca:	687b      	ldr	r3, [r7, #4]
 800dfcc:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800dfd0:	2b01      	cmp	r3, #1
 800dfd2:	d101      	bne.n	800dfd8 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800dfd4:	2302      	movs	r3, #2
 800dfd6:	e032      	b.n	800e03e <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 800dfd8:	687b      	ldr	r3, [r7, #4]
 800dfda:	2201      	movs	r2, #1
 800dfdc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800dfe0:	687b      	ldr	r3, [r7, #4]
 800dfe2:	2224      	movs	r2, #36	; 0x24
 800dfe4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800dfe8:	687b      	ldr	r3, [r7, #4]
 800dfea:	681b      	ldr	r3, [r3, #0]
 800dfec:	681a      	ldr	r2, [r3, #0]
 800dfee:	687b      	ldr	r3, [r7, #4]
 800dff0:	681b      	ldr	r3, [r3, #0]
 800dff2:	f022 0201 	bic.w	r2, r2, #1
 800dff6:	601a      	str	r2, [r3, #0]
 800dff8:	687b      	ldr	r3, [r7, #4]
 800dffa:	681b      	ldr	r3, [r3, #0]
 800dffc:	681a      	ldr	r2, [r3, #0]
 800dffe:	687b      	ldr	r3, [r7, #4]
 800e000:	681b      	ldr	r3, [r3, #0]
 800e002:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800e006:	601a      	str	r2, [r3, #0]
 800e008:	687b      	ldr	r3, [r7, #4]
 800e00a:	681b      	ldr	r3, [r3, #0]
 800e00c:	6819      	ldr	r1, [r3, #0]
 800e00e:	687b      	ldr	r3, [r7, #4]
 800e010:	681b      	ldr	r3, [r3, #0]
 800e012:	683a      	ldr	r2, [r7, #0]
 800e014:	430a      	orrs	r2, r1
 800e016:	601a      	str	r2, [r3, #0]
 800e018:	687b      	ldr	r3, [r7, #4]
 800e01a:	681b      	ldr	r3, [r3, #0]
 800e01c:	681a      	ldr	r2, [r3, #0]
 800e01e:	687b      	ldr	r3, [r7, #4]
 800e020:	681b      	ldr	r3, [r3, #0]
 800e022:	f042 0201 	orr.w	r2, r2, #1
 800e026:	601a      	str	r2, [r3, #0]
 800e028:	687b      	ldr	r3, [r7, #4]
 800e02a:	2220      	movs	r2, #32
 800e02c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800e030:	687b      	ldr	r3, [r7, #4]
 800e032:	2200      	movs	r2, #0
 800e034:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800e038:	2300      	movs	r3, #0
 800e03a:	e000      	b.n	800e03e <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 800e03c:	2302      	movs	r3, #2
 800e03e:	4618      	mov	r0, r3
 800e040:	370c      	adds	r7, #12
 800e042:	46bd      	mov	sp, r7
 800e044:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e048:	4770      	bx	lr

0800e04a <HAL_I2CEx_ConfigDigitalFilter>:
 800e04a:	b480      	push	{r7}
 800e04c:	b085      	sub	sp, #20
 800e04e:	af00      	add	r7, sp, #0
 800e050:	6078      	str	r0, [r7, #4]
 800e052:	6039      	str	r1, [r7, #0]
 800e054:	687b      	ldr	r3, [r7, #4]
 800e056:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800e05a:	b2db      	uxtb	r3, r3
 800e05c:	2b20      	cmp	r3, #32
 800e05e:	d139      	bne.n	800e0d4 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 800e060:	687b      	ldr	r3, [r7, #4]
 800e062:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800e066:	2b01      	cmp	r3, #1
 800e068:	d101      	bne.n	800e06e <HAL_I2CEx_ConfigDigitalFilter+0x24>
 800e06a:	2302      	movs	r3, #2
 800e06c:	e033      	b.n	800e0d6 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800e06e:	687b      	ldr	r3, [r7, #4]
 800e070:	2201      	movs	r2, #1
 800e072:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800e076:	687b      	ldr	r3, [r7, #4]
 800e078:	2224      	movs	r2, #36	; 0x24
 800e07a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800e07e:	687b      	ldr	r3, [r7, #4]
 800e080:	681b      	ldr	r3, [r3, #0]
 800e082:	681a      	ldr	r2, [r3, #0]
 800e084:	687b      	ldr	r3, [r7, #4]
 800e086:	681b      	ldr	r3, [r3, #0]
 800e088:	f022 0201 	bic.w	r2, r2, #1
 800e08c:	601a      	str	r2, [r3, #0]
 800e08e:	687b      	ldr	r3, [r7, #4]
 800e090:	681b      	ldr	r3, [r3, #0]
 800e092:	681b      	ldr	r3, [r3, #0]
 800e094:	60fb      	str	r3, [r7, #12]
 800e096:	68fb      	ldr	r3, [r7, #12]
 800e098:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800e09c:	60fb      	str	r3, [r7, #12]
 800e09e:	683b      	ldr	r3, [r7, #0]
 800e0a0:	021b      	lsls	r3, r3, #8
 800e0a2:	68fa      	ldr	r2, [r7, #12]
 800e0a4:	4313      	orrs	r3, r2
 800e0a6:	60fb      	str	r3, [r7, #12]
 800e0a8:	687b      	ldr	r3, [r7, #4]
 800e0aa:	681b      	ldr	r3, [r3, #0]
 800e0ac:	68fa      	ldr	r2, [r7, #12]
 800e0ae:	601a      	str	r2, [r3, #0]
 800e0b0:	687b      	ldr	r3, [r7, #4]
 800e0b2:	681b      	ldr	r3, [r3, #0]
 800e0b4:	681a      	ldr	r2, [r3, #0]
 800e0b6:	687b      	ldr	r3, [r7, #4]
 800e0b8:	681b      	ldr	r3, [r3, #0]
 800e0ba:	f042 0201 	orr.w	r2, r2, #1
 800e0be:	601a      	str	r2, [r3, #0]
 800e0c0:	687b      	ldr	r3, [r7, #4]
 800e0c2:	2220      	movs	r2, #32
 800e0c4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800e0c8:	687b      	ldr	r3, [r7, #4]
 800e0ca:	2200      	movs	r2, #0
 800e0cc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800e0d0:	2300      	movs	r3, #0
 800e0d2:	e000      	b.n	800e0d6 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800e0d4:	2302      	movs	r3, #2
 800e0d6:	4618      	mov	r0, r3
 800e0d8:	3714      	adds	r7, #20
 800e0da:	46bd      	mov	sp, r7
 800e0dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0e0:	4770      	bx	lr
	...

0800e0e4 <HAL_I2CEx_EnableFastModePlus>:
 800e0e4:	b480      	push	{r7}
 800e0e6:	b085      	sub	sp, #20
 800e0e8:	af00      	add	r7, sp, #0
 800e0ea:	6078      	str	r0, [r7, #4]
 800e0ec:	4b0d      	ldr	r3, [pc, #52]	; (800e124 <HAL_I2CEx_EnableFastModePlus+0x40>)
 800e0ee:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 800e0f2:	4a0c      	ldr	r2, [pc, #48]	; (800e124 <HAL_I2CEx_EnableFastModePlus+0x40>)
 800e0f4:	f043 0302 	orr.w	r3, r3, #2
 800e0f8:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 800e0fc:	4b09      	ldr	r3, [pc, #36]	; (800e124 <HAL_I2CEx_EnableFastModePlus+0x40>)
 800e0fe:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 800e102:	f003 0302 	and.w	r3, r3, #2
 800e106:	60fb      	str	r3, [r7, #12]
 800e108:	68fb      	ldr	r3, [r7, #12]
 800e10a:	4b07      	ldr	r3, [pc, #28]	; (800e128 <HAL_I2CEx_EnableFastModePlus+0x44>)
 800e10c:	685a      	ldr	r2, [r3, #4]
 800e10e:	4906      	ldr	r1, [pc, #24]	; (800e128 <HAL_I2CEx_EnableFastModePlus+0x44>)
 800e110:	687b      	ldr	r3, [r7, #4]
 800e112:	4313      	orrs	r3, r2
 800e114:	604b      	str	r3, [r1, #4]
 800e116:	bf00      	nop
 800e118:	3714      	adds	r7, #20
 800e11a:	46bd      	mov	sp, r7
 800e11c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e120:	4770      	bx	lr
 800e122:	bf00      	nop
 800e124:	58024400 	.word	0x58024400
 800e128:	58000400 	.word	0x58000400

0800e12c <HAL_IWDG_Init>:
 800e12c:	b580      	push	{r7, lr}
 800e12e:	b084      	sub	sp, #16
 800e130:	af00      	add	r7, sp, #0
 800e132:	6078      	str	r0, [r7, #4]
 800e134:	687b      	ldr	r3, [r7, #4]
 800e136:	2b00      	cmp	r3, #0
 800e138:	d101      	bne.n	800e13e <HAL_IWDG_Init+0x12>
 800e13a:	2301      	movs	r3, #1
 800e13c:	e041      	b.n	800e1c2 <HAL_IWDG_Init+0x96>
 800e13e:	687b      	ldr	r3, [r7, #4]
 800e140:	681b      	ldr	r3, [r3, #0]
 800e142:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 800e146:	601a      	str	r2, [r3, #0]
 800e148:	687b      	ldr	r3, [r7, #4]
 800e14a:	681b      	ldr	r3, [r3, #0]
 800e14c:	f245 5255 	movw	r2, #21845	; 0x5555
 800e150:	601a      	str	r2, [r3, #0]
 800e152:	687b      	ldr	r3, [r7, #4]
 800e154:	681b      	ldr	r3, [r3, #0]
 800e156:	687a      	ldr	r2, [r7, #4]
 800e158:	6852      	ldr	r2, [r2, #4]
 800e15a:	605a      	str	r2, [r3, #4]
 800e15c:	687b      	ldr	r3, [r7, #4]
 800e15e:	681b      	ldr	r3, [r3, #0]
 800e160:	687a      	ldr	r2, [r7, #4]
 800e162:	6892      	ldr	r2, [r2, #8]
 800e164:	609a      	str	r2, [r3, #8]
 800e166:	f7f8 f843 	bl	80061f0 <HAL_GetTick>
 800e16a:	60f8      	str	r0, [r7, #12]
 800e16c:	e00f      	b.n	800e18e <HAL_IWDG_Init+0x62>
 800e16e:	f7f8 f83f 	bl	80061f0 <HAL_GetTick>
 800e172:	4602      	mov	r2, r0
 800e174:	68fb      	ldr	r3, [r7, #12]
 800e176:	1ad3      	subs	r3, r2, r3
 800e178:	2b31      	cmp	r3, #49	; 0x31
 800e17a:	d908      	bls.n	800e18e <HAL_IWDG_Init+0x62>
 800e17c:	687b      	ldr	r3, [r7, #4]
 800e17e:	681b      	ldr	r3, [r3, #0]
 800e180:	68db      	ldr	r3, [r3, #12]
 800e182:	f003 0307 	and.w	r3, r3, #7
 800e186:	2b00      	cmp	r3, #0
 800e188:	d001      	beq.n	800e18e <HAL_IWDG_Init+0x62>
 800e18a:	2303      	movs	r3, #3
 800e18c:	e019      	b.n	800e1c2 <HAL_IWDG_Init+0x96>
 800e18e:	687b      	ldr	r3, [r7, #4]
 800e190:	681b      	ldr	r3, [r3, #0]
 800e192:	68db      	ldr	r3, [r3, #12]
 800e194:	f003 0307 	and.w	r3, r3, #7
 800e198:	2b00      	cmp	r3, #0
 800e19a:	d1e8      	bne.n	800e16e <HAL_IWDG_Init+0x42>
 800e19c:	687b      	ldr	r3, [r7, #4]
 800e19e:	681b      	ldr	r3, [r3, #0]
 800e1a0:	691a      	ldr	r2, [r3, #16]
 800e1a2:	687b      	ldr	r3, [r7, #4]
 800e1a4:	68db      	ldr	r3, [r3, #12]
 800e1a6:	429a      	cmp	r2, r3
 800e1a8:	d005      	beq.n	800e1b6 <HAL_IWDG_Init+0x8a>
 800e1aa:	687b      	ldr	r3, [r7, #4]
 800e1ac:	681b      	ldr	r3, [r3, #0]
 800e1ae:	687a      	ldr	r2, [r7, #4]
 800e1b0:	68d2      	ldr	r2, [r2, #12]
 800e1b2:	611a      	str	r2, [r3, #16]
 800e1b4:	e004      	b.n	800e1c0 <HAL_IWDG_Init+0x94>
 800e1b6:	687b      	ldr	r3, [r7, #4]
 800e1b8:	681b      	ldr	r3, [r3, #0]
 800e1ba:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800e1be:	601a      	str	r2, [r3, #0]
 800e1c0:	2300      	movs	r3, #0
 800e1c2:	4618      	mov	r0, r3
 800e1c4:	3710      	adds	r7, #16
 800e1c6:	46bd      	mov	sp, r7
 800e1c8:	bd80      	pop	{r7, pc}

0800e1ca <HAL_IWDG_Refresh>:
 800e1ca:	b480      	push	{r7}
 800e1cc:	b083      	sub	sp, #12
 800e1ce:	af00      	add	r7, sp, #0
 800e1d0:	6078      	str	r0, [r7, #4]
 800e1d2:	687b      	ldr	r3, [r7, #4]
 800e1d4:	681b      	ldr	r3, [r3, #0]
 800e1d6:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800e1da:	601a      	str	r2, [r3, #0]
 800e1dc:	2300      	movs	r3, #0
 800e1de:	4618      	mov	r0, r3
 800e1e0:	370c      	adds	r7, #12
 800e1e2:	46bd      	mov	sp, r7
 800e1e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1e8:	4770      	bx	lr
	...

0800e1ec <HAL_PWR_EnterSTOPMode>:
 800e1ec:	b480      	push	{r7}
 800e1ee:	b083      	sub	sp, #12
 800e1f0:	af00      	add	r7, sp, #0
 800e1f2:	6078      	str	r0, [r7, #4]
 800e1f4:	460b      	mov	r3, r1
 800e1f6:	70fb      	strb	r3, [r7, #3]
 800e1f8:	4b18      	ldr	r3, [pc, #96]	; (800e25c <HAL_PWR_EnterSTOPMode+0x70>)
 800e1fa:	681b      	ldr	r3, [r3, #0]
 800e1fc:	f023 0201 	bic.w	r2, r3, #1
 800e200:	4916      	ldr	r1, [pc, #88]	; (800e25c <HAL_PWR_EnterSTOPMode+0x70>)
 800e202:	687b      	ldr	r3, [r7, #4]
 800e204:	4313      	orrs	r3, r2
 800e206:	600b      	str	r3, [r1, #0]
 800e208:	4b14      	ldr	r3, [pc, #80]	; (800e25c <HAL_PWR_EnterSTOPMode+0x70>)
 800e20a:	691b      	ldr	r3, [r3, #16]
 800e20c:	4a13      	ldr	r2, [pc, #76]	; (800e25c <HAL_PWR_EnterSTOPMode+0x70>)
 800e20e:	f023 0305 	bic.w	r3, r3, #5
 800e212:	6113      	str	r3, [r2, #16]
 800e214:	4b11      	ldr	r3, [pc, #68]	; (800e25c <HAL_PWR_EnterSTOPMode+0x70>)
 800e216:	691b      	ldr	r3, [r3, #16]
 800e218:	4a10      	ldr	r2, [pc, #64]	; (800e25c <HAL_PWR_EnterSTOPMode+0x70>)
 800e21a:	f023 0302 	bic.w	r3, r3, #2
 800e21e:	6113      	str	r3, [r2, #16]
 800e220:	4b0f      	ldr	r3, [pc, #60]	; (800e260 <HAL_PWR_EnterSTOPMode+0x74>)
 800e222:	691b      	ldr	r3, [r3, #16]
 800e224:	4a0e      	ldr	r2, [pc, #56]	; (800e260 <HAL_PWR_EnterSTOPMode+0x74>)
 800e226:	f043 0304 	orr.w	r3, r3, #4
 800e22a:	6113      	str	r3, [r2, #16]
 800e22c:	f3bf 8f4f 	dsb	sy
 800e230:	bf00      	nop
 800e232:	f3bf 8f6f 	isb	sy
 800e236:	bf00      	nop
 800e238:	78fb      	ldrb	r3, [r7, #3]
 800e23a:	2b01      	cmp	r3, #1
 800e23c:	d101      	bne.n	800e242 <HAL_PWR_EnterSTOPMode+0x56>
 800e23e:	bf30      	wfi
 800e240:	e000      	b.n	800e244 <HAL_PWR_EnterSTOPMode+0x58>
 800e242:	bf20      	wfe
 800e244:	4b06      	ldr	r3, [pc, #24]	; (800e260 <HAL_PWR_EnterSTOPMode+0x74>)
 800e246:	691b      	ldr	r3, [r3, #16]
 800e248:	4a05      	ldr	r2, [pc, #20]	; (800e260 <HAL_PWR_EnterSTOPMode+0x74>)
 800e24a:	f023 0304 	bic.w	r3, r3, #4
 800e24e:	6113      	str	r3, [r2, #16]
 800e250:	bf00      	nop
 800e252:	370c      	adds	r7, #12
 800e254:	46bd      	mov	sp, r7
 800e256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e25a:	4770      	bx	lr
 800e25c:	58024800 	.word	0x58024800
 800e260:	e000ed00 	.word	0xe000ed00

0800e264 <HAL_PWREx_ConfigSupply>:
 800e264:	b580      	push	{r7, lr}
 800e266:	b084      	sub	sp, #16
 800e268:	af00      	add	r7, sp, #0
 800e26a:	6078      	str	r0, [r7, #4]
 800e26c:	4b19      	ldr	r3, [pc, #100]	; (800e2d4 <HAL_PWREx_ConfigSupply+0x70>)
 800e26e:	68db      	ldr	r3, [r3, #12]
 800e270:	f003 0304 	and.w	r3, r3, #4
 800e274:	2b04      	cmp	r3, #4
 800e276:	d00a      	beq.n	800e28e <HAL_PWREx_ConfigSupply+0x2a>
 800e278:	4b16      	ldr	r3, [pc, #88]	; (800e2d4 <HAL_PWREx_ConfigSupply+0x70>)
 800e27a:	68db      	ldr	r3, [r3, #12]
 800e27c:	f003 0307 	and.w	r3, r3, #7
 800e280:	687a      	ldr	r2, [r7, #4]
 800e282:	429a      	cmp	r2, r3
 800e284:	d001      	beq.n	800e28a <HAL_PWREx_ConfigSupply+0x26>
 800e286:	2301      	movs	r3, #1
 800e288:	e01f      	b.n	800e2ca <HAL_PWREx_ConfigSupply+0x66>
 800e28a:	2300      	movs	r3, #0
 800e28c:	e01d      	b.n	800e2ca <HAL_PWREx_ConfigSupply+0x66>
 800e28e:	4b11      	ldr	r3, [pc, #68]	; (800e2d4 <HAL_PWREx_ConfigSupply+0x70>)
 800e290:	68db      	ldr	r3, [r3, #12]
 800e292:	f023 0207 	bic.w	r2, r3, #7
 800e296:	490f      	ldr	r1, [pc, #60]	; (800e2d4 <HAL_PWREx_ConfigSupply+0x70>)
 800e298:	687b      	ldr	r3, [r7, #4]
 800e29a:	4313      	orrs	r3, r2
 800e29c:	60cb      	str	r3, [r1, #12]
 800e29e:	f7f7 ffa7 	bl	80061f0 <HAL_GetTick>
 800e2a2:	60f8      	str	r0, [r7, #12]
 800e2a4:	e009      	b.n	800e2ba <HAL_PWREx_ConfigSupply+0x56>
 800e2a6:	f7f7 ffa3 	bl	80061f0 <HAL_GetTick>
 800e2aa:	4602      	mov	r2, r0
 800e2ac:	68fb      	ldr	r3, [r7, #12]
 800e2ae:	1ad3      	subs	r3, r2, r3
 800e2b0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800e2b4:	d901      	bls.n	800e2ba <HAL_PWREx_ConfigSupply+0x56>
 800e2b6:	2301      	movs	r3, #1
 800e2b8:	e007      	b.n	800e2ca <HAL_PWREx_ConfigSupply+0x66>
 800e2ba:	4b06      	ldr	r3, [pc, #24]	; (800e2d4 <HAL_PWREx_ConfigSupply+0x70>)
 800e2bc:	685b      	ldr	r3, [r3, #4]
 800e2be:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800e2c2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800e2c6:	d1ee      	bne.n	800e2a6 <HAL_PWREx_ConfigSupply+0x42>
 800e2c8:	2300      	movs	r3, #0
 800e2ca:	4618      	mov	r0, r3
 800e2cc:	3710      	adds	r7, #16
 800e2ce:	46bd      	mov	sp, r7
 800e2d0:	bd80      	pop	{r7, pc}
 800e2d2:	bf00      	nop
 800e2d4:	58024800 	.word	0x58024800

0800e2d8 <HAL_RCC_OscConfig>:
 800e2d8:	b580      	push	{r7, lr}
 800e2da:	b08c      	sub	sp, #48	; 0x30
 800e2dc:	af00      	add	r7, sp, #0
 800e2de:	6078      	str	r0, [r7, #4]
 800e2e0:	687b      	ldr	r3, [r7, #4]
 800e2e2:	2b00      	cmp	r3, #0
 800e2e4:	d102      	bne.n	800e2ec <HAL_RCC_OscConfig+0x14>
 800e2e6:	2301      	movs	r3, #1
 800e2e8:	f000 bc48 	b.w	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e2ec:	687b      	ldr	r3, [r7, #4]
 800e2ee:	681b      	ldr	r3, [r3, #0]
 800e2f0:	f003 0301 	and.w	r3, r3, #1
 800e2f4:	2b00      	cmp	r3, #0
 800e2f6:	f000 8088 	beq.w	800e40a <HAL_RCC_OscConfig+0x132>
 800e2fa:	4b99      	ldr	r3, [pc, #612]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e2fc:	691b      	ldr	r3, [r3, #16]
 800e2fe:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800e302:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e304:	4b96      	ldr	r3, [pc, #600]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e306:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e308:	62bb      	str	r3, [r7, #40]	; 0x28
 800e30a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e30c:	2b10      	cmp	r3, #16
 800e30e:	d007      	beq.n	800e320 <HAL_RCC_OscConfig+0x48>
 800e310:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e312:	2b18      	cmp	r3, #24
 800e314:	d111      	bne.n	800e33a <HAL_RCC_OscConfig+0x62>
 800e316:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e318:	f003 0303 	and.w	r3, r3, #3
 800e31c:	2b02      	cmp	r3, #2
 800e31e:	d10c      	bne.n	800e33a <HAL_RCC_OscConfig+0x62>
 800e320:	4b8f      	ldr	r3, [pc, #572]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e322:	681b      	ldr	r3, [r3, #0]
 800e324:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800e328:	2b00      	cmp	r3, #0
 800e32a:	d06d      	beq.n	800e408 <HAL_RCC_OscConfig+0x130>
 800e32c:	687b      	ldr	r3, [r7, #4]
 800e32e:	685b      	ldr	r3, [r3, #4]
 800e330:	2b00      	cmp	r3, #0
 800e332:	d169      	bne.n	800e408 <HAL_RCC_OscConfig+0x130>
 800e334:	2301      	movs	r3, #1
 800e336:	f000 bc21 	b.w	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e33a:	687b      	ldr	r3, [r7, #4]
 800e33c:	685b      	ldr	r3, [r3, #4]
 800e33e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800e342:	d106      	bne.n	800e352 <HAL_RCC_OscConfig+0x7a>
 800e344:	4b86      	ldr	r3, [pc, #536]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e346:	681b      	ldr	r3, [r3, #0]
 800e348:	4a85      	ldr	r2, [pc, #532]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e34a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800e34e:	6013      	str	r3, [r2, #0]
 800e350:	e02e      	b.n	800e3b0 <HAL_RCC_OscConfig+0xd8>
 800e352:	687b      	ldr	r3, [r7, #4]
 800e354:	685b      	ldr	r3, [r3, #4]
 800e356:	2b00      	cmp	r3, #0
 800e358:	d10c      	bne.n	800e374 <HAL_RCC_OscConfig+0x9c>
 800e35a:	4b81      	ldr	r3, [pc, #516]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e35c:	681b      	ldr	r3, [r3, #0]
 800e35e:	4a80      	ldr	r2, [pc, #512]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e360:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800e364:	6013      	str	r3, [r2, #0]
 800e366:	4b7e      	ldr	r3, [pc, #504]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e368:	681b      	ldr	r3, [r3, #0]
 800e36a:	4a7d      	ldr	r2, [pc, #500]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e36c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800e370:	6013      	str	r3, [r2, #0]
 800e372:	e01d      	b.n	800e3b0 <HAL_RCC_OscConfig+0xd8>
 800e374:	687b      	ldr	r3, [r7, #4]
 800e376:	685b      	ldr	r3, [r3, #4]
 800e378:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800e37c:	d10c      	bne.n	800e398 <HAL_RCC_OscConfig+0xc0>
 800e37e:	4b78      	ldr	r3, [pc, #480]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e380:	681b      	ldr	r3, [r3, #0]
 800e382:	4a77      	ldr	r2, [pc, #476]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e384:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800e388:	6013      	str	r3, [r2, #0]
 800e38a:	4b75      	ldr	r3, [pc, #468]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e38c:	681b      	ldr	r3, [r3, #0]
 800e38e:	4a74      	ldr	r2, [pc, #464]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e390:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800e394:	6013      	str	r3, [r2, #0]
 800e396:	e00b      	b.n	800e3b0 <HAL_RCC_OscConfig+0xd8>
 800e398:	4b71      	ldr	r3, [pc, #452]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e39a:	681b      	ldr	r3, [r3, #0]
 800e39c:	4a70      	ldr	r2, [pc, #448]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e39e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800e3a2:	6013      	str	r3, [r2, #0]
 800e3a4:	4b6e      	ldr	r3, [pc, #440]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e3a6:	681b      	ldr	r3, [r3, #0]
 800e3a8:	4a6d      	ldr	r2, [pc, #436]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e3aa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800e3ae:	6013      	str	r3, [r2, #0]
 800e3b0:	687b      	ldr	r3, [r7, #4]
 800e3b2:	685b      	ldr	r3, [r3, #4]
 800e3b4:	2b00      	cmp	r3, #0
 800e3b6:	d013      	beq.n	800e3e0 <HAL_RCC_OscConfig+0x108>
 800e3b8:	f7f7 ff1a 	bl	80061f0 <HAL_GetTick>
 800e3bc:	6278      	str	r0, [r7, #36]	; 0x24
 800e3be:	e008      	b.n	800e3d2 <HAL_RCC_OscConfig+0xfa>
 800e3c0:	f7f7 ff16 	bl	80061f0 <HAL_GetTick>
 800e3c4:	4602      	mov	r2, r0
 800e3c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e3c8:	1ad3      	subs	r3, r2, r3
 800e3ca:	2b64      	cmp	r3, #100	; 0x64
 800e3cc:	d901      	bls.n	800e3d2 <HAL_RCC_OscConfig+0xfa>
 800e3ce:	2303      	movs	r3, #3
 800e3d0:	e3d4      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e3d2:	4b63      	ldr	r3, [pc, #396]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e3d4:	681b      	ldr	r3, [r3, #0]
 800e3d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800e3da:	2b00      	cmp	r3, #0
 800e3dc:	d0f0      	beq.n	800e3c0 <HAL_RCC_OscConfig+0xe8>
 800e3de:	e014      	b.n	800e40a <HAL_RCC_OscConfig+0x132>
 800e3e0:	f7f7 ff06 	bl	80061f0 <HAL_GetTick>
 800e3e4:	6278      	str	r0, [r7, #36]	; 0x24
 800e3e6:	e008      	b.n	800e3fa <HAL_RCC_OscConfig+0x122>
 800e3e8:	f7f7 ff02 	bl	80061f0 <HAL_GetTick>
 800e3ec:	4602      	mov	r2, r0
 800e3ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e3f0:	1ad3      	subs	r3, r2, r3
 800e3f2:	2b64      	cmp	r3, #100	; 0x64
 800e3f4:	d901      	bls.n	800e3fa <HAL_RCC_OscConfig+0x122>
 800e3f6:	2303      	movs	r3, #3
 800e3f8:	e3c0      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e3fa:	4b59      	ldr	r3, [pc, #356]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e3fc:	681b      	ldr	r3, [r3, #0]
 800e3fe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800e402:	2b00      	cmp	r3, #0
 800e404:	d1f0      	bne.n	800e3e8 <HAL_RCC_OscConfig+0x110>
 800e406:	e000      	b.n	800e40a <HAL_RCC_OscConfig+0x132>
 800e408:	bf00      	nop
 800e40a:	687b      	ldr	r3, [r7, #4]
 800e40c:	681b      	ldr	r3, [r3, #0]
 800e40e:	f003 0302 	and.w	r3, r3, #2
 800e412:	2b00      	cmp	r3, #0
 800e414:	f000 80ca 	beq.w	800e5ac <HAL_RCC_OscConfig+0x2d4>
 800e418:	4b51      	ldr	r3, [pc, #324]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e41a:	691b      	ldr	r3, [r3, #16]
 800e41c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800e420:	623b      	str	r3, [r7, #32]
 800e422:	4b4f      	ldr	r3, [pc, #316]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e424:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e426:	61fb      	str	r3, [r7, #28]
 800e428:	6a3b      	ldr	r3, [r7, #32]
 800e42a:	2b00      	cmp	r3, #0
 800e42c:	d007      	beq.n	800e43e <HAL_RCC_OscConfig+0x166>
 800e42e:	6a3b      	ldr	r3, [r7, #32]
 800e430:	2b18      	cmp	r3, #24
 800e432:	d156      	bne.n	800e4e2 <HAL_RCC_OscConfig+0x20a>
 800e434:	69fb      	ldr	r3, [r7, #28]
 800e436:	f003 0303 	and.w	r3, r3, #3
 800e43a:	2b00      	cmp	r3, #0
 800e43c:	d151      	bne.n	800e4e2 <HAL_RCC_OscConfig+0x20a>
 800e43e:	4b48      	ldr	r3, [pc, #288]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e440:	681b      	ldr	r3, [r3, #0]
 800e442:	f003 0304 	and.w	r3, r3, #4
 800e446:	2b00      	cmp	r3, #0
 800e448:	d005      	beq.n	800e456 <HAL_RCC_OscConfig+0x17e>
 800e44a:	687b      	ldr	r3, [r7, #4]
 800e44c:	68db      	ldr	r3, [r3, #12]
 800e44e:	2b00      	cmp	r3, #0
 800e450:	d101      	bne.n	800e456 <HAL_RCC_OscConfig+0x17e>
 800e452:	2301      	movs	r3, #1
 800e454:	e392      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e456:	4b42      	ldr	r3, [pc, #264]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e458:	681b      	ldr	r3, [r3, #0]
 800e45a:	f023 0219 	bic.w	r2, r3, #25
 800e45e:	687b      	ldr	r3, [r7, #4]
 800e460:	68db      	ldr	r3, [r3, #12]
 800e462:	493f      	ldr	r1, [pc, #252]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e464:	4313      	orrs	r3, r2
 800e466:	600b      	str	r3, [r1, #0]
 800e468:	f7f7 fec2 	bl	80061f0 <HAL_GetTick>
 800e46c:	6278      	str	r0, [r7, #36]	; 0x24
 800e46e:	e008      	b.n	800e482 <HAL_RCC_OscConfig+0x1aa>
 800e470:	f7f7 febe 	bl	80061f0 <HAL_GetTick>
 800e474:	4602      	mov	r2, r0
 800e476:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e478:	1ad3      	subs	r3, r2, r3
 800e47a:	2b02      	cmp	r3, #2
 800e47c:	d901      	bls.n	800e482 <HAL_RCC_OscConfig+0x1aa>
 800e47e:	2303      	movs	r3, #3
 800e480:	e37c      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e482:	4b37      	ldr	r3, [pc, #220]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e484:	681b      	ldr	r3, [r3, #0]
 800e486:	f003 0304 	and.w	r3, r3, #4
 800e48a:	2b00      	cmp	r3, #0
 800e48c:	d0f0      	beq.n	800e470 <HAL_RCC_OscConfig+0x198>
 800e48e:	f7f7 febb 	bl	8006208 <HAL_GetREVID>
 800e492:	4603      	mov	r3, r0
 800e494:	f241 0203 	movw	r2, #4099	; 0x1003
 800e498:	4293      	cmp	r3, r2
 800e49a:	d817      	bhi.n	800e4cc <HAL_RCC_OscConfig+0x1f4>
 800e49c:	687b      	ldr	r3, [r7, #4]
 800e49e:	691b      	ldr	r3, [r3, #16]
 800e4a0:	2b40      	cmp	r3, #64	; 0x40
 800e4a2:	d108      	bne.n	800e4b6 <HAL_RCC_OscConfig+0x1de>
 800e4a4:	4b2e      	ldr	r3, [pc, #184]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e4a6:	685b      	ldr	r3, [r3, #4]
 800e4a8:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 800e4ac:	4a2c      	ldr	r2, [pc, #176]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e4ae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800e4b2:	6053      	str	r3, [r2, #4]
 800e4b4:	e07a      	b.n	800e5ac <HAL_RCC_OscConfig+0x2d4>
 800e4b6:	4b2a      	ldr	r3, [pc, #168]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e4b8:	685b      	ldr	r3, [r3, #4]
 800e4ba:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800e4be:	687b      	ldr	r3, [r7, #4]
 800e4c0:	691b      	ldr	r3, [r3, #16]
 800e4c2:	031b      	lsls	r3, r3, #12
 800e4c4:	4926      	ldr	r1, [pc, #152]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e4c6:	4313      	orrs	r3, r2
 800e4c8:	604b      	str	r3, [r1, #4]
 800e4ca:	e06f      	b.n	800e5ac <HAL_RCC_OscConfig+0x2d4>
 800e4cc:	4b24      	ldr	r3, [pc, #144]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e4ce:	685b      	ldr	r3, [r3, #4]
 800e4d0:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 800e4d4:	687b      	ldr	r3, [r7, #4]
 800e4d6:	691b      	ldr	r3, [r3, #16]
 800e4d8:	061b      	lsls	r3, r3, #24
 800e4da:	4921      	ldr	r1, [pc, #132]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e4dc:	4313      	orrs	r3, r2
 800e4de:	604b      	str	r3, [r1, #4]
 800e4e0:	e064      	b.n	800e5ac <HAL_RCC_OscConfig+0x2d4>
 800e4e2:	687b      	ldr	r3, [r7, #4]
 800e4e4:	68db      	ldr	r3, [r3, #12]
 800e4e6:	2b00      	cmp	r3, #0
 800e4e8:	d047      	beq.n	800e57a <HAL_RCC_OscConfig+0x2a2>
 800e4ea:	4b1d      	ldr	r3, [pc, #116]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e4ec:	681b      	ldr	r3, [r3, #0]
 800e4ee:	f023 0219 	bic.w	r2, r3, #25
 800e4f2:	687b      	ldr	r3, [r7, #4]
 800e4f4:	68db      	ldr	r3, [r3, #12]
 800e4f6:	491a      	ldr	r1, [pc, #104]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e4f8:	4313      	orrs	r3, r2
 800e4fa:	600b      	str	r3, [r1, #0]
 800e4fc:	f7f7 fe78 	bl	80061f0 <HAL_GetTick>
 800e500:	6278      	str	r0, [r7, #36]	; 0x24
 800e502:	e008      	b.n	800e516 <HAL_RCC_OscConfig+0x23e>
 800e504:	f7f7 fe74 	bl	80061f0 <HAL_GetTick>
 800e508:	4602      	mov	r2, r0
 800e50a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e50c:	1ad3      	subs	r3, r2, r3
 800e50e:	2b02      	cmp	r3, #2
 800e510:	d901      	bls.n	800e516 <HAL_RCC_OscConfig+0x23e>
 800e512:	2303      	movs	r3, #3
 800e514:	e332      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e516:	4b12      	ldr	r3, [pc, #72]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e518:	681b      	ldr	r3, [r3, #0]
 800e51a:	f003 0304 	and.w	r3, r3, #4
 800e51e:	2b00      	cmp	r3, #0
 800e520:	d0f0      	beq.n	800e504 <HAL_RCC_OscConfig+0x22c>
 800e522:	f7f7 fe71 	bl	8006208 <HAL_GetREVID>
 800e526:	4603      	mov	r3, r0
 800e528:	f241 0203 	movw	r2, #4099	; 0x1003
 800e52c:	4293      	cmp	r3, r2
 800e52e:	d819      	bhi.n	800e564 <HAL_RCC_OscConfig+0x28c>
 800e530:	687b      	ldr	r3, [r7, #4]
 800e532:	691b      	ldr	r3, [r3, #16]
 800e534:	2b40      	cmp	r3, #64	; 0x40
 800e536:	d108      	bne.n	800e54a <HAL_RCC_OscConfig+0x272>
 800e538:	4b09      	ldr	r3, [pc, #36]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e53a:	685b      	ldr	r3, [r3, #4]
 800e53c:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 800e540:	4a07      	ldr	r2, [pc, #28]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e542:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800e546:	6053      	str	r3, [r2, #4]
 800e548:	e030      	b.n	800e5ac <HAL_RCC_OscConfig+0x2d4>
 800e54a:	4b05      	ldr	r3, [pc, #20]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e54c:	685b      	ldr	r3, [r3, #4]
 800e54e:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800e552:	687b      	ldr	r3, [r7, #4]
 800e554:	691b      	ldr	r3, [r3, #16]
 800e556:	031b      	lsls	r3, r3, #12
 800e558:	4901      	ldr	r1, [pc, #4]	; (800e560 <HAL_RCC_OscConfig+0x288>)
 800e55a:	4313      	orrs	r3, r2
 800e55c:	604b      	str	r3, [r1, #4]
 800e55e:	e025      	b.n	800e5ac <HAL_RCC_OscConfig+0x2d4>
 800e560:	58024400 	.word	0x58024400
 800e564:	4b9a      	ldr	r3, [pc, #616]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e566:	685b      	ldr	r3, [r3, #4]
 800e568:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 800e56c:	687b      	ldr	r3, [r7, #4]
 800e56e:	691b      	ldr	r3, [r3, #16]
 800e570:	061b      	lsls	r3, r3, #24
 800e572:	4997      	ldr	r1, [pc, #604]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e574:	4313      	orrs	r3, r2
 800e576:	604b      	str	r3, [r1, #4]
 800e578:	e018      	b.n	800e5ac <HAL_RCC_OscConfig+0x2d4>
 800e57a:	4b95      	ldr	r3, [pc, #596]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e57c:	681b      	ldr	r3, [r3, #0]
 800e57e:	4a94      	ldr	r2, [pc, #592]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e580:	f023 0301 	bic.w	r3, r3, #1
 800e584:	6013      	str	r3, [r2, #0]
 800e586:	f7f7 fe33 	bl	80061f0 <HAL_GetTick>
 800e58a:	6278      	str	r0, [r7, #36]	; 0x24
 800e58c:	e008      	b.n	800e5a0 <HAL_RCC_OscConfig+0x2c8>
 800e58e:	f7f7 fe2f 	bl	80061f0 <HAL_GetTick>
 800e592:	4602      	mov	r2, r0
 800e594:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e596:	1ad3      	subs	r3, r2, r3
 800e598:	2b02      	cmp	r3, #2
 800e59a:	d901      	bls.n	800e5a0 <HAL_RCC_OscConfig+0x2c8>
 800e59c:	2303      	movs	r3, #3
 800e59e:	e2ed      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e5a0:	4b8b      	ldr	r3, [pc, #556]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e5a2:	681b      	ldr	r3, [r3, #0]
 800e5a4:	f003 0304 	and.w	r3, r3, #4
 800e5a8:	2b00      	cmp	r3, #0
 800e5aa:	d1f0      	bne.n	800e58e <HAL_RCC_OscConfig+0x2b6>
 800e5ac:	687b      	ldr	r3, [r7, #4]
 800e5ae:	681b      	ldr	r3, [r3, #0]
 800e5b0:	f003 0310 	and.w	r3, r3, #16
 800e5b4:	2b00      	cmp	r3, #0
 800e5b6:	f000 80a9 	beq.w	800e70c <HAL_RCC_OscConfig+0x434>
 800e5ba:	4b85      	ldr	r3, [pc, #532]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e5bc:	691b      	ldr	r3, [r3, #16]
 800e5be:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800e5c2:	61bb      	str	r3, [r7, #24]
 800e5c4:	4b82      	ldr	r3, [pc, #520]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e5c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e5c8:	617b      	str	r3, [r7, #20]
 800e5ca:	69bb      	ldr	r3, [r7, #24]
 800e5cc:	2b08      	cmp	r3, #8
 800e5ce:	d007      	beq.n	800e5e0 <HAL_RCC_OscConfig+0x308>
 800e5d0:	69bb      	ldr	r3, [r7, #24]
 800e5d2:	2b18      	cmp	r3, #24
 800e5d4:	d13a      	bne.n	800e64c <HAL_RCC_OscConfig+0x374>
 800e5d6:	697b      	ldr	r3, [r7, #20]
 800e5d8:	f003 0303 	and.w	r3, r3, #3
 800e5dc:	2b01      	cmp	r3, #1
 800e5de:	d135      	bne.n	800e64c <HAL_RCC_OscConfig+0x374>
 800e5e0:	4b7b      	ldr	r3, [pc, #492]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e5e2:	681b      	ldr	r3, [r3, #0]
 800e5e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e5e8:	2b00      	cmp	r3, #0
 800e5ea:	d005      	beq.n	800e5f8 <HAL_RCC_OscConfig+0x320>
 800e5ec:	687b      	ldr	r3, [r7, #4]
 800e5ee:	69db      	ldr	r3, [r3, #28]
 800e5f0:	2b80      	cmp	r3, #128	; 0x80
 800e5f2:	d001      	beq.n	800e5f8 <HAL_RCC_OscConfig+0x320>
 800e5f4:	2301      	movs	r3, #1
 800e5f6:	e2c1      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e5f8:	f7f7 fe06 	bl	8006208 <HAL_GetREVID>
 800e5fc:	4603      	mov	r3, r0
 800e5fe:	f241 0203 	movw	r2, #4099	; 0x1003
 800e602:	4293      	cmp	r3, r2
 800e604:	d817      	bhi.n	800e636 <HAL_RCC_OscConfig+0x35e>
 800e606:	687b      	ldr	r3, [r7, #4]
 800e608:	6a1b      	ldr	r3, [r3, #32]
 800e60a:	2b20      	cmp	r3, #32
 800e60c:	d108      	bne.n	800e620 <HAL_RCC_OscConfig+0x348>
 800e60e:	4b70      	ldr	r3, [pc, #448]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e610:	685b      	ldr	r3, [r3, #4]
 800e612:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 800e616:	4a6e      	ldr	r2, [pc, #440]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e618:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800e61c:	6053      	str	r3, [r2, #4]
 800e61e:	e075      	b.n	800e70c <HAL_RCC_OscConfig+0x434>
 800e620:	4b6b      	ldr	r3, [pc, #428]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e622:	685b      	ldr	r3, [r3, #4]
 800e624:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 800e628:	687b      	ldr	r3, [r7, #4]
 800e62a:	6a1b      	ldr	r3, [r3, #32]
 800e62c:	069b      	lsls	r3, r3, #26
 800e62e:	4968      	ldr	r1, [pc, #416]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e630:	4313      	orrs	r3, r2
 800e632:	604b      	str	r3, [r1, #4]
 800e634:	e06a      	b.n	800e70c <HAL_RCC_OscConfig+0x434>
 800e636:	4b66      	ldr	r3, [pc, #408]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e638:	68db      	ldr	r3, [r3, #12]
 800e63a:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 800e63e:	687b      	ldr	r3, [r7, #4]
 800e640:	6a1b      	ldr	r3, [r3, #32]
 800e642:	061b      	lsls	r3, r3, #24
 800e644:	4962      	ldr	r1, [pc, #392]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e646:	4313      	orrs	r3, r2
 800e648:	60cb      	str	r3, [r1, #12]
 800e64a:	e05f      	b.n	800e70c <HAL_RCC_OscConfig+0x434>
 800e64c:	687b      	ldr	r3, [r7, #4]
 800e64e:	69db      	ldr	r3, [r3, #28]
 800e650:	2b00      	cmp	r3, #0
 800e652:	d042      	beq.n	800e6da <HAL_RCC_OscConfig+0x402>
 800e654:	4b5e      	ldr	r3, [pc, #376]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e656:	681b      	ldr	r3, [r3, #0]
 800e658:	4a5d      	ldr	r2, [pc, #372]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e65a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e65e:	6013      	str	r3, [r2, #0]
 800e660:	f7f7 fdc6 	bl	80061f0 <HAL_GetTick>
 800e664:	6278      	str	r0, [r7, #36]	; 0x24
 800e666:	e008      	b.n	800e67a <HAL_RCC_OscConfig+0x3a2>
 800e668:	f7f7 fdc2 	bl	80061f0 <HAL_GetTick>
 800e66c:	4602      	mov	r2, r0
 800e66e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e670:	1ad3      	subs	r3, r2, r3
 800e672:	2b02      	cmp	r3, #2
 800e674:	d901      	bls.n	800e67a <HAL_RCC_OscConfig+0x3a2>
 800e676:	2303      	movs	r3, #3
 800e678:	e280      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e67a:	4b55      	ldr	r3, [pc, #340]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e67c:	681b      	ldr	r3, [r3, #0]
 800e67e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e682:	2b00      	cmp	r3, #0
 800e684:	d0f0      	beq.n	800e668 <HAL_RCC_OscConfig+0x390>
 800e686:	f7f7 fdbf 	bl	8006208 <HAL_GetREVID>
 800e68a:	4603      	mov	r3, r0
 800e68c:	f241 0203 	movw	r2, #4099	; 0x1003
 800e690:	4293      	cmp	r3, r2
 800e692:	d817      	bhi.n	800e6c4 <HAL_RCC_OscConfig+0x3ec>
 800e694:	687b      	ldr	r3, [r7, #4]
 800e696:	6a1b      	ldr	r3, [r3, #32]
 800e698:	2b20      	cmp	r3, #32
 800e69a:	d108      	bne.n	800e6ae <HAL_RCC_OscConfig+0x3d6>
 800e69c:	4b4c      	ldr	r3, [pc, #304]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e69e:	685b      	ldr	r3, [r3, #4]
 800e6a0:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 800e6a4:	4a4a      	ldr	r2, [pc, #296]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e6a6:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800e6aa:	6053      	str	r3, [r2, #4]
 800e6ac:	e02e      	b.n	800e70c <HAL_RCC_OscConfig+0x434>
 800e6ae:	4b48      	ldr	r3, [pc, #288]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e6b0:	685b      	ldr	r3, [r3, #4]
 800e6b2:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 800e6b6:	687b      	ldr	r3, [r7, #4]
 800e6b8:	6a1b      	ldr	r3, [r3, #32]
 800e6ba:	069b      	lsls	r3, r3, #26
 800e6bc:	4944      	ldr	r1, [pc, #272]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e6be:	4313      	orrs	r3, r2
 800e6c0:	604b      	str	r3, [r1, #4]
 800e6c2:	e023      	b.n	800e70c <HAL_RCC_OscConfig+0x434>
 800e6c4:	4b42      	ldr	r3, [pc, #264]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e6c6:	68db      	ldr	r3, [r3, #12]
 800e6c8:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 800e6cc:	687b      	ldr	r3, [r7, #4]
 800e6ce:	6a1b      	ldr	r3, [r3, #32]
 800e6d0:	061b      	lsls	r3, r3, #24
 800e6d2:	493f      	ldr	r1, [pc, #252]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e6d4:	4313      	orrs	r3, r2
 800e6d6:	60cb      	str	r3, [r1, #12]
 800e6d8:	e018      	b.n	800e70c <HAL_RCC_OscConfig+0x434>
 800e6da:	4b3d      	ldr	r3, [pc, #244]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e6dc:	681b      	ldr	r3, [r3, #0]
 800e6de:	4a3c      	ldr	r2, [pc, #240]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e6e0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800e6e4:	6013      	str	r3, [r2, #0]
 800e6e6:	f7f7 fd83 	bl	80061f0 <HAL_GetTick>
 800e6ea:	6278      	str	r0, [r7, #36]	; 0x24
 800e6ec:	e008      	b.n	800e700 <HAL_RCC_OscConfig+0x428>
 800e6ee:	f7f7 fd7f 	bl	80061f0 <HAL_GetTick>
 800e6f2:	4602      	mov	r2, r0
 800e6f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e6f6:	1ad3      	subs	r3, r2, r3
 800e6f8:	2b02      	cmp	r3, #2
 800e6fa:	d901      	bls.n	800e700 <HAL_RCC_OscConfig+0x428>
 800e6fc:	2303      	movs	r3, #3
 800e6fe:	e23d      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e700:	4b33      	ldr	r3, [pc, #204]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e702:	681b      	ldr	r3, [r3, #0]
 800e704:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e708:	2b00      	cmp	r3, #0
 800e70a:	d1f0      	bne.n	800e6ee <HAL_RCC_OscConfig+0x416>
 800e70c:	687b      	ldr	r3, [r7, #4]
 800e70e:	681b      	ldr	r3, [r3, #0]
 800e710:	f003 0308 	and.w	r3, r3, #8
 800e714:	2b00      	cmp	r3, #0
 800e716:	d036      	beq.n	800e786 <HAL_RCC_OscConfig+0x4ae>
 800e718:	687b      	ldr	r3, [r7, #4]
 800e71a:	695b      	ldr	r3, [r3, #20]
 800e71c:	2b00      	cmp	r3, #0
 800e71e:	d019      	beq.n	800e754 <HAL_RCC_OscConfig+0x47c>
 800e720:	4b2b      	ldr	r3, [pc, #172]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e722:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e724:	4a2a      	ldr	r2, [pc, #168]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e726:	f043 0301 	orr.w	r3, r3, #1
 800e72a:	6753      	str	r3, [r2, #116]	; 0x74
 800e72c:	f7f7 fd60 	bl	80061f0 <HAL_GetTick>
 800e730:	6278      	str	r0, [r7, #36]	; 0x24
 800e732:	e008      	b.n	800e746 <HAL_RCC_OscConfig+0x46e>
 800e734:	f7f7 fd5c 	bl	80061f0 <HAL_GetTick>
 800e738:	4602      	mov	r2, r0
 800e73a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e73c:	1ad3      	subs	r3, r2, r3
 800e73e:	2b02      	cmp	r3, #2
 800e740:	d901      	bls.n	800e746 <HAL_RCC_OscConfig+0x46e>
 800e742:	2303      	movs	r3, #3
 800e744:	e21a      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e746:	4b22      	ldr	r3, [pc, #136]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e748:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e74a:	f003 0302 	and.w	r3, r3, #2
 800e74e:	2b00      	cmp	r3, #0
 800e750:	d0f0      	beq.n	800e734 <HAL_RCC_OscConfig+0x45c>
 800e752:	e018      	b.n	800e786 <HAL_RCC_OscConfig+0x4ae>
 800e754:	4b1e      	ldr	r3, [pc, #120]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e756:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e758:	4a1d      	ldr	r2, [pc, #116]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e75a:	f023 0301 	bic.w	r3, r3, #1
 800e75e:	6753      	str	r3, [r2, #116]	; 0x74
 800e760:	f7f7 fd46 	bl	80061f0 <HAL_GetTick>
 800e764:	6278      	str	r0, [r7, #36]	; 0x24
 800e766:	e008      	b.n	800e77a <HAL_RCC_OscConfig+0x4a2>
 800e768:	f7f7 fd42 	bl	80061f0 <HAL_GetTick>
 800e76c:	4602      	mov	r2, r0
 800e76e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e770:	1ad3      	subs	r3, r2, r3
 800e772:	2b02      	cmp	r3, #2
 800e774:	d901      	bls.n	800e77a <HAL_RCC_OscConfig+0x4a2>
 800e776:	2303      	movs	r3, #3
 800e778:	e200      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e77a:	4b15      	ldr	r3, [pc, #84]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e77c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e77e:	f003 0302 	and.w	r3, r3, #2
 800e782:	2b00      	cmp	r3, #0
 800e784:	d1f0      	bne.n	800e768 <HAL_RCC_OscConfig+0x490>
 800e786:	687b      	ldr	r3, [r7, #4]
 800e788:	681b      	ldr	r3, [r3, #0]
 800e78a:	f003 0320 	and.w	r3, r3, #32
 800e78e:	2b00      	cmp	r3, #0
 800e790:	d039      	beq.n	800e806 <HAL_RCC_OscConfig+0x52e>
 800e792:	687b      	ldr	r3, [r7, #4]
 800e794:	699b      	ldr	r3, [r3, #24]
 800e796:	2b00      	cmp	r3, #0
 800e798:	d01c      	beq.n	800e7d4 <HAL_RCC_OscConfig+0x4fc>
 800e79a:	4b0d      	ldr	r3, [pc, #52]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e79c:	681b      	ldr	r3, [r3, #0]
 800e79e:	4a0c      	ldr	r2, [pc, #48]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e7a0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800e7a4:	6013      	str	r3, [r2, #0]
 800e7a6:	f7f7 fd23 	bl	80061f0 <HAL_GetTick>
 800e7aa:	6278      	str	r0, [r7, #36]	; 0x24
 800e7ac:	e008      	b.n	800e7c0 <HAL_RCC_OscConfig+0x4e8>
 800e7ae:	f7f7 fd1f 	bl	80061f0 <HAL_GetTick>
 800e7b2:	4602      	mov	r2, r0
 800e7b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e7b6:	1ad3      	subs	r3, r2, r3
 800e7b8:	2b02      	cmp	r3, #2
 800e7ba:	d901      	bls.n	800e7c0 <HAL_RCC_OscConfig+0x4e8>
 800e7bc:	2303      	movs	r3, #3
 800e7be:	e1dd      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e7c0:	4b03      	ldr	r3, [pc, #12]	; (800e7d0 <HAL_RCC_OscConfig+0x4f8>)
 800e7c2:	681b      	ldr	r3, [r3, #0]
 800e7c4:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800e7c8:	2b00      	cmp	r3, #0
 800e7ca:	d0f0      	beq.n	800e7ae <HAL_RCC_OscConfig+0x4d6>
 800e7cc:	e01b      	b.n	800e806 <HAL_RCC_OscConfig+0x52e>
 800e7ce:	bf00      	nop
 800e7d0:	58024400 	.word	0x58024400
 800e7d4:	4b9b      	ldr	r3, [pc, #620]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e7d6:	681b      	ldr	r3, [r3, #0]
 800e7d8:	4a9a      	ldr	r2, [pc, #616]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e7da:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800e7de:	6013      	str	r3, [r2, #0]
 800e7e0:	f7f7 fd06 	bl	80061f0 <HAL_GetTick>
 800e7e4:	6278      	str	r0, [r7, #36]	; 0x24
 800e7e6:	e008      	b.n	800e7fa <HAL_RCC_OscConfig+0x522>
 800e7e8:	f7f7 fd02 	bl	80061f0 <HAL_GetTick>
 800e7ec:	4602      	mov	r2, r0
 800e7ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e7f0:	1ad3      	subs	r3, r2, r3
 800e7f2:	2b02      	cmp	r3, #2
 800e7f4:	d901      	bls.n	800e7fa <HAL_RCC_OscConfig+0x522>
 800e7f6:	2303      	movs	r3, #3
 800e7f8:	e1c0      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e7fa:	4b92      	ldr	r3, [pc, #584]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e7fc:	681b      	ldr	r3, [r3, #0]
 800e7fe:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800e802:	2b00      	cmp	r3, #0
 800e804:	d1f0      	bne.n	800e7e8 <HAL_RCC_OscConfig+0x510>
 800e806:	687b      	ldr	r3, [r7, #4]
 800e808:	681b      	ldr	r3, [r3, #0]
 800e80a:	f003 0304 	and.w	r3, r3, #4
 800e80e:	2b00      	cmp	r3, #0
 800e810:	f000 8081 	beq.w	800e916 <HAL_RCC_OscConfig+0x63e>
 800e814:	4b8c      	ldr	r3, [pc, #560]	; (800ea48 <HAL_RCC_OscConfig+0x770>)
 800e816:	681b      	ldr	r3, [r3, #0]
 800e818:	4a8b      	ldr	r2, [pc, #556]	; (800ea48 <HAL_RCC_OscConfig+0x770>)
 800e81a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e81e:	6013      	str	r3, [r2, #0]
 800e820:	f7f7 fce6 	bl	80061f0 <HAL_GetTick>
 800e824:	6278      	str	r0, [r7, #36]	; 0x24
 800e826:	e008      	b.n	800e83a <HAL_RCC_OscConfig+0x562>
 800e828:	f7f7 fce2 	bl	80061f0 <HAL_GetTick>
 800e82c:	4602      	mov	r2, r0
 800e82e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e830:	1ad3      	subs	r3, r2, r3
 800e832:	2b64      	cmp	r3, #100	; 0x64
 800e834:	d901      	bls.n	800e83a <HAL_RCC_OscConfig+0x562>
 800e836:	2303      	movs	r3, #3
 800e838:	e1a0      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e83a:	4b83      	ldr	r3, [pc, #524]	; (800ea48 <HAL_RCC_OscConfig+0x770>)
 800e83c:	681b      	ldr	r3, [r3, #0]
 800e83e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e842:	2b00      	cmp	r3, #0
 800e844:	d0f0      	beq.n	800e828 <HAL_RCC_OscConfig+0x550>
 800e846:	687b      	ldr	r3, [r7, #4]
 800e848:	689b      	ldr	r3, [r3, #8]
 800e84a:	2b01      	cmp	r3, #1
 800e84c:	d106      	bne.n	800e85c <HAL_RCC_OscConfig+0x584>
 800e84e:	4b7d      	ldr	r3, [pc, #500]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e850:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e852:	4a7c      	ldr	r2, [pc, #496]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e854:	f043 0301 	orr.w	r3, r3, #1
 800e858:	6713      	str	r3, [r2, #112]	; 0x70
 800e85a:	e02d      	b.n	800e8b8 <HAL_RCC_OscConfig+0x5e0>
 800e85c:	687b      	ldr	r3, [r7, #4]
 800e85e:	689b      	ldr	r3, [r3, #8]
 800e860:	2b00      	cmp	r3, #0
 800e862:	d10c      	bne.n	800e87e <HAL_RCC_OscConfig+0x5a6>
 800e864:	4b77      	ldr	r3, [pc, #476]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e866:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e868:	4a76      	ldr	r2, [pc, #472]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e86a:	f023 0301 	bic.w	r3, r3, #1
 800e86e:	6713      	str	r3, [r2, #112]	; 0x70
 800e870:	4b74      	ldr	r3, [pc, #464]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e872:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e874:	4a73      	ldr	r2, [pc, #460]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e876:	f023 0304 	bic.w	r3, r3, #4
 800e87a:	6713      	str	r3, [r2, #112]	; 0x70
 800e87c:	e01c      	b.n	800e8b8 <HAL_RCC_OscConfig+0x5e0>
 800e87e:	687b      	ldr	r3, [r7, #4]
 800e880:	689b      	ldr	r3, [r3, #8]
 800e882:	2b05      	cmp	r3, #5
 800e884:	d10c      	bne.n	800e8a0 <HAL_RCC_OscConfig+0x5c8>
 800e886:	4b6f      	ldr	r3, [pc, #444]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e888:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e88a:	4a6e      	ldr	r2, [pc, #440]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e88c:	f043 0304 	orr.w	r3, r3, #4
 800e890:	6713      	str	r3, [r2, #112]	; 0x70
 800e892:	4b6c      	ldr	r3, [pc, #432]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e894:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e896:	4a6b      	ldr	r2, [pc, #428]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e898:	f043 0301 	orr.w	r3, r3, #1
 800e89c:	6713      	str	r3, [r2, #112]	; 0x70
 800e89e:	e00b      	b.n	800e8b8 <HAL_RCC_OscConfig+0x5e0>
 800e8a0:	4b68      	ldr	r3, [pc, #416]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e8a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e8a4:	4a67      	ldr	r2, [pc, #412]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e8a6:	f023 0301 	bic.w	r3, r3, #1
 800e8aa:	6713      	str	r3, [r2, #112]	; 0x70
 800e8ac:	4b65      	ldr	r3, [pc, #404]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e8ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e8b0:	4a64      	ldr	r2, [pc, #400]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e8b2:	f023 0304 	bic.w	r3, r3, #4
 800e8b6:	6713      	str	r3, [r2, #112]	; 0x70
 800e8b8:	687b      	ldr	r3, [r7, #4]
 800e8ba:	689b      	ldr	r3, [r3, #8]
 800e8bc:	2b00      	cmp	r3, #0
 800e8be:	d015      	beq.n	800e8ec <HAL_RCC_OscConfig+0x614>
 800e8c0:	f7f7 fc96 	bl	80061f0 <HAL_GetTick>
 800e8c4:	6278      	str	r0, [r7, #36]	; 0x24
 800e8c6:	e00a      	b.n	800e8de <HAL_RCC_OscConfig+0x606>
 800e8c8:	f7f7 fc92 	bl	80061f0 <HAL_GetTick>
 800e8cc:	4602      	mov	r2, r0
 800e8ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e8d0:	1ad3      	subs	r3, r2, r3
 800e8d2:	f241 3288 	movw	r2, #5000	; 0x1388
 800e8d6:	4293      	cmp	r3, r2
 800e8d8:	d901      	bls.n	800e8de <HAL_RCC_OscConfig+0x606>
 800e8da:	2303      	movs	r3, #3
 800e8dc:	e14e      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e8de:	4b59      	ldr	r3, [pc, #356]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e8e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e8e2:	f003 0302 	and.w	r3, r3, #2
 800e8e6:	2b00      	cmp	r3, #0
 800e8e8:	d0ee      	beq.n	800e8c8 <HAL_RCC_OscConfig+0x5f0>
 800e8ea:	e014      	b.n	800e916 <HAL_RCC_OscConfig+0x63e>
 800e8ec:	f7f7 fc80 	bl	80061f0 <HAL_GetTick>
 800e8f0:	6278      	str	r0, [r7, #36]	; 0x24
 800e8f2:	e00a      	b.n	800e90a <HAL_RCC_OscConfig+0x632>
 800e8f4:	f7f7 fc7c 	bl	80061f0 <HAL_GetTick>
 800e8f8:	4602      	mov	r2, r0
 800e8fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e8fc:	1ad3      	subs	r3, r2, r3
 800e8fe:	f241 3288 	movw	r2, #5000	; 0x1388
 800e902:	4293      	cmp	r3, r2
 800e904:	d901      	bls.n	800e90a <HAL_RCC_OscConfig+0x632>
 800e906:	2303      	movs	r3, #3
 800e908:	e138      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e90a:	4b4e      	ldr	r3, [pc, #312]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e90c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e90e:	f003 0302 	and.w	r3, r3, #2
 800e912:	2b00      	cmp	r3, #0
 800e914:	d1ee      	bne.n	800e8f4 <HAL_RCC_OscConfig+0x61c>
 800e916:	687b      	ldr	r3, [r7, #4]
 800e918:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e91a:	2b00      	cmp	r3, #0
 800e91c:	f000 812d 	beq.w	800eb7a <HAL_RCC_OscConfig+0x8a2>
 800e920:	4b48      	ldr	r3, [pc, #288]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e922:	691b      	ldr	r3, [r3, #16]
 800e924:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800e928:	2b18      	cmp	r3, #24
 800e92a:	f000 80bd 	beq.w	800eaa8 <HAL_RCC_OscConfig+0x7d0>
 800e92e:	687b      	ldr	r3, [r7, #4]
 800e930:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e932:	2b02      	cmp	r3, #2
 800e934:	f040 809e 	bne.w	800ea74 <HAL_RCC_OscConfig+0x79c>
 800e938:	4b42      	ldr	r3, [pc, #264]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e93a:	681b      	ldr	r3, [r3, #0]
 800e93c:	4a41      	ldr	r2, [pc, #260]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e93e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800e942:	6013      	str	r3, [r2, #0]
 800e944:	f7f7 fc54 	bl	80061f0 <HAL_GetTick>
 800e948:	6278      	str	r0, [r7, #36]	; 0x24
 800e94a:	e008      	b.n	800e95e <HAL_RCC_OscConfig+0x686>
 800e94c:	f7f7 fc50 	bl	80061f0 <HAL_GetTick>
 800e950:	4602      	mov	r2, r0
 800e952:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e954:	1ad3      	subs	r3, r2, r3
 800e956:	2b02      	cmp	r3, #2
 800e958:	d901      	bls.n	800e95e <HAL_RCC_OscConfig+0x686>
 800e95a:	2303      	movs	r3, #3
 800e95c:	e10e      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800e95e:	4b39      	ldr	r3, [pc, #228]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e960:	681b      	ldr	r3, [r3, #0]
 800e962:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800e966:	2b00      	cmp	r3, #0
 800e968:	d1f0      	bne.n	800e94c <HAL_RCC_OscConfig+0x674>
 800e96a:	4b36      	ldr	r3, [pc, #216]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e96c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e96e:	4b37      	ldr	r3, [pc, #220]	; (800ea4c <HAL_RCC_OscConfig+0x774>)
 800e970:	4013      	ands	r3, r2
 800e972:	687a      	ldr	r2, [r7, #4]
 800e974:	6a91      	ldr	r1, [r2, #40]	; 0x28
 800e976:	687a      	ldr	r2, [r7, #4]
 800e978:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e97a:	0112      	lsls	r2, r2, #4
 800e97c:	430a      	orrs	r2, r1
 800e97e:	4931      	ldr	r1, [pc, #196]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e980:	4313      	orrs	r3, r2
 800e982:	628b      	str	r3, [r1, #40]	; 0x28
 800e984:	687b      	ldr	r3, [r7, #4]
 800e986:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e988:	3b01      	subs	r3, #1
 800e98a:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800e98e:	687b      	ldr	r3, [r7, #4]
 800e990:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e992:	3b01      	subs	r3, #1
 800e994:	025b      	lsls	r3, r3, #9
 800e996:	b29b      	uxth	r3, r3
 800e998:	431a      	orrs	r2, r3
 800e99a:	687b      	ldr	r3, [r7, #4]
 800e99c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e99e:	3b01      	subs	r3, #1
 800e9a0:	041b      	lsls	r3, r3, #16
 800e9a2:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800e9a6:	431a      	orrs	r2, r3
 800e9a8:	687b      	ldr	r3, [r7, #4]
 800e9aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e9ac:	3b01      	subs	r3, #1
 800e9ae:	061b      	lsls	r3, r3, #24
 800e9b0:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800e9b4:	4923      	ldr	r1, [pc, #140]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e9b6:	4313      	orrs	r3, r2
 800e9b8:	630b      	str	r3, [r1, #48]	; 0x30
 800e9ba:	4b22      	ldr	r3, [pc, #136]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e9bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9be:	4a21      	ldr	r2, [pc, #132]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e9c0:	f023 0301 	bic.w	r3, r3, #1
 800e9c4:	62d3      	str	r3, [r2, #44]	; 0x2c
 800e9c6:	4b1f      	ldr	r3, [pc, #124]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e9c8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e9ca:	4b21      	ldr	r3, [pc, #132]	; (800ea50 <HAL_RCC_OscConfig+0x778>)
 800e9cc:	4013      	ands	r3, r2
 800e9ce:	687a      	ldr	r2, [r7, #4]
 800e9d0:	6c92      	ldr	r2, [r2, #72]	; 0x48
 800e9d2:	00d2      	lsls	r2, r2, #3
 800e9d4:	491b      	ldr	r1, [pc, #108]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e9d6:	4313      	orrs	r3, r2
 800e9d8:	634b      	str	r3, [r1, #52]	; 0x34
 800e9da:	4b1a      	ldr	r3, [pc, #104]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e9dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9de:	f023 020c 	bic.w	r2, r3, #12
 800e9e2:	687b      	ldr	r3, [r7, #4]
 800e9e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e9e6:	4917      	ldr	r1, [pc, #92]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e9e8:	4313      	orrs	r3, r2
 800e9ea:	62cb      	str	r3, [r1, #44]	; 0x2c
 800e9ec:	4b15      	ldr	r3, [pc, #84]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e9ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9f0:	f023 0202 	bic.w	r2, r3, #2
 800e9f4:	687b      	ldr	r3, [r7, #4]
 800e9f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e9f8:	4912      	ldr	r1, [pc, #72]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800e9fa:	4313      	orrs	r3, r2
 800e9fc:	62cb      	str	r3, [r1, #44]	; 0x2c
 800e9fe:	4b11      	ldr	r3, [pc, #68]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea02:	4a10      	ldr	r2, [pc, #64]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea04:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ea08:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ea0a:	4b0e      	ldr	r3, [pc, #56]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea0e:	4a0d      	ldr	r2, [pc, #52]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea10:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800ea14:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ea16:	4b0b      	ldr	r3, [pc, #44]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea1a:	4a0a      	ldr	r2, [pc, #40]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea1c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800ea20:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ea22:	4b08      	ldr	r3, [pc, #32]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea26:	4a07      	ldr	r2, [pc, #28]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea28:	f043 0301 	orr.w	r3, r3, #1
 800ea2c:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ea2e:	4b05      	ldr	r3, [pc, #20]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea30:	681b      	ldr	r3, [r3, #0]
 800ea32:	4a04      	ldr	r2, [pc, #16]	; (800ea44 <HAL_RCC_OscConfig+0x76c>)
 800ea34:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800ea38:	6013      	str	r3, [r2, #0]
 800ea3a:	f7f7 fbd9 	bl	80061f0 <HAL_GetTick>
 800ea3e:	6278      	str	r0, [r7, #36]	; 0x24
 800ea40:	e011      	b.n	800ea66 <HAL_RCC_OscConfig+0x78e>
 800ea42:	bf00      	nop
 800ea44:	58024400 	.word	0x58024400
 800ea48:	58024800 	.word	0x58024800
 800ea4c:	fffffc0c 	.word	0xfffffc0c
 800ea50:	ffff0007 	.word	0xffff0007
 800ea54:	f7f7 fbcc 	bl	80061f0 <HAL_GetTick>
 800ea58:	4602      	mov	r2, r0
 800ea5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ea5c:	1ad3      	subs	r3, r2, r3
 800ea5e:	2b02      	cmp	r3, #2
 800ea60:	d901      	bls.n	800ea66 <HAL_RCC_OscConfig+0x78e>
 800ea62:	2303      	movs	r3, #3
 800ea64:	e08a      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800ea66:	4b47      	ldr	r3, [pc, #284]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800ea68:	681b      	ldr	r3, [r3, #0]
 800ea6a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800ea6e:	2b00      	cmp	r3, #0
 800ea70:	d0f0      	beq.n	800ea54 <HAL_RCC_OscConfig+0x77c>
 800ea72:	e082      	b.n	800eb7a <HAL_RCC_OscConfig+0x8a2>
 800ea74:	4b43      	ldr	r3, [pc, #268]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800ea76:	681b      	ldr	r3, [r3, #0]
 800ea78:	4a42      	ldr	r2, [pc, #264]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800ea7a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800ea7e:	6013      	str	r3, [r2, #0]
 800ea80:	f7f7 fbb6 	bl	80061f0 <HAL_GetTick>
 800ea84:	6278      	str	r0, [r7, #36]	; 0x24
 800ea86:	e008      	b.n	800ea9a <HAL_RCC_OscConfig+0x7c2>
 800ea88:	f7f7 fbb2 	bl	80061f0 <HAL_GetTick>
 800ea8c:	4602      	mov	r2, r0
 800ea8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ea90:	1ad3      	subs	r3, r2, r3
 800ea92:	2b02      	cmp	r3, #2
 800ea94:	d901      	bls.n	800ea9a <HAL_RCC_OscConfig+0x7c2>
 800ea96:	2303      	movs	r3, #3
 800ea98:	e070      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800ea9a:	4b3a      	ldr	r3, [pc, #232]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800ea9c:	681b      	ldr	r3, [r3, #0]
 800ea9e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800eaa2:	2b00      	cmp	r3, #0
 800eaa4:	d1f0      	bne.n	800ea88 <HAL_RCC_OscConfig+0x7b0>
 800eaa6:	e068      	b.n	800eb7a <HAL_RCC_OscConfig+0x8a2>
 800eaa8:	4b36      	ldr	r3, [pc, #216]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800eaaa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800eaac:	613b      	str	r3, [r7, #16]
 800eaae:	4b35      	ldr	r3, [pc, #212]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800eab0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eab2:	60fb      	str	r3, [r7, #12]
 800eab4:	687b      	ldr	r3, [r7, #4]
 800eab6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eab8:	2b01      	cmp	r3, #1
 800eaba:	d031      	beq.n	800eb20 <HAL_RCC_OscConfig+0x848>
 800eabc:	693b      	ldr	r3, [r7, #16]
 800eabe:	f003 0203 	and.w	r2, r3, #3
 800eac2:	687b      	ldr	r3, [r7, #4]
 800eac4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800eac6:	429a      	cmp	r2, r3
 800eac8:	d12a      	bne.n	800eb20 <HAL_RCC_OscConfig+0x848>
 800eaca:	693b      	ldr	r3, [r7, #16]
 800eacc:	091b      	lsrs	r3, r3, #4
 800eace:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800ead2:	687b      	ldr	r3, [r7, #4]
 800ead4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ead6:	429a      	cmp	r2, r3
 800ead8:	d122      	bne.n	800eb20 <HAL_RCC_OscConfig+0x848>
 800eada:	68fb      	ldr	r3, [r7, #12]
 800eadc:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800eae0:	687b      	ldr	r3, [r7, #4]
 800eae2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eae4:	3b01      	subs	r3, #1
 800eae6:	429a      	cmp	r2, r3
 800eae8:	d11a      	bne.n	800eb20 <HAL_RCC_OscConfig+0x848>
 800eaea:	68fb      	ldr	r3, [r7, #12]
 800eaec:	0a5b      	lsrs	r3, r3, #9
 800eaee:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800eaf2:	687b      	ldr	r3, [r7, #4]
 800eaf4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eaf6:	3b01      	subs	r3, #1
 800eaf8:	429a      	cmp	r2, r3
 800eafa:	d111      	bne.n	800eb20 <HAL_RCC_OscConfig+0x848>
 800eafc:	68fb      	ldr	r3, [r7, #12]
 800eafe:	0c1b      	lsrs	r3, r3, #16
 800eb00:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800eb04:	687b      	ldr	r3, [r7, #4]
 800eb06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800eb08:	3b01      	subs	r3, #1
 800eb0a:	429a      	cmp	r2, r3
 800eb0c:	d108      	bne.n	800eb20 <HAL_RCC_OscConfig+0x848>
 800eb0e:	68fb      	ldr	r3, [r7, #12]
 800eb10:	0e1b      	lsrs	r3, r3, #24
 800eb12:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800eb16:	687b      	ldr	r3, [r7, #4]
 800eb18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800eb1a:	3b01      	subs	r3, #1
 800eb1c:	429a      	cmp	r2, r3
 800eb1e:	d001      	beq.n	800eb24 <HAL_RCC_OscConfig+0x84c>
 800eb20:	2301      	movs	r3, #1
 800eb22:	e02b      	b.n	800eb7c <HAL_RCC_OscConfig+0x8a4>
 800eb24:	4b17      	ldr	r3, [pc, #92]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800eb26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eb28:	08db      	lsrs	r3, r3, #3
 800eb2a:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800eb2e:	613b      	str	r3, [r7, #16]
 800eb30:	687b      	ldr	r3, [r7, #4]
 800eb32:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eb34:	693a      	ldr	r2, [r7, #16]
 800eb36:	429a      	cmp	r2, r3
 800eb38:	d01f      	beq.n	800eb7a <HAL_RCC_OscConfig+0x8a2>
 800eb3a:	4b12      	ldr	r3, [pc, #72]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800eb3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb3e:	4a11      	ldr	r2, [pc, #68]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800eb40:	f023 0301 	bic.w	r3, r3, #1
 800eb44:	62d3      	str	r3, [r2, #44]	; 0x2c
 800eb46:	f7f7 fb53 	bl	80061f0 <HAL_GetTick>
 800eb4a:	6278      	str	r0, [r7, #36]	; 0x24
 800eb4c:	bf00      	nop
 800eb4e:	f7f7 fb4f 	bl	80061f0 <HAL_GetTick>
 800eb52:	4602      	mov	r2, r0
 800eb54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800eb56:	4293      	cmp	r3, r2
 800eb58:	d0f9      	beq.n	800eb4e <HAL_RCC_OscConfig+0x876>
 800eb5a:	4b0a      	ldr	r3, [pc, #40]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800eb5c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800eb5e:	4b0a      	ldr	r3, [pc, #40]	; (800eb88 <HAL_RCC_OscConfig+0x8b0>)
 800eb60:	4013      	ands	r3, r2
 800eb62:	687a      	ldr	r2, [r7, #4]
 800eb64:	6c92      	ldr	r2, [r2, #72]	; 0x48
 800eb66:	00d2      	lsls	r2, r2, #3
 800eb68:	4906      	ldr	r1, [pc, #24]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800eb6a:	4313      	orrs	r3, r2
 800eb6c:	634b      	str	r3, [r1, #52]	; 0x34
 800eb6e:	4b05      	ldr	r3, [pc, #20]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800eb70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb72:	4a04      	ldr	r2, [pc, #16]	; (800eb84 <HAL_RCC_OscConfig+0x8ac>)
 800eb74:	f043 0301 	orr.w	r3, r3, #1
 800eb78:	62d3      	str	r3, [r2, #44]	; 0x2c
 800eb7a:	2300      	movs	r3, #0
 800eb7c:	4618      	mov	r0, r3
 800eb7e:	3730      	adds	r7, #48	; 0x30
 800eb80:	46bd      	mov	sp, r7
 800eb82:	bd80      	pop	{r7, pc}
 800eb84:	58024400 	.word	0x58024400
 800eb88:	ffff0007 	.word	0xffff0007

0800eb8c <HAL_RCC_ClockConfig>:
 800eb8c:	b580      	push	{r7, lr}
 800eb8e:	b086      	sub	sp, #24
 800eb90:	af00      	add	r7, sp, #0
 800eb92:	6078      	str	r0, [r7, #4]
 800eb94:	6039      	str	r1, [r7, #0]
 800eb96:	687b      	ldr	r3, [r7, #4]
 800eb98:	2b00      	cmp	r3, #0
 800eb9a:	d101      	bne.n	800eba0 <HAL_RCC_ClockConfig+0x14>
 800eb9c:	2301      	movs	r3, #1
 800eb9e:	e19c      	b.n	800eeda <HAL_RCC_ClockConfig+0x34e>
 800eba0:	4b8a      	ldr	r3, [pc, #552]	; (800edcc <HAL_RCC_ClockConfig+0x240>)
 800eba2:	681b      	ldr	r3, [r3, #0]
 800eba4:	f003 030f 	and.w	r3, r3, #15
 800eba8:	683a      	ldr	r2, [r7, #0]
 800ebaa:	429a      	cmp	r2, r3
 800ebac:	d910      	bls.n	800ebd0 <HAL_RCC_ClockConfig+0x44>
 800ebae:	4b87      	ldr	r3, [pc, #540]	; (800edcc <HAL_RCC_ClockConfig+0x240>)
 800ebb0:	681b      	ldr	r3, [r3, #0]
 800ebb2:	f023 020f 	bic.w	r2, r3, #15
 800ebb6:	4985      	ldr	r1, [pc, #532]	; (800edcc <HAL_RCC_ClockConfig+0x240>)
 800ebb8:	683b      	ldr	r3, [r7, #0]
 800ebba:	4313      	orrs	r3, r2
 800ebbc:	600b      	str	r3, [r1, #0]
 800ebbe:	4b83      	ldr	r3, [pc, #524]	; (800edcc <HAL_RCC_ClockConfig+0x240>)
 800ebc0:	681b      	ldr	r3, [r3, #0]
 800ebc2:	f003 030f 	and.w	r3, r3, #15
 800ebc6:	683a      	ldr	r2, [r7, #0]
 800ebc8:	429a      	cmp	r2, r3
 800ebca:	d001      	beq.n	800ebd0 <HAL_RCC_ClockConfig+0x44>
 800ebcc:	2301      	movs	r3, #1
 800ebce:	e184      	b.n	800eeda <HAL_RCC_ClockConfig+0x34e>
 800ebd0:	687b      	ldr	r3, [r7, #4]
 800ebd2:	681b      	ldr	r3, [r3, #0]
 800ebd4:	f003 0304 	and.w	r3, r3, #4
 800ebd8:	2b00      	cmp	r3, #0
 800ebda:	d010      	beq.n	800ebfe <HAL_RCC_ClockConfig+0x72>
 800ebdc:	687b      	ldr	r3, [r7, #4]
 800ebde:	691a      	ldr	r2, [r3, #16]
 800ebe0:	4b7b      	ldr	r3, [pc, #492]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ebe2:	699b      	ldr	r3, [r3, #24]
 800ebe4:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800ebe8:	429a      	cmp	r2, r3
 800ebea:	d908      	bls.n	800ebfe <HAL_RCC_ClockConfig+0x72>
 800ebec:	4b78      	ldr	r3, [pc, #480]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ebee:	699b      	ldr	r3, [r3, #24]
 800ebf0:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800ebf4:	687b      	ldr	r3, [r7, #4]
 800ebf6:	691b      	ldr	r3, [r3, #16]
 800ebf8:	4975      	ldr	r1, [pc, #468]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ebfa:	4313      	orrs	r3, r2
 800ebfc:	618b      	str	r3, [r1, #24]
 800ebfe:	687b      	ldr	r3, [r7, #4]
 800ec00:	681b      	ldr	r3, [r3, #0]
 800ec02:	f003 0308 	and.w	r3, r3, #8
 800ec06:	2b00      	cmp	r3, #0
 800ec08:	d010      	beq.n	800ec2c <HAL_RCC_ClockConfig+0xa0>
 800ec0a:	687b      	ldr	r3, [r7, #4]
 800ec0c:	695a      	ldr	r2, [r3, #20]
 800ec0e:	4b70      	ldr	r3, [pc, #448]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec10:	69db      	ldr	r3, [r3, #28]
 800ec12:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800ec16:	429a      	cmp	r2, r3
 800ec18:	d908      	bls.n	800ec2c <HAL_RCC_ClockConfig+0xa0>
 800ec1a:	4b6d      	ldr	r3, [pc, #436]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec1c:	69db      	ldr	r3, [r3, #28]
 800ec1e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800ec22:	687b      	ldr	r3, [r7, #4]
 800ec24:	695b      	ldr	r3, [r3, #20]
 800ec26:	496a      	ldr	r1, [pc, #424]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec28:	4313      	orrs	r3, r2
 800ec2a:	61cb      	str	r3, [r1, #28]
 800ec2c:	687b      	ldr	r3, [r7, #4]
 800ec2e:	681b      	ldr	r3, [r3, #0]
 800ec30:	f003 0310 	and.w	r3, r3, #16
 800ec34:	2b00      	cmp	r3, #0
 800ec36:	d010      	beq.n	800ec5a <HAL_RCC_ClockConfig+0xce>
 800ec38:	687b      	ldr	r3, [r7, #4]
 800ec3a:	699a      	ldr	r2, [r3, #24]
 800ec3c:	4b64      	ldr	r3, [pc, #400]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec3e:	69db      	ldr	r3, [r3, #28]
 800ec40:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800ec44:	429a      	cmp	r2, r3
 800ec46:	d908      	bls.n	800ec5a <HAL_RCC_ClockConfig+0xce>
 800ec48:	4b61      	ldr	r3, [pc, #388]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec4a:	69db      	ldr	r3, [r3, #28]
 800ec4c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800ec50:	687b      	ldr	r3, [r7, #4]
 800ec52:	699b      	ldr	r3, [r3, #24]
 800ec54:	495e      	ldr	r1, [pc, #376]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec56:	4313      	orrs	r3, r2
 800ec58:	61cb      	str	r3, [r1, #28]
 800ec5a:	687b      	ldr	r3, [r7, #4]
 800ec5c:	681b      	ldr	r3, [r3, #0]
 800ec5e:	f003 0320 	and.w	r3, r3, #32
 800ec62:	2b00      	cmp	r3, #0
 800ec64:	d010      	beq.n	800ec88 <HAL_RCC_ClockConfig+0xfc>
 800ec66:	687b      	ldr	r3, [r7, #4]
 800ec68:	69da      	ldr	r2, [r3, #28]
 800ec6a:	4b59      	ldr	r3, [pc, #356]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec6c:	6a1b      	ldr	r3, [r3, #32]
 800ec6e:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800ec72:	429a      	cmp	r2, r3
 800ec74:	d908      	bls.n	800ec88 <HAL_RCC_ClockConfig+0xfc>
 800ec76:	4b56      	ldr	r3, [pc, #344]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec78:	6a1b      	ldr	r3, [r3, #32]
 800ec7a:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800ec7e:	687b      	ldr	r3, [r7, #4]
 800ec80:	69db      	ldr	r3, [r3, #28]
 800ec82:	4953      	ldr	r1, [pc, #332]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec84:	4313      	orrs	r3, r2
 800ec86:	620b      	str	r3, [r1, #32]
 800ec88:	687b      	ldr	r3, [r7, #4]
 800ec8a:	681b      	ldr	r3, [r3, #0]
 800ec8c:	f003 0302 	and.w	r3, r3, #2
 800ec90:	2b00      	cmp	r3, #0
 800ec92:	d010      	beq.n	800ecb6 <HAL_RCC_ClockConfig+0x12a>
 800ec94:	687b      	ldr	r3, [r7, #4]
 800ec96:	68da      	ldr	r2, [r3, #12]
 800ec98:	4b4d      	ldr	r3, [pc, #308]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ec9a:	699b      	ldr	r3, [r3, #24]
 800ec9c:	f003 030f 	and.w	r3, r3, #15
 800eca0:	429a      	cmp	r2, r3
 800eca2:	d908      	bls.n	800ecb6 <HAL_RCC_ClockConfig+0x12a>
 800eca4:	4b4a      	ldr	r3, [pc, #296]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800eca6:	699b      	ldr	r3, [r3, #24]
 800eca8:	f023 020f 	bic.w	r2, r3, #15
 800ecac:	687b      	ldr	r3, [r7, #4]
 800ecae:	68db      	ldr	r3, [r3, #12]
 800ecb0:	4947      	ldr	r1, [pc, #284]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ecb2:	4313      	orrs	r3, r2
 800ecb4:	618b      	str	r3, [r1, #24]
 800ecb6:	687b      	ldr	r3, [r7, #4]
 800ecb8:	681b      	ldr	r3, [r3, #0]
 800ecba:	f003 0301 	and.w	r3, r3, #1
 800ecbe:	2b00      	cmp	r3, #0
 800ecc0:	d055      	beq.n	800ed6e <HAL_RCC_ClockConfig+0x1e2>
 800ecc2:	4b43      	ldr	r3, [pc, #268]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ecc4:	699b      	ldr	r3, [r3, #24]
 800ecc6:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 800ecca:	687b      	ldr	r3, [r7, #4]
 800eccc:	689b      	ldr	r3, [r3, #8]
 800ecce:	4940      	ldr	r1, [pc, #256]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ecd0:	4313      	orrs	r3, r2
 800ecd2:	618b      	str	r3, [r1, #24]
 800ecd4:	687b      	ldr	r3, [r7, #4]
 800ecd6:	685b      	ldr	r3, [r3, #4]
 800ecd8:	2b02      	cmp	r3, #2
 800ecda:	d107      	bne.n	800ecec <HAL_RCC_ClockConfig+0x160>
 800ecdc:	4b3c      	ldr	r3, [pc, #240]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ecde:	681b      	ldr	r3, [r3, #0]
 800ece0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800ece4:	2b00      	cmp	r3, #0
 800ece6:	d121      	bne.n	800ed2c <HAL_RCC_ClockConfig+0x1a0>
 800ece8:	2301      	movs	r3, #1
 800ecea:	e0f6      	b.n	800eeda <HAL_RCC_ClockConfig+0x34e>
 800ecec:	687b      	ldr	r3, [r7, #4]
 800ecee:	685b      	ldr	r3, [r3, #4]
 800ecf0:	2b03      	cmp	r3, #3
 800ecf2:	d107      	bne.n	800ed04 <HAL_RCC_ClockConfig+0x178>
 800ecf4:	4b36      	ldr	r3, [pc, #216]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ecf6:	681b      	ldr	r3, [r3, #0]
 800ecf8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800ecfc:	2b00      	cmp	r3, #0
 800ecfe:	d115      	bne.n	800ed2c <HAL_RCC_ClockConfig+0x1a0>
 800ed00:	2301      	movs	r3, #1
 800ed02:	e0ea      	b.n	800eeda <HAL_RCC_ClockConfig+0x34e>
 800ed04:	687b      	ldr	r3, [r7, #4]
 800ed06:	685b      	ldr	r3, [r3, #4]
 800ed08:	2b01      	cmp	r3, #1
 800ed0a:	d107      	bne.n	800ed1c <HAL_RCC_ClockConfig+0x190>
 800ed0c:	4b30      	ldr	r3, [pc, #192]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ed0e:	681b      	ldr	r3, [r3, #0]
 800ed10:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ed14:	2b00      	cmp	r3, #0
 800ed16:	d109      	bne.n	800ed2c <HAL_RCC_ClockConfig+0x1a0>
 800ed18:	2301      	movs	r3, #1
 800ed1a:	e0de      	b.n	800eeda <HAL_RCC_ClockConfig+0x34e>
 800ed1c:	4b2c      	ldr	r3, [pc, #176]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ed1e:	681b      	ldr	r3, [r3, #0]
 800ed20:	f003 0304 	and.w	r3, r3, #4
 800ed24:	2b00      	cmp	r3, #0
 800ed26:	d101      	bne.n	800ed2c <HAL_RCC_ClockConfig+0x1a0>
 800ed28:	2301      	movs	r3, #1
 800ed2a:	e0d6      	b.n	800eeda <HAL_RCC_ClockConfig+0x34e>
 800ed2c:	4b28      	ldr	r3, [pc, #160]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ed2e:	691b      	ldr	r3, [r3, #16]
 800ed30:	f023 0207 	bic.w	r2, r3, #7
 800ed34:	687b      	ldr	r3, [r7, #4]
 800ed36:	685b      	ldr	r3, [r3, #4]
 800ed38:	4925      	ldr	r1, [pc, #148]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ed3a:	4313      	orrs	r3, r2
 800ed3c:	610b      	str	r3, [r1, #16]
 800ed3e:	f7f7 fa57 	bl	80061f0 <HAL_GetTick>
 800ed42:	6178      	str	r0, [r7, #20]
 800ed44:	e00a      	b.n	800ed5c <HAL_RCC_ClockConfig+0x1d0>
 800ed46:	f7f7 fa53 	bl	80061f0 <HAL_GetTick>
 800ed4a:	4602      	mov	r2, r0
 800ed4c:	697b      	ldr	r3, [r7, #20]
 800ed4e:	1ad3      	subs	r3, r2, r3
 800ed50:	f241 3288 	movw	r2, #5000	; 0x1388
 800ed54:	4293      	cmp	r3, r2
 800ed56:	d901      	bls.n	800ed5c <HAL_RCC_ClockConfig+0x1d0>
 800ed58:	2303      	movs	r3, #3
 800ed5a:	e0be      	b.n	800eeda <HAL_RCC_ClockConfig+0x34e>
 800ed5c:	4b1c      	ldr	r3, [pc, #112]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ed5e:	691b      	ldr	r3, [r3, #16]
 800ed60:	f003 0238 	and.w	r2, r3, #56	; 0x38
 800ed64:	687b      	ldr	r3, [r7, #4]
 800ed66:	685b      	ldr	r3, [r3, #4]
 800ed68:	00db      	lsls	r3, r3, #3
 800ed6a:	429a      	cmp	r2, r3
 800ed6c:	d1eb      	bne.n	800ed46 <HAL_RCC_ClockConfig+0x1ba>
 800ed6e:	687b      	ldr	r3, [r7, #4]
 800ed70:	681b      	ldr	r3, [r3, #0]
 800ed72:	f003 0302 	and.w	r3, r3, #2
 800ed76:	2b00      	cmp	r3, #0
 800ed78:	d010      	beq.n	800ed9c <HAL_RCC_ClockConfig+0x210>
 800ed7a:	687b      	ldr	r3, [r7, #4]
 800ed7c:	68da      	ldr	r2, [r3, #12]
 800ed7e:	4b14      	ldr	r3, [pc, #80]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ed80:	699b      	ldr	r3, [r3, #24]
 800ed82:	f003 030f 	and.w	r3, r3, #15
 800ed86:	429a      	cmp	r2, r3
 800ed88:	d208      	bcs.n	800ed9c <HAL_RCC_ClockConfig+0x210>
 800ed8a:	4b11      	ldr	r3, [pc, #68]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ed8c:	699b      	ldr	r3, [r3, #24]
 800ed8e:	f023 020f 	bic.w	r2, r3, #15
 800ed92:	687b      	ldr	r3, [r7, #4]
 800ed94:	68db      	ldr	r3, [r3, #12]
 800ed96:	490e      	ldr	r1, [pc, #56]	; (800edd0 <HAL_RCC_ClockConfig+0x244>)
 800ed98:	4313      	orrs	r3, r2
 800ed9a:	618b      	str	r3, [r1, #24]
 800ed9c:	4b0b      	ldr	r3, [pc, #44]	; (800edcc <HAL_RCC_ClockConfig+0x240>)
 800ed9e:	681b      	ldr	r3, [r3, #0]
 800eda0:	f003 030f 	and.w	r3, r3, #15
 800eda4:	683a      	ldr	r2, [r7, #0]
 800eda6:	429a      	cmp	r2, r3
 800eda8:	d214      	bcs.n	800edd4 <HAL_RCC_ClockConfig+0x248>
 800edaa:	4b08      	ldr	r3, [pc, #32]	; (800edcc <HAL_RCC_ClockConfig+0x240>)
 800edac:	681b      	ldr	r3, [r3, #0]
 800edae:	f023 020f 	bic.w	r2, r3, #15
 800edb2:	4906      	ldr	r1, [pc, #24]	; (800edcc <HAL_RCC_ClockConfig+0x240>)
 800edb4:	683b      	ldr	r3, [r7, #0]
 800edb6:	4313      	orrs	r3, r2
 800edb8:	600b      	str	r3, [r1, #0]
 800edba:	4b04      	ldr	r3, [pc, #16]	; (800edcc <HAL_RCC_ClockConfig+0x240>)
 800edbc:	681b      	ldr	r3, [r3, #0]
 800edbe:	f003 030f 	and.w	r3, r3, #15
 800edc2:	683a      	ldr	r2, [r7, #0]
 800edc4:	429a      	cmp	r2, r3
 800edc6:	d005      	beq.n	800edd4 <HAL_RCC_ClockConfig+0x248>
 800edc8:	2301      	movs	r3, #1
 800edca:	e086      	b.n	800eeda <HAL_RCC_ClockConfig+0x34e>
 800edcc:	52002000 	.word	0x52002000
 800edd0:	58024400 	.word	0x58024400
 800edd4:	687b      	ldr	r3, [r7, #4]
 800edd6:	681b      	ldr	r3, [r3, #0]
 800edd8:	f003 0304 	and.w	r3, r3, #4
 800eddc:	2b00      	cmp	r3, #0
 800edde:	d010      	beq.n	800ee02 <HAL_RCC_ClockConfig+0x276>
 800ede0:	687b      	ldr	r3, [r7, #4]
 800ede2:	691a      	ldr	r2, [r3, #16]
 800ede4:	4b3f      	ldr	r3, [pc, #252]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ede6:	699b      	ldr	r3, [r3, #24]
 800ede8:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800edec:	429a      	cmp	r2, r3
 800edee:	d208      	bcs.n	800ee02 <HAL_RCC_ClockConfig+0x276>
 800edf0:	4b3c      	ldr	r3, [pc, #240]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800edf2:	699b      	ldr	r3, [r3, #24]
 800edf4:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800edf8:	687b      	ldr	r3, [r7, #4]
 800edfa:	691b      	ldr	r3, [r3, #16]
 800edfc:	4939      	ldr	r1, [pc, #228]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800edfe:	4313      	orrs	r3, r2
 800ee00:	618b      	str	r3, [r1, #24]
 800ee02:	687b      	ldr	r3, [r7, #4]
 800ee04:	681b      	ldr	r3, [r3, #0]
 800ee06:	f003 0308 	and.w	r3, r3, #8
 800ee0a:	2b00      	cmp	r3, #0
 800ee0c:	d010      	beq.n	800ee30 <HAL_RCC_ClockConfig+0x2a4>
 800ee0e:	687b      	ldr	r3, [r7, #4]
 800ee10:	695a      	ldr	r2, [r3, #20]
 800ee12:	4b34      	ldr	r3, [pc, #208]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee14:	69db      	ldr	r3, [r3, #28]
 800ee16:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800ee1a:	429a      	cmp	r2, r3
 800ee1c:	d208      	bcs.n	800ee30 <HAL_RCC_ClockConfig+0x2a4>
 800ee1e:	4b31      	ldr	r3, [pc, #196]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee20:	69db      	ldr	r3, [r3, #28]
 800ee22:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800ee26:	687b      	ldr	r3, [r7, #4]
 800ee28:	695b      	ldr	r3, [r3, #20]
 800ee2a:	492e      	ldr	r1, [pc, #184]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee2c:	4313      	orrs	r3, r2
 800ee2e:	61cb      	str	r3, [r1, #28]
 800ee30:	687b      	ldr	r3, [r7, #4]
 800ee32:	681b      	ldr	r3, [r3, #0]
 800ee34:	f003 0310 	and.w	r3, r3, #16
 800ee38:	2b00      	cmp	r3, #0
 800ee3a:	d010      	beq.n	800ee5e <HAL_RCC_ClockConfig+0x2d2>
 800ee3c:	687b      	ldr	r3, [r7, #4]
 800ee3e:	699a      	ldr	r2, [r3, #24]
 800ee40:	4b28      	ldr	r3, [pc, #160]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee42:	69db      	ldr	r3, [r3, #28]
 800ee44:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800ee48:	429a      	cmp	r2, r3
 800ee4a:	d208      	bcs.n	800ee5e <HAL_RCC_ClockConfig+0x2d2>
 800ee4c:	4b25      	ldr	r3, [pc, #148]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee4e:	69db      	ldr	r3, [r3, #28]
 800ee50:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800ee54:	687b      	ldr	r3, [r7, #4]
 800ee56:	699b      	ldr	r3, [r3, #24]
 800ee58:	4922      	ldr	r1, [pc, #136]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee5a:	4313      	orrs	r3, r2
 800ee5c:	61cb      	str	r3, [r1, #28]
 800ee5e:	687b      	ldr	r3, [r7, #4]
 800ee60:	681b      	ldr	r3, [r3, #0]
 800ee62:	f003 0320 	and.w	r3, r3, #32
 800ee66:	2b00      	cmp	r3, #0
 800ee68:	d010      	beq.n	800ee8c <HAL_RCC_ClockConfig+0x300>
 800ee6a:	687b      	ldr	r3, [r7, #4]
 800ee6c:	69da      	ldr	r2, [r3, #28]
 800ee6e:	4b1d      	ldr	r3, [pc, #116]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee70:	6a1b      	ldr	r3, [r3, #32]
 800ee72:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800ee76:	429a      	cmp	r2, r3
 800ee78:	d208      	bcs.n	800ee8c <HAL_RCC_ClockConfig+0x300>
 800ee7a:	4b1a      	ldr	r3, [pc, #104]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee7c:	6a1b      	ldr	r3, [r3, #32]
 800ee7e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800ee82:	687b      	ldr	r3, [r7, #4]
 800ee84:	69db      	ldr	r3, [r3, #28]
 800ee86:	4917      	ldr	r1, [pc, #92]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee88:	4313      	orrs	r3, r2
 800ee8a:	620b      	str	r3, [r1, #32]
 800ee8c:	f000 f834 	bl	800eef8 <HAL_RCC_GetSysClockFreq>
 800ee90:	4602      	mov	r2, r0
 800ee92:	4b14      	ldr	r3, [pc, #80]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800ee94:	699b      	ldr	r3, [r3, #24]
 800ee96:	0a1b      	lsrs	r3, r3, #8
 800ee98:	f003 030f 	and.w	r3, r3, #15
 800ee9c:	4912      	ldr	r1, [pc, #72]	; (800eee8 <HAL_RCC_ClockConfig+0x35c>)
 800ee9e:	5ccb      	ldrb	r3, [r1, r3]
 800eea0:	f003 031f 	and.w	r3, r3, #31
 800eea4:	fa22 f303 	lsr.w	r3, r2, r3
 800eea8:	613b      	str	r3, [r7, #16]
 800eeaa:	4b0e      	ldr	r3, [pc, #56]	; (800eee4 <HAL_RCC_ClockConfig+0x358>)
 800eeac:	699b      	ldr	r3, [r3, #24]
 800eeae:	f003 030f 	and.w	r3, r3, #15
 800eeb2:	4a0d      	ldr	r2, [pc, #52]	; (800eee8 <HAL_RCC_ClockConfig+0x35c>)
 800eeb4:	5cd3      	ldrb	r3, [r2, r3]
 800eeb6:	f003 031f 	and.w	r3, r3, #31
 800eeba:	693a      	ldr	r2, [r7, #16]
 800eebc:	fa22 f303 	lsr.w	r3, r2, r3
 800eec0:	4a0a      	ldr	r2, [pc, #40]	; (800eeec <HAL_RCC_ClockConfig+0x360>)
 800eec2:	6013      	str	r3, [r2, #0]
 800eec4:	4a0a      	ldr	r2, [pc, #40]	; (800eef0 <HAL_RCC_ClockConfig+0x364>)
 800eec6:	693b      	ldr	r3, [r7, #16]
 800eec8:	6013      	str	r3, [r2, #0]
 800eeca:	4b0a      	ldr	r3, [pc, #40]	; (800eef4 <HAL_RCC_ClockConfig+0x368>)
 800eecc:	681b      	ldr	r3, [r3, #0]
 800eece:	4618      	mov	r0, r3
 800eed0:	f7f5 fc84 	bl	80047dc <HAL_InitTick>
 800eed4:	4603      	mov	r3, r0
 800eed6:	73fb      	strb	r3, [r7, #15]
 800eed8:	7bfb      	ldrb	r3, [r7, #15]
 800eeda:	4618      	mov	r0, r3
 800eedc:	3718      	adds	r7, #24
 800eede:	46bd      	mov	sp, r7
 800eee0:	bd80      	pop	{r7, pc}
 800eee2:	bf00      	nop
 800eee4:	58024400 	.word	0x58024400
 800eee8:	0801b854 	.word	0x0801b854
 800eeec:	240000c8 	.word	0x240000c8
 800eef0:	240000c4 	.word	0x240000c4
 800eef4:	240000cc 	.word	0x240000cc

0800eef8 <HAL_RCC_GetSysClockFreq>:
 800eef8:	b480      	push	{r7}
 800eefa:	b089      	sub	sp, #36	; 0x24
 800eefc:	af00      	add	r7, sp, #0
 800eefe:	4bb3      	ldr	r3, [pc, #716]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800ef00:	691b      	ldr	r3, [r3, #16]
 800ef02:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800ef06:	2b18      	cmp	r3, #24
 800ef08:	f200 8155 	bhi.w	800f1b6 <HAL_RCC_GetSysClockFreq+0x2be>
 800ef0c:	a201      	add	r2, pc, #4	; (adr r2, 800ef14 <HAL_RCC_GetSysClockFreq+0x1c>)
 800ef0e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ef12:	bf00      	nop
 800ef14:	0800ef79 	.word	0x0800ef79
 800ef18:	0800f1b7 	.word	0x0800f1b7
 800ef1c:	0800f1b7 	.word	0x0800f1b7
 800ef20:	0800f1b7 	.word	0x0800f1b7
 800ef24:	0800f1b7 	.word	0x0800f1b7
 800ef28:	0800f1b7 	.word	0x0800f1b7
 800ef2c:	0800f1b7 	.word	0x0800f1b7
 800ef30:	0800f1b7 	.word	0x0800f1b7
 800ef34:	0800ef9f 	.word	0x0800ef9f
 800ef38:	0800f1b7 	.word	0x0800f1b7
 800ef3c:	0800f1b7 	.word	0x0800f1b7
 800ef40:	0800f1b7 	.word	0x0800f1b7
 800ef44:	0800f1b7 	.word	0x0800f1b7
 800ef48:	0800f1b7 	.word	0x0800f1b7
 800ef4c:	0800f1b7 	.word	0x0800f1b7
 800ef50:	0800f1b7 	.word	0x0800f1b7
 800ef54:	0800efa5 	.word	0x0800efa5
 800ef58:	0800f1b7 	.word	0x0800f1b7
 800ef5c:	0800f1b7 	.word	0x0800f1b7
 800ef60:	0800f1b7 	.word	0x0800f1b7
 800ef64:	0800f1b7 	.word	0x0800f1b7
 800ef68:	0800f1b7 	.word	0x0800f1b7
 800ef6c:	0800f1b7 	.word	0x0800f1b7
 800ef70:	0800f1b7 	.word	0x0800f1b7
 800ef74:	0800efab 	.word	0x0800efab
 800ef78:	4b94      	ldr	r3, [pc, #592]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800ef7a:	681b      	ldr	r3, [r3, #0]
 800ef7c:	f003 0320 	and.w	r3, r3, #32
 800ef80:	2b00      	cmp	r3, #0
 800ef82:	d009      	beq.n	800ef98 <HAL_RCC_GetSysClockFreq+0xa0>
 800ef84:	4b91      	ldr	r3, [pc, #580]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800ef86:	681b      	ldr	r3, [r3, #0]
 800ef88:	08db      	lsrs	r3, r3, #3
 800ef8a:	f003 0303 	and.w	r3, r3, #3
 800ef8e:	4a90      	ldr	r2, [pc, #576]	; (800f1d0 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800ef90:	fa22 f303 	lsr.w	r3, r2, r3
 800ef94:	61bb      	str	r3, [r7, #24]
 800ef96:	e111      	b.n	800f1bc <HAL_RCC_GetSysClockFreq+0x2c4>
 800ef98:	4b8d      	ldr	r3, [pc, #564]	; (800f1d0 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800ef9a:	61bb      	str	r3, [r7, #24]
 800ef9c:	e10e      	b.n	800f1bc <HAL_RCC_GetSysClockFreq+0x2c4>
 800ef9e:	4b8d      	ldr	r3, [pc, #564]	; (800f1d4 <HAL_RCC_GetSysClockFreq+0x2dc>)
 800efa0:	61bb      	str	r3, [r7, #24]
 800efa2:	e10b      	b.n	800f1bc <HAL_RCC_GetSysClockFreq+0x2c4>
 800efa4:	4b8c      	ldr	r3, [pc, #560]	; (800f1d8 <HAL_RCC_GetSysClockFreq+0x2e0>)
 800efa6:	61bb      	str	r3, [r7, #24]
 800efa8:	e108      	b.n	800f1bc <HAL_RCC_GetSysClockFreq+0x2c4>
 800efaa:	4b88      	ldr	r3, [pc, #544]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800efac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800efae:	f003 0303 	and.w	r3, r3, #3
 800efb2:	617b      	str	r3, [r7, #20]
 800efb4:	4b85      	ldr	r3, [pc, #532]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800efb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800efb8:	091b      	lsrs	r3, r3, #4
 800efba:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800efbe:	613b      	str	r3, [r7, #16]
 800efc0:	4b82      	ldr	r3, [pc, #520]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800efc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800efc4:	f003 0301 	and.w	r3, r3, #1
 800efc8:	60fb      	str	r3, [r7, #12]
 800efca:	4b80      	ldr	r3, [pc, #512]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800efcc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800efce:	08db      	lsrs	r3, r3, #3
 800efd0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800efd4:	68fa      	ldr	r2, [r7, #12]
 800efd6:	fb02 f303 	mul.w	r3, r2, r3
 800efda:	ee07 3a90 	vmov	s15, r3
 800efde:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800efe2:	edc7 7a02 	vstr	s15, [r7, #8]
 800efe6:	693b      	ldr	r3, [r7, #16]
 800efe8:	2b00      	cmp	r3, #0
 800efea:	f000 80e1 	beq.w	800f1b0 <HAL_RCC_GetSysClockFreq+0x2b8>
 800efee:	697b      	ldr	r3, [r7, #20]
 800eff0:	2b02      	cmp	r3, #2
 800eff2:	f000 8083 	beq.w	800f0fc <HAL_RCC_GetSysClockFreq+0x204>
 800eff6:	697b      	ldr	r3, [r7, #20]
 800eff8:	2b02      	cmp	r3, #2
 800effa:	f200 80a1 	bhi.w	800f140 <HAL_RCC_GetSysClockFreq+0x248>
 800effe:	697b      	ldr	r3, [r7, #20]
 800f000:	2b00      	cmp	r3, #0
 800f002:	d003      	beq.n	800f00c <HAL_RCC_GetSysClockFreq+0x114>
 800f004:	697b      	ldr	r3, [r7, #20]
 800f006:	2b01      	cmp	r3, #1
 800f008:	d056      	beq.n	800f0b8 <HAL_RCC_GetSysClockFreq+0x1c0>
 800f00a:	e099      	b.n	800f140 <HAL_RCC_GetSysClockFreq+0x248>
 800f00c:	4b6f      	ldr	r3, [pc, #444]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800f00e:	681b      	ldr	r3, [r3, #0]
 800f010:	f003 0320 	and.w	r3, r3, #32
 800f014:	2b00      	cmp	r3, #0
 800f016:	d02d      	beq.n	800f074 <HAL_RCC_GetSysClockFreq+0x17c>
 800f018:	4b6c      	ldr	r3, [pc, #432]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800f01a:	681b      	ldr	r3, [r3, #0]
 800f01c:	08db      	lsrs	r3, r3, #3
 800f01e:	f003 0303 	and.w	r3, r3, #3
 800f022:	4a6b      	ldr	r2, [pc, #428]	; (800f1d0 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800f024:	fa22 f303 	lsr.w	r3, r2, r3
 800f028:	607b      	str	r3, [r7, #4]
 800f02a:	687b      	ldr	r3, [r7, #4]
 800f02c:	ee07 3a90 	vmov	s15, r3
 800f030:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800f034:	693b      	ldr	r3, [r7, #16]
 800f036:	ee07 3a90 	vmov	s15, r3
 800f03a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800f03e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800f042:	4b62      	ldr	r3, [pc, #392]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800f044:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f046:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800f04a:	ee07 3a90 	vmov	s15, r3
 800f04e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800f052:	ed97 6a02 	vldr	s12, [r7, #8]
 800f056:	eddf 5a61 	vldr	s11, [pc, #388]	; 800f1dc <HAL_RCC_GetSysClockFreq+0x2e4>
 800f05a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800f05e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800f062:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f066:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f06a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f06e:	edc7 7a07 	vstr	s15, [r7, #28]
 800f072:	e087      	b.n	800f184 <HAL_RCC_GetSysClockFreq+0x28c>
 800f074:	693b      	ldr	r3, [r7, #16]
 800f076:	ee07 3a90 	vmov	s15, r3
 800f07a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800f07e:	eddf 6a58 	vldr	s13, [pc, #352]	; 800f1e0 <HAL_RCC_GetSysClockFreq+0x2e8>
 800f082:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800f086:	4b51      	ldr	r3, [pc, #324]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800f088:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f08a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800f08e:	ee07 3a90 	vmov	s15, r3
 800f092:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800f096:	ed97 6a02 	vldr	s12, [r7, #8]
 800f09a:	eddf 5a50 	vldr	s11, [pc, #320]	; 800f1dc <HAL_RCC_GetSysClockFreq+0x2e4>
 800f09e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800f0a2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800f0a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f0aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f0ae:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f0b2:	edc7 7a07 	vstr	s15, [r7, #28]
 800f0b6:	e065      	b.n	800f184 <HAL_RCC_GetSysClockFreq+0x28c>
 800f0b8:	693b      	ldr	r3, [r7, #16]
 800f0ba:	ee07 3a90 	vmov	s15, r3
 800f0be:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800f0c2:	eddf 6a48 	vldr	s13, [pc, #288]	; 800f1e4 <HAL_RCC_GetSysClockFreq+0x2ec>
 800f0c6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800f0ca:	4b40      	ldr	r3, [pc, #256]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800f0cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f0ce:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800f0d2:	ee07 3a90 	vmov	s15, r3
 800f0d6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800f0da:	ed97 6a02 	vldr	s12, [r7, #8]
 800f0de:	eddf 5a3f 	vldr	s11, [pc, #252]	; 800f1dc <HAL_RCC_GetSysClockFreq+0x2e4>
 800f0e2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800f0e6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800f0ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f0ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f0f2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f0f6:	edc7 7a07 	vstr	s15, [r7, #28]
 800f0fa:	e043      	b.n	800f184 <HAL_RCC_GetSysClockFreq+0x28c>
 800f0fc:	693b      	ldr	r3, [r7, #16]
 800f0fe:	ee07 3a90 	vmov	s15, r3
 800f102:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800f106:	eddf 6a38 	vldr	s13, [pc, #224]	; 800f1e8 <HAL_RCC_GetSysClockFreq+0x2f0>
 800f10a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800f10e:	4b2f      	ldr	r3, [pc, #188]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800f110:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f112:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800f116:	ee07 3a90 	vmov	s15, r3
 800f11a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800f11e:	ed97 6a02 	vldr	s12, [r7, #8]
 800f122:	eddf 5a2e 	vldr	s11, [pc, #184]	; 800f1dc <HAL_RCC_GetSysClockFreq+0x2e4>
 800f126:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800f12a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800f12e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f132:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f136:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f13a:	edc7 7a07 	vstr	s15, [r7, #28]
 800f13e:	e021      	b.n	800f184 <HAL_RCC_GetSysClockFreq+0x28c>
 800f140:	693b      	ldr	r3, [r7, #16]
 800f142:	ee07 3a90 	vmov	s15, r3
 800f146:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800f14a:	eddf 6a26 	vldr	s13, [pc, #152]	; 800f1e4 <HAL_RCC_GetSysClockFreq+0x2ec>
 800f14e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800f152:	4b1e      	ldr	r3, [pc, #120]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800f154:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f156:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800f15a:	ee07 3a90 	vmov	s15, r3
 800f15e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800f162:	ed97 6a02 	vldr	s12, [r7, #8]
 800f166:	eddf 5a1d 	vldr	s11, [pc, #116]	; 800f1dc <HAL_RCC_GetSysClockFreq+0x2e4>
 800f16a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800f16e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800f172:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f176:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f17a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f17e:	edc7 7a07 	vstr	s15, [r7, #28]
 800f182:	bf00      	nop
 800f184:	4b11      	ldr	r3, [pc, #68]	; (800f1cc <HAL_RCC_GetSysClockFreq+0x2d4>)
 800f186:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f188:	0a5b      	lsrs	r3, r3, #9
 800f18a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800f18e:	3301      	adds	r3, #1
 800f190:	603b      	str	r3, [r7, #0]
 800f192:	683b      	ldr	r3, [r7, #0]
 800f194:	ee07 3a90 	vmov	s15, r3
 800f198:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800f19c:	edd7 6a07 	vldr	s13, [r7, #28]
 800f1a0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800f1a4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800f1a8:	ee17 3a90 	vmov	r3, s15
 800f1ac:	61bb      	str	r3, [r7, #24]
 800f1ae:	e005      	b.n	800f1bc <HAL_RCC_GetSysClockFreq+0x2c4>
 800f1b0:	2300      	movs	r3, #0
 800f1b2:	61bb      	str	r3, [r7, #24]
 800f1b4:	e002      	b.n	800f1bc <HAL_RCC_GetSysClockFreq+0x2c4>
 800f1b6:	4b07      	ldr	r3, [pc, #28]	; (800f1d4 <HAL_RCC_GetSysClockFreq+0x2dc>)
 800f1b8:	61bb      	str	r3, [r7, #24]
 800f1ba:	bf00      	nop
 800f1bc:	69bb      	ldr	r3, [r7, #24]
 800f1be:	4618      	mov	r0, r3
 800f1c0:	3724      	adds	r7, #36	; 0x24
 800f1c2:	46bd      	mov	sp, r7
 800f1c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1c8:	4770      	bx	lr
 800f1ca:	bf00      	nop
 800f1cc:	58024400 	.word	0x58024400
 800f1d0:	03d09000 	.word	0x03d09000
 800f1d4:	003d0900 	.word	0x003d0900
 800f1d8:	017d7840 	.word	0x017d7840
 800f1dc:	46000000 	.word	0x46000000
 800f1e0:	4c742400 	.word	0x4c742400
 800f1e4:	4a742400 	.word	0x4a742400
 800f1e8:	4bbebc20 	.word	0x4bbebc20

0800f1ec <HAL_RCC_GetHCLKFreq>:
 800f1ec:	b580      	push	{r7, lr}
 800f1ee:	b082      	sub	sp, #8
 800f1f0:	af00      	add	r7, sp, #0
 800f1f2:	f7ff fe81 	bl	800eef8 <HAL_RCC_GetSysClockFreq>
 800f1f6:	4602      	mov	r2, r0
 800f1f8:	4b10      	ldr	r3, [pc, #64]	; (800f23c <HAL_RCC_GetHCLKFreq+0x50>)
 800f1fa:	699b      	ldr	r3, [r3, #24]
 800f1fc:	0a1b      	lsrs	r3, r3, #8
 800f1fe:	f003 030f 	and.w	r3, r3, #15
 800f202:	490f      	ldr	r1, [pc, #60]	; (800f240 <HAL_RCC_GetHCLKFreq+0x54>)
 800f204:	5ccb      	ldrb	r3, [r1, r3]
 800f206:	f003 031f 	and.w	r3, r3, #31
 800f20a:	fa22 f303 	lsr.w	r3, r2, r3
 800f20e:	607b      	str	r3, [r7, #4]
 800f210:	4b0a      	ldr	r3, [pc, #40]	; (800f23c <HAL_RCC_GetHCLKFreq+0x50>)
 800f212:	699b      	ldr	r3, [r3, #24]
 800f214:	f003 030f 	and.w	r3, r3, #15
 800f218:	4a09      	ldr	r2, [pc, #36]	; (800f240 <HAL_RCC_GetHCLKFreq+0x54>)
 800f21a:	5cd3      	ldrb	r3, [r2, r3]
 800f21c:	f003 031f 	and.w	r3, r3, #31
 800f220:	687a      	ldr	r2, [r7, #4]
 800f222:	fa22 f303 	lsr.w	r3, r2, r3
 800f226:	4a07      	ldr	r2, [pc, #28]	; (800f244 <HAL_RCC_GetHCLKFreq+0x58>)
 800f228:	6013      	str	r3, [r2, #0]
 800f22a:	4a07      	ldr	r2, [pc, #28]	; (800f248 <HAL_RCC_GetHCLKFreq+0x5c>)
 800f22c:	687b      	ldr	r3, [r7, #4]
 800f22e:	6013      	str	r3, [r2, #0]
 800f230:	4b04      	ldr	r3, [pc, #16]	; (800f244 <HAL_RCC_GetHCLKFreq+0x58>)
 800f232:	681b      	ldr	r3, [r3, #0]
 800f234:	4618      	mov	r0, r3
 800f236:	3708      	adds	r7, #8
 800f238:	46bd      	mov	sp, r7
 800f23a:	bd80      	pop	{r7, pc}
 800f23c:	58024400 	.word	0x58024400
 800f240:	0801b854 	.word	0x0801b854
 800f244:	240000c8 	.word	0x240000c8
 800f248:	240000c4 	.word	0x240000c4

0800f24c <HAL_RCC_GetPCLK1Freq>:
 800f24c:	b580      	push	{r7, lr}
 800f24e:	af00      	add	r7, sp, #0
 800f250:	f7ff ffcc 	bl	800f1ec <HAL_RCC_GetHCLKFreq>
 800f254:	4602      	mov	r2, r0
 800f256:	4b06      	ldr	r3, [pc, #24]	; (800f270 <HAL_RCC_GetPCLK1Freq+0x24>)
 800f258:	69db      	ldr	r3, [r3, #28]
 800f25a:	091b      	lsrs	r3, r3, #4
 800f25c:	f003 0307 	and.w	r3, r3, #7
 800f260:	4904      	ldr	r1, [pc, #16]	; (800f274 <HAL_RCC_GetPCLK1Freq+0x28>)
 800f262:	5ccb      	ldrb	r3, [r1, r3]
 800f264:	f003 031f 	and.w	r3, r3, #31
 800f268:	fa22 f303 	lsr.w	r3, r2, r3
 800f26c:	4618      	mov	r0, r3
 800f26e:	bd80      	pop	{r7, pc}
 800f270:	58024400 	.word	0x58024400
 800f274:	0801b854 	.word	0x0801b854

0800f278 <HAL_RCC_GetPCLK2Freq>:
 800f278:	b580      	push	{r7, lr}
 800f27a:	af00      	add	r7, sp, #0
 800f27c:	f7ff ffb6 	bl	800f1ec <HAL_RCC_GetHCLKFreq>
 800f280:	4602      	mov	r2, r0
 800f282:	4b06      	ldr	r3, [pc, #24]	; (800f29c <HAL_RCC_GetPCLK2Freq+0x24>)
 800f284:	69db      	ldr	r3, [r3, #28]
 800f286:	0a1b      	lsrs	r3, r3, #8
 800f288:	f003 0307 	and.w	r3, r3, #7
 800f28c:	4904      	ldr	r1, [pc, #16]	; (800f2a0 <HAL_RCC_GetPCLK2Freq+0x28>)
 800f28e:	5ccb      	ldrb	r3, [r1, r3]
 800f290:	f003 031f 	and.w	r3, r3, #31
 800f294:	fa22 f303 	lsr.w	r3, r2, r3
 800f298:	4618      	mov	r0, r3
 800f29a:	bd80      	pop	{r7, pc}
 800f29c:	58024400 	.word	0x58024400
 800f2a0:	0801b854 	.word	0x0801b854

0800f2a4 <HAL_RCC_GetClockConfig>:
 800f2a4:	b480      	push	{r7}
 800f2a6:	b083      	sub	sp, #12
 800f2a8:	af00      	add	r7, sp, #0
 800f2aa:	6078      	str	r0, [r7, #4]
 800f2ac:	6039      	str	r1, [r7, #0]
 800f2ae:	687b      	ldr	r3, [r7, #4]
 800f2b0:	223f      	movs	r2, #63	; 0x3f
 800f2b2:	601a      	str	r2, [r3, #0]
 800f2b4:	4b1a      	ldr	r3, [pc, #104]	; (800f320 <HAL_RCC_GetClockConfig+0x7c>)
 800f2b6:	691b      	ldr	r3, [r3, #16]
 800f2b8:	f003 0207 	and.w	r2, r3, #7
 800f2bc:	687b      	ldr	r3, [r7, #4]
 800f2be:	605a      	str	r2, [r3, #4]
 800f2c0:	4b17      	ldr	r3, [pc, #92]	; (800f320 <HAL_RCC_GetClockConfig+0x7c>)
 800f2c2:	699b      	ldr	r3, [r3, #24]
 800f2c4:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
 800f2c8:	687b      	ldr	r3, [r7, #4]
 800f2ca:	609a      	str	r2, [r3, #8]
 800f2cc:	4b14      	ldr	r3, [pc, #80]	; (800f320 <HAL_RCC_GetClockConfig+0x7c>)
 800f2ce:	699b      	ldr	r3, [r3, #24]
 800f2d0:	f003 020f 	and.w	r2, r3, #15
 800f2d4:	687b      	ldr	r3, [r7, #4]
 800f2d6:	60da      	str	r2, [r3, #12]
 800f2d8:	4b11      	ldr	r3, [pc, #68]	; (800f320 <HAL_RCC_GetClockConfig+0x7c>)
 800f2da:	699b      	ldr	r3, [r3, #24]
 800f2dc:	f003 0270 	and.w	r2, r3, #112	; 0x70
 800f2e0:	687b      	ldr	r3, [r7, #4]
 800f2e2:	611a      	str	r2, [r3, #16]
 800f2e4:	4b0e      	ldr	r3, [pc, #56]	; (800f320 <HAL_RCC_GetClockConfig+0x7c>)
 800f2e6:	69db      	ldr	r3, [r3, #28]
 800f2e8:	f003 0270 	and.w	r2, r3, #112	; 0x70
 800f2ec:	687b      	ldr	r3, [r7, #4]
 800f2ee:	615a      	str	r2, [r3, #20]
 800f2f0:	4b0b      	ldr	r3, [pc, #44]	; (800f320 <HAL_RCC_GetClockConfig+0x7c>)
 800f2f2:	69db      	ldr	r3, [r3, #28]
 800f2f4:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 800f2f8:	687b      	ldr	r3, [r7, #4]
 800f2fa:	619a      	str	r2, [r3, #24]
 800f2fc:	4b08      	ldr	r3, [pc, #32]	; (800f320 <HAL_RCC_GetClockConfig+0x7c>)
 800f2fe:	6a1b      	ldr	r3, [r3, #32]
 800f300:	f003 0270 	and.w	r2, r3, #112	; 0x70
 800f304:	687b      	ldr	r3, [r7, #4]
 800f306:	61da      	str	r2, [r3, #28]
 800f308:	4b06      	ldr	r3, [pc, #24]	; (800f324 <HAL_RCC_GetClockConfig+0x80>)
 800f30a:	681b      	ldr	r3, [r3, #0]
 800f30c:	f003 020f 	and.w	r2, r3, #15
 800f310:	683b      	ldr	r3, [r7, #0]
 800f312:	601a      	str	r2, [r3, #0]
 800f314:	bf00      	nop
 800f316:	370c      	adds	r7, #12
 800f318:	46bd      	mov	sp, r7
 800f31a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f31e:	4770      	bx	lr
 800f320:	58024400 	.word	0x58024400
 800f324:	52002000 	.word	0x52002000

0800f328 <HAL_RCCEx_PeriphCLKConfig>:
 800f328:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800f32c:	b0ca      	sub	sp, #296	; 0x128
 800f32e:	af00      	add	r7, sp, #0
 800f330:	f8c7 0114 	str.w	r0, [r7, #276]	; 0x114
 800f334:	2300      	movs	r3, #0
 800f336:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f33a:	2300      	movs	r3, #0
 800f33c:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f340:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f344:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f348:	f002 6400 	and.w	r4, r2, #134217728	; 0x8000000
 800f34c:	2500      	movs	r5, #0
 800f34e:	ea54 0305 	orrs.w	r3, r4, r5
 800f352:	d049      	beq.n	800f3e8 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 800f354:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f358:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800f35a:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 800f35e:	d02f      	beq.n	800f3c0 <HAL_RCCEx_PeriphCLKConfig+0x98>
 800f360:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 800f364:	d828      	bhi.n	800f3b8 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800f366:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800f36a:	d01a      	beq.n	800f3a2 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 800f36c:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800f370:	d822      	bhi.n	800f3b8 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800f372:	2b00      	cmp	r3, #0
 800f374:	d003      	beq.n	800f37e <HAL_RCCEx_PeriphCLKConfig+0x56>
 800f376:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800f37a:	d007      	beq.n	800f38c <HAL_RCCEx_PeriphCLKConfig+0x64>
 800f37c:	e01c      	b.n	800f3b8 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800f37e:	4bb8      	ldr	r3, [pc, #736]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f380:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f382:	4ab7      	ldr	r2, [pc, #732]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f384:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800f388:	62d3      	str	r3, [r2, #44]	; 0x2c
 800f38a:	e01a      	b.n	800f3c2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800f38c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f390:	3308      	adds	r3, #8
 800f392:	2102      	movs	r1, #2
 800f394:	4618      	mov	r0, r3
 800f396:	f002 fb61 	bl	8011a5c <RCCEx_PLL2_Config>
 800f39a:	4603      	mov	r3, r0
 800f39c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f3a0:	e00f      	b.n	800f3c2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800f3a2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f3a6:	3328      	adds	r3, #40	; 0x28
 800f3a8:	2102      	movs	r1, #2
 800f3aa:	4618      	mov	r0, r3
 800f3ac:	f002 fc08 	bl	8011bc0 <RCCEx_PLL3_Config>
 800f3b0:	4603      	mov	r3, r0
 800f3b2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f3b6:	e004      	b.n	800f3c2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800f3b8:	2301      	movs	r3, #1
 800f3ba:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f3be:	e000      	b.n	800f3c2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800f3c0:	bf00      	nop
 800f3c2:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f3c6:	2b00      	cmp	r3, #0
 800f3c8:	d10a      	bne.n	800f3e0 <HAL_RCCEx_PeriphCLKConfig+0xb8>
 800f3ca:	4ba5      	ldr	r3, [pc, #660]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f3cc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f3ce:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 800f3d2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f3d6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800f3d8:	4aa1      	ldr	r2, [pc, #644]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f3da:	430b      	orrs	r3, r1
 800f3dc:	6513      	str	r3, [r2, #80]	; 0x50
 800f3de:	e003      	b.n	800f3e8 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 800f3e0:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f3e4:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f3e8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f3ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f3f0:	f402 7880 	and.w	r8, r2, #256	; 0x100
 800f3f4:	f04f 0900 	mov.w	r9, #0
 800f3f8:	ea58 0309 	orrs.w	r3, r8, r9
 800f3fc:	d047      	beq.n	800f48e <HAL_RCCEx_PeriphCLKConfig+0x166>
 800f3fe:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f402:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f404:	2b04      	cmp	r3, #4
 800f406:	d82a      	bhi.n	800f45e <HAL_RCCEx_PeriphCLKConfig+0x136>
 800f408:	a201      	add	r2, pc, #4	; (adr r2, 800f410 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 800f40a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f40e:	bf00      	nop
 800f410:	0800f425 	.word	0x0800f425
 800f414:	0800f433 	.word	0x0800f433
 800f418:	0800f449 	.word	0x0800f449
 800f41c:	0800f467 	.word	0x0800f467
 800f420:	0800f467 	.word	0x0800f467
 800f424:	4b8e      	ldr	r3, [pc, #568]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f426:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f428:	4a8d      	ldr	r2, [pc, #564]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f42a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800f42e:	62d3      	str	r3, [r2, #44]	; 0x2c
 800f430:	e01a      	b.n	800f468 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800f432:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f436:	3308      	adds	r3, #8
 800f438:	2100      	movs	r1, #0
 800f43a:	4618      	mov	r0, r3
 800f43c:	f002 fb0e 	bl	8011a5c <RCCEx_PLL2_Config>
 800f440:	4603      	mov	r3, r0
 800f442:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f446:	e00f      	b.n	800f468 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800f448:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f44c:	3328      	adds	r3, #40	; 0x28
 800f44e:	2100      	movs	r1, #0
 800f450:	4618      	mov	r0, r3
 800f452:	f002 fbb5 	bl	8011bc0 <RCCEx_PLL3_Config>
 800f456:	4603      	mov	r3, r0
 800f458:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f45c:	e004      	b.n	800f468 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800f45e:	2301      	movs	r3, #1
 800f460:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f464:	e000      	b.n	800f468 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800f466:	bf00      	nop
 800f468:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f46c:	2b00      	cmp	r3, #0
 800f46e:	d10a      	bne.n	800f486 <HAL_RCCEx_PeriphCLKConfig+0x15e>
 800f470:	4b7b      	ldr	r3, [pc, #492]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f472:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f474:	f023 0107 	bic.w	r1, r3, #7
 800f478:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f47c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f47e:	4a78      	ldr	r2, [pc, #480]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f480:	430b      	orrs	r3, r1
 800f482:	6513      	str	r3, [r2, #80]	; 0x50
 800f484:	e003      	b.n	800f48e <HAL_RCCEx_PeriphCLKConfig+0x166>
 800f486:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f48a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f48e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f492:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f496:	f402 7a00 	and.w	sl, r2, #512	; 0x200
 800f49a:	f04f 0b00 	mov.w	fp, #0
 800f49e:	ea5a 030b 	orrs.w	r3, sl, fp
 800f4a2:	d04c      	beq.n	800f53e <HAL_RCCEx_PeriphCLKConfig+0x216>
 800f4a4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f4a8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800f4aa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800f4ae:	d030      	beq.n	800f512 <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 800f4b0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800f4b4:	d829      	bhi.n	800f50a <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 800f4b6:	2bc0      	cmp	r3, #192	; 0xc0
 800f4b8:	d02d      	beq.n	800f516 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 800f4ba:	2bc0      	cmp	r3, #192	; 0xc0
 800f4bc:	d825      	bhi.n	800f50a <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 800f4be:	2b80      	cmp	r3, #128	; 0x80
 800f4c0:	d018      	beq.n	800f4f4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 800f4c2:	2b80      	cmp	r3, #128	; 0x80
 800f4c4:	d821      	bhi.n	800f50a <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 800f4c6:	2b00      	cmp	r3, #0
 800f4c8:	d002      	beq.n	800f4d0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 800f4ca:	2b40      	cmp	r3, #64	; 0x40
 800f4cc:	d007      	beq.n	800f4de <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 800f4ce:	e01c      	b.n	800f50a <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 800f4d0:	4b63      	ldr	r3, [pc, #396]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f4d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f4d4:	4a62      	ldr	r2, [pc, #392]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f4d6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800f4da:	62d3      	str	r3, [r2, #44]	; 0x2c
 800f4dc:	e01c      	b.n	800f518 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 800f4de:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f4e2:	3308      	adds	r3, #8
 800f4e4:	2100      	movs	r1, #0
 800f4e6:	4618      	mov	r0, r3
 800f4e8:	f002 fab8 	bl	8011a5c <RCCEx_PLL2_Config>
 800f4ec:	4603      	mov	r3, r0
 800f4ee:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f4f2:	e011      	b.n	800f518 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 800f4f4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f4f8:	3328      	adds	r3, #40	; 0x28
 800f4fa:	2100      	movs	r1, #0
 800f4fc:	4618      	mov	r0, r3
 800f4fe:	f002 fb5f 	bl	8011bc0 <RCCEx_PLL3_Config>
 800f502:	4603      	mov	r3, r0
 800f504:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f508:	e006      	b.n	800f518 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 800f50a:	2301      	movs	r3, #1
 800f50c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f510:	e002      	b.n	800f518 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 800f512:	bf00      	nop
 800f514:	e000      	b.n	800f518 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 800f516:	bf00      	nop
 800f518:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f51c:	2b00      	cmp	r3, #0
 800f51e:	d10a      	bne.n	800f536 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 800f520:	4b4f      	ldr	r3, [pc, #316]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f522:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f524:	f423 71e0 	bic.w	r1, r3, #448	; 0x1c0
 800f528:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f52c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800f52e:	4a4c      	ldr	r2, [pc, #304]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f530:	430b      	orrs	r3, r1
 800f532:	6513      	str	r3, [r2, #80]	; 0x50
 800f534:	e003      	b.n	800f53e <HAL_RCCEx_PeriphCLKConfig+0x216>
 800f536:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f53a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f53e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f542:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f546:	f402 6380 	and.w	r3, r2, #1024	; 0x400
 800f54a:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 800f54e:	2300      	movs	r3, #0
 800f550:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 800f554:	e9d7 1242 	ldrd	r1, r2, [r7, #264]	; 0x108
 800f558:	460b      	mov	r3, r1
 800f55a:	4313      	orrs	r3, r2
 800f55c:	d053      	beq.n	800f606 <HAL_RCCEx_PeriphCLKConfig+0x2de>
 800f55e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f562:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800f566:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800f56a:	d035      	beq.n	800f5d8 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 800f56c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800f570:	d82e      	bhi.n	800f5d0 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 800f572:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 800f576:	d031      	beq.n	800f5dc <HAL_RCCEx_PeriphCLKConfig+0x2b4>
 800f578:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 800f57c:	d828      	bhi.n	800f5d0 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 800f57e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800f582:	d01a      	beq.n	800f5ba <HAL_RCCEx_PeriphCLKConfig+0x292>
 800f584:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800f588:	d822      	bhi.n	800f5d0 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 800f58a:	2b00      	cmp	r3, #0
 800f58c:	d003      	beq.n	800f596 <HAL_RCCEx_PeriphCLKConfig+0x26e>
 800f58e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800f592:	d007      	beq.n	800f5a4 <HAL_RCCEx_PeriphCLKConfig+0x27c>
 800f594:	e01c      	b.n	800f5d0 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 800f596:	4b32      	ldr	r3, [pc, #200]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f598:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f59a:	4a31      	ldr	r2, [pc, #196]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f59c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800f5a0:	62d3      	str	r3, [r2, #44]	; 0x2c
 800f5a2:	e01c      	b.n	800f5de <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 800f5a4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f5a8:	3308      	adds	r3, #8
 800f5aa:	2100      	movs	r1, #0
 800f5ac:	4618      	mov	r0, r3
 800f5ae:	f002 fa55 	bl	8011a5c <RCCEx_PLL2_Config>
 800f5b2:	4603      	mov	r3, r0
 800f5b4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f5b8:	e011      	b.n	800f5de <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 800f5ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f5be:	3328      	adds	r3, #40	; 0x28
 800f5c0:	2100      	movs	r1, #0
 800f5c2:	4618      	mov	r0, r3
 800f5c4:	f002 fafc 	bl	8011bc0 <RCCEx_PLL3_Config>
 800f5c8:	4603      	mov	r3, r0
 800f5ca:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f5ce:	e006      	b.n	800f5de <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 800f5d0:	2301      	movs	r3, #1
 800f5d2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f5d6:	e002      	b.n	800f5de <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 800f5d8:	bf00      	nop
 800f5da:	e000      	b.n	800f5de <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 800f5dc:	bf00      	nop
 800f5de:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f5e2:	2b00      	cmp	r3, #0
 800f5e4:	d10b      	bne.n	800f5fe <HAL_RCCEx_PeriphCLKConfig+0x2d6>
 800f5e6:	4b1e      	ldr	r3, [pc, #120]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f5e8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f5ea:	f423 0160 	bic.w	r1, r3, #14680064	; 0xe00000
 800f5ee:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f5f2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800f5f6:	4a1a      	ldr	r2, [pc, #104]	; (800f660 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800f5f8:	430b      	orrs	r3, r1
 800f5fa:	6593      	str	r3, [r2, #88]	; 0x58
 800f5fc:	e003      	b.n	800f606 <HAL_RCCEx_PeriphCLKConfig+0x2de>
 800f5fe:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f602:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f606:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f60a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f60e:	f402 6300 	and.w	r3, r2, #2048	; 0x800
 800f612:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 800f616:	2300      	movs	r3, #0
 800f618:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800f61c:	e9d7 1240 	ldrd	r1, r2, [r7, #256]	; 0x100
 800f620:	460b      	mov	r3, r1
 800f622:	4313      	orrs	r3, r2
 800f624:	d056      	beq.n	800f6d4 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 800f626:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f62a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800f62e:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800f632:	d038      	beq.n	800f6a6 <HAL_RCCEx_PeriphCLKConfig+0x37e>
 800f634:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800f638:	d831      	bhi.n	800f69e <HAL_RCCEx_PeriphCLKConfig+0x376>
 800f63a:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 800f63e:	d034      	beq.n	800f6aa <HAL_RCCEx_PeriphCLKConfig+0x382>
 800f640:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 800f644:	d82b      	bhi.n	800f69e <HAL_RCCEx_PeriphCLKConfig+0x376>
 800f646:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800f64a:	d01d      	beq.n	800f688 <HAL_RCCEx_PeriphCLKConfig+0x360>
 800f64c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800f650:	d825      	bhi.n	800f69e <HAL_RCCEx_PeriphCLKConfig+0x376>
 800f652:	2b00      	cmp	r3, #0
 800f654:	d006      	beq.n	800f664 <HAL_RCCEx_PeriphCLKConfig+0x33c>
 800f656:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800f65a:	d00a      	beq.n	800f672 <HAL_RCCEx_PeriphCLKConfig+0x34a>
 800f65c:	e01f      	b.n	800f69e <HAL_RCCEx_PeriphCLKConfig+0x376>
 800f65e:	bf00      	nop
 800f660:	58024400 	.word	0x58024400
 800f664:	4ba2      	ldr	r3, [pc, #648]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f666:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f668:	4aa1      	ldr	r2, [pc, #644]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f66a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800f66e:	62d3      	str	r3, [r2, #44]	; 0x2c
 800f670:	e01c      	b.n	800f6ac <HAL_RCCEx_PeriphCLKConfig+0x384>
 800f672:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f676:	3308      	adds	r3, #8
 800f678:	2100      	movs	r1, #0
 800f67a:	4618      	mov	r0, r3
 800f67c:	f002 f9ee 	bl	8011a5c <RCCEx_PLL2_Config>
 800f680:	4603      	mov	r3, r0
 800f682:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f686:	e011      	b.n	800f6ac <HAL_RCCEx_PeriphCLKConfig+0x384>
 800f688:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f68c:	3328      	adds	r3, #40	; 0x28
 800f68e:	2100      	movs	r1, #0
 800f690:	4618      	mov	r0, r3
 800f692:	f002 fa95 	bl	8011bc0 <RCCEx_PLL3_Config>
 800f696:	4603      	mov	r3, r0
 800f698:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f69c:	e006      	b.n	800f6ac <HAL_RCCEx_PeriphCLKConfig+0x384>
 800f69e:	2301      	movs	r3, #1
 800f6a0:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f6a4:	e002      	b.n	800f6ac <HAL_RCCEx_PeriphCLKConfig+0x384>
 800f6a6:	bf00      	nop
 800f6a8:	e000      	b.n	800f6ac <HAL_RCCEx_PeriphCLKConfig+0x384>
 800f6aa:	bf00      	nop
 800f6ac:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f6b0:	2b00      	cmp	r3, #0
 800f6b2:	d10b      	bne.n	800f6cc <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 800f6b4:	4b8e      	ldr	r3, [pc, #568]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f6b6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f6b8:	f023 61e0 	bic.w	r1, r3, #117440512	; 0x7000000
 800f6bc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f6c0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800f6c4:	4a8a      	ldr	r2, [pc, #552]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f6c6:	430b      	orrs	r3, r1
 800f6c8:	6593      	str	r3, [r2, #88]	; 0x58
 800f6ca:	e003      	b.n	800f6d4 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 800f6cc:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f6d0:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f6d4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f6d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f6dc:	f002 7300 	and.w	r3, r2, #33554432	; 0x2000000
 800f6e0:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800f6e4:	2300      	movs	r3, #0
 800f6e6:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 800f6ea:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	; 0xf8
 800f6ee:	460b      	mov	r3, r1
 800f6f0:	4313      	orrs	r3, r2
 800f6f2:	d03a      	beq.n	800f76a <HAL_RCCEx_PeriphCLKConfig+0x442>
 800f6f4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f6f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f6fa:	2b30      	cmp	r3, #48	; 0x30
 800f6fc:	d01f      	beq.n	800f73e <HAL_RCCEx_PeriphCLKConfig+0x416>
 800f6fe:	2b30      	cmp	r3, #48	; 0x30
 800f700:	d819      	bhi.n	800f736 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 800f702:	2b20      	cmp	r3, #32
 800f704:	d00c      	beq.n	800f720 <HAL_RCCEx_PeriphCLKConfig+0x3f8>
 800f706:	2b20      	cmp	r3, #32
 800f708:	d815      	bhi.n	800f736 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 800f70a:	2b00      	cmp	r3, #0
 800f70c:	d019      	beq.n	800f742 <HAL_RCCEx_PeriphCLKConfig+0x41a>
 800f70e:	2b10      	cmp	r3, #16
 800f710:	d111      	bne.n	800f736 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 800f712:	4b77      	ldr	r3, [pc, #476]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f714:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f716:	4a76      	ldr	r2, [pc, #472]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f718:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800f71c:	62d3      	str	r3, [r2, #44]	; 0x2c
 800f71e:	e011      	b.n	800f744 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 800f720:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f724:	3308      	adds	r3, #8
 800f726:	2102      	movs	r1, #2
 800f728:	4618      	mov	r0, r3
 800f72a:	f002 f997 	bl	8011a5c <RCCEx_PLL2_Config>
 800f72e:	4603      	mov	r3, r0
 800f730:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f734:	e006      	b.n	800f744 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 800f736:	2301      	movs	r3, #1
 800f738:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f73c:	e002      	b.n	800f744 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 800f73e:	bf00      	nop
 800f740:	e000      	b.n	800f744 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 800f742:	bf00      	nop
 800f744:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f748:	2b00      	cmp	r3, #0
 800f74a:	d10a      	bne.n	800f762 <HAL_RCCEx_PeriphCLKConfig+0x43a>
 800f74c:	4b68      	ldr	r3, [pc, #416]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f74e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f750:	f023 0130 	bic.w	r1, r3, #48	; 0x30
 800f754:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f758:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f75a:	4a65      	ldr	r2, [pc, #404]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f75c:	430b      	orrs	r3, r1
 800f75e:	64d3      	str	r3, [r2, #76]	; 0x4c
 800f760:	e003      	b.n	800f76a <HAL_RCCEx_PeriphCLKConfig+0x442>
 800f762:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f766:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f76a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f76e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f772:	f402 5380 	and.w	r3, r2, #4096	; 0x1000
 800f776:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 800f77a:	2300      	movs	r3, #0
 800f77c:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 800f780:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	; 0xf0
 800f784:	460b      	mov	r3, r1
 800f786:	4313      	orrs	r3, r2
 800f788:	d051      	beq.n	800f82e <HAL_RCCEx_PeriphCLKConfig+0x506>
 800f78a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f78e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f790:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800f794:	d035      	beq.n	800f802 <HAL_RCCEx_PeriphCLKConfig+0x4da>
 800f796:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800f79a:	d82e      	bhi.n	800f7fa <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800f79c:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800f7a0:	d031      	beq.n	800f806 <HAL_RCCEx_PeriphCLKConfig+0x4de>
 800f7a2:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800f7a6:	d828      	bhi.n	800f7fa <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800f7a8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f7ac:	d01a      	beq.n	800f7e4 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 800f7ae:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f7b2:	d822      	bhi.n	800f7fa <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800f7b4:	2b00      	cmp	r3, #0
 800f7b6:	d003      	beq.n	800f7c0 <HAL_RCCEx_PeriphCLKConfig+0x498>
 800f7b8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f7bc:	d007      	beq.n	800f7ce <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 800f7be:	e01c      	b.n	800f7fa <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800f7c0:	4b4b      	ldr	r3, [pc, #300]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f7c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f7c4:	4a4a      	ldr	r2, [pc, #296]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f7c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800f7ca:	62d3      	str	r3, [r2, #44]	; 0x2c
 800f7cc:	e01c      	b.n	800f808 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 800f7ce:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f7d2:	3308      	adds	r3, #8
 800f7d4:	2100      	movs	r1, #0
 800f7d6:	4618      	mov	r0, r3
 800f7d8:	f002 f940 	bl	8011a5c <RCCEx_PLL2_Config>
 800f7dc:	4603      	mov	r3, r0
 800f7de:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f7e2:	e011      	b.n	800f808 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 800f7e4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f7e8:	3328      	adds	r3, #40	; 0x28
 800f7ea:	2100      	movs	r1, #0
 800f7ec:	4618      	mov	r0, r3
 800f7ee:	f002 f9e7 	bl	8011bc0 <RCCEx_PLL3_Config>
 800f7f2:	4603      	mov	r3, r0
 800f7f4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f7f8:	e006      	b.n	800f808 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 800f7fa:	2301      	movs	r3, #1
 800f7fc:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f800:	e002      	b.n	800f808 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 800f802:	bf00      	nop
 800f804:	e000      	b.n	800f808 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 800f806:	bf00      	nop
 800f808:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f80c:	2b00      	cmp	r3, #0
 800f80e:	d10a      	bne.n	800f826 <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 800f810:	4b37      	ldr	r3, [pc, #220]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f812:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f814:	f423 41e0 	bic.w	r1, r3, #28672	; 0x7000
 800f818:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f81c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f81e:	4a34      	ldr	r2, [pc, #208]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f820:	430b      	orrs	r3, r1
 800f822:	6513      	str	r3, [r2, #80]	; 0x50
 800f824:	e003      	b.n	800f82e <HAL_RCCEx_PeriphCLKConfig+0x506>
 800f826:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f82a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f82e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f832:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f836:	f402 5300 	and.w	r3, r2, #8192	; 0x2000
 800f83a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800f83e:	2300      	movs	r3, #0
 800f840:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 800f844:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	; 0xe8
 800f848:	460b      	mov	r3, r1
 800f84a:	4313      	orrs	r3, r2
 800f84c:	d056      	beq.n	800f8fc <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800f84e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f852:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f854:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800f858:	d033      	beq.n	800f8c2 <HAL_RCCEx_PeriphCLKConfig+0x59a>
 800f85a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800f85e:	d82c      	bhi.n	800f8ba <HAL_RCCEx_PeriphCLKConfig+0x592>
 800f860:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 800f864:	d02f      	beq.n	800f8c6 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 800f866:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 800f86a:	d826      	bhi.n	800f8ba <HAL_RCCEx_PeriphCLKConfig+0x592>
 800f86c:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800f870:	d02b      	beq.n	800f8ca <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 800f872:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800f876:	d820      	bhi.n	800f8ba <HAL_RCCEx_PeriphCLKConfig+0x592>
 800f878:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800f87c:	d012      	beq.n	800f8a4 <HAL_RCCEx_PeriphCLKConfig+0x57c>
 800f87e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800f882:	d81a      	bhi.n	800f8ba <HAL_RCCEx_PeriphCLKConfig+0x592>
 800f884:	2b00      	cmp	r3, #0
 800f886:	d022      	beq.n	800f8ce <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 800f888:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800f88c:	d115      	bne.n	800f8ba <HAL_RCCEx_PeriphCLKConfig+0x592>
 800f88e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f892:	3308      	adds	r3, #8
 800f894:	2101      	movs	r1, #1
 800f896:	4618      	mov	r0, r3
 800f898:	f002 f8e0 	bl	8011a5c <RCCEx_PLL2_Config>
 800f89c:	4603      	mov	r3, r0
 800f89e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f8a2:	e015      	b.n	800f8d0 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 800f8a4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f8a8:	3328      	adds	r3, #40	; 0x28
 800f8aa:	2101      	movs	r1, #1
 800f8ac:	4618      	mov	r0, r3
 800f8ae:	f002 f987 	bl	8011bc0 <RCCEx_PLL3_Config>
 800f8b2:	4603      	mov	r3, r0
 800f8b4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f8b8:	e00a      	b.n	800f8d0 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 800f8ba:	2301      	movs	r3, #1
 800f8bc:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f8c0:	e006      	b.n	800f8d0 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 800f8c2:	bf00      	nop
 800f8c4:	e004      	b.n	800f8d0 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 800f8c6:	bf00      	nop
 800f8c8:	e002      	b.n	800f8d0 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 800f8ca:	bf00      	nop
 800f8cc:	e000      	b.n	800f8d0 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 800f8ce:	bf00      	nop
 800f8d0:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f8d4:	2b00      	cmp	r3, #0
 800f8d6:	d10d      	bne.n	800f8f4 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 800f8d8:	4b05      	ldr	r3, [pc, #20]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f8da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f8dc:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 800f8e0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f8e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f8e6:	4a02      	ldr	r2, [pc, #8]	; (800f8f0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800f8e8:	430b      	orrs	r3, r1
 800f8ea:	6513      	str	r3, [r2, #80]	; 0x50
 800f8ec:	e006      	b.n	800f8fc <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800f8ee:	bf00      	nop
 800f8f0:	58024400 	.word	0x58024400
 800f8f4:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f8f8:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f8fc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f900:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f904:	f402 4380 	and.w	r3, r2, #16384	; 0x4000
 800f908:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800f90c:	2300      	movs	r3, #0
 800f90e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800f912:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	; 0xe0
 800f916:	460b      	mov	r3, r1
 800f918:	4313      	orrs	r3, r2
 800f91a:	d055      	beq.n	800f9c8 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
 800f91c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f920:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f924:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800f928:	d033      	beq.n	800f992 <HAL_RCCEx_PeriphCLKConfig+0x66a>
 800f92a:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800f92e:	d82c      	bhi.n	800f98a <HAL_RCCEx_PeriphCLKConfig+0x662>
 800f930:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f934:	d02f      	beq.n	800f996 <HAL_RCCEx_PeriphCLKConfig+0x66e>
 800f936:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f93a:	d826      	bhi.n	800f98a <HAL_RCCEx_PeriphCLKConfig+0x662>
 800f93c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800f940:	d02b      	beq.n	800f99a <HAL_RCCEx_PeriphCLKConfig+0x672>
 800f942:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800f946:	d820      	bhi.n	800f98a <HAL_RCCEx_PeriphCLKConfig+0x662>
 800f948:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800f94c:	d012      	beq.n	800f974 <HAL_RCCEx_PeriphCLKConfig+0x64c>
 800f94e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800f952:	d81a      	bhi.n	800f98a <HAL_RCCEx_PeriphCLKConfig+0x662>
 800f954:	2b00      	cmp	r3, #0
 800f956:	d022      	beq.n	800f99e <HAL_RCCEx_PeriphCLKConfig+0x676>
 800f958:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800f95c:	d115      	bne.n	800f98a <HAL_RCCEx_PeriphCLKConfig+0x662>
 800f95e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f962:	3308      	adds	r3, #8
 800f964:	2101      	movs	r1, #1
 800f966:	4618      	mov	r0, r3
 800f968:	f002 f878 	bl	8011a5c <RCCEx_PLL2_Config>
 800f96c:	4603      	mov	r3, r0
 800f96e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f972:	e015      	b.n	800f9a0 <HAL_RCCEx_PeriphCLKConfig+0x678>
 800f974:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f978:	3328      	adds	r3, #40	; 0x28
 800f97a:	2101      	movs	r1, #1
 800f97c:	4618      	mov	r0, r3
 800f97e:	f002 f91f 	bl	8011bc0 <RCCEx_PLL3_Config>
 800f982:	4603      	mov	r3, r0
 800f984:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f988:	e00a      	b.n	800f9a0 <HAL_RCCEx_PeriphCLKConfig+0x678>
 800f98a:	2301      	movs	r3, #1
 800f98c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800f990:	e006      	b.n	800f9a0 <HAL_RCCEx_PeriphCLKConfig+0x678>
 800f992:	bf00      	nop
 800f994:	e004      	b.n	800f9a0 <HAL_RCCEx_PeriphCLKConfig+0x678>
 800f996:	bf00      	nop
 800f998:	e002      	b.n	800f9a0 <HAL_RCCEx_PeriphCLKConfig+0x678>
 800f99a:	bf00      	nop
 800f99c:	e000      	b.n	800f9a0 <HAL_RCCEx_PeriphCLKConfig+0x678>
 800f99e:	bf00      	nop
 800f9a0:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f9a4:	2b00      	cmp	r3, #0
 800f9a6:	d10b      	bne.n	800f9c0 <HAL_RCCEx_PeriphCLKConfig+0x698>
 800f9a8:	4ba3      	ldr	r3, [pc, #652]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800f9aa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f9ac:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 800f9b0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f9b4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f9b8:	4a9f      	ldr	r2, [pc, #636]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800f9ba:	430b      	orrs	r3, r1
 800f9bc:	6593      	str	r3, [r2, #88]	; 0x58
 800f9be:	e003      	b.n	800f9c8 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
 800f9c0:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800f9c4:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800f9c8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f9cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f9d0:	f402 4300 	and.w	r3, r2, #32768	; 0x8000
 800f9d4:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800f9d8:	2300      	movs	r3, #0
 800f9da:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800f9de:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800f9e2:	460b      	mov	r3, r1
 800f9e4:	4313      	orrs	r3, r2
 800f9e6:	d037      	beq.n	800fa58 <HAL_RCCEx_PeriphCLKConfig+0x730>
 800f9e8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800f9ec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800f9ee:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800f9f2:	d00e      	beq.n	800fa12 <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 800f9f4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800f9f8:	d816      	bhi.n	800fa28 <HAL_RCCEx_PeriphCLKConfig+0x700>
 800f9fa:	2b00      	cmp	r3, #0
 800f9fc:	d018      	beq.n	800fa30 <HAL_RCCEx_PeriphCLKConfig+0x708>
 800f9fe:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800fa02:	d111      	bne.n	800fa28 <HAL_RCCEx_PeriphCLKConfig+0x700>
 800fa04:	4b8c      	ldr	r3, [pc, #560]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fa06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa08:	4a8b      	ldr	r2, [pc, #556]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fa0a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800fa0e:	62d3      	str	r3, [r2, #44]	; 0x2c
 800fa10:	e00f      	b.n	800fa32 <HAL_RCCEx_PeriphCLKConfig+0x70a>
 800fa12:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fa16:	3308      	adds	r3, #8
 800fa18:	2101      	movs	r1, #1
 800fa1a:	4618      	mov	r0, r3
 800fa1c:	f002 f81e 	bl	8011a5c <RCCEx_PLL2_Config>
 800fa20:	4603      	mov	r3, r0
 800fa22:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fa26:	e004      	b.n	800fa32 <HAL_RCCEx_PeriphCLKConfig+0x70a>
 800fa28:	2301      	movs	r3, #1
 800fa2a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fa2e:	e000      	b.n	800fa32 <HAL_RCCEx_PeriphCLKConfig+0x70a>
 800fa30:	bf00      	nop
 800fa32:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fa36:	2b00      	cmp	r3, #0
 800fa38:	d10a      	bne.n	800fa50 <HAL_RCCEx_PeriphCLKConfig+0x728>
 800fa3a:	4b7f      	ldr	r3, [pc, #508]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fa3c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fa3e:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 800fa42:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fa46:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800fa48:	4a7b      	ldr	r2, [pc, #492]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fa4a:	430b      	orrs	r3, r1
 800fa4c:	6513      	str	r3, [r2, #80]	; 0x50
 800fa4e:	e003      	b.n	800fa58 <HAL_RCCEx_PeriphCLKConfig+0x730>
 800fa50:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fa54:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800fa58:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fa5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fa60:	f002 7380 	and.w	r3, r2, #16777216	; 0x1000000
 800fa64:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800fa68:	2300      	movs	r3, #0
 800fa6a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800fa6e:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	; 0xd0
 800fa72:	460b      	mov	r3, r1
 800fa74:	4313      	orrs	r3, r2
 800fa76:	d039      	beq.n	800faec <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 800fa78:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fa7c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fa7e:	2b03      	cmp	r3, #3
 800fa80:	d81c      	bhi.n	800fabc <HAL_RCCEx_PeriphCLKConfig+0x794>
 800fa82:	a201      	add	r2, pc, #4	; (adr r2, 800fa88 <HAL_RCCEx_PeriphCLKConfig+0x760>)
 800fa84:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fa88:	0800fac5 	.word	0x0800fac5
 800fa8c:	0800fa99 	.word	0x0800fa99
 800fa90:	0800faa7 	.word	0x0800faa7
 800fa94:	0800fac5 	.word	0x0800fac5
 800fa98:	4b67      	ldr	r3, [pc, #412]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fa9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa9c:	4a66      	ldr	r2, [pc, #408]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fa9e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800faa2:	62d3      	str	r3, [r2, #44]	; 0x2c
 800faa4:	e00f      	b.n	800fac6 <HAL_RCCEx_PeriphCLKConfig+0x79e>
 800faa6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800faaa:	3308      	adds	r3, #8
 800faac:	2102      	movs	r1, #2
 800faae:	4618      	mov	r0, r3
 800fab0:	f001 ffd4 	bl	8011a5c <RCCEx_PLL2_Config>
 800fab4:	4603      	mov	r3, r0
 800fab6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800faba:	e004      	b.n	800fac6 <HAL_RCCEx_PeriphCLKConfig+0x79e>
 800fabc:	2301      	movs	r3, #1
 800fabe:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fac2:	e000      	b.n	800fac6 <HAL_RCCEx_PeriphCLKConfig+0x79e>
 800fac4:	bf00      	nop
 800fac6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800faca:	2b00      	cmp	r3, #0
 800facc:	d10a      	bne.n	800fae4 <HAL_RCCEx_PeriphCLKConfig+0x7bc>
 800face:	4b5a      	ldr	r3, [pc, #360]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fad0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800fad2:	f023 0103 	bic.w	r1, r3, #3
 800fad6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fada:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fadc:	4a56      	ldr	r2, [pc, #344]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fade:	430b      	orrs	r3, r1
 800fae0:	64d3      	str	r3, [r2, #76]	; 0x4c
 800fae2:	e003      	b.n	800faec <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 800fae4:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fae8:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800faec:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800faf0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800faf4:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
 800faf8:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800fafc:	2300      	movs	r3, #0
 800fafe:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800fb02:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	; 0xc8
 800fb06:	460b      	mov	r3, r1
 800fb08:	4313      	orrs	r3, r2
 800fb0a:	f000 809f 	beq.w	800fc4c <HAL_RCCEx_PeriphCLKConfig+0x924>
 800fb0e:	4b4b      	ldr	r3, [pc, #300]	; (800fc3c <HAL_RCCEx_PeriphCLKConfig+0x914>)
 800fb10:	681b      	ldr	r3, [r3, #0]
 800fb12:	4a4a      	ldr	r2, [pc, #296]	; (800fc3c <HAL_RCCEx_PeriphCLKConfig+0x914>)
 800fb14:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800fb18:	6013      	str	r3, [r2, #0]
 800fb1a:	f7f6 fb69 	bl	80061f0 <HAL_GetTick>
 800fb1e:	f8c7 0120 	str.w	r0, [r7, #288]	; 0x120
 800fb22:	e00b      	b.n	800fb3c <HAL_RCCEx_PeriphCLKConfig+0x814>
 800fb24:	f7f6 fb64 	bl	80061f0 <HAL_GetTick>
 800fb28:	4602      	mov	r2, r0
 800fb2a:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800fb2e:	1ad3      	subs	r3, r2, r3
 800fb30:	2b64      	cmp	r3, #100	; 0x64
 800fb32:	d903      	bls.n	800fb3c <HAL_RCCEx_PeriphCLKConfig+0x814>
 800fb34:	2303      	movs	r3, #3
 800fb36:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fb3a:	e005      	b.n	800fb48 <HAL_RCCEx_PeriphCLKConfig+0x820>
 800fb3c:	4b3f      	ldr	r3, [pc, #252]	; (800fc3c <HAL_RCCEx_PeriphCLKConfig+0x914>)
 800fb3e:	681b      	ldr	r3, [r3, #0]
 800fb40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fb44:	2b00      	cmp	r3, #0
 800fb46:	d0ed      	beq.n	800fb24 <HAL_RCCEx_PeriphCLKConfig+0x7fc>
 800fb48:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fb4c:	2b00      	cmp	r3, #0
 800fb4e:	d179      	bne.n	800fc44 <HAL_RCCEx_PeriphCLKConfig+0x91c>
 800fb50:	4b39      	ldr	r3, [pc, #228]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fb52:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800fb54:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fb58:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fb5c:	4053      	eors	r3, r2
 800fb5e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800fb62:	2b00      	cmp	r3, #0
 800fb64:	d015      	beq.n	800fb92 <HAL_RCCEx_PeriphCLKConfig+0x86a>
 800fb66:	4b34      	ldr	r3, [pc, #208]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fb68:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800fb6a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800fb6e:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 800fb72:	4b31      	ldr	r3, [pc, #196]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fb74:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800fb76:	4a30      	ldr	r2, [pc, #192]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fb78:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800fb7c:	6713      	str	r3, [r2, #112]	; 0x70
 800fb7e:	4b2e      	ldr	r3, [pc, #184]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fb80:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800fb82:	4a2d      	ldr	r2, [pc, #180]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fb84:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800fb88:	6713      	str	r3, [r2, #112]	; 0x70
 800fb8a:	4a2b      	ldr	r2, [pc, #172]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fb8c:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800fb90:	6713      	str	r3, [r2, #112]	; 0x70
 800fb92:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fb96:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fb9a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800fb9e:	d118      	bne.n	800fbd2 <HAL_RCCEx_PeriphCLKConfig+0x8aa>
 800fba0:	f7f6 fb26 	bl	80061f0 <HAL_GetTick>
 800fba4:	f8c7 0120 	str.w	r0, [r7, #288]	; 0x120
 800fba8:	e00d      	b.n	800fbc6 <HAL_RCCEx_PeriphCLKConfig+0x89e>
 800fbaa:	f7f6 fb21 	bl	80061f0 <HAL_GetTick>
 800fbae:	4602      	mov	r2, r0
 800fbb0:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800fbb4:	1ad2      	subs	r2, r2, r3
 800fbb6:	f241 3388 	movw	r3, #5000	; 0x1388
 800fbba:	429a      	cmp	r2, r3
 800fbbc:	d903      	bls.n	800fbc6 <HAL_RCCEx_PeriphCLKConfig+0x89e>
 800fbbe:	2303      	movs	r3, #3
 800fbc0:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fbc4:	e005      	b.n	800fbd2 <HAL_RCCEx_PeriphCLKConfig+0x8aa>
 800fbc6:	4b1c      	ldr	r3, [pc, #112]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fbc8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800fbca:	f003 0302 	and.w	r3, r3, #2
 800fbce:	2b00      	cmp	r3, #0
 800fbd0:	d0eb      	beq.n	800fbaa <HAL_RCCEx_PeriphCLKConfig+0x882>
 800fbd2:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fbd6:	2b00      	cmp	r3, #0
 800fbd8:	d129      	bne.n	800fc2e <HAL_RCCEx_PeriphCLKConfig+0x906>
 800fbda:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fbde:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fbe2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800fbe6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800fbea:	d10e      	bne.n	800fc0a <HAL_RCCEx_PeriphCLKConfig+0x8e2>
 800fbec:	4b12      	ldr	r3, [pc, #72]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fbee:	691b      	ldr	r3, [r3, #16]
 800fbf0:	f423 517c 	bic.w	r1, r3, #16128	; 0x3f00
 800fbf4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fbf8:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fbfc:	091a      	lsrs	r2, r3, #4
 800fbfe:	4b10      	ldr	r3, [pc, #64]	; (800fc40 <HAL_RCCEx_PeriphCLKConfig+0x918>)
 800fc00:	4013      	ands	r3, r2
 800fc02:	4a0d      	ldr	r2, [pc, #52]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fc04:	430b      	orrs	r3, r1
 800fc06:	6113      	str	r3, [r2, #16]
 800fc08:	e005      	b.n	800fc16 <HAL_RCCEx_PeriphCLKConfig+0x8ee>
 800fc0a:	4b0b      	ldr	r3, [pc, #44]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fc0c:	691b      	ldr	r3, [r3, #16]
 800fc0e:	4a0a      	ldr	r2, [pc, #40]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fc10:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 800fc14:	6113      	str	r3, [r2, #16]
 800fc16:	4b08      	ldr	r3, [pc, #32]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fc18:	6f19      	ldr	r1, [r3, #112]	; 0x70
 800fc1a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fc1e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fc22:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800fc26:	4a04      	ldr	r2, [pc, #16]	; (800fc38 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800fc28:	430b      	orrs	r3, r1
 800fc2a:	6713      	str	r3, [r2, #112]	; 0x70
 800fc2c:	e00e      	b.n	800fc4c <HAL_RCCEx_PeriphCLKConfig+0x924>
 800fc2e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fc32:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800fc36:	e009      	b.n	800fc4c <HAL_RCCEx_PeriphCLKConfig+0x924>
 800fc38:	58024400 	.word	0x58024400
 800fc3c:	58024800 	.word	0x58024800
 800fc40:	00ffffcf 	.word	0x00ffffcf
 800fc44:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fc48:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800fc4c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fc50:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fc54:	f002 0301 	and.w	r3, r2, #1
 800fc58:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800fc5c:	2300      	movs	r3, #0
 800fc5e:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800fc62:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800fc66:	460b      	mov	r3, r1
 800fc68:	4313      	orrs	r3, r2
 800fc6a:	f000 8089 	beq.w	800fd80 <HAL_RCCEx_PeriphCLKConfig+0xa58>
 800fc6e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fc72:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fc74:	2b28      	cmp	r3, #40	; 0x28
 800fc76:	d86b      	bhi.n	800fd50 <HAL_RCCEx_PeriphCLKConfig+0xa28>
 800fc78:	a201      	add	r2, pc, #4	; (adr r2, 800fc80 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800fc7a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fc7e:	bf00      	nop
 800fc80:	0800fd59 	.word	0x0800fd59
 800fc84:	0800fd51 	.word	0x0800fd51
 800fc88:	0800fd51 	.word	0x0800fd51
 800fc8c:	0800fd51 	.word	0x0800fd51
 800fc90:	0800fd51 	.word	0x0800fd51
 800fc94:	0800fd51 	.word	0x0800fd51
 800fc98:	0800fd51 	.word	0x0800fd51
 800fc9c:	0800fd51 	.word	0x0800fd51
 800fca0:	0800fd25 	.word	0x0800fd25
 800fca4:	0800fd51 	.word	0x0800fd51
 800fca8:	0800fd51 	.word	0x0800fd51
 800fcac:	0800fd51 	.word	0x0800fd51
 800fcb0:	0800fd51 	.word	0x0800fd51
 800fcb4:	0800fd51 	.word	0x0800fd51
 800fcb8:	0800fd51 	.word	0x0800fd51
 800fcbc:	0800fd51 	.word	0x0800fd51
 800fcc0:	0800fd3b 	.word	0x0800fd3b
 800fcc4:	0800fd51 	.word	0x0800fd51
 800fcc8:	0800fd51 	.word	0x0800fd51
 800fccc:	0800fd51 	.word	0x0800fd51
 800fcd0:	0800fd51 	.word	0x0800fd51
 800fcd4:	0800fd51 	.word	0x0800fd51
 800fcd8:	0800fd51 	.word	0x0800fd51
 800fcdc:	0800fd51 	.word	0x0800fd51
 800fce0:	0800fd59 	.word	0x0800fd59
 800fce4:	0800fd51 	.word	0x0800fd51
 800fce8:	0800fd51 	.word	0x0800fd51
 800fcec:	0800fd51 	.word	0x0800fd51
 800fcf0:	0800fd51 	.word	0x0800fd51
 800fcf4:	0800fd51 	.word	0x0800fd51
 800fcf8:	0800fd51 	.word	0x0800fd51
 800fcfc:	0800fd51 	.word	0x0800fd51
 800fd00:	0800fd59 	.word	0x0800fd59
 800fd04:	0800fd51 	.word	0x0800fd51
 800fd08:	0800fd51 	.word	0x0800fd51
 800fd0c:	0800fd51 	.word	0x0800fd51
 800fd10:	0800fd51 	.word	0x0800fd51
 800fd14:	0800fd51 	.word	0x0800fd51
 800fd18:	0800fd51 	.word	0x0800fd51
 800fd1c:	0800fd51 	.word	0x0800fd51
 800fd20:	0800fd59 	.word	0x0800fd59
 800fd24:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fd28:	3308      	adds	r3, #8
 800fd2a:	2101      	movs	r1, #1
 800fd2c:	4618      	mov	r0, r3
 800fd2e:	f001 fe95 	bl	8011a5c <RCCEx_PLL2_Config>
 800fd32:	4603      	mov	r3, r0
 800fd34:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fd38:	e00f      	b.n	800fd5a <HAL_RCCEx_PeriphCLKConfig+0xa32>
 800fd3a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fd3e:	3328      	adds	r3, #40	; 0x28
 800fd40:	2101      	movs	r1, #1
 800fd42:	4618      	mov	r0, r3
 800fd44:	f001 ff3c 	bl	8011bc0 <RCCEx_PLL3_Config>
 800fd48:	4603      	mov	r3, r0
 800fd4a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fd4e:	e004      	b.n	800fd5a <HAL_RCCEx_PeriphCLKConfig+0xa32>
 800fd50:	2301      	movs	r3, #1
 800fd52:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fd56:	e000      	b.n	800fd5a <HAL_RCCEx_PeriphCLKConfig+0xa32>
 800fd58:	bf00      	nop
 800fd5a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fd5e:	2b00      	cmp	r3, #0
 800fd60:	d10a      	bne.n	800fd78 <HAL_RCCEx_PeriphCLKConfig+0xa50>
 800fd62:	4bbf      	ldr	r3, [pc, #764]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800fd64:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fd66:	f023 0138 	bic.w	r1, r3, #56	; 0x38
 800fd6a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fd6e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fd70:	4abb      	ldr	r2, [pc, #748]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800fd72:	430b      	orrs	r3, r1
 800fd74:	6553      	str	r3, [r2, #84]	; 0x54
 800fd76:	e003      	b.n	800fd80 <HAL_RCCEx_PeriphCLKConfig+0xa58>
 800fd78:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fd7c:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800fd80:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fd84:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd88:	f002 0302 	and.w	r3, r2, #2
 800fd8c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800fd90:	2300      	movs	r3, #0
 800fd92:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 800fd96:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	; 0xb8
 800fd9a:	460b      	mov	r3, r1
 800fd9c:	4313      	orrs	r3, r2
 800fd9e:	d041      	beq.n	800fe24 <HAL_RCCEx_PeriphCLKConfig+0xafc>
 800fda0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fda4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800fda6:	2b05      	cmp	r3, #5
 800fda8:	d824      	bhi.n	800fdf4 <HAL_RCCEx_PeriphCLKConfig+0xacc>
 800fdaa:	a201      	add	r2, pc, #4	; (adr r2, 800fdb0 <HAL_RCCEx_PeriphCLKConfig+0xa88>)
 800fdac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fdb0:	0800fdfd 	.word	0x0800fdfd
 800fdb4:	0800fdc9 	.word	0x0800fdc9
 800fdb8:	0800fddf 	.word	0x0800fddf
 800fdbc:	0800fdfd 	.word	0x0800fdfd
 800fdc0:	0800fdfd 	.word	0x0800fdfd
 800fdc4:	0800fdfd 	.word	0x0800fdfd
 800fdc8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fdcc:	3308      	adds	r3, #8
 800fdce:	2101      	movs	r1, #1
 800fdd0:	4618      	mov	r0, r3
 800fdd2:	f001 fe43 	bl	8011a5c <RCCEx_PLL2_Config>
 800fdd6:	4603      	mov	r3, r0
 800fdd8:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fddc:	e00f      	b.n	800fdfe <HAL_RCCEx_PeriphCLKConfig+0xad6>
 800fdde:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fde2:	3328      	adds	r3, #40	; 0x28
 800fde4:	2101      	movs	r1, #1
 800fde6:	4618      	mov	r0, r3
 800fde8:	f001 feea 	bl	8011bc0 <RCCEx_PLL3_Config>
 800fdec:	4603      	mov	r3, r0
 800fdee:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fdf2:	e004      	b.n	800fdfe <HAL_RCCEx_PeriphCLKConfig+0xad6>
 800fdf4:	2301      	movs	r3, #1
 800fdf6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fdfa:	e000      	b.n	800fdfe <HAL_RCCEx_PeriphCLKConfig+0xad6>
 800fdfc:	bf00      	nop
 800fdfe:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fe02:	2b00      	cmp	r3, #0
 800fe04:	d10a      	bne.n	800fe1c <HAL_RCCEx_PeriphCLKConfig+0xaf4>
 800fe06:	4b96      	ldr	r3, [pc, #600]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800fe08:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fe0a:	f023 0107 	bic.w	r1, r3, #7
 800fe0e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fe12:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800fe14:	4a92      	ldr	r2, [pc, #584]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800fe16:	430b      	orrs	r3, r1
 800fe18:	6553      	str	r3, [r2, #84]	; 0x54
 800fe1a:	e003      	b.n	800fe24 <HAL_RCCEx_PeriphCLKConfig+0xafc>
 800fe1c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800fe20:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800fe24:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fe28:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe2c:	f002 0304 	and.w	r3, r2, #4
 800fe30:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800fe34:	2300      	movs	r3, #0
 800fe36:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800fe3a:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	; 0xb0
 800fe3e:	460b      	mov	r3, r1
 800fe40:	4313      	orrs	r3, r2
 800fe42:	d044      	beq.n	800fece <HAL_RCCEx_PeriphCLKConfig+0xba6>
 800fe44:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fe48:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800fe4c:	2b05      	cmp	r3, #5
 800fe4e:	d825      	bhi.n	800fe9c <HAL_RCCEx_PeriphCLKConfig+0xb74>
 800fe50:	a201      	add	r2, pc, #4	; (adr r2, 800fe58 <HAL_RCCEx_PeriphCLKConfig+0xb30>)
 800fe52:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fe56:	bf00      	nop
 800fe58:	0800fea5 	.word	0x0800fea5
 800fe5c:	0800fe71 	.word	0x0800fe71
 800fe60:	0800fe87 	.word	0x0800fe87
 800fe64:	0800fea5 	.word	0x0800fea5
 800fe68:	0800fea5 	.word	0x0800fea5
 800fe6c:	0800fea5 	.word	0x0800fea5
 800fe70:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fe74:	3308      	adds	r3, #8
 800fe76:	2101      	movs	r1, #1
 800fe78:	4618      	mov	r0, r3
 800fe7a:	f001 fdef 	bl	8011a5c <RCCEx_PLL2_Config>
 800fe7e:	4603      	mov	r3, r0
 800fe80:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fe84:	e00f      	b.n	800fea6 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 800fe86:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fe8a:	3328      	adds	r3, #40	; 0x28
 800fe8c:	2101      	movs	r1, #1
 800fe8e:	4618      	mov	r0, r3
 800fe90:	f001 fe96 	bl	8011bc0 <RCCEx_PLL3_Config>
 800fe94:	4603      	mov	r3, r0
 800fe96:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fe9a:	e004      	b.n	800fea6 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 800fe9c:	2301      	movs	r3, #1
 800fe9e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800fea2:	e000      	b.n	800fea6 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 800fea4:	bf00      	nop
 800fea6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800feaa:	2b00      	cmp	r3, #0
 800feac:	d10b      	bne.n	800fec6 <HAL_RCCEx_PeriphCLKConfig+0xb9e>
 800feae:	4b6c      	ldr	r3, [pc, #432]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800feb0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800feb2:	f023 0107 	bic.w	r1, r3, #7
 800feb6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800feba:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800febe:	4a68      	ldr	r2, [pc, #416]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800fec0:	430b      	orrs	r3, r1
 800fec2:	6593      	str	r3, [r2, #88]	; 0x58
 800fec4:	e003      	b.n	800fece <HAL_RCCEx_PeriphCLKConfig+0xba6>
 800fec6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800feca:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800fece:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fed2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fed6:	f002 0320 	and.w	r3, r2, #32
 800feda:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800fede:	2300      	movs	r3, #0
 800fee0:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800fee4:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800fee8:	460b      	mov	r3, r1
 800feea:	4313      	orrs	r3, r2
 800feec:	d055      	beq.n	800ff9a <HAL_RCCEx_PeriphCLKConfig+0xc72>
 800feee:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800fef2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800fef6:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800fefa:	d033      	beq.n	800ff64 <HAL_RCCEx_PeriphCLKConfig+0xc3c>
 800fefc:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800ff00:	d82c      	bhi.n	800ff5c <HAL_RCCEx_PeriphCLKConfig+0xc34>
 800ff02:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ff06:	d02f      	beq.n	800ff68 <HAL_RCCEx_PeriphCLKConfig+0xc40>
 800ff08:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ff0c:	d826      	bhi.n	800ff5c <HAL_RCCEx_PeriphCLKConfig+0xc34>
 800ff0e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800ff12:	d02b      	beq.n	800ff6c <HAL_RCCEx_PeriphCLKConfig+0xc44>
 800ff14:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800ff18:	d820      	bhi.n	800ff5c <HAL_RCCEx_PeriphCLKConfig+0xc34>
 800ff1a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800ff1e:	d012      	beq.n	800ff46 <HAL_RCCEx_PeriphCLKConfig+0xc1e>
 800ff20:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800ff24:	d81a      	bhi.n	800ff5c <HAL_RCCEx_PeriphCLKConfig+0xc34>
 800ff26:	2b00      	cmp	r3, #0
 800ff28:	d022      	beq.n	800ff70 <HAL_RCCEx_PeriphCLKConfig+0xc48>
 800ff2a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800ff2e:	d115      	bne.n	800ff5c <HAL_RCCEx_PeriphCLKConfig+0xc34>
 800ff30:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800ff34:	3308      	adds	r3, #8
 800ff36:	2100      	movs	r1, #0
 800ff38:	4618      	mov	r0, r3
 800ff3a:	f001 fd8f 	bl	8011a5c <RCCEx_PLL2_Config>
 800ff3e:	4603      	mov	r3, r0
 800ff40:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800ff44:	e015      	b.n	800ff72 <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 800ff46:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800ff4a:	3328      	adds	r3, #40	; 0x28
 800ff4c:	2102      	movs	r1, #2
 800ff4e:	4618      	mov	r0, r3
 800ff50:	f001 fe36 	bl	8011bc0 <RCCEx_PLL3_Config>
 800ff54:	4603      	mov	r3, r0
 800ff56:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800ff5a:	e00a      	b.n	800ff72 <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 800ff5c:	2301      	movs	r3, #1
 800ff5e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 800ff62:	e006      	b.n	800ff72 <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 800ff64:	bf00      	nop
 800ff66:	e004      	b.n	800ff72 <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 800ff68:	bf00      	nop
 800ff6a:	e002      	b.n	800ff72 <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 800ff6c:	bf00      	nop
 800ff6e:	e000      	b.n	800ff72 <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 800ff70:	bf00      	nop
 800ff72:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800ff76:	2b00      	cmp	r3, #0
 800ff78:	d10b      	bne.n	800ff92 <HAL_RCCEx_PeriphCLKConfig+0xc6a>
 800ff7a:	4b39      	ldr	r3, [pc, #228]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800ff7c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800ff7e:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 800ff82:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800ff86:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800ff8a:	4a35      	ldr	r2, [pc, #212]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800ff8c:	430b      	orrs	r3, r1
 800ff8e:	6553      	str	r3, [r2, #84]	; 0x54
 800ff90:	e003      	b.n	800ff9a <HAL_RCCEx_PeriphCLKConfig+0xc72>
 800ff92:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800ff96:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 800ff9a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800ff9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ffa2:	f002 0340 	and.w	r3, r2, #64	; 0x40
 800ffa6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800ffaa:	2300      	movs	r3, #0
 800ffac:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800ffb0:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	; 0xa0
 800ffb4:	460b      	mov	r3, r1
 800ffb6:	4313      	orrs	r3, r2
 800ffb8:	d058      	beq.n	801006c <HAL_RCCEx_PeriphCLKConfig+0xd44>
 800ffba:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800ffbe:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800ffc2:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 800ffc6:	d033      	beq.n	8010030 <HAL_RCCEx_PeriphCLKConfig+0xd08>
 800ffc8:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 800ffcc:	d82c      	bhi.n	8010028 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 800ffce:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ffd2:	d02f      	beq.n	8010034 <HAL_RCCEx_PeriphCLKConfig+0xd0c>
 800ffd4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ffd8:	d826      	bhi.n	8010028 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 800ffda:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800ffde:	d02b      	beq.n	8010038 <HAL_RCCEx_PeriphCLKConfig+0xd10>
 800ffe0:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800ffe4:	d820      	bhi.n	8010028 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 800ffe6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800ffea:	d012      	beq.n	8010012 <HAL_RCCEx_PeriphCLKConfig+0xcea>
 800ffec:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800fff0:	d81a      	bhi.n	8010028 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 800fff2:	2b00      	cmp	r3, #0
 800fff4:	d022      	beq.n	801003c <HAL_RCCEx_PeriphCLKConfig+0xd14>
 800fff6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800fffa:	d115      	bne.n	8010028 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 800fffc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010000:	3308      	adds	r3, #8
 8010002:	2100      	movs	r1, #0
 8010004:	4618      	mov	r0, r3
 8010006:	f001 fd29 	bl	8011a5c <RCCEx_PLL2_Config>
 801000a:	4603      	mov	r3, r0
 801000c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8010010:	e015      	b.n	801003e <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8010012:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010016:	3328      	adds	r3, #40	; 0x28
 8010018:	2102      	movs	r1, #2
 801001a:	4618      	mov	r0, r3
 801001c:	f001 fdd0 	bl	8011bc0 <RCCEx_PLL3_Config>
 8010020:	4603      	mov	r3, r0
 8010022:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8010026:	e00a      	b.n	801003e <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8010028:	2301      	movs	r3, #1
 801002a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801002e:	e006      	b.n	801003e <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8010030:	bf00      	nop
 8010032:	e004      	b.n	801003e <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8010034:	bf00      	nop
 8010036:	e002      	b.n	801003e <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8010038:	bf00      	nop
 801003a:	e000      	b.n	801003e <HAL_RCCEx_PeriphCLKConfig+0xd16>
 801003c:	bf00      	nop
 801003e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010042:	2b00      	cmp	r3, #0
 8010044:	d10e      	bne.n	8010064 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
 8010046:	4b06      	ldr	r3, [pc, #24]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8010048:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801004a:	f423 51e0 	bic.w	r1, r3, #7168	; 0x1c00
 801004e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010052:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8010056:	4a02      	ldr	r2, [pc, #8]	; (8010060 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8010058:	430b      	orrs	r3, r1
 801005a:	6593      	str	r3, [r2, #88]	; 0x58
 801005c:	e006      	b.n	801006c <HAL_RCCEx_PeriphCLKConfig+0xd44>
 801005e:	bf00      	nop
 8010060:	58024400 	.word	0x58024400
 8010064:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010068:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 801006c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010070:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010074:	f002 0380 	and.w	r3, r2, #128	; 0x80
 8010078:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 801007c:	2300      	movs	r3, #0
 801007e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8010082:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	; 0x98
 8010086:	460b      	mov	r3, r1
 8010088:	4313      	orrs	r3, r2
 801008a:	d055      	beq.n	8010138 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 801008c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010090:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010094:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8010098:	d033      	beq.n	8010102 <HAL_RCCEx_PeriphCLKConfig+0xdda>
 801009a:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 801009e:	d82c      	bhi.n	80100fa <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 80100a0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80100a4:	d02f      	beq.n	8010106 <HAL_RCCEx_PeriphCLKConfig+0xdde>
 80100a6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80100aa:	d826      	bhi.n	80100fa <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 80100ac:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 80100b0:	d02b      	beq.n	801010a <HAL_RCCEx_PeriphCLKConfig+0xde2>
 80100b2:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 80100b6:	d820      	bhi.n	80100fa <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 80100b8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80100bc:	d012      	beq.n	80100e4 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 80100be:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80100c2:	d81a      	bhi.n	80100fa <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 80100c4:	2b00      	cmp	r3, #0
 80100c6:	d022      	beq.n	801010e <HAL_RCCEx_PeriphCLKConfig+0xde6>
 80100c8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80100cc:	d115      	bne.n	80100fa <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 80100ce:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80100d2:	3308      	adds	r3, #8
 80100d4:	2100      	movs	r1, #0
 80100d6:	4618      	mov	r0, r3
 80100d8:	f001 fcc0 	bl	8011a5c <RCCEx_PLL2_Config>
 80100dc:	4603      	mov	r3, r0
 80100de:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 80100e2:	e015      	b.n	8010110 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 80100e4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80100e8:	3328      	adds	r3, #40	; 0x28
 80100ea:	2102      	movs	r1, #2
 80100ec:	4618      	mov	r0, r3
 80100ee:	f001 fd67 	bl	8011bc0 <RCCEx_PLL3_Config>
 80100f2:	4603      	mov	r3, r0
 80100f4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 80100f8:	e00a      	b.n	8010110 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 80100fa:	2301      	movs	r3, #1
 80100fc:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8010100:	e006      	b.n	8010110 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8010102:	bf00      	nop
 8010104:	e004      	b.n	8010110 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8010106:	bf00      	nop
 8010108:	e002      	b.n	8010110 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 801010a:	bf00      	nop
 801010c:	e000      	b.n	8010110 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 801010e:	bf00      	nop
 8010110:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010114:	2b00      	cmp	r3, #0
 8010116:	d10b      	bne.n	8010130 <HAL_RCCEx_PeriphCLKConfig+0xe08>
 8010118:	4ba1      	ldr	r3, [pc, #644]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 801011a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801011c:	f423 4160 	bic.w	r1, r3, #57344	; 0xe000
 8010120:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010124:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010128:	4a9d      	ldr	r2, [pc, #628]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 801012a:	430b      	orrs	r3, r1
 801012c:	6593      	str	r3, [r2, #88]	; 0x58
 801012e:	e003      	b.n	8010138 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 8010130:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010134:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 8010138:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801013c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010140:	f002 0308 	and.w	r3, r2, #8
 8010144:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8010148:	2300      	movs	r3, #0
 801014a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 801014e:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	; 0x90
 8010152:	460b      	mov	r3, r1
 8010154:	4313      	orrs	r3, r2
 8010156:	d01e      	beq.n	8010196 <HAL_RCCEx_PeriphCLKConfig+0xe6e>
 8010158:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801015c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010160:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8010164:	d10c      	bne.n	8010180 <HAL_RCCEx_PeriphCLKConfig+0xe58>
 8010166:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801016a:	3328      	adds	r3, #40	; 0x28
 801016c:	2102      	movs	r1, #2
 801016e:	4618      	mov	r0, r3
 8010170:	f001 fd26 	bl	8011bc0 <RCCEx_PLL3_Config>
 8010174:	4603      	mov	r3, r0
 8010176:	2b00      	cmp	r3, #0
 8010178:	d002      	beq.n	8010180 <HAL_RCCEx_PeriphCLKConfig+0xe58>
 801017a:	2301      	movs	r3, #1
 801017c:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 8010180:	4b87      	ldr	r3, [pc, #540]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8010182:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010184:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8010188:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801018c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010190:	4a83      	ldr	r2, [pc, #524]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8010192:	430b      	orrs	r3, r1
 8010194:	6553      	str	r3, [r2, #84]	; 0x54
 8010196:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801019a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801019e:	f002 0310 	and.w	r3, r2, #16
 80101a2:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80101a6:	2300      	movs	r3, #0
 80101a8:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80101ac:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	; 0x88
 80101b0:	460b      	mov	r3, r1
 80101b2:	4313      	orrs	r3, r2
 80101b4:	d01e      	beq.n	80101f4 <HAL_RCCEx_PeriphCLKConfig+0xecc>
 80101b6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80101ba:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80101be:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80101c2:	d10c      	bne.n	80101de <HAL_RCCEx_PeriphCLKConfig+0xeb6>
 80101c4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80101c8:	3328      	adds	r3, #40	; 0x28
 80101ca:	2102      	movs	r1, #2
 80101cc:	4618      	mov	r0, r3
 80101ce:	f001 fcf7 	bl	8011bc0 <RCCEx_PLL3_Config>
 80101d2:	4603      	mov	r3, r0
 80101d4:	2b00      	cmp	r3, #0
 80101d6:	d002      	beq.n	80101de <HAL_RCCEx_PeriphCLKConfig+0xeb6>
 80101d8:	2301      	movs	r3, #1
 80101da:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 80101de:	4b70      	ldr	r3, [pc, #448]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 80101e0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80101e2:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80101e6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80101ea:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80101ee:	4a6c      	ldr	r2, [pc, #432]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 80101f0:	430b      	orrs	r3, r1
 80101f2:	6593      	str	r3, [r2, #88]	; 0x58
 80101f4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80101f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101fc:	f402 2300 	and.w	r3, r2, #524288	; 0x80000
 8010200:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8010204:	2300      	movs	r3, #0
 8010206:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 801020a:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	; 0x80
 801020e:	460b      	mov	r3, r1
 8010210:	4313      	orrs	r3, r2
 8010212:	d03e      	beq.n	8010292 <HAL_RCCEx_PeriphCLKConfig+0xf6a>
 8010214:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010218:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 801021c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010220:	d022      	beq.n	8010268 <HAL_RCCEx_PeriphCLKConfig+0xf40>
 8010222:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010226:	d81b      	bhi.n	8010260 <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8010228:	2b00      	cmp	r3, #0
 801022a:	d003      	beq.n	8010234 <HAL_RCCEx_PeriphCLKConfig+0xf0c>
 801022c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8010230:	d00b      	beq.n	801024a <HAL_RCCEx_PeriphCLKConfig+0xf22>
 8010232:	e015      	b.n	8010260 <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8010234:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010238:	3308      	adds	r3, #8
 801023a:	2100      	movs	r1, #0
 801023c:	4618      	mov	r0, r3
 801023e:	f001 fc0d 	bl	8011a5c <RCCEx_PLL2_Config>
 8010242:	4603      	mov	r3, r0
 8010244:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8010248:	e00f      	b.n	801026a <HAL_RCCEx_PeriphCLKConfig+0xf42>
 801024a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801024e:	3328      	adds	r3, #40	; 0x28
 8010250:	2102      	movs	r1, #2
 8010252:	4618      	mov	r0, r3
 8010254:	f001 fcb4 	bl	8011bc0 <RCCEx_PLL3_Config>
 8010258:	4603      	mov	r3, r0
 801025a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801025e:	e004      	b.n	801026a <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8010260:	2301      	movs	r3, #1
 8010262:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8010266:	e000      	b.n	801026a <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8010268:	bf00      	nop
 801026a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 801026e:	2b00      	cmp	r3, #0
 8010270:	d10b      	bne.n	801028a <HAL_RCCEx_PeriphCLKConfig+0xf62>
 8010272:	4b4b      	ldr	r3, [pc, #300]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8010274:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8010276:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 801027a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801027e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8010282:	4a47      	ldr	r2, [pc, #284]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8010284:	430b      	orrs	r3, r1
 8010286:	6593      	str	r3, [r2, #88]	; 0x58
 8010288:	e003      	b.n	8010292 <HAL_RCCEx_PeriphCLKConfig+0xf6a>
 801028a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 801028e:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 8010292:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010296:	e9d3 2300 	ldrd	r2, r3, [r3]
 801029a:	f402 2380 	and.w	r3, r2, #262144	; 0x40000
 801029e:	67bb      	str	r3, [r7, #120]	; 0x78
 80102a0:	2300      	movs	r3, #0
 80102a2:	67fb      	str	r3, [r7, #124]	; 0x7c
 80102a4:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	; 0x78
 80102a8:	460b      	mov	r3, r1
 80102aa:	4313      	orrs	r3, r2
 80102ac:	d03b      	beq.n	8010326 <HAL_RCCEx_PeriphCLKConfig+0xffe>
 80102ae:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80102b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80102b6:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 80102ba:	d01f      	beq.n	80102fc <HAL_RCCEx_PeriphCLKConfig+0xfd4>
 80102bc:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 80102c0:	d818      	bhi.n	80102f4 <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 80102c2:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80102c6:	d003      	beq.n	80102d0 <HAL_RCCEx_PeriphCLKConfig+0xfa8>
 80102c8:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80102cc:	d007      	beq.n	80102de <HAL_RCCEx_PeriphCLKConfig+0xfb6>
 80102ce:	e011      	b.n	80102f4 <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 80102d0:	4b33      	ldr	r3, [pc, #204]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 80102d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80102d4:	4a32      	ldr	r2, [pc, #200]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 80102d6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80102da:	62d3      	str	r3, [r2, #44]	; 0x2c
 80102dc:	e00f      	b.n	80102fe <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 80102de:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80102e2:	3328      	adds	r3, #40	; 0x28
 80102e4:	2101      	movs	r1, #1
 80102e6:	4618      	mov	r0, r3
 80102e8:	f001 fc6a 	bl	8011bc0 <RCCEx_PLL3_Config>
 80102ec:	4603      	mov	r3, r0
 80102ee:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 80102f2:	e004      	b.n	80102fe <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 80102f4:	2301      	movs	r3, #1
 80102f6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 80102fa:	e000      	b.n	80102fe <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 80102fc:	bf00      	nop
 80102fe:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010302:	2b00      	cmp	r3, #0
 8010304:	d10b      	bne.n	801031e <HAL_RCCEx_PeriphCLKConfig+0xff6>
 8010306:	4b26      	ldr	r3, [pc, #152]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8010308:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801030a:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 801030e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010312:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010316:	4a22      	ldr	r2, [pc, #136]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8010318:	430b      	orrs	r3, r1
 801031a:	6553      	str	r3, [r2, #84]	; 0x54
 801031c:	e003      	b.n	8010326 <HAL_RCCEx_PeriphCLKConfig+0xffe>
 801031e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010322:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 8010326:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801032a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801032e:	f402 3380 	and.w	r3, r2, #65536	; 0x10000
 8010332:	673b      	str	r3, [r7, #112]	; 0x70
 8010334:	2300      	movs	r3, #0
 8010336:	677b      	str	r3, [r7, #116]	; 0x74
 8010338:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	; 0x70
 801033c:	460b      	mov	r3, r1
 801033e:	4313      	orrs	r3, r2
 8010340:	d034      	beq.n	80103ac <HAL_RCCEx_PeriphCLKConfig+0x1084>
 8010342:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010346:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010348:	2b00      	cmp	r3, #0
 801034a:	d003      	beq.n	8010354 <HAL_RCCEx_PeriphCLKConfig+0x102c>
 801034c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8010350:	d007      	beq.n	8010362 <HAL_RCCEx_PeriphCLKConfig+0x103a>
 8010352:	e011      	b.n	8010378 <HAL_RCCEx_PeriphCLKConfig+0x1050>
 8010354:	4b12      	ldr	r3, [pc, #72]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8010356:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010358:	4a11      	ldr	r2, [pc, #68]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 801035a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 801035e:	62d3      	str	r3, [r2, #44]	; 0x2c
 8010360:	e00e      	b.n	8010380 <HAL_RCCEx_PeriphCLKConfig+0x1058>
 8010362:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010366:	3308      	adds	r3, #8
 8010368:	2102      	movs	r1, #2
 801036a:	4618      	mov	r0, r3
 801036c:	f001 fb76 	bl	8011a5c <RCCEx_PLL2_Config>
 8010370:	4603      	mov	r3, r0
 8010372:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8010376:	e003      	b.n	8010380 <HAL_RCCEx_PeriphCLKConfig+0x1058>
 8010378:	2301      	movs	r3, #1
 801037a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801037e:	bf00      	nop
 8010380:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010384:	2b00      	cmp	r3, #0
 8010386:	d10d      	bne.n	80103a4 <HAL_RCCEx_PeriphCLKConfig+0x107c>
 8010388:	4b05      	ldr	r3, [pc, #20]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 801038a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801038c:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8010390:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010394:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010396:	4a02      	ldr	r2, [pc, #8]	; (80103a0 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8010398:	430b      	orrs	r3, r1
 801039a:	64d3      	str	r3, [r2, #76]	; 0x4c
 801039c:	e006      	b.n	80103ac <HAL_RCCEx_PeriphCLKConfig+0x1084>
 801039e:	bf00      	nop
 80103a0:	58024400 	.word	0x58024400
 80103a4:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80103a8:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 80103ac:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80103b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103b4:	f002 5300 	and.w	r3, r2, #536870912	; 0x20000000
 80103b8:	66bb      	str	r3, [r7, #104]	; 0x68
 80103ba:	2300      	movs	r3, #0
 80103bc:	66fb      	str	r3, [r7, #108]	; 0x6c
 80103be:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	; 0x68
 80103c2:	460b      	mov	r3, r1
 80103c4:	4313      	orrs	r3, r2
 80103c6:	d00c      	beq.n	80103e2 <HAL_RCCEx_PeriphCLKConfig+0x10ba>
 80103c8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80103cc:	3328      	adds	r3, #40	; 0x28
 80103ce:	2102      	movs	r1, #2
 80103d0:	4618      	mov	r0, r3
 80103d2:	f001 fbf5 	bl	8011bc0 <RCCEx_PLL3_Config>
 80103d6:	4603      	mov	r3, r0
 80103d8:	2b00      	cmp	r3, #0
 80103da:	d002      	beq.n	80103e2 <HAL_RCCEx_PeriphCLKConfig+0x10ba>
 80103dc:	2301      	movs	r3, #1
 80103de:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 80103e2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80103e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103ea:	f402 3300 	and.w	r3, r2, #131072	; 0x20000
 80103ee:	663b      	str	r3, [r7, #96]	; 0x60
 80103f0:	2300      	movs	r3, #0
 80103f2:	667b      	str	r3, [r7, #100]	; 0x64
 80103f4:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	; 0x60
 80103f8:	460b      	mov	r3, r1
 80103fa:	4313      	orrs	r3, r2
 80103fc:	d038      	beq.n	8010470 <HAL_RCCEx_PeriphCLKConfig+0x1148>
 80103fe:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010402:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010406:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801040a:	d018      	beq.n	801043e <HAL_RCCEx_PeriphCLKConfig+0x1116>
 801040c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010410:	d811      	bhi.n	8010436 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 8010412:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010416:	d014      	beq.n	8010442 <HAL_RCCEx_PeriphCLKConfig+0x111a>
 8010418:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801041c:	d80b      	bhi.n	8010436 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 801041e:	2b00      	cmp	r3, #0
 8010420:	d011      	beq.n	8010446 <HAL_RCCEx_PeriphCLKConfig+0x111e>
 8010422:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010426:	d106      	bne.n	8010436 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 8010428:	4bc3      	ldr	r3, [pc, #780]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 801042a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801042c:	4ac2      	ldr	r2, [pc, #776]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 801042e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8010432:	62d3      	str	r3, [r2, #44]	; 0x2c
 8010434:	e008      	b.n	8010448 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8010436:	2301      	movs	r3, #1
 8010438:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801043c:	e004      	b.n	8010448 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 801043e:	bf00      	nop
 8010440:	e002      	b.n	8010448 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8010442:	bf00      	nop
 8010444:	e000      	b.n	8010448 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8010446:	bf00      	nop
 8010448:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 801044c:	2b00      	cmp	r3, #0
 801044e:	d10b      	bne.n	8010468 <HAL_RCCEx_PeriphCLKConfig+0x1140>
 8010450:	4bb9      	ldr	r3, [pc, #740]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8010452:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010454:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8010458:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801045c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010460:	4ab5      	ldr	r2, [pc, #724]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8010462:	430b      	orrs	r3, r1
 8010464:	6553      	str	r3, [r2, #84]	; 0x54
 8010466:	e003      	b.n	8010470 <HAL_RCCEx_PeriphCLKConfig+0x1148>
 8010468:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 801046c:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 8010470:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010474:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010478:	f402 1380 	and.w	r3, r2, #1048576	; 0x100000
 801047c:	65bb      	str	r3, [r7, #88]	; 0x58
 801047e:	2300      	movs	r3, #0
 8010480:	65fb      	str	r3, [r7, #92]	; 0x5c
 8010482:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	; 0x58
 8010486:	460b      	mov	r3, r1
 8010488:	4313      	orrs	r3, r2
 801048a:	d009      	beq.n	80104a0 <HAL_RCCEx_PeriphCLKConfig+0x1178>
 801048c:	4baa      	ldr	r3, [pc, #680]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 801048e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010490:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8010494:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010498:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801049a:	4aa7      	ldr	r2, [pc, #668]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 801049c:	430b      	orrs	r3, r1
 801049e:	6513      	str	r3, [r2, #80]	; 0x50
 80104a0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80104a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80104a8:	f002 5380 	and.w	r3, r2, #268435456	; 0x10000000
 80104ac:	653b      	str	r3, [r7, #80]	; 0x50
 80104ae:	2300      	movs	r3, #0
 80104b0:	657b      	str	r3, [r7, #84]	; 0x54
 80104b2:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	; 0x50
 80104b6:	460b      	mov	r3, r1
 80104b8:	4313      	orrs	r3, r2
 80104ba:	d00a      	beq.n	80104d2 <HAL_RCCEx_PeriphCLKConfig+0x11aa>
 80104bc:	4b9e      	ldr	r3, [pc, #632]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80104be:	691b      	ldr	r3, [r3, #16]
 80104c0:	f423 4180 	bic.w	r1, r3, #16384	; 0x4000
 80104c4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80104c8:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80104cc:	4a9a      	ldr	r2, [pc, #616]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80104ce:	430b      	orrs	r3, r1
 80104d0:	6113      	str	r3, [r2, #16]
 80104d2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80104d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80104da:	f402 1300 	and.w	r3, r2, #2097152	; 0x200000
 80104de:	64bb      	str	r3, [r7, #72]	; 0x48
 80104e0:	2300      	movs	r3, #0
 80104e2:	64fb      	str	r3, [r7, #76]	; 0x4c
 80104e4:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	; 0x48
 80104e8:	460b      	mov	r3, r1
 80104ea:	4313      	orrs	r3, r2
 80104ec:	d009      	beq.n	8010502 <HAL_RCCEx_PeriphCLKConfig+0x11da>
 80104ee:	4b92      	ldr	r3, [pc, #584]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80104f0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80104f2:	f023 7180 	bic.w	r1, r3, #16777216	; 0x1000000
 80104f6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80104fa:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80104fc:	4a8e      	ldr	r2, [pc, #568]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80104fe:	430b      	orrs	r3, r1
 8010500:	6513      	str	r3, [r2, #80]	; 0x50
 8010502:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010506:	e9d3 2300 	ldrd	r2, r3, [r3]
 801050a:	f002 4380 	and.w	r3, r2, #1073741824	; 0x40000000
 801050e:	643b      	str	r3, [r7, #64]	; 0x40
 8010510:	2300      	movs	r3, #0
 8010512:	647b      	str	r3, [r7, #68]	; 0x44
 8010514:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 8010518:	460b      	mov	r3, r1
 801051a:	4313      	orrs	r3, r2
 801051c:	d00e      	beq.n	801053c <HAL_RCCEx_PeriphCLKConfig+0x1214>
 801051e:	4b86      	ldr	r3, [pc, #536]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8010520:	691b      	ldr	r3, [r3, #16]
 8010522:	4a85      	ldr	r2, [pc, #532]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8010524:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8010528:	6113      	str	r3, [r2, #16]
 801052a:	4b83      	ldr	r3, [pc, #524]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 801052c:	6919      	ldr	r1, [r3, #16]
 801052e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010532:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010536:	4a80      	ldr	r2, [pc, #512]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8010538:	430b      	orrs	r3, r1
 801053a:	6113      	str	r3, [r2, #16]
 801053c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010540:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010544:	f002 4300 	and.w	r3, r2, #2147483648	; 0x80000000
 8010548:	63bb      	str	r3, [r7, #56]	; 0x38
 801054a:	2300      	movs	r3, #0
 801054c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801054e:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	; 0x38
 8010552:	460b      	mov	r3, r1
 8010554:	4313      	orrs	r3, r2
 8010556:	d009      	beq.n	801056c <HAL_RCCEx_PeriphCLKConfig+0x1244>
 8010558:	4b77      	ldr	r3, [pc, #476]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 801055a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801055c:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 8010560:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010564:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010566:	4a74      	ldr	r2, [pc, #464]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8010568:	430b      	orrs	r3, r1
 801056a:	64d3      	str	r3, [r2, #76]	; 0x4c
 801056c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010570:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010574:	f402 0300 	and.w	r3, r2, #8388608	; 0x800000
 8010578:	633b      	str	r3, [r7, #48]	; 0x30
 801057a:	2300      	movs	r3, #0
 801057c:	637b      	str	r3, [r7, #52]	; 0x34
 801057e:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 8010582:	460b      	mov	r3, r1
 8010584:	4313      	orrs	r3, r2
 8010586:	d00a      	beq.n	801059e <HAL_RCCEx_PeriphCLKConfig+0x1276>
 8010588:	4b6b      	ldr	r3, [pc, #428]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 801058a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801058c:	f423 0140 	bic.w	r1, r3, #12582912	; 0xc00000
 8010590:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010594:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010598:	4a67      	ldr	r2, [pc, #412]	; (8010738 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 801059a:	430b      	orrs	r3, r1
 801059c:	6553      	str	r3, [r2, #84]	; 0x54
 801059e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80105a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105a6:	2100      	movs	r1, #0
 80105a8:	62b9      	str	r1, [r7, #40]	; 0x28
 80105aa:	f003 0301 	and.w	r3, r3, #1
 80105ae:	62fb      	str	r3, [r7, #44]	; 0x2c
 80105b0:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	; 0x28
 80105b4:	460b      	mov	r3, r1
 80105b6:	4313      	orrs	r3, r2
 80105b8:	d011      	beq.n	80105de <HAL_RCCEx_PeriphCLKConfig+0x12b6>
 80105ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80105be:	3308      	adds	r3, #8
 80105c0:	2100      	movs	r1, #0
 80105c2:	4618      	mov	r0, r3
 80105c4:	f001 fa4a 	bl	8011a5c <RCCEx_PLL2_Config>
 80105c8:	4603      	mov	r3, r0
 80105ca:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 80105ce:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80105d2:	2b00      	cmp	r3, #0
 80105d4:	d003      	beq.n	80105de <HAL_RCCEx_PeriphCLKConfig+0x12b6>
 80105d6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80105da:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 80105de:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80105e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105e6:	2100      	movs	r1, #0
 80105e8:	6239      	str	r1, [r7, #32]
 80105ea:	f003 0302 	and.w	r3, r3, #2
 80105ee:	627b      	str	r3, [r7, #36]	; 0x24
 80105f0:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 80105f4:	460b      	mov	r3, r1
 80105f6:	4313      	orrs	r3, r2
 80105f8:	d011      	beq.n	801061e <HAL_RCCEx_PeriphCLKConfig+0x12f6>
 80105fa:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80105fe:	3308      	adds	r3, #8
 8010600:	2101      	movs	r1, #1
 8010602:	4618      	mov	r0, r3
 8010604:	f001 fa2a 	bl	8011a5c <RCCEx_PLL2_Config>
 8010608:	4603      	mov	r3, r0
 801060a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801060e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010612:	2b00      	cmp	r3, #0
 8010614:	d003      	beq.n	801061e <HAL_RCCEx_PeriphCLKConfig+0x12f6>
 8010616:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 801061a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 801061e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010622:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010626:	2100      	movs	r1, #0
 8010628:	61b9      	str	r1, [r7, #24]
 801062a:	f003 0304 	and.w	r3, r3, #4
 801062e:	61fb      	str	r3, [r7, #28]
 8010630:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 8010634:	460b      	mov	r3, r1
 8010636:	4313      	orrs	r3, r2
 8010638:	d011      	beq.n	801065e <HAL_RCCEx_PeriphCLKConfig+0x1336>
 801063a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801063e:	3308      	adds	r3, #8
 8010640:	2102      	movs	r1, #2
 8010642:	4618      	mov	r0, r3
 8010644:	f001 fa0a 	bl	8011a5c <RCCEx_PLL2_Config>
 8010648:	4603      	mov	r3, r0
 801064a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801064e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010652:	2b00      	cmp	r3, #0
 8010654:	d003      	beq.n	801065e <HAL_RCCEx_PeriphCLKConfig+0x1336>
 8010656:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 801065a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 801065e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8010662:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010666:	2100      	movs	r1, #0
 8010668:	6139      	str	r1, [r7, #16]
 801066a:	f003 0308 	and.w	r3, r3, #8
 801066e:	617b      	str	r3, [r7, #20]
 8010670:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8010674:	460b      	mov	r3, r1
 8010676:	4313      	orrs	r3, r2
 8010678:	d011      	beq.n	801069e <HAL_RCCEx_PeriphCLKConfig+0x1376>
 801067a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 801067e:	3328      	adds	r3, #40	; 0x28
 8010680:	2100      	movs	r1, #0
 8010682:	4618      	mov	r0, r3
 8010684:	f001 fa9c 	bl	8011bc0 <RCCEx_PLL3_Config>
 8010688:	4603      	mov	r3, r0
 801068a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801068e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010692:	2b00      	cmp	r3, #0
 8010694:	d003      	beq.n	801069e <HAL_RCCEx_PeriphCLKConfig+0x1376>
 8010696:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 801069a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 801069e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80106a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80106a6:	2100      	movs	r1, #0
 80106a8:	60b9      	str	r1, [r7, #8]
 80106aa:	f003 0310 	and.w	r3, r3, #16
 80106ae:	60fb      	str	r3, [r7, #12]
 80106b0:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80106b4:	460b      	mov	r3, r1
 80106b6:	4313      	orrs	r3, r2
 80106b8:	d011      	beq.n	80106de <HAL_RCCEx_PeriphCLKConfig+0x13b6>
 80106ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80106be:	3328      	adds	r3, #40	; 0x28
 80106c0:	2101      	movs	r1, #1
 80106c2:	4618      	mov	r0, r3
 80106c4:	f001 fa7c 	bl	8011bc0 <RCCEx_PLL3_Config>
 80106c8:	4603      	mov	r3, r0
 80106ca:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 80106ce:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80106d2:	2b00      	cmp	r3, #0
 80106d4:	d003      	beq.n	80106de <HAL_RCCEx_PeriphCLKConfig+0x13b6>
 80106d6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80106da:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 80106de:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80106e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80106e6:	2100      	movs	r1, #0
 80106e8:	6039      	str	r1, [r7, #0]
 80106ea:	f003 0320 	and.w	r3, r3, #32
 80106ee:	607b      	str	r3, [r7, #4]
 80106f0:	e9d7 1200 	ldrd	r1, r2, [r7]
 80106f4:	460b      	mov	r3, r1
 80106f6:	4313      	orrs	r3, r2
 80106f8:	d011      	beq.n	801071e <HAL_RCCEx_PeriphCLKConfig+0x13f6>
 80106fa:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80106fe:	3328      	adds	r3, #40	; 0x28
 8010700:	2102      	movs	r1, #2
 8010702:	4618      	mov	r0, r3
 8010704:	f001 fa5c 	bl	8011bc0 <RCCEx_PLL3_Config>
 8010708:	4603      	mov	r3, r0
 801070a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801070e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8010712:	2b00      	cmp	r3, #0
 8010714:	d003      	beq.n	801071e <HAL_RCCEx_PeriphCLKConfig+0x13f6>
 8010716:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 801071a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 801071e:	f897 3126 	ldrb.w	r3, [r7, #294]	; 0x126
 8010722:	2b00      	cmp	r3, #0
 8010724:	d101      	bne.n	801072a <HAL_RCCEx_PeriphCLKConfig+0x1402>
 8010726:	2300      	movs	r3, #0
 8010728:	e000      	b.n	801072c <HAL_RCCEx_PeriphCLKConfig+0x1404>
 801072a:	2301      	movs	r3, #1
 801072c:	4618      	mov	r0, r3
 801072e:	f507 7794 	add.w	r7, r7, #296	; 0x128
 8010732:	46bd      	mov	sp, r7
 8010734:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8010738:	58024400 	.word	0x58024400

0801073c <HAL_RCCEx_GetPeriphCLKFreq>:
 801073c:	b580      	push	{r7, lr}
 801073e:	b090      	sub	sp, #64	; 0x40
 8010740:	af00      	add	r7, sp, #0
 8010742:	e9c7 0100 	strd	r0, r1, [r7]
 8010746:	e9d7 2300 	ldrd	r2, r3, [r7]
 801074a:	f5a2 7180 	sub.w	r1, r2, #256	; 0x100
 801074e:	430b      	orrs	r3, r1
 8010750:	f040 8094 	bne.w	801087c <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8010754:	4b9e      	ldr	r3, [pc, #632]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8010756:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010758:	f003 0307 	and.w	r3, r3, #7
 801075c:	633b      	str	r3, [r7, #48]	; 0x30
 801075e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010760:	2b04      	cmp	r3, #4
 8010762:	f200 8087 	bhi.w	8010874 <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 8010766:	a201      	add	r2, pc, #4	; (adr r2, 801076c <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 8010768:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801076c:	08010781 	.word	0x08010781
 8010770:	080107a9 	.word	0x080107a9
 8010774:	080107d1 	.word	0x080107d1
 8010778:	0801086d 	.word	0x0801086d
 801077c:	080107f9 	.word	0x080107f9
 8010780:	4b93      	ldr	r3, [pc, #588]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8010782:	681b      	ldr	r3, [r3, #0]
 8010784:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8010788:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 801078c:	d108      	bne.n	80107a0 <HAL_RCCEx_GetPeriphCLKFreq+0x64>
 801078e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8010792:	4618      	mov	r0, r3
 8010794:	f001 f810 	bl	80117b8 <HAL_RCCEx_GetPLL1ClockFreq>
 8010798:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801079a:	63fb      	str	r3, [r7, #60]	; 0x3c
 801079c:	f000 bd45 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80107a0:	2300      	movs	r3, #0
 80107a2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80107a4:	f000 bd41 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80107a8:	4b89      	ldr	r3, [pc, #548]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80107aa:	681b      	ldr	r3, [r3, #0]
 80107ac:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80107b0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80107b4:	d108      	bne.n	80107c8 <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
 80107b6:	f107 0318 	add.w	r3, r7, #24
 80107ba:	4618      	mov	r0, r3
 80107bc:	f000 fd54 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 80107c0:	69bb      	ldr	r3, [r7, #24]
 80107c2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80107c4:	f000 bd31 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80107c8:	2300      	movs	r3, #0
 80107ca:	63fb      	str	r3, [r7, #60]	; 0x3c
 80107cc:	f000 bd2d 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80107d0:	4b7f      	ldr	r3, [pc, #508]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80107d2:	681b      	ldr	r3, [r3, #0]
 80107d4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80107d8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80107dc:	d108      	bne.n	80107f0 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
 80107de:	f107 030c 	add.w	r3, r7, #12
 80107e2:	4618      	mov	r0, r3
 80107e4:	f000 fe94 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 80107e8:	68fb      	ldr	r3, [r7, #12]
 80107ea:	63fb      	str	r3, [r7, #60]	; 0x3c
 80107ec:	f000 bd1d 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80107f0:	2300      	movs	r3, #0
 80107f2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80107f4:	f000 bd19 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80107f8:	4b75      	ldr	r3, [pc, #468]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80107fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80107fc:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8010800:	637b      	str	r3, [r7, #52]	; 0x34
 8010802:	4b73      	ldr	r3, [pc, #460]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8010804:	681b      	ldr	r3, [r3, #0]
 8010806:	f003 0304 	and.w	r3, r3, #4
 801080a:	2b04      	cmp	r3, #4
 801080c:	d10c      	bne.n	8010828 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 801080e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010810:	2b00      	cmp	r3, #0
 8010812:	d109      	bne.n	8010828 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 8010814:	4b6e      	ldr	r3, [pc, #440]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8010816:	681b      	ldr	r3, [r3, #0]
 8010818:	08db      	lsrs	r3, r3, #3
 801081a:	f003 0303 	and.w	r3, r3, #3
 801081e:	4a6d      	ldr	r2, [pc, #436]	; (80109d4 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 8010820:	fa22 f303 	lsr.w	r3, r2, r3
 8010824:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010826:	e01f      	b.n	8010868 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 8010828:	4b69      	ldr	r3, [pc, #420]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 801082a:	681b      	ldr	r3, [r3, #0]
 801082c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010830:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010834:	d106      	bne.n	8010844 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 8010836:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010838:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 801083c:	d102      	bne.n	8010844 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 801083e:	4b66      	ldr	r3, [pc, #408]	; (80109d8 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>)
 8010840:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010842:	e011      	b.n	8010868 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 8010844:	4b62      	ldr	r3, [pc, #392]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8010846:	681b      	ldr	r3, [r3, #0]
 8010848:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801084c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010850:	d106      	bne.n	8010860 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 8010852:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010854:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010858:	d102      	bne.n	8010860 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 801085a:	4b60      	ldr	r3, [pc, #384]	; (80109dc <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>)
 801085c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801085e:	e003      	b.n	8010868 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 8010860:	2300      	movs	r3, #0
 8010862:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010864:	f000 bce1 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010868:	f000 bcdf 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 801086c:	4b5c      	ldr	r3, [pc, #368]	; (80109e0 <HAL_RCCEx_GetPeriphCLKFreq+0x2a4>)
 801086e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010870:	f000 bcdb 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010874:	2300      	movs	r3, #0
 8010876:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010878:	f000 bcd7 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 801087c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010880:	f5a2 7100 	sub.w	r1, r2, #512	; 0x200
 8010884:	430b      	orrs	r3, r1
 8010886:	f040 80ad 	bne.w	80109e4 <HAL_RCCEx_GetPeriphCLKFreq+0x2a8>
 801088a:	4b51      	ldr	r3, [pc, #324]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 801088c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801088e:	f403 73e0 	and.w	r3, r3, #448	; 0x1c0
 8010892:	633b      	str	r3, [r7, #48]	; 0x30
 8010894:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010896:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801089a:	d056      	beq.n	801094a <HAL_RCCEx_GetPeriphCLKFreq+0x20e>
 801089c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801089e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80108a2:	f200 8090 	bhi.w	80109c6 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 80108a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80108a8:	2bc0      	cmp	r3, #192	; 0xc0
 80108aa:	f000 8088 	beq.w	80109be <HAL_RCCEx_GetPeriphCLKFreq+0x282>
 80108ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80108b0:	2bc0      	cmp	r3, #192	; 0xc0
 80108b2:	f200 8088 	bhi.w	80109c6 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 80108b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80108b8:	2b80      	cmp	r3, #128	; 0x80
 80108ba:	d032      	beq.n	8010922 <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 80108bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80108be:	2b80      	cmp	r3, #128	; 0x80
 80108c0:	f200 8081 	bhi.w	80109c6 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 80108c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80108c6:	2b00      	cmp	r3, #0
 80108c8:	d003      	beq.n	80108d2 <HAL_RCCEx_GetPeriphCLKFreq+0x196>
 80108ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80108cc:	2b40      	cmp	r3, #64	; 0x40
 80108ce:	d014      	beq.n	80108fa <HAL_RCCEx_GetPeriphCLKFreq+0x1be>
 80108d0:	e079      	b.n	80109c6 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 80108d2:	4b3f      	ldr	r3, [pc, #252]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80108d4:	681b      	ldr	r3, [r3, #0]
 80108d6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80108da:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80108de:	d108      	bne.n	80108f2 <HAL_RCCEx_GetPeriphCLKFreq+0x1b6>
 80108e0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80108e4:	4618      	mov	r0, r3
 80108e6:	f000 ff67 	bl	80117b8 <HAL_RCCEx_GetPLL1ClockFreq>
 80108ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80108ec:	63fb      	str	r3, [r7, #60]	; 0x3c
 80108ee:	f000 bc9c 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80108f2:	2300      	movs	r3, #0
 80108f4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80108f6:	f000 bc98 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80108fa:	4b35      	ldr	r3, [pc, #212]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80108fc:	681b      	ldr	r3, [r3, #0]
 80108fe:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8010902:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8010906:	d108      	bne.n	801091a <HAL_RCCEx_GetPeriphCLKFreq+0x1de>
 8010908:	f107 0318 	add.w	r3, r7, #24
 801090c:	4618      	mov	r0, r3
 801090e:	f000 fcab 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8010912:	69bb      	ldr	r3, [r7, #24]
 8010914:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010916:	f000 bc88 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 801091a:	2300      	movs	r3, #0
 801091c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801091e:	f000 bc84 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010922:	4b2b      	ldr	r3, [pc, #172]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8010924:	681b      	ldr	r3, [r3, #0]
 8010926:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 801092a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 801092e:	d108      	bne.n	8010942 <HAL_RCCEx_GetPeriphCLKFreq+0x206>
 8010930:	f107 030c 	add.w	r3, r7, #12
 8010934:	4618      	mov	r0, r3
 8010936:	f000 fdeb 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 801093a:	68fb      	ldr	r3, [r7, #12]
 801093c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801093e:	f000 bc74 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010942:	2300      	movs	r3, #0
 8010944:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010946:	f000 bc70 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 801094a:	4b21      	ldr	r3, [pc, #132]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 801094c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801094e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8010952:	637b      	str	r3, [r7, #52]	; 0x34
 8010954:	4b1e      	ldr	r3, [pc, #120]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8010956:	681b      	ldr	r3, [r3, #0]
 8010958:	f003 0304 	and.w	r3, r3, #4
 801095c:	2b04      	cmp	r3, #4
 801095e:	d10c      	bne.n	801097a <HAL_RCCEx_GetPeriphCLKFreq+0x23e>
 8010960:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010962:	2b00      	cmp	r3, #0
 8010964:	d109      	bne.n	801097a <HAL_RCCEx_GetPeriphCLKFreq+0x23e>
 8010966:	4b1a      	ldr	r3, [pc, #104]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8010968:	681b      	ldr	r3, [r3, #0]
 801096a:	08db      	lsrs	r3, r3, #3
 801096c:	f003 0303 	and.w	r3, r3, #3
 8010970:	4a18      	ldr	r2, [pc, #96]	; (80109d4 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 8010972:	fa22 f303 	lsr.w	r3, r2, r3
 8010976:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010978:	e01f      	b.n	80109ba <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 801097a:	4b15      	ldr	r3, [pc, #84]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 801097c:	681b      	ldr	r3, [r3, #0]
 801097e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010982:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010986:	d106      	bne.n	8010996 <HAL_RCCEx_GetPeriphCLKFreq+0x25a>
 8010988:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801098a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 801098e:	d102      	bne.n	8010996 <HAL_RCCEx_GetPeriphCLKFreq+0x25a>
 8010990:	4b11      	ldr	r3, [pc, #68]	; (80109d8 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>)
 8010992:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010994:	e011      	b.n	80109ba <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 8010996:	4b0e      	ldr	r3, [pc, #56]	; (80109d0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8010998:	681b      	ldr	r3, [r3, #0]
 801099a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801099e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80109a2:	d106      	bne.n	80109b2 <HAL_RCCEx_GetPeriphCLKFreq+0x276>
 80109a4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80109a6:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80109aa:	d102      	bne.n	80109b2 <HAL_RCCEx_GetPeriphCLKFreq+0x276>
 80109ac:	4b0b      	ldr	r3, [pc, #44]	; (80109dc <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>)
 80109ae:	63fb      	str	r3, [r7, #60]	; 0x3c
 80109b0:	e003      	b.n	80109ba <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 80109b2:	2300      	movs	r3, #0
 80109b4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80109b6:	f000 bc38 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80109ba:	f000 bc36 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80109be:	4b08      	ldr	r3, [pc, #32]	; (80109e0 <HAL_RCCEx_GetPeriphCLKFreq+0x2a4>)
 80109c0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80109c2:	f000 bc32 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80109c6:	2300      	movs	r3, #0
 80109c8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80109ca:	f000 bc2e 	b.w	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80109ce:	bf00      	nop
 80109d0:	58024400 	.word	0x58024400
 80109d4:	03d09000 	.word	0x03d09000
 80109d8:	003d0900 	.word	0x003d0900
 80109dc:	017d7840 	.word	0x017d7840
 80109e0:	00bb8000 	.word	0x00bb8000
 80109e4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80109e8:	f5a2 6180 	sub.w	r1, r2, #1024	; 0x400
 80109ec:	430b      	orrs	r3, r1
 80109ee:	f040 809c 	bne.w	8010b2a <HAL_RCCEx_GetPeriphCLKFreq+0x3ee>
 80109f2:	4b9e      	ldr	r3, [pc, #632]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80109f4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80109f6:	f403 0360 	and.w	r3, r3, #14680064	; 0xe00000
 80109fa:	633b      	str	r3, [r7, #48]	; 0x30
 80109fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80109fe:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8010a02:	d054      	beq.n	8010aae <HAL_RCCEx_GetPeriphCLKFreq+0x372>
 8010a04:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010a06:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8010a0a:	f200 808b 	bhi.w	8010b24 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 8010a0e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010a10:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8010a14:	f000 8083 	beq.w	8010b1e <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
 8010a18:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010a1a:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8010a1e:	f200 8081 	bhi.w	8010b24 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 8010a22:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010a24:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8010a28:	d02f      	beq.n	8010a8a <HAL_RCCEx_GetPeriphCLKFreq+0x34e>
 8010a2a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010a2c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8010a30:	d878      	bhi.n	8010b24 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 8010a32:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010a34:	2b00      	cmp	r3, #0
 8010a36:	d004      	beq.n	8010a42 <HAL_RCCEx_GetPeriphCLKFreq+0x306>
 8010a38:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010a3a:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8010a3e:	d012      	beq.n	8010a66 <HAL_RCCEx_GetPeriphCLKFreq+0x32a>
 8010a40:	e070      	b.n	8010b24 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 8010a42:	4b8a      	ldr	r3, [pc, #552]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010a44:	681b      	ldr	r3, [r3, #0]
 8010a46:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8010a4a:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8010a4e:	d107      	bne.n	8010a60 <HAL_RCCEx_GetPeriphCLKFreq+0x324>
 8010a50:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8010a54:	4618      	mov	r0, r3
 8010a56:	f000 feaf 	bl	80117b8 <HAL_RCCEx_GetPLL1ClockFreq>
 8010a5a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010a5c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010a5e:	e3e4      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010a60:	2300      	movs	r3, #0
 8010a62:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010a64:	e3e1      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010a66:	4b81      	ldr	r3, [pc, #516]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010a68:	681b      	ldr	r3, [r3, #0]
 8010a6a:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8010a6e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8010a72:	d107      	bne.n	8010a84 <HAL_RCCEx_GetPeriphCLKFreq+0x348>
 8010a74:	f107 0318 	add.w	r3, r7, #24
 8010a78:	4618      	mov	r0, r3
 8010a7a:	f000 fbf5 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8010a7e:	69bb      	ldr	r3, [r7, #24]
 8010a80:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010a82:	e3d2      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010a84:	2300      	movs	r3, #0
 8010a86:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010a88:	e3cf      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010a8a:	4b78      	ldr	r3, [pc, #480]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010a8c:	681b      	ldr	r3, [r3, #0]
 8010a8e:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8010a92:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010a96:	d107      	bne.n	8010aa8 <HAL_RCCEx_GetPeriphCLKFreq+0x36c>
 8010a98:	f107 030c 	add.w	r3, r7, #12
 8010a9c:	4618      	mov	r0, r3
 8010a9e:	f000 fd37 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 8010aa2:	68fb      	ldr	r3, [r7, #12]
 8010aa4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010aa6:	e3c0      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010aa8:	2300      	movs	r3, #0
 8010aaa:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010aac:	e3bd      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010aae:	4b6f      	ldr	r3, [pc, #444]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010ab0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010ab2:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8010ab6:	637b      	str	r3, [r7, #52]	; 0x34
 8010ab8:	4b6c      	ldr	r3, [pc, #432]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010aba:	681b      	ldr	r3, [r3, #0]
 8010abc:	f003 0304 	and.w	r3, r3, #4
 8010ac0:	2b04      	cmp	r3, #4
 8010ac2:	d10c      	bne.n	8010ade <HAL_RCCEx_GetPeriphCLKFreq+0x3a2>
 8010ac4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010ac6:	2b00      	cmp	r3, #0
 8010ac8:	d109      	bne.n	8010ade <HAL_RCCEx_GetPeriphCLKFreq+0x3a2>
 8010aca:	4b68      	ldr	r3, [pc, #416]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010acc:	681b      	ldr	r3, [r3, #0]
 8010ace:	08db      	lsrs	r3, r3, #3
 8010ad0:	f003 0303 	and.w	r3, r3, #3
 8010ad4:	4a66      	ldr	r2, [pc, #408]	; (8010c70 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 8010ad6:	fa22 f303 	lsr.w	r3, r2, r3
 8010ada:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010adc:	e01e      	b.n	8010b1c <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
 8010ade:	4b63      	ldr	r3, [pc, #396]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010ae0:	681b      	ldr	r3, [r3, #0]
 8010ae2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010ae6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010aea:	d106      	bne.n	8010afa <HAL_RCCEx_GetPeriphCLKFreq+0x3be>
 8010aec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010aee:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8010af2:	d102      	bne.n	8010afa <HAL_RCCEx_GetPeriphCLKFreq+0x3be>
 8010af4:	4b5f      	ldr	r3, [pc, #380]	; (8010c74 <HAL_RCCEx_GetPeriphCLKFreq+0x538>)
 8010af6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010af8:	e010      	b.n	8010b1c <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
 8010afa:	4b5c      	ldr	r3, [pc, #368]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010afc:	681b      	ldr	r3, [r3, #0]
 8010afe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8010b02:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010b06:	d106      	bne.n	8010b16 <HAL_RCCEx_GetPeriphCLKFreq+0x3da>
 8010b08:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010b0a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010b0e:	d102      	bne.n	8010b16 <HAL_RCCEx_GetPeriphCLKFreq+0x3da>
 8010b10:	4b59      	ldr	r3, [pc, #356]	; (8010c78 <HAL_RCCEx_GetPeriphCLKFreq+0x53c>)
 8010b12:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010b14:	e002      	b.n	8010b1c <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
 8010b16:	2300      	movs	r3, #0
 8010b18:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010b1a:	e386      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010b1c:	e385      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010b1e:	4b57      	ldr	r3, [pc, #348]	; (8010c7c <HAL_RCCEx_GetPeriphCLKFreq+0x540>)
 8010b20:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010b22:	e382      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010b24:	2300      	movs	r3, #0
 8010b26:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010b28:	e37f      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010b2a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010b2e:	f5a2 6100 	sub.w	r1, r2, #2048	; 0x800
 8010b32:	430b      	orrs	r3, r1
 8010b34:	f040 80a7 	bne.w	8010c86 <HAL_RCCEx_GetPeriphCLKFreq+0x54a>
 8010b38:	4b4c      	ldr	r3, [pc, #304]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010b3a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8010b3c:	f003 63e0 	and.w	r3, r3, #117440512	; 0x7000000
 8010b40:	633b      	str	r3, [r7, #48]	; 0x30
 8010b42:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010b44:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8010b48:	d055      	beq.n	8010bf6 <HAL_RCCEx_GetPeriphCLKFreq+0x4ba>
 8010b4a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010b4c:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8010b50:	f200 8096 	bhi.w	8010c80 <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8010b54:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010b56:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8010b5a:	f000 8084 	beq.w	8010c66 <HAL_RCCEx_GetPeriphCLKFreq+0x52a>
 8010b5e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010b60:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8010b64:	f200 808c 	bhi.w	8010c80 <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8010b68:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010b6a:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8010b6e:	d030      	beq.n	8010bd2 <HAL_RCCEx_GetPeriphCLKFreq+0x496>
 8010b70:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010b72:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8010b76:	f200 8083 	bhi.w	8010c80 <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8010b7a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010b7c:	2b00      	cmp	r3, #0
 8010b7e:	d004      	beq.n	8010b8a <HAL_RCCEx_GetPeriphCLKFreq+0x44e>
 8010b80:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010b82:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8010b86:	d012      	beq.n	8010bae <HAL_RCCEx_GetPeriphCLKFreq+0x472>
 8010b88:	e07a      	b.n	8010c80 <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8010b8a:	4b38      	ldr	r3, [pc, #224]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010b8c:	681b      	ldr	r3, [r3, #0]
 8010b8e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8010b92:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8010b96:	d107      	bne.n	8010ba8 <HAL_RCCEx_GetPeriphCLKFreq+0x46c>
 8010b98:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8010b9c:	4618      	mov	r0, r3
 8010b9e:	f000 fe0b 	bl	80117b8 <HAL_RCCEx_GetPLL1ClockFreq>
 8010ba2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010ba4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010ba6:	e340      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010ba8:	2300      	movs	r3, #0
 8010baa:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010bac:	e33d      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010bae:	4b2f      	ldr	r3, [pc, #188]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010bb0:	681b      	ldr	r3, [r3, #0]
 8010bb2:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8010bb6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8010bba:	d107      	bne.n	8010bcc <HAL_RCCEx_GetPeriphCLKFreq+0x490>
 8010bbc:	f107 0318 	add.w	r3, r7, #24
 8010bc0:	4618      	mov	r0, r3
 8010bc2:	f000 fb51 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8010bc6:	69bb      	ldr	r3, [r7, #24]
 8010bc8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010bca:	e32e      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010bcc:	2300      	movs	r3, #0
 8010bce:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010bd0:	e32b      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010bd2:	4b26      	ldr	r3, [pc, #152]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010bd4:	681b      	ldr	r3, [r3, #0]
 8010bd6:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8010bda:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010bde:	d107      	bne.n	8010bf0 <HAL_RCCEx_GetPeriphCLKFreq+0x4b4>
 8010be0:	f107 030c 	add.w	r3, r7, #12
 8010be4:	4618      	mov	r0, r3
 8010be6:	f000 fc93 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 8010bea:	68fb      	ldr	r3, [r7, #12]
 8010bec:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010bee:	e31c      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010bf0:	2300      	movs	r3, #0
 8010bf2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010bf4:	e319      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010bf6:	4b1d      	ldr	r3, [pc, #116]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010bf8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010bfa:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8010bfe:	637b      	str	r3, [r7, #52]	; 0x34
 8010c00:	4b1a      	ldr	r3, [pc, #104]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010c02:	681b      	ldr	r3, [r3, #0]
 8010c04:	f003 0304 	and.w	r3, r3, #4
 8010c08:	2b04      	cmp	r3, #4
 8010c0a:	d10c      	bne.n	8010c26 <HAL_RCCEx_GetPeriphCLKFreq+0x4ea>
 8010c0c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010c0e:	2b00      	cmp	r3, #0
 8010c10:	d109      	bne.n	8010c26 <HAL_RCCEx_GetPeriphCLKFreq+0x4ea>
 8010c12:	4b16      	ldr	r3, [pc, #88]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010c14:	681b      	ldr	r3, [r3, #0]
 8010c16:	08db      	lsrs	r3, r3, #3
 8010c18:	f003 0303 	and.w	r3, r3, #3
 8010c1c:	4a14      	ldr	r2, [pc, #80]	; (8010c70 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 8010c1e:	fa22 f303 	lsr.w	r3, r2, r3
 8010c22:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010c24:	e01e      	b.n	8010c64 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
 8010c26:	4b11      	ldr	r3, [pc, #68]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010c28:	681b      	ldr	r3, [r3, #0]
 8010c2a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010c2e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010c32:	d106      	bne.n	8010c42 <HAL_RCCEx_GetPeriphCLKFreq+0x506>
 8010c34:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010c36:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8010c3a:	d102      	bne.n	8010c42 <HAL_RCCEx_GetPeriphCLKFreq+0x506>
 8010c3c:	4b0d      	ldr	r3, [pc, #52]	; (8010c74 <HAL_RCCEx_GetPeriphCLKFreq+0x538>)
 8010c3e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010c40:	e010      	b.n	8010c64 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
 8010c42:	4b0a      	ldr	r3, [pc, #40]	; (8010c6c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8010c44:	681b      	ldr	r3, [r3, #0]
 8010c46:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8010c4a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010c4e:	d106      	bne.n	8010c5e <HAL_RCCEx_GetPeriphCLKFreq+0x522>
 8010c50:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010c52:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010c56:	d102      	bne.n	8010c5e <HAL_RCCEx_GetPeriphCLKFreq+0x522>
 8010c58:	4b07      	ldr	r3, [pc, #28]	; (8010c78 <HAL_RCCEx_GetPeriphCLKFreq+0x53c>)
 8010c5a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010c5c:	e002      	b.n	8010c64 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
 8010c5e:	2300      	movs	r3, #0
 8010c60:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010c62:	e2e2      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010c64:	e2e1      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010c66:	4b05      	ldr	r3, [pc, #20]	; (8010c7c <HAL_RCCEx_GetPeriphCLKFreq+0x540>)
 8010c68:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010c6a:	e2de      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010c6c:	58024400 	.word	0x58024400
 8010c70:	03d09000 	.word	0x03d09000
 8010c74:	003d0900 	.word	0x003d0900
 8010c78:	017d7840 	.word	0x017d7840
 8010c7c:	00bb8000 	.word	0x00bb8000
 8010c80:	2300      	movs	r3, #0
 8010c82:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010c84:	e2d1      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010c86:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010c8a:	f5a2 5180 	sub.w	r1, r2, #4096	; 0x1000
 8010c8e:	430b      	orrs	r3, r1
 8010c90:	f040 809c 	bne.w	8010dcc <HAL_RCCEx_GetPeriphCLKFreq+0x690>
 8010c94:	4b93      	ldr	r3, [pc, #588]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010c96:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010c98:	f403 43e0 	and.w	r3, r3, #28672	; 0x7000
 8010c9c:	63bb      	str	r3, [r7, #56]	; 0x38
 8010c9e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010ca0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8010ca4:	d054      	beq.n	8010d50 <HAL_RCCEx_GetPeriphCLKFreq+0x614>
 8010ca6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010ca8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8010cac:	f200 808b 	bhi.w	8010dc6 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 8010cb0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010cb2:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8010cb6:	f000 8083 	beq.w	8010dc0 <HAL_RCCEx_GetPeriphCLKFreq+0x684>
 8010cba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010cbc:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8010cc0:	f200 8081 	bhi.w	8010dc6 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 8010cc4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010cc6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8010cca:	d02f      	beq.n	8010d2c <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
 8010ccc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010cce:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8010cd2:	d878      	bhi.n	8010dc6 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 8010cd4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010cd6:	2b00      	cmp	r3, #0
 8010cd8:	d004      	beq.n	8010ce4 <HAL_RCCEx_GetPeriphCLKFreq+0x5a8>
 8010cda:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010cdc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8010ce0:	d012      	beq.n	8010d08 <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
 8010ce2:	e070      	b.n	8010dc6 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 8010ce4:	4b7f      	ldr	r3, [pc, #508]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010ce6:	681b      	ldr	r3, [r3, #0]
 8010ce8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8010cec:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8010cf0:	d107      	bne.n	8010d02 <HAL_RCCEx_GetPeriphCLKFreq+0x5c6>
 8010cf2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8010cf6:	4618      	mov	r0, r3
 8010cf8:	f000 fd5e 	bl	80117b8 <HAL_RCCEx_GetPLL1ClockFreq>
 8010cfc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010cfe:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010d00:	e293      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010d02:	2300      	movs	r3, #0
 8010d04:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010d06:	e290      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010d08:	4b76      	ldr	r3, [pc, #472]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010d0a:	681b      	ldr	r3, [r3, #0]
 8010d0c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8010d10:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8010d14:	d107      	bne.n	8010d26 <HAL_RCCEx_GetPeriphCLKFreq+0x5ea>
 8010d16:	f107 0318 	add.w	r3, r7, #24
 8010d1a:	4618      	mov	r0, r3
 8010d1c:	f000 faa4 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8010d20:	69bb      	ldr	r3, [r7, #24]
 8010d22:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010d24:	e281      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010d26:	2300      	movs	r3, #0
 8010d28:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010d2a:	e27e      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010d2c:	4b6d      	ldr	r3, [pc, #436]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010d2e:	681b      	ldr	r3, [r3, #0]
 8010d30:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8010d34:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010d38:	d107      	bne.n	8010d4a <HAL_RCCEx_GetPeriphCLKFreq+0x60e>
 8010d3a:	f107 030c 	add.w	r3, r7, #12
 8010d3e:	4618      	mov	r0, r3
 8010d40:	f000 fbe6 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 8010d44:	68fb      	ldr	r3, [r7, #12]
 8010d46:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010d48:	e26f      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010d4a:	2300      	movs	r3, #0
 8010d4c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010d4e:	e26c      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010d50:	4b64      	ldr	r3, [pc, #400]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010d52:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010d54:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8010d58:	637b      	str	r3, [r7, #52]	; 0x34
 8010d5a:	4b62      	ldr	r3, [pc, #392]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010d5c:	681b      	ldr	r3, [r3, #0]
 8010d5e:	f003 0304 	and.w	r3, r3, #4
 8010d62:	2b04      	cmp	r3, #4
 8010d64:	d10c      	bne.n	8010d80 <HAL_RCCEx_GetPeriphCLKFreq+0x644>
 8010d66:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010d68:	2b00      	cmp	r3, #0
 8010d6a:	d109      	bne.n	8010d80 <HAL_RCCEx_GetPeriphCLKFreq+0x644>
 8010d6c:	4b5d      	ldr	r3, [pc, #372]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010d6e:	681b      	ldr	r3, [r3, #0]
 8010d70:	08db      	lsrs	r3, r3, #3
 8010d72:	f003 0303 	and.w	r3, r3, #3
 8010d76:	4a5c      	ldr	r2, [pc, #368]	; (8010ee8 <HAL_RCCEx_GetPeriphCLKFreq+0x7ac>)
 8010d78:	fa22 f303 	lsr.w	r3, r2, r3
 8010d7c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010d7e:	e01e      	b.n	8010dbe <HAL_RCCEx_GetPeriphCLKFreq+0x682>
 8010d80:	4b58      	ldr	r3, [pc, #352]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010d82:	681b      	ldr	r3, [r3, #0]
 8010d84:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010d88:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010d8c:	d106      	bne.n	8010d9c <HAL_RCCEx_GetPeriphCLKFreq+0x660>
 8010d8e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010d90:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8010d94:	d102      	bne.n	8010d9c <HAL_RCCEx_GetPeriphCLKFreq+0x660>
 8010d96:	4b55      	ldr	r3, [pc, #340]	; (8010eec <HAL_RCCEx_GetPeriphCLKFreq+0x7b0>)
 8010d98:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010d9a:	e010      	b.n	8010dbe <HAL_RCCEx_GetPeriphCLKFreq+0x682>
 8010d9c:	4b51      	ldr	r3, [pc, #324]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010d9e:	681b      	ldr	r3, [r3, #0]
 8010da0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8010da4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010da8:	d106      	bne.n	8010db8 <HAL_RCCEx_GetPeriphCLKFreq+0x67c>
 8010daa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010dac:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010db0:	d102      	bne.n	8010db8 <HAL_RCCEx_GetPeriphCLKFreq+0x67c>
 8010db2:	4b4f      	ldr	r3, [pc, #316]	; (8010ef0 <HAL_RCCEx_GetPeriphCLKFreq+0x7b4>)
 8010db4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010db6:	e002      	b.n	8010dbe <HAL_RCCEx_GetPeriphCLKFreq+0x682>
 8010db8:	2300      	movs	r3, #0
 8010dba:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010dbc:	e235      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010dbe:	e234      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010dc0:	4b4c      	ldr	r3, [pc, #304]	; (8010ef4 <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>)
 8010dc2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010dc4:	e231      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010dc6:	2300      	movs	r3, #0
 8010dc8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010dca:	e22e      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010dcc:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010dd0:	f5a2 5100 	sub.w	r1, r2, #8192	; 0x2000
 8010dd4:	430b      	orrs	r3, r1
 8010dd6:	f040 808f 	bne.w	8010ef8 <HAL_RCCEx_GetPeriphCLKFreq+0x7bc>
 8010dda:	4b42      	ldr	r3, [pc, #264]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010ddc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010dde:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
 8010de2:	63bb      	str	r3, [r7, #56]	; 0x38
 8010de4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010de6:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8010dea:	d06b      	beq.n	8010ec4 <HAL_RCCEx_GetPeriphCLKFreq+0x788>
 8010dec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010dee:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8010df2:	d874      	bhi.n	8010ede <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8010df4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010df6:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8010dfa:	d056      	beq.n	8010eaa <HAL_RCCEx_GetPeriphCLKFreq+0x76e>
 8010dfc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010dfe:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8010e02:	d86c      	bhi.n	8010ede <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8010e04:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010e06:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8010e0a:	d03b      	beq.n	8010e84 <HAL_RCCEx_GetPeriphCLKFreq+0x748>
 8010e0c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010e0e:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8010e12:	d864      	bhi.n	8010ede <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8010e14:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010e16:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010e1a:	d021      	beq.n	8010e60 <HAL_RCCEx_GetPeriphCLKFreq+0x724>
 8010e1c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010e1e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010e22:	d85c      	bhi.n	8010ede <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8010e24:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010e26:	2b00      	cmp	r3, #0
 8010e28:	d004      	beq.n	8010e34 <HAL_RCCEx_GetPeriphCLKFreq+0x6f8>
 8010e2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010e2c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8010e30:	d004      	beq.n	8010e3c <HAL_RCCEx_GetPeriphCLKFreq+0x700>
 8010e32:	e054      	b.n	8010ede <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8010e34:	f7fe fa0a 	bl	800f24c <HAL_RCC_GetPCLK1Freq>
 8010e38:	63f8      	str	r0, [r7, #60]	; 0x3c
 8010e3a:	e1f6      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010e3c:	4b29      	ldr	r3, [pc, #164]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010e3e:	681b      	ldr	r3, [r3, #0]
 8010e40:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8010e44:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8010e48:	d107      	bne.n	8010e5a <HAL_RCCEx_GetPeriphCLKFreq+0x71e>
 8010e4a:	f107 0318 	add.w	r3, r7, #24
 8010e4e:	4618      	mov	r0, r3
 8010e50:	f000 fa0a 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8010e54:	69fb      	ldr	r3, [r7, #28]
 8010e56:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010e58:	e1e7      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010e5a:	2300      	movs	r3, #0
 8010e5c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010e5e:	e1e4      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010e60:	4b20      	ldr	r3, [pc, #128]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010e62:	681b      	ldr	r3, [r3, #0]
 8010e64:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8010e68:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010e6c:	d107      	bne.n	8010e7e <HAL_RCCEx_GetPeriphCLKFreq+0x742>
 8010e6e:	f107 030c 	add.w	r3, r7, #12
 8010e72:	4618      	mov	r0, r3
 8010e74:	f000 fb4c 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 8010e78:	693b      	ldr	r3, [r7, #16]
 8010e7a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010e7c:	e1d5      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010e7e:	2300      	movs	r3, #0
 8010e80:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010e82:	e1d2      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010e84:	4b17      	ldr	r3, [pc, #92]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010e86:	681b      	ldr	r3, [r3, #0]
 8010e88:	f003 0304 	and.w	r3, r3, #4
 8010e8c:	2b04      	cmp	r3, #4
 8010e8e:	d109      	bne.n	8010ea4 <HAL_RCCEx_GetPeriphCLKFreq+0x768>
 8010e90:	4b14      	ldr	r3, [pc, #80]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010e92:	681b      	ldr	r3, [r3, #0]
 8010e94:	08db      	lsrs	r3, r3, #3
 8010e96:	f003 0303 	and.w	r3, r3, #3
 8010e9a:	4a13      	ldr	r2, [pc, #76]	; (8010ee8 <HAL_RCCEx_GetPeriphCLKFreq+0x7ac>)
 8010e9c:	fa22 f303 	lsr.w	r3, r2, r3
 8010ea0:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010ea2:	e1c2      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010ea4:	2300      	movs	r3, #0
 8010ea6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010ea8:	e1bf      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010eaa:	4b0e      	ldr	r3, [pc, #56]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010eac:	681b      	ldr	r3, [r3, #0]
 8010eae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010eb2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010eb6:	d102      	bne.n	8010ebe <HAL_RCCEx_GetPeriphCLKFreq+0x782>
 8010eb8:	4b0c      	ldr	r3, [pc, #48]	; (8010eec <HAL_RCCEx_GetPeriphCLKFreq+0x7b0>)
 8010eba:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010ebc:	e1b5      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010ebe:	2300      	movs	r3, #0
 8010ec0:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010ec2:	e1b2      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010ec4:	4b07      	ldr	r3, [pc, #28]	; (8010ee4 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8010ec6:	681b      	ldr	r3, [r3, #0]
 8010ec8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8010ecc:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010ed0:	d102      	bne.n	8010ed8 <HAL_RCCEx_GetPeriphCLKFreq+0x79c>
 8010ed2:	4b07      	ldr	r3, [pc, #28]	; (8010ef0 <HAL_RCCEx_GetPeriphCLKFreq+0x7b4>)
 8010ed4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010ed6:	e1a8      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010ed8:	2300      	movs	r3, #0
 8010eda:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010edc:	e1a5      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010ede:	2300      	movs	r3, #0
 8010ee0:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010ee2:	e1a2      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010ee4:	58024400 	.word	0x58024400
 8010ee8:	03d09000 	.word	0x03d09000
 8010eec:	003d0900 	.word	0x003d0900
 8010ef0:	017d7840 	.word	0x017d7840
 8010ef4:	00bb8000 	.word	0x00bb8000
 8010ef8:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010efc:	f5a2 2100 	sub.w	r1, r2, #524288	; 0x80000
 8010f00:	430b      	orrs	r3, r1
 8010f02:	d173      	bne.n	8010fec <HAL_RCCEx_GetPeriphCLKFreq+0x8b0>
 8010f04:	4b9c      	ldr	r3, [pc, #624]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8010f06:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8010f08:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8010f0c:	63bb      	str	r3, [r7, #56]	; 0x38
 8010f0e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010f10:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010f14:	d02f      	beq.n	8010f76 <HAL_RCCEx_GetPeriphCLKFreq+0x83a>
 8010f16:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010f18:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010f1c:	d863      	bhi.n	8010fe6 <HAL_RCCEx_GetPeriphCLKFreq+0x8aa>
 8010f1e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010f20:	2b00      	cmp	r3, #0
 8010f22:	d004      	beq.n	8010f2e <HAL_RCCEx_GetPeriphCLKFreq+0x7f2>
 8010f24:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010f26:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8010f2a:	d012      	beq.n	8010f52 <HAL_RCCEx_GetPeriphCLKFreq+0x816>
 8010f2c:	e05b      	b.n	8010fe6 <HAL_RCCEx_GetPeriphCLKFreq+0x8aa>
 8010f2e:	4b92      	ldr	r3, [pc, #584]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8010f30:	681b      	ldr	r3, [r3, #0]
 8010f32:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8010f36:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8010f3a:	d107      	bne.n	8010f4c <HAL_RCCEx_GetPeriphCLKFreq+0x810>
 8010f3c:	f107 0318 	add.w	r3, r7, #24
 8010f40:	4618      	mov	r0, r3
 8010f42:	f000 f991 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8010f46:	69bb      	ldr	r3, [r7, #24]
 8010f48:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010f4a:	e16e      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010f4c:	2300      	movs	r3, #0
 8010f4e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010f50:	e16b      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010f52:	4b89      	ldr	r3, [pc, #548]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8010f54:	681b      	ldr	r3, [r3, #0]
 8010f56:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8010f5a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010f5e:	d107      	bne.n	8010f70 <HAL_RCCEx_GetPeriphCLKFreq+0x834>
 8010f60:	f107 030c 	add.w	r3, r7, #12
 8010f64:	4618      	mov	r0, r3
 8010f66:	f000 fad3 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 8010f6a:	697b      	ldr	r3, [r7, #20]
 8010f6c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010f6e:	e15c      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010f70:	2300      	movs	r3, #0
 8010f72:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010f74:	e159      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010f76:	4b80      	ldr	r3, [pc, #512]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8010f78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010f7a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8010f7e:	637b      	str	r3, [r7, #52]	; 0x34
 8010f80:	4b7d      	ldr	r3, [pc, #500]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8010f82:	681b      	ldr	r3, [r3, #0]
 8010f84:	f003 0304 	and.w	r3, r3, #4
 8010f88:	2b04      	cmp	r3, #4
 8010f8a:	d10c      	bne.n	8010fa6 <HAL_RCCEx_GetPeriphCLKFreq+0x86a>
 8010f8c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010f8e:	2b00      	cmp	r3, #0
 8010f90:	d109      	bne.n	8010fa6 <HAL_RCCEx_GetPeriphCLKFreq+0x86a>
 8010f92:	4b79      	ldr	r3, [pc, #484]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8010f94:	681b      	ldr	r3, [r3, #0]
 8010f96:	08db      	lsrs	r3, r3, #3
 8010f98:	f003 0303 	and.w	r3, r3, #3
 8010f9c:	4a77      	ldr	r2, [pc, #476]	; (801117c <HAL_RCCEx_GetPeriphCLKFreq+0xa40>)
 8010f9e:	fa22 f303 	lsr.w	r3, r2, r3
 8010fa2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010fa4:	e01e      	b.n	8010fe4 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 8010fa6:	4b74      	ldr	r3, [pc, #464]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8010fa8:	681b      	ldr	r3, [r3, #0]
 8010faa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010fae:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010fb2:	d106      	bne.n	8010fc2 <HAL_RCCEx_GetPeriphCLKFreq+0x886>
 8010fb4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010fb6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8010fba:	d102      	bne.n	8010fc2 <HAL_RCCEx_GetPeriphCLKFreq+0x886>
 8010fbc:	4b70      	ldr	r3, [pc, #448]	; (8011180 <HAL_RCCEx_GetPeriphCLKFreq+0xa44>)
 8010fbe:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010fc0:	e010      	b.n	8010fe4 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 8010fc2:	4b6d      	ldr	r3, [pc, #436]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8010fc4:	681b      	ldr	r3, [r3, #0]
 8010fc6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8010fca:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8010fce:	d106      	bne.n	8010fde <HAL_RCCEx_GetPeriphCLKFreq+0x8a2>
 8010fd0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010fd2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8010fd6:	d102      	bne.n	8010fde <HAL_RCCEx_GetPeriphCLKFreq+0x8a2>
 8010fd8:	4b6a      	ldr	r3, [pc, #424]	; (8011184 <HAL_RCCEx_GetPeriphCLKFreq+0xa48>)
 8010fda:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010fdc:	e002      	b.n	8010fe4 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 8010fde:	2300      	movs	r3, #0
 8010fe0:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010fe2:	e122      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010fe4:	e121      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010fe6:	2300      	movs	r3, #0
 8010fe8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010fea:	e11e      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8010fec:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010ff0:	f5a2 3180 	sub.w	r1, r2, #65536	; 0x10000
 8010ff4:	430b      	orrs	r3, r1
 8010ff6:	d133      	bne.n	8011060 <HAL_RCCEx_GetPeriphCLKFreq+0x924>
 8010ff8:	4b5f      	ldr	r3, [pc, #380]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8010ffa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010ffc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8011000:	63bb      	str	r3, [r7, #56]	; 0x38
 8011002:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011004:	2b00      	cmp	r3, #0
 8011006:	d004      	beq.n	8011012 <HAL_RCCEx_GetPeriphCLKFreq+0x8d6>
 8011008:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801100a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 801100e:	d012      	beq.n	8011036 <HAL_RCCEx_GetPeriphCLKFreq+0x8fa>
 8011010:	e023      	b.n	801105a <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
 8011012:	4b59      	ldr	r3, [pc, #356]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8011014:	681b      	ldr	r3, [r3, #0]
 8011016:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801101a:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 801101e:	d107      	bne.n	8011030 <HAL_RCCEx_GetPeriphCLKFreq+0x8f4>
 8011020:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8011024:	4618      	mov	r0, r3
 8011026:	f000 fbc7 	bl	80117b8 <HAL_RCCEx_GetPLL1ClockFreq>
 801102a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801102c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801102e:	e0fc      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011030:	2300      	movs	r3, #0
 8011032:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011034:	e0f9      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011036:	4b50      	ldr	r3, [pc, #320]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8011038:	681b      	ldr	r3, [r3, #0]
 801103a:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 801103e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8011042:	d107      	bne.n	8011054 <HAL_RCCEx_GetPeriphCLKFreq+0x918>
 8011044:	f107 0318 	add.w	r3, r7, #24
 8011048:	4618      	mov	r0, r3
 801104a:	f000 f90d 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 801104e:	6a3b      	ldr	r3, [r7, #32]
 8011050:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011052:	e0ea      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011054:	2300      	movs	r3, #0
 8011056:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011058:	e0e7      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 801105a:	2300      	movs	r3, #0
 801105c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801105e:	e0e4      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011060:	e9d7 2300 	ldrd	r2, r3, [r7]
 8011064:	f5a2 4180 	sub.w	r1, r2, #16384	; 0x4000
 8011068:	430b      	orrs	r3, r1
 801106a:	f040 808d 	bne.w	8011188 <HAL_RCCEx_GetPeriphCLKFreq+0xa4c>
 801106e:	4b42      	ldr	r3, [pc, #264]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8011070:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8011072:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8011076:	63bb      	str	r3, [r7, #56]	; 0x38
 8011078:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801107a:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 801107e:	d06b      	beq.n	8011158 <HAL_RCCEx_GetPeriphCLKFreq+0xa1c>
 8011080:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011082:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8011086:	d874      	bhi.n	8011172 <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8011088:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801108a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801108e:	d056      	beq.n	801113e <HAL_RCCEx_GetPeriphCLKFreq+0xa02>
 8011090:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011092:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8011096:	d86c      	bhi.n	8011172 <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8011098:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801109a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 801109e:	d03b      	beq.n	8011118 <HAL_RCCEx_GetPeriphCLKFreq+0x9dc>
 80110a0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80110a2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 80110a6:	d864      	bhi.n	8011172 <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 80110a8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80110aa:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80110ae:	d021      	beq.n	80110f4 <HAL_RCCEx_GetPeriphCLKFreq+0x9b8>
 80110b0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80110b2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80110b6:	d85c      	bhi.n	8011172 <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 80110b8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80110ba:	2b00      	cmp	r3, #0
 80110bc:	d004      	beq.n	80110c8 <HAL_RCCEx_GetPeriphCLKFreq+0x98c>
 80110be:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80110c0:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80110c4:	d004      	beq.n	80110d0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>
 80110c6:	e054      	b.n	8011172 <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 80110c8:	f000 f8b8 	bl	801123c <HAL_RCCEx_GetD3PCLK1Freq>
 80110cc:	63f8      	str	r0, [r7, #60]	; 0x3c
 80110ce:	e0ac      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80110d0:	4b29      	ldr	r3, [pc, #164]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 80110d2:	681b      	ldr	r3, [r3, #0]
 80110d4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80110d8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80110dc:	d107      	bne.n	80110ee <HAL_RCCEx_GetPeriphCLKFreq+0x9b2>
 80110de:	f107 0318 	add.w	r3, r7, #24
 80110e2:	4618      	mov	r0, r3
 80110e4:	f000 f8c0 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 80110e8:	69fb      	ldr	r3, [r7, #28]
 80110ea:	63fb      	str	r3, [r7, #60]	; 0x3c
 80110ec:	e09d      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80110ee:	2300      	movs	r3, #0
 80110f0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80110f2:	e09a      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80110f4:	4b20      	ldr	r3, [pc, #128]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 80110f6:	681b      	ldr	r3, [r3, #0]
 80110f8:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80110fc:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8011100:	d107      	bne.n	8011112 <HAL_RCCEx_GetPeriphCLKFreq+0x9d6>
 8011102:	f107 030c 	add.w	r3, r7, #12
 8011106:	4618      	mov	r0, r3
 8011108:	f000 fa02 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 801110c:	693b      	ldr	r3, [r7, #16]
 801110e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011110:	e08b      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011112:	2300      	movs	r3, #0
 8011114:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011116:	e088      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011118:	4b17      	ldr	r3, [pc, #92]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 801111a:	681b      	ldr	r3, [r3, #0]
 801111c:	f003 0304 	and.w	r3, r3, #4
 8011120:	2b04      	cmp	r3, #4
 8011122:	d109      	bne.n	8011138 <HAL_RCCEx_GetPeriphCLKFreq+0x9fc>
 8011124:	4b14      	ldr	r3, [pc, #80]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8011126:	681b      	ldr	r3, [r3, #0]
 8011128:	08db      	lsrs	r3, r3, #3
 801112a:	f003 0303 	and.w	r3, r3, #3
 801112e:	4a13      	ldr	r2, [pc, #76]	; (801117c <HAL_RCCEx_GetPeriphCLKFreq+0xa40>)
 8011130:	fa22 f303 	lsr.w	r3, r2, r3
 8011134:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011136:	e078      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011138:	2300      	movs	r3, #0
 801113a:	63fb      	str	r3, [r7, #60]	; 0x3c
 801113c:	e075      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 801113e:	4b0e      	ldr	r3, [pc, #56]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8011140:	681b      	ldr	r3, [r3, #0]
 8011142:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011146:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801114a:	d102      	bne.n	8011152 <HAL_RCCEx_GetPeriphCLKFreq+0xa16>
 801114c:	4b0c      	ldr	r3, [pc, #48]	; (8011180 <HAL_RCCEx_GetPeriphCLKFreq+0xa44>)
 801114e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011150:	e06b      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011152:	2300      	movs	r3, #0
 8011154:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011156:	e068      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011158:	4b07      	ldr	r3, [pc, #28]	; (8011178 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 801115a:	681b      	ldr	r3, [r3, #0]
 801115c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8011160:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8011164:	d102      	bne.n	801116c <HAL_RCCEx_GetPeriphCLKFreq+0xa30>
 8011166:	4b07      	ldr	r3, [pc, #28]	; (8011184 <HAL_RCCEx_GetPeriphCLKFreq+0xa48>)
 8011168:	63fb      	str	r3, [r7, #60]	; 0x3c
 801116a:	e05e      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 801116c:	2300      	movs	r3, #0
 801116e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011170:	e05b      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011172:	2300      	movs	r3, #0
 8011174:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011176:	e058      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011178:	58024400 	.word	0x58024400
 801117c:	03d09000 	.word	0x03d09000
 8011180:	003d0900 	.word	0x003d0900
 8011184:	017d7840 	.word	0x017d7840
 8011188:	e9d7 2300 	ldrd	r2, r3, [r7]
 801118c:	f5a2 4100 	sub.w	r1, r2, #32768	; 0x8000
 8011190:	430b      	orrs	r3, r1
 8011192:	d148      	bne.n	8011226 <HAL_RCCEx_GetPeriphCLKFreq+0xaea>
 8011194:	4b27      	ldr	r3, [pc, #156]	; (8011234 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8011196:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011198:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 801119c:	63bb      	str	r3, [r7, #56]	; 0x38
 801119e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80111a0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80111a4:	d02a      	beq.n	80111fc <HAL_RCCEx_GetPeriphCLKFreq+0xac0>
 80111a6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80111a8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80111ac:	d838      	bhi.n	8011220 <HAL_RCCEx_GetPeriphCLKFreq+0xae4>
 80111ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80111b0:	2b00      	cmp	r3, #0
 80111b2:	d004      	beq.n	80111be <HAL_RCCEx_GetPeriphCLKFreq+0xa82>
 80111b4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80111b6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80111ba:	d00d      	beq.n	80111d8 <HAL_RCCEx_GetPeriphCLKFreq+0xa9c>
 80111bc:	e030      	b.n	8011220 <HAL_RCCEx_GetPeriphCLKFreq+0xae4>
 80111be:	4b1d      	ldr	r3, [pc, #116]	; (8011234 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 80111c0:	681b      	ldr	r3, [r3, #0]
 80111c2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80111c6:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80111ca:	d102      	bne.n	80111d2 <HAL_RCCEx_GetPeriphCLKFreq+0xa96>
 80111cc:	4b1a      	ldr	r3, [pc, #104]	; (8011238 <HAL_RCCEx_GetPeriphCLKFreq+0xafc>)
 80111ce:	63fb      	str	r3, [r7, #60]	; 0x3c
 80111d0:	e02b      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80111d2:	2300      	movs	r3, #0
 80111d4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80111d6:	e028      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80111d8:	4b16      	ldr	r3, [pc, #88]	; (8011234 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 80111da:	681b      	ldr	r3, [r3, #0]
 80111dc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80111e0:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80111e4:	d107      	bne.n	80111f6 <HAL_RCCEx_GetPeriphCLKFreq+0xaba>
 80111e6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80111ea:	4618      	mov	r0, r3
 80111ec:	f000 fae4 	bl	80117b8 <HAL_RCCEx_GetPLL1ClockFreq>
 80111f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80111f2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80111f4:	e019      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80111f6:	2300      	movs	r3, #0
 80111f8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80111fa:	e016      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80111fc:	4b0d      	ldr	r3, [pc, #52]	; (8011234 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 80111fe:	681b      	ldr	r3, [r3, #0]
 8011200:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8011204:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8011208:	d107      	bne.n	801121a <HAL_RCCEx_GetPeriphCLKFreq+0xade>
 801120a:	f107 0318 	add.w	r3, r7, #24
 801120e:	4618      	mov	r0, r3
 8011210:	f000 f82a 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8011214:	69fb      	ldr	r3, [r7, #28]
 8011216:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011218:	e007      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 801121a:	2300      	movs	r3, #0
 801121c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801121e:	e004      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011220:	2300      	movs	r3, #0
 8011222:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011224:	e001      	b.n	801122a <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8011226:	2300      	movs	r3, #0
 8011228:	63fb      	str	r3, [r7, #60]	; 0x3c
 801122a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801122c:	4618      	mov	r0, r3
 801122e:	3740      	adds	r7, #64	; 0x40
 8011230:	46bd      	mov	sp, r7
 8011232:	bd80      	pop	{r7, pc}
 8011234:	58024400 	.word	0x58024400
 8011238:	017d7840 	.word	0x017d7840

0801123c <HAL_RCCEx_GetD3PCLK1Freq>:
 801123c:	b580      	push	{r7, lr}
 801123e:	af00      	add	r7, sp, #0
 8011240:	f7fd ffd4 	bl	800f1ec <HAL_RCC_GetHCLKFreq>
 8011244:	4602      	mov	r2, r0
 8011246:	4b06      	ldr	r3, [pc, #24]	; (8011260 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8011248:	6a1b      	ldr	r3, [r3, #32]
 801124a:	091b      	lsrs	r3, r3, #4
 801124c:	f003 0307 	and.w	r3, r3, #7
 8011250:	4904      	ldr	r1, [pc, #16]	; (8011264 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8011252:	5ccb      	ldrb	r3, [r1, r3]
 8011254:	f003 031f 	and.w	r3, r3, #31
 8011258:	fa22 f303 	lsr.w	r3, r2, r3
 801125c:	4618      	mov	r0, r3
 801125e:	bd80      	pop	{r7, pc}
 8011260:	58024400 	.word	0x58024400
 8011264:	0801b854 	.word	0x0801b854

08011268 <HAL_RCCEx_GetPLL2ClockFreq>:
 8011268:	b480      	push	{r7}
 801126a:	b089      	sub	sp, #36	; 0x24
 801126c:	af00      	add	r7, sp, #0
 801126e:	6078      	str	r0, [r7, #4]
 8011270:	4ba1      	ldr	r3, [pc, #644]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8011272:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011274:	f003 0303 	and.w	r3, r3, #3
 8011278:	61bb      	str	r3, [r7, #24]
 801127a:	4b9f      	ldr	r3, [pc, #636]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 801127c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801127e:	0b1b      	lsrs	r3, r3, #12
 8011280:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8011284:	617b      	str	r3, [r7, #20]
 8011286:	4b9c      	ldr	r3, [pc, #624]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8011288:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801128a:	091b      	lsrs	r3, r3, #4
 801128c:	f003 0301 	and.w	r3, r3, #1
 8011290:	613b      	str	r3, [r7, #16]
 8011292:	4b99      	ldr	r3, [pc, #612]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8011294:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011296:	08db      	lsrs	r3, r3, #3
 8011298:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801129c:	693a      	ldr	r2, [r7, #16]
 801129e:	fb02 f303 	mul.w	r3, r2, r3
 80112a2:	ee07 3a90 	vmov	s15, r3
 80112a6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80112aa:	edc7 7a03 	vstr	s15, [r7, #12]
 80112ae:	697b      	ldr	r3, [r7, #20]
 80112b0:	2b00      	cmp	r3, #0
 80112b2:	f000 8111 	beq.w	80114d8 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 80112b6:	69bb      	ldr	r3, [r7, #24]
 80112b8:	2b02      	cmp	r3, #2
 80112ba:	f000 8083 	beq.w	80113c4 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 80112be:	69bb      	ldr	r3, [r7, #24]
 80112c0:	2b02      	cmp	r3, #2
 80112c2:	f200 80a1 	bhi.w	8011408 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 80112c6:	69bb      	ldr	r3, [r7, #24]
 80112c8:	2b00      	cmp	r3, #0
 80112ca:	d003      	beq.n	80112d4 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 80112cc:	69bb      	ldr	r3, [r7, #24]
 80112ce:	2b01      	cmp	r3, #1
 80112d0:	d056      	beq.n	8011380 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 80112d2:	e099      	b.n	8011408 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 80112d4:	4b88      	ldr	r3, [pc, #544]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80112d6:	681b      	ldr	r3, [r3, #0]
 80112d8:	f003 0320 	and.w	r3, r3, #32
 80112dc:	2b00      	cmp	r3, #0
 80112de:	d02d      	beq.n	801133c <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 80112e0:	4b85      	ldr	r3, [pc, #532]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80112e2:	681b      	ldr	r3, [r3, #0]
 80112e4:	08db      	lsrs	r3, r3, #3
 80112e6:	f003 0303 	and.w	r3, r3, #3
 80112ea:	4a84      	ldr	r2, [pc, #528]	; (80114fc <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 80112ec:	fa22 f303 	lsr.w	r3, r2, r3
 80112f0:	60bb      	str	r3, [r7, #8]
 80112f2:	68bb      	ldr	r3, [r7, #8]
 80112f4:	ee07 3a90 	vmov	s15, r3
 80112f8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80112fc:	697b      	ldr	r3, [r7, #20]
 80112fe:	ee07 3a90 	vmov	s15, r3
 8011302:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011306:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801130a:	4b7b      	ldr	r3, [pc, #492]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 801130c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801130e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8011312:	ee07 3a90 	vmov	s15, r3
 8011316:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801131a:	ed97 6a03 	vldr	s12, [r7, #12]
 801131e:	eddf 5a78 	vldr	s11, [pc, #480]	; 8011500 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8011322:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8011326:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801132a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801132e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011332:	ee67 7a27 	vmul.f32	s15, s14, s15
 8011336:	edc7 7a07 	vstr	s15, [r7, #28]
 801133a:	e087      	b.n	801144c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 801133c:	697b      	ldr	r3, [r7, #20]
 801133e:	ee07 3a90 	vmov	s15, r3
 8011342:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011346:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8011504 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 801134a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801134e:	4b6a      	ldr	r3, [pc, #424]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8011350:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011352:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8011356:	ee07 3a90 	vmov	s15, r3
 801135a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801135e:	ed97 6a03 	vldr	s12, [r7, #12]
 8011362:	eddf 5a67 	vldr	s11, [pc, #412]	; 8011500 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8011366:	eec6 7a25 	vdiv.f32	s15, s12, s11
 801136a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801136e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011372:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011376:	ee67 7a27 	vmul.f32	s15, s14, s15
 801137a:	edc7 7a07 	vstr	s15, [r7, #28]
 801137e:	e065      	b.n	801144c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8011380:	697b      	ldr	r3, [r7, #20]
 8011382:	ee07 3a90 	vmov	s15, r3
 8011386:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801138a:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8011508 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 801138e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8011392:	4b59      	ldr	r3, [pc, #356]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8011394:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011396:	f3c3 0308 	ubfx	r3, r3, #0, #9
 801139a:	ee07 3a90 	vmov	s15, r3
 801139e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80113a2:	ed97 6a03 	vldr	s12, [r7, #12]
 80113a6:	eddf 5a56 	vldr	s11, [pc, #344]	; 8011500 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80113aa:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80113ae:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80113b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80113b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80113ba:	ee67 7a27 	vmul.f32	s15, s14, s15
 80113be:	edc7 7a07 	vstr	s15, [r7, #28]
 80113c2:	e043      	b.n	801144c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 80113c4:	697b      	ldr	r3, [r7, #20]
 80113c6:	ee07 3a90 	vmov	s15, r3
 80113ca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80113ce:	eddf 6a4f 	vldr	s13, [pc, #316]	; 801150c <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 80113d2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80113d6:	4b48      	ldr	r3, [pc, #288]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80113d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80113da:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80113de:	ee07 3a90 	vmov	s15, r3
 80113e2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80113e6:	ed97 6a03 	vldr	s12, [r7, #12]
 80113ea:	eddf 5a45 	vldr	s11, [pc, #276]	; 8011500 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80113ee:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80113f2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80113f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80113fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80113fe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8011402:	edc7 7a07 	vstr	s15, [r7, #28]
 8011406:	e021      	b.n	801144c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8011408:	697b      	ldr	r3, [r7, #20]
 801140a:	ee07 3a90 	vmov	s15, r3
 801140e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011412:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8011508 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8011416:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801141a:	4b37      	ldr	r3, [pc, #220]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 801141c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801141e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8011422:	ee07 3a90 	vmov	s15, r3
 8011426:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801142a:	ed97 6a03 	vldr	s12, [r7, #12]
 801142e:	eddf 5a34 	vldr	s11, [pc, #208]	; 8011500 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8011432:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8011436:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801143a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801143e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011442:	ee67 7a27 	vmul.f32	s15, s14, s15
 8011446:	edc7 7a07 	vstr	s15, [r7, #28]
 801144a:	bf00      	nop
 801144c:	4b2a      	ldr	r3, [pc, #168]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 801144e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011450:	0a5b      	lsrs	r3, r3, #9
 8011452:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8011456:	ee07 3a90 	vmov	s15, r3
 801145a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801145e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011462:	ee37 7a87 	vadd.f32	s14, s15, s14
 8011466:	edd7 6a07 	vldr	s13, [r7, #28]
 801146a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 801146e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8011472:	ee17 2a90 	vmov	r2, s15
 8011476:	687b      	ldr	r3, [r7, #4]
 8011478:	601a      	str	r2, [r3, #0]
 801147a:	4b1f      	ldr	r3, [pc, #124]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 801147c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801147e:	0c1b      	lsrs	r3, r3, #16
 8011480:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8011484:	ee07 3a90 	vmov	s15, r3
 8011488:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801148c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011490:	ee37 7a87 	vadd.f32	s14, s15, s14
 8011494:	edd7 6a07 	vldr	s13, [r7, #28]
 8011498:	eec6 7a87 	vdiv.f32	s15, s13, s14
 801149c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80114a0:	ee17 2a90 	vmov	r2, s15
 80114a4:	687b      	ldr	r3, [r7, #4]
 80114a6:	605a      	str	r2, [r3, #4]
 80114a8:	4b13      	ldr	r3, [pc, #76]	; (80114f8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80114aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80114ac:	0e1b      	lsrs	r3, r3, #24
 80114ae:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80114b2:	ee07 3a90 	vmov	s15, r3
 80114b6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80114ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80114be:	ee37 7a87 	vadd.f32	s14, s15, s14
 80114c2:	edd7 6a07 	vldr	s13, [r7, #28]
 80114c6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80114ca:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80114ce:	ee17 2a90 	vmov	r2, s15
 80114d2:	687b      	ldr	r3, [r7, #4]
 80114d4:	609a      	str	r2, [r3, #8]
 80114d6:	e008      	b.n	80114ea <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 80114d8:	687b      	ldr	r3, [r7, #4]
 80114da:	2200      	movs	r2, #0
 80114dc:	601a      	str	r2, [r3, #0]
 80114de:	687b      	ldr	r3, [r7, #4]
 80114e0:	2200      	movs	r2, #0
 80114e2:	605a      	str	r2, [r3, #4]
 80114e4:	687b      	ldr	r3, [r7, #4]
 80114e6:	2200      	movs	r2, #0
 80114e8:	609a      	str	r2, [r3, #8]
 80114ea:	bf00      	nop
 80114ec:	3724      	adds	r7, #36	; 0x24
 80114ee:	46bd      	mov	sp, r7
 80114f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114f4:	4770      	bx	lr
 80114f6:	bf00      	nop
 80114f8:	58024400 	.word	0x58024400
 80114fc:	03d09000 	.word	0x03d09000
 8011500:	46000000 	.word	0x46000000
 8011504:	4c742400 	.word	0x4c742400
 8011508:	4a742400 	.word	0x4a742400
 801150c:	4bbebc20 	.word	0x4bbebc20

08011510 <HAL_RCCEx_GetPLL3ClockFreq>:
 8011510:	b480      	push	{r7}
 8011512:	b089      	sub	sp, #36	; 0x24
 8011514:	af00      	add	r7, sp, #0
 8011516:	6078      	str	r0, [r7, #4]
 8011518:	4ba1      	ldr	r3, [pc, #644]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 801151a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801151c:	f003 0303 	and.w	r3, r3, #3
 8011520:	61bb      	str	r3, [r7, #24]
 8011522:	4b9f      	ldr	r3, [pc, #636]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8011524:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011526:	0d1b      	lsrs	r3, r3, #20
 8011528:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 801152c:	617b      	str	r3, [r7, #20]
 801152e:	4b9c      	ldr	r3, [pc, #624]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8011530:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011532:	0a1b      	lsrs	r3, r3, #8
 8011534:	f003 0301 	and.w	r3, r3, #1
 8011538:	613b      	str	r3, [r7, #16]
 801153a:	4b99      	ldr	r3, [pc, #612]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 801153c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801153e:	08db      	lsrs	r3, r3, #3
 8011540:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8011544:	693a      	ldr	r2, [r7, #16]
 8011546:	fb02 f303 	mul.w	r3, r2, r3
 801154a:	ee07 3a90 	vmov	s15, r3
 801154e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011552:	edc7 7a03 	vstr	s15, [r7, #12]
 8011556:	697b      	ldr	r3, [r7, #20]
 8011558:	2b00      	cmp	r3, #0
 801155a:	f000 8111 	beq.w	8011780 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 801155e:	69bb      	ldr	r3, [r7, #24]
 8011560:	2b02      	cmp	r3, #2
 8011562:	f000 8083 	beq.w	801166c <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 8011566:	69bb      	ldr	r3, [r7, #24]
 8011568:	2b02      	cmp	r3, #2
 801156a:	f200 80a1 	bhi.w	80116b0 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 801156e:	69bb      	ldr	r3, [r7, #24]
 8011570:	2b00      	cmp	r3, #0
 8011572:	d003      	beq.n	801157c <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 8011574:	69bb      	ldr	r3, [r7, #24]
 8011576:	2b01      	cmp	r3, #1
 8011578:	d056      	beq.n	8011628 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 801157a:	e099      	b.n	80116b0 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 801157c:	4b88      	ldr	r3, [pc, #544]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 801157e:	681b      	ldr	r3, [r3, #0]
 8011580:	f003 0320 	and.w	r3, r3, #32
 8011584:	2b00      	cmp	r3, #0
 8011586:	d02d      	beq.n	80115e4 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 8011588:	4b85      	ldr	r3, [pc, #532]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 801158a:	681b      	ldr	r3, [r3, #0]
 801158c:	08db      	lsrs	r3, r3, #3
 801158e:	f003 0303 	and.w	r3, r3, #3
 8011592:	4a84      	ldr	r2, [pc, #528]	; (80117a4 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 8011594:	fa22 f303 	lsr.w	r3, r2, r3
 8011598:	60bb      	str	r3, [r7, #8]
 801159a:	68bb      	ldr	r3, [r7, #8]
 801159c:	ee07 3a90 	vmov	s15, r3
 80115a0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80115a4:	697b      	ldr	r3, [r7, #20]
 80115a6:	ee07 3a90 	vmov	s15, r3
 80115aa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80115ae:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80115b2:	4b7b      	ldr	r3, [pc, #492]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80115b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80115b6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80115ba:	ee07 3a90 	vmov	s15, r3
 80115be:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80115c2:	ed97 6a03 	vldr	s12, [r7, #12]
 80115c6:	eddf 5a78 	vldr	s11, [pc, #480]	; 80117a8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 80115ca:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80115ce:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80115d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80115d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80115da:	ee67 7a27 	vmul.f32	s15, s14, s15
 80115de:	edc7 7a07 	vstr	s15, [r7, #28]
 80115e2:	e087      	b.n	80116f4 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 80115e4:	697b      	ldr	r3, [r7, #20]
 80115e6:	ee07 3a90 	vmov	s15, r3
 80115ea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80115ee:	eddf 6a6f 	vldr	s13, [pc, #444]	; 80117ac <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 80115f2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80115f6:	4b6a      	ldr	r3, [pc, #424]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80115f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80115fa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80115fe:	ee07 3a90 	vmov	s15, r3
 8011602:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8011606:	ed97 6a03 	vldr	s12, [r7, #12]
 801160a:	eddf 5a67 	vldr	s11, [pc, #412]	; 80117a8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 801160e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8011612:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8011616:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801161a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801161e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8011622:	edc7 7a07 	vstr	s15, [r7, #28]
 8011626:	e065      	b.n	80116f4 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8011628:	697b      	ldr	r3, [r7, #20]
 801162a:	ee07 3a90 	vmov	s15, r3
 801162e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011632:	eddf 6a5f 	vldr	s13, [pc, #380]	; 80117b0 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8011636:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801163a:	4b59      	ldr	r3, [pc, #356]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 801163c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801163e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8011642:	ee07 3a90 	vmov	s15, r3
 8011646:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801164a:	ed97 6a03 	vldr	s12, [r7, #12]
 801164e:	eddf 5a56 	vldr	s11, [pc, #344]	; 80117a8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8011652:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8011656:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801165a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801165e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011662:	ee67 7a27 	vmul.f32	s15, s14, s15
 8011666:	edc7 7a07 	vstr	s15, [r7, #28]
 801166a:	e043      	b.n	80116f4 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 801166c:	697b      	ldr	r3, [r7, #20]
 801166e:	ee07 3a90 	vmov	s15, r3
 8011672:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011676:	eddf 6a4f 	vldr	s13, [pc, #316]	; 80117b4 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 801167a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801167e:	4b48      	ldr	r3, [pc, #288]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8011680:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011682:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8011686:	ee07 3a90 	vmov	s15, r3
 801168a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801168e:	ed97 6a03 	vldr	s12, [r7, #12]
 8011692:	eddf 5a45 	vldr	s11, [pc, #276]	; 80117a8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8011696:	eec6 7a25 	vdiv.f32	s15, s12, s11
 801169a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801169e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80116a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80116a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80116aa:	edc7 7a07 	vstr	s15, [r7, #28]
 80116ae:	e021      	b.n	80116f4 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 80116b0:	697b      	ldr	r3, [r7, #20]
 80116b2:	ee07 3a90 	vmov	s15, r3
 80116b6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80116ba:	eddf 6a3d 	vldr	s13, [pc, #244]	; 80117b0 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 80116be:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80116c2:	4b37      	ldr	r3, [pc, #220]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80116c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80116c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80116ca:	ee07 3a90 	vmov	s15, r3
 80116ce:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80116d2:	ed97 6a03 	vldr	s12, [r7, #12]
 80116d6:	eddf 5a34 	vldr	s11, [pc, #208]	; 80117a8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 80116da:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80116de:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80116e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80116e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80116ea:	ee67 7a27 	vmul.f32	s15, s14, s15
 80116ee:	edc7 7a07 	vstr	s15, [r7, #28]
 80116f2:	bf00      	nop
 80116f4:	4b2a      	ldr	r3, [pc, #168]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80116f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80116f8:	0a5b      	lsrs	r3, r3, #9
 80116fa:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80116fe:	ee07 3a90 	vmov	s15, r3
 8011702:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011706:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801170a:	ee37 7a87 	vadd.f32	s14, s15, s14
 801170e:	edd7 6a07 	vldr	s13, [r7, #28]
 8011712:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8011716:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 801171a:	ee17 2a90 	vmov	r2, s15
 801171e:	687b      	ldr	r3, [r7, #4]
 8011720:	601a      	str	r2, [r3, #0]
 8011722:	4b1f      	ldr	r3, [pc, #124]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8011724:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011726:	0c1b      	lsrs	r3, r3, #16
 8011728:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801172c:	ee07 3a90 	vmov	s15, r3
 8011730:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011734:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011738:	ee37 7a87 	vadd.f32	s14, s15, s14
 801173c:	edd7 6a07 	vldr	s13, [r7, #28]
 8011740:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8011744:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8011748:	ee17 2a90 	vmov	r2, s15
 801174c:	687b      	ldr	r3, [r7, #4]
 801174e:	605a      	str	r2, [r3, #4]
 8011750:	4b13      	ldr	r3, [pc, #76]	; (80117a0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8011752:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011754:	0e1b      	lsrs	r3, r3, #24
 8011756:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801175a:	ee07 3a90 	vmov	s15, r3
 801175e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011762:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011766:	ee37 7a87 	vadd.f32	s14, s15, s14
 801176a:	edd7 6a07 	vldr	s13, [r7, #28]
 801176e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8011772:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8011776:	ee17 2a90 	vmov	r2, s15
 801177a:	687b      	ldr	r3, [r7, #4]
 801177c:	609a      	str	r2, [r3, #8]
 801177e:	e008      	b.n	8011792 <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 8011780:	687b      	ldr	r3, [r7, #4]
 8011782:	2200      	movs	r2, #0
 8011784:	601a      	str	r2, [r3, #0]
 8011786:	687b      	ldr	r3, [r7, #4]
 8011788:	2200      	movs	r2, #0
 801178a:	605a      	str	r2, [r3, #4]
 801178c:	687b      	ldr	r3, [r7, #4]
 801178e:	2200      	movs	r2, #0
 8011790:	609a      	str	r2, [r3, #8]
 8011792:	bf00      	nop
 8011794:	3724      	adds	r7, #36	; 0x24
 8011796:	46bd      	mov	sp, r7
 8011798:	f85d 7b04 	ldr.w	r7, [sp], #4
 801179c:	4770      	bx	lr
 801179e:	bf00      	nop
 80117a0:	58024400 	.word	0x58024400
 80117a4:	03d09000 	.word	0x03d09000
 80117a8:	46000000 	.word	0x46000000
 80117ac:	4c742400 	.word	0x4c742400
 80117b0:	4a742400 	.word	0x4a742400
 80117b4:	4bbebc20 	.word	0x4bbebc20

080117b8 <HAL_RCCEx_GetPLL1ClockFreq>:
 80117b8:	b480      	push	{r7}
 80117ba:	b089      	sub	sp, #36	; 0x24
 80117bc:	af00      	add	r7, sp, #0
 80117be:	6078      	str	r0, [r7, #4]
 80117c0:	4ba0      	ldr	r3, [pc, #640]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80117c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80117c4:	f003 0303 	and.w	r3, r3, #3
 80117c8:	61bb      	str	r3, [r7, #24]
 80117ca:	4b9e      	ldr	r3, [pc, #632]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80117cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80117ce:	091b      	lsrs	r3, r3, #4
 80117d0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80117d4:	617b      	str	r3, [r7, #20]
 80117d6:	4b9b      	ldr	r3, [pc, #620]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80117d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80117da:	f003 0301 	and.w	r3, r3, #1
 80117de:	613b      	str	r3, [r7, #16]
 80117e0:	4b98      	ldr	r3, [pc, #608]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80117e2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80117e4:	08db      	lsrs	r3, r3, #3
 80117e6:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80117ea:	693a      	ldr	r2, [r7, #16]
 80117ec:	fb02 f303 	mul.w	r3, r2, r3
 80117f0:	ee07 3a90 	vmov	s15, r3
 80117f4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80117f8:	edc7 7a03 	vstr	s15, [r7, #12]
 80117fc:	697b      	ldr	r3, [r7, #20]
 80117fe:	2b00      	cmp	r3, #0
 8011800:	f000 8111 	beq.w	8011a26 <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
 8011804:	69bb      	ldr	r3, [r7, #24]
 8011806:	2b02      	cmp	r3, #2
 8011808:	f000 8083 	beq.w	8011912 <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 801180c:	69bb      	ldr	r3, [r7, #24]
 801180e:	2b02      	cmp	r3, #2
 8011810:	f200 80a1 	bhi.w	8011956 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 8011814:	69bb      	ldr	r3, [r7, #24]
 8011816:	2b00      	cmp	r3, #0
 8011818:	d003      	beq.n	8011822 <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 801181a:	69bb      	ldr	r3, [r7, #24]
 801181c:	2b01      	cmp	r3, #1
 801181e:	d056      	beq.n	80118ce <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 8011820:	e099      	b.n	8011956 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 8011822:	4b88      	ldr	r3, [pc, #544]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8011824:	681b      	ldr	r3, [r3, #0]
 8011826:	f003 0320 	and.w	r3, r3, #32
 801182a:	2b00      	cmp	r3, #0
 801182c:	d02d      	beq.n	801188a <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
 801182e:	4b85      	ldr	r3, [pc, #532]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8011830:	681b      	ldr	r3, [r3, #0]
 8011832:	08db      	lsrs	r3, r3, #3
 8011834:	f003 0303 	and.w	r3, r3, #3
 8011838:	4a83      	ldr	r2, [pc, #524]	; (8011a48 <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 801183a:	fa22 f303 	lsr.w	r3, r2, r3
 801183e:	60bb      	str	r3, [r7, #8]
 8011840:	68bb      	ldr	r3, [r7, #8]
 8011842:	ee07 3a90 	vmov	s15, r3
 8011846:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801184a:	697b      	ldr	r3, [r7, #20]
 801184c:	ee07 3a90 	vmov	s15, r3
 8011850:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011854:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8011858:	4b7a      	ldr	r3, [pc, #488]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 801185a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801185c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8011860:	ee07 3a90 	vmov	s15, r3
 8011864:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8011868:	ed97 6a03 	vldr	s12, [r7, #12]
 801186c:	eddf 5a77 	vldr	s11, [pc, #476]	; 8011a4c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8011870:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8011874:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8011878:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801187c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011880:	ee67 7a27 	vmul.f32	s15, s14, s15
 8011884:	edc7 7a07 	vstr	s15, [r7, #28]
 8011888:	e087      	b.n	801199a <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 801188a:	697b      	ldr	r3, [r7, #20]
 801188c:	ee07 3a90 	vmov	s15, r3
 8011890:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011894:	eddf 6a6e 	vldr	s13, [pc, #440]	; 8011a50 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 8011898:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801189c:	4b69      	ldr	r3, [pc, #420]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 801189e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80118a0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80118a4:	ee07 3a90 	vmov	s15, r3
 80118a8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80118ac:	ed97 6a03 	vldr	s12, [r7, #12]
 80118b0:	eddf 5a66 	vldr	s11, [pc, #408]	; 8011a4c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 80118b4:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80118b8:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80118bc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80118c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80118c4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80118c8:	edc7 7a07 	vstr	s15, [r7, #28]
 80118cc:	e065      	b.n	801199a <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 80118ce:	697b      	ldr	r3, [r7, #20]
 80118d0:	ee07 3a90 	vmov	s15, r3
 80118d4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80118d8:	eddf 6a5e 	vldr	s13, [pc, #376]	; 8011a54 <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 80118dc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80118e0:	4b58      	ldr	r3, [pc, #352]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80118e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80118e4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80118e8:	ee07 3a90 	vmov	s15, r3
 80118ec:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80118f0:	ed97 6a03 	vldr	s12, [r7, #12]
 80118f4:	eddf 5a55 	vldr	s11, [pc, #340]	; 8011a4c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 80118f8:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80118fc:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8011900:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011904:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011908:	ee67 7a27 	vmul.f32	s15, s14, s15
 801190c:	edc7 7a07 	vstr	s15, [r7, #28]
 8011910:	e043      	b.n	801199a <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 8011912:	697b      	ldr	r3, [r7, #20]
 8011914:	ee07 3a90 	vmov	s15, r3
 8011918:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801191c:	eddf 6a4e 	vldr	s13, [pc, #312]	; 8011a58 <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 8011920:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8011924:	4b47      	ldr	r3, [pc, #284]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8011926:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011928:	f3c3 0308 	ubfx	r3, r3, #0, #9
 801192c:	ee07 3a90 	vmov	s15, r3
 8011930:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8011934:	ed97 6a03 	vldr	s12, [r7, #12]
 8011938:	eddf 5a44 	vldr	s11, [pc, #272]	; 8011a4c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 801193c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8011940:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8011944:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011948:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801194c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8011950:	edc7 7a07 	vstr	s15, [r7, #28]
 8011954:	e021      	b.n	801199a <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 8011956:	697b      	ldr	r3, [r7, #20]
 8011958:	ee07 3a90 	vmov	s15, r3
 801195c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011960:	eddf 6a3b 	vldr	s13, [pc, #236]	; 8011a50 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 8011964:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8011968:	4b36      	ldr	r3, [pc, #216]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 801196a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801196c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8011970:	ee07 3a90 	vmov	s15, r3
 8011974:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8011978:	ed97 6a03 	vldr	s12, [r7, #12]
 801197c:	eddf 5a33 	vldr	s11, [pc, #204]	; 8011a4c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8011980:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8011984:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8011988:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801198c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011990:	ee67 7a27 	vmul.f32	s15, s14, s15
 8011994:	edc7 7a07 	vstr	s15, [r7, #28]
 8011998:	bf00      	nop
 801199a:	4b2a      	ldr	r3, [pc, #168]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 801199c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801199e:	0a5b      	lsrs	r3, r3, #9
 80119a0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80119a4:	ee07 3a90 	vmov	s15, r3
 80119a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80119ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80119b0:	ee37 7a87 	vadd.f32	s14, s15, s14
 80119b4:	edd7 6a07 	vldr	s13, [r7, #28]
 80119b8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80119bc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80119c0:	ee17 2a90 	vmov	r2, s15
 80119c4:	687b      	ldr	r3, [r7, #4]
 80119c6:	601a      	str	r2, [r3, #0]
 80119c8:	4b1e      	ldr	r3, [pc, #120]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80119ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80119cc:	0c1b      	lsrs	r3, r3, #16
 80119ce:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80119d2:	ee07 3a90 	vmov	s15, r3
 80119d6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80119da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80119de:	ee37 7a87 	vadd.f32	s14, s15, s14
 80119e2:	edd7 6a07 	vldr	s13, [r7, #28]
 80119e6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80119ea:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80119ee:	ee17 2a90 	vmov	r2, s15
 80119f2:	687b      	ldr	r3, [r7, #4]
 80119f4:	605a      	str	r2, [r3, #4]
 80119f6:	4b13      	ldr	r3, [pc, #76]	; (8011a44 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80119f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80119fa:	0e1b      	lsrs	r3, r3, #24
 80119fc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8011a00:	ee07 3a90 	vmov	s15, r3
 8011a04:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8011a08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011a0c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8011a10:	edd7 6a07 	vldr	s13, [r7, #28]
 8011a14:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8011a18:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8011a1c:	ee17 2a90 	vmov	r2, s15
 8011a20:	687b      	ldr	r3, [r7, #4]
 8011a22:	609a      	str	r2, [r3, #8]
 8011a24:	e008      	b.n	8011a38 <HAL_RCCEx_GetPLL1ClockFreq+0x280>
 8011a26:	687b      	ldr	r3, [r7, #4]
 8011a28:	2200      	movs	r2, #0
 8011a2a:	601a      	str	r2, [r3, #0]
 8011a2c:	687b      	ldr	r3, [r7, #4]
 8011a2e:	2200      	movs	r2, #0
 8011a30:	605a      	str	r2, [r3, #4]
 8011a32:	687b      	ldr	r3, [r7, #4]
 8011a34:	2200      	movs	r2, #0
 8011a36:	609a      	str	r2, [r3, #8]
 8011a38:	bf00      	nop
 8011a3a:	3724      	adds	r7, #36	; 0x24
 8011a3c:	46bd      	mov	sp, r7
 8011a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011a42:	4770      	bx	lr
 8011a44:	58024400 	.word	0x58024400
 8011a48:	03d09000 	.word	0x03d09000
 8011a4c:	46000000 	.word	0x46000000
 8011a50:	4c742400 	.word	0x4c742400
 8011a54:	4a742400 	.word	0x4a742400
 8011a58:	4bbebc20 	.word	0x4bbebc20

08011a5c <RCCEx_PLL2_Config>:
 8011a5c:	b580      	push	{r7, lr}
 8011a5e:	b084      	sub	sp, #16
 8011a60:	af00      	add	r7, sp, #0
 8011a62:	6078      	str	r0, [r7, #4]
 8011a64:	6039      	str	r1, [r7, #0]
 8011a66:	2300      	movs	r3, #0
 8011a68:	73fb      	strb	r3, [r7, #15]
 8011a6a:	4b53      	ldr	r3, [pc, #332]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011a6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011a6e:	f003 0303 	and.w	r3, r3, #3
 8011a72:	2b03      	cmp	r3, #3
 8011a74:	d101      	bne.n	8011a7a <RCCEx_PLL2_Config+0x1e>
 8011a76:	2301      	movs	r3, #1
 8011a78:	e099      	b.n	8011bae <RCCEx_PLL2_Config+0x152>
 8011a7a:	4b4f      	ldr	r3, [pc, #316]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011a7c:	681b      	ldr	r3, [r3, #0]
 8011a7e:	4a4e      	ldr	r2, [pc, #312]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011a80:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8011a84:	6013      	str	r3, [r2, #0]
 8011a86:	f7f4 fbb3 	bl	80061f0 <HAL_GetTick>
 8011a8a:	60b8      	str	r0, [r7, #8]
 8011a8c:	e008      	b.n	8011aa0 <RCCEx_PLL2_Config+0x44>
 8011a8e:	f7f4 fbaf 	bl	80061f0 <HAL_GetTick>
 8011a92:	4602      	mov	r2, r0
 8011a94:	68bb      	ldr	r3, [r7, #8]
 8011a96:	1ad3      	subs	r3, r2, r3
 8011a98:	2b02      	cmp	r3, #2
 8011a9a:	d901      	bls.n	8011aa0 <RCCEx_PLL2_Config+0x44>
 8011a9c:	2303      	movs	r3, #3
 8011a9e:	e086      	b.n	8011bae <RCCEx_PLL2_Config+0x152>
 8011aa0:	4b45      	ldr	r3, [pc, #276]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011aa2:	681b      	ldr	r3, [r3, #0]
 8011aa4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8011aa8:	2b00      	cmp	r3, #0
 8011aaa:	d1f0      	bne.n	8011a8e <RCCEx_PLL2_Config+0x32>
 8011aac:	4b42      	ldr	r3, [pc, #264]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011aae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011ab0:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 8011ab4:	687b      	ldr	r3, [r7, #4]
 8011ab6:	681b      	ldr	r3, [r3, #0]
 8011ab8:	031b      	lsls	r3, r3, #12
 8011aba:	493f      	ldr	r1, [pc, #252]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011abc:	4313      	orrs	r3, r2
 8011abe:	628b      	str	r3, [r1, #40]	; 0x28
 8011ac0:	687b      	ldr	r3, [r7, #4]
 8011ac2:	685b      	ldr	r3, [r3, #4]
 8011ac4:	3b01      	subs	r3, #1
 8011ac6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8011aca:	687b      	ldr	r3, [r7, #4]
 8011acc:	689b      	ldr	r3, [r3, #8]
 8011ace:	3b01      	subs	r3, #1
 8011ad0:	025b      	lsls	r3, r3, #9
 8011ad2:	b29b      	uxth	r3, r3
 8011ad4:	431a      	orrs	r2, r3
 8011ad6:	687b      	ldr	r3, [r7, #4]
 8011ad8:	68db      	ldr	r3, [r3, #12]
 8011ada:	3b01      	subs	r3, #1
 8011adc:	041b      	lsls	r3, r3, #16
 8011ade:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8011ae2:	431a      	orrs	r2, r3
 8011ae4:	687b      	ldr	r3, [r7, #4]
 8011ae6:	691b      	ldr	r3, [r3, #16]
 8011ae8:	3b01      	subs	r3, #1
 8011aea:	061b      	lsls	r3, r3, #24
 8011aec:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 8011af0:	4931      	ldr	r1, [pc, #196]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011af2:	4313      	orrs	r3, r2
 8011af4:	638b      	str	r3, [r1, #56]	; 0x38
 8011af6:	4b30      	ldr	r3, [pc, #192]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011af8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011afa:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8011afe:	687b      	ldr	r3, [r7, #4]
 8011b00:	695b      	ldr	r3, [r3, #20]
 8011b02:	492d      	ldr	r1, [pc, #180]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b04:	4313      	orrs	r3, r2
 8011b06:	62cb      	str	r3, [r1, #44]	; 0x2c
 8011b08:	4b2b      	ldr	r3, [pc, #172]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b0c:	f023 0220 	bic.w	r2, r3, #32
 8011b10:	687b      	ldr	r3, [r7, #4]
 8011b12:	699b      	ldr	r3, [r3, #24]
 8011b14:	4928      	ldr	r1, [pc, #160]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b16:	4313      	orrs	r3, r2
 8011b18:	62cb      	str	r3, [r1, #44]	; 0x2c
 8011b1a:	4b27      	ldr	r3, [pc, #156]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b1e:	4a26      	ldr	r2, [pc, #152]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b20:	f023 0310 	bic.w	r3, r3, #16
 8011b24:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011b26:	4b24      	ldr	r3, [pc, #144]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b28:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8011b2a:	4b24      	ldr	r3, [pc, #144]	; (8011bbc <RCCEx_PLL2_Config+0x160>)
 8011b2c:	4013      	ands	r3, r2
 8011b2e:	687a      	ldr	r2, [r7, #4]
 8011b30:	69d2      	ldr	r2, [r2, #28]
 8011b32:	00d2      	lsls	r2, r2, #3
 8011b34:	4920      	ldr	r1, [pc, #128]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b36:	4313      	orrs	r3, r2
 8011b38:	63cb      	str	r3, [r1, #60]	; 0x3c
 8011b3a:	4b1f      	ldr	r3, [pc, #124]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b3e:	4a1e      	ldr	r2, [pc, #120]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b40:	f043 0310 	orr.w	r3, r3, #16
 8011b44:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011b46:	683b      	ldr	r3, [r7, #0]
 8011b48:	2b00      	cmp	r3, #0
 8011b4a:	d106      	bne.n	8011b5a <RCCEx_PLL2_Config+0xfe>
 8011b4c:	4b1a      	ldr	r3, [pc, #104]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b50:	4a19      	ldr	r2, [pc, #100]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b52:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8011b56:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011b58:	e00f      	b.n	8011b7a <RCCEx_PLL2_Config+0x11e>
 8011b5a:	683b      	ldr	r3, [r7, #0]
 8011b5c:	2b01      	cmp	r3, #1
 8011b5e:	d106      	bne.n	8011b6e <RCCEx_PLL2_Config+0x112>
 8011b60:	4b15      	ldr	r3, [pc, #84]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b64:	4a14      	ldr	r2, [pc, #80]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b66:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8011b6a:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011b6c:	e005      	b.n	8011b7a <RCCEx_PLL2_Config+0x11e>
 8011b6e:	4b12      	ldr	r3, [pc, #72]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b72:	4a11      	ldr	r2, [pc, #68]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b74:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8011b78:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011b7a:	4b0f      	ldr	r3, [pc, #60]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b7c:	681b      	ldr	r3, [r3, #0]
 8011b7e:	4a0e      	ldr	r2, [pc, #56]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011b80:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8011b84:	6013      	str	r3, [r2, #0]
 8011b86:	f7f4 fb33 	bl	80061f0 <HAL_GetTick>
 8011b8a:	60b8      	str	r0, [r7, #8]
 8011b8c:	e008      	b.n	8011ba0 <RCCEx_PLL2_Config+0x144>
 8011b8e:	f7f4 fb2f 	bl	80061f0 <HAL_GetTick>
 8011b92:	4602      	mov	r2, r0
 8011b94:	68bb      	ldr	r3, [r7, #8]
 8011b96:	1ad3      	subs	r3, r2, r3
 8011b98:	2b02      	cmp	r3, #2
 8011b9a:	d901      	bls.n	8011ba0 <RCCEx_PLL2_Config+0x144>
 8011b9c:	2303      	movs	r3, #3
 8011b9e:	e006      	b.n	8011bae <RCCEx_PLL2_Config+0x152>
 8011ba0:	4b05      	ldr	r3, [pc, #20]	; (8011bb8 <RCCEx_PLL2_Config+0x15c>)
 8011ba2:	681b      	ldr	r3, [r3, #0]
 8011ba4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8011ba8:	2b00      	cmp	r3, #0
 8011baa:	d0f0      	beq.n	8011b8e <RCCEx_PLL2_Config+0x132>
 8011bac:	7bfb      	ldrb	r3, [r7, #15]
 8011bae:	4618      	mov	r0, r3
 8011bb0:	3710      	adds	r7, #16
 8011bb2:	46bd      	mov	sp, r7
 8011bb4:	bd80      	pop	{r7, pc}
 8011bb6:	bf00      	nop
 8011bb8:	58024400 	.word	0x58024400
 8011bbc:	ffff0007 	.word	0xffff0007

08011bc0 <RCCEx_PLL3_Config>:
 8011bc0:	b580      	push	{r7, lr}
 8011bc2:	b084      	sub	sp, #16
 8011bc4:	af00      	add	r7, sp, #0
 8011bc6:	6078      	str	r0, [r7, #4]
 8011bc8:	6039      	str	r1, [r7, #0]
 8011bca:	2300      	movs	r3, #0
 8011bcc:	73fb      	strb	r3, [r7, #15]
 8011bce:	4b53      	ldr	r3, [pc, #332]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011bd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011bd2:	f003 0303 	and.w	r3, r3, #3
 8011bd6:	2b03      	cmp	r3, #3
 8011bd8:	d101      	bne.n	8011bde <RCCEx_PLL3_Config+0x1e>
 8011bda:	2301      	movs	r3, #1
 8011bdc:	e099      	b.n	8011d12 <RCCEx_PLL3_Config+0x152>
 8011bde:	4b4f      	ldr	r3, [pc, #316]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011be0:	681b      	ldr	r3, [r3, #0]
 8011be2:	4a4e      	ldr	r2, [pc, #312]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011be4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8011be8:	6013      	str	r3, [r2, #0]
 8011bea:	f7f4 fb01 	bl	80061f0 <HAL_GetTick>
 8011bee:	60b8      	str	r0, [r7, #8]
 8011bf0:	e008      	b.n	8011c04 <RCCEx_PLL3_Config+0x44>
 8011bf2:	f7f4 fafd 	bl	80061f0 <HAL_GetTick>
 8011bf6:	4602      	mov	r2, r0
 8011bf8:	68bb      	ldr	r3, [r7, #8]
 8011bfa:	1ad3      	subs	r3, r2, r3
 8011bfc:	2b02      	cmp	r3, #2
 8011bfe:	d901      	bls.n	8011c04 <RCCEx_PLL3_Config+0x44>
 8011c00:	2303      	movs	r3, #3
 8011c02:	e086      	b.n	8011d12 <RCCEx_PLL3_Config+0x152>
 8011c04:	4b45      	ldr	r3, [pc, #276]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c06:	681b      	ldr	r3, [r3, #0]
 8011c08:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8011c0c:	2b00      	cmp	r3, #0
 8011c0e:	d1f0      	bne.n	8011bf2 <RCCEx_PLL3_Config+0x32>
 8011c10:	4b42      	ldr	r3, [pc, #264]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011c14:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 8011c18:	687b      	ldr	r3, [r7, #4]
 8011c1a:	681b      	ldr	r3, [r3, #0]
 8011c1c:	051b      	lsls	r3, r3, #20
 8011c1e:	493f      	ldr	r1, [pc, #252]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c20:	4313      	orrs	r3, r2
 8011c22:	628b      	str	r3, [r1, #40]	; 0x28
 8011c24:	687b      	ldr	r3, [r7, #4]
 8011c26:	685b      	ldr	r3, [r3, #4]
 8011c28:	3b01      	subs	r3, #1
 8011c2a:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8011c2e:	687b      	ldr	r3, [r7, #4]
 8011c30:	689b      	ldr	r3, [r3, #8]
 8011c32:	3b01      	subs	r3, #1
 8011c34:	025b      	lsls	r3, r3, #9
 8011c36:	b29b      	uxth	r3, r3
 8011c38:	431a      	orrs	r2, r3
 8011c3a:	687b      	ldr	r3, [r7, #4]
 8011c3c:	68db      	ldr	r3, [r3, #12]
 8011c3e:	3b01      	subs	r3, #1
 8011c40:	041b      	lsls	r3, r3, #16
 8011c42:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8011c46:	431a      	orrs	r2, r3
 8011c48:	687b      	ldr	r3, [r7, #4]
 8011c4a:	691b      	ldr	r3, [r3, #16]
 8011c4c:	3b01      	subs	r3, #1
 8011c4e:	061b      	lsls	r3, r3, #24
 8011c50:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 8011c54:	4931      	ldr	r1, [pc, #196]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c56:	4313      	orrs	r3, r2
 8011c58:	640b      	str	r3, [r1, #64]	; 0x40
 8011c5a:	4b30      	ldr	r3, [pc, #192]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c5e:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8011c62:	687b      	ldr	r3, [r7, #4]
 8011c64:	695b      	ldr	r3, [r3, #20]
 8011c66:	492d      	ldr	r1, [pc, #180]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c68:	4313      	orrs	r3, r2
 8011c6a:	62cb      	str	r3, [r1, #44]	; 0x2c
 8011c6c:	4b2b      	ldr	r3, [pc, #172]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c70:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 8011c74:	687b      	ldr	r3, [r7, #4]
 8011c76:	699b      	ldr	r3, [r3, #24]
 8011c78:	4928      	ldr	r1, [pc, #160]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c7a:	4313      	orrs	r3, r2
 8011c7c:	62cb      	str	r3, [r1, #44]	; 0x2c
 8011c7e:	4b27      	ldr	r3, [pc, #156]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c82:	4a26      	ldr	r2, [pc, #152]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c84:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8011c88:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011c8a:	4b24      	ldr	r3, [pc, #144]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c8c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8011c8e:	4b24      	ldr	r3, [pc, #144]	; (8011d20 <RCCEx_PLL3_Config+0x160>)
 8011c90:	4013      	ands	r3, r2
 8011c92:	687a      	ldr	r2, [r7, #4]
 8011c94:	69d2      	ldr	r2, [r2, #28]
 8011c96:	00d2      	lsls	r2, r2, #3
 8011c98:	4920      	ldr	r1, [pc, #128]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011c9a:	4313      	orrs	r3, r2
 8011c9c:	644b      	str	r3, [r1, #68]	; 0x44
 8011c9e:	4b1f      	ldr	r3, [pc, #124]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011ca0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ca2:	4a1e      	ldr	r2, [pc, #120]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011ca4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011ca8:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011caa:	683b      	ldr	r3, [r7, #0]
 8011cac:	2b00      	cmp	r3, #0
 8011cae:	d106      	bne.n	8011cbe <RCCEx_PLL3_Config+0xfe>
 8011cb0:	4b1a      	ldr	r3, [pc, #104]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011cb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cb4:	4a19      	ldr	r2, [pc, #100]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011cb6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8011cba:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011cbc:	e00f      	b.n	8011cde <RCCEx_PLL3_Config+0x11e>
 8011cbe:	683b      	ldr	r3, [r7, #0]
 8011cc0:	2b01      	cmp	r3, #1
 8011cc2:	d106      	bne.n	8011cd2 <RCCEx_PLL3_Config+0x112>
 8011cc4:	4b15      	ldr	r3, [pc, #84]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011cc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cc8:	4a14      	ldr	r2, [pc, #80]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011cca:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8011cce:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011cd0:	e005      	b.n	8011cde <RCCEx_PLL3_Config+0x11e>
 8011cd2:	4b12      	ldr	r3, [pc, #72]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011cd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cd6:	4a11      	ldr	r2, [pc, #68]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011cd8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8011cdc:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011cde:	4b0f      	ldr	r3, [pc, #60]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011ce0:	681b      	ldr	r3, [r3, #0]
 8011ce2:	4a0e      	ldr	r2, [pc, #56]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011ce4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8011ce8:	6013      	str	r3, [r2, #0]
 8011cea:	f7f4 fa81 	bl	80061f0 <HAL_GetTick>
 8011cee:	60b8      	str	r0, [r7, #8]
 8011cf0:	e008      	b.n	8011d04 <RCCEx_PLL3_Config+0x144>
 8011cf2:	f7f4 fa7d 	bl	80061f0 <HAL_GetTick>
 8011cf6:	4602      	mov	r2, r0
 8011cf8:	68bb      	ldr	r3, [r7, #8]
 8011cfa:	1ad3      	subs	r3, r2, r3
 8011cfc:	2b02      	cmp	r3, #2
 8011cfe:	d901      	bls.n	8011d04 <RCCEx_PLL3_Config+0x144>
 8011d00:	2303      	movs	r3, #3
 8011d02:	e006      	b.n	8011d12 <RCCEx_PLL3_Config+0x152>
 8011d04:	4b05      	ldr	r3, [pc, #20]	; (8011d1c <RCCEx_PLL3_Config+0x15c>)
 8011d06:	681b      	ldr	r3, [r3, #0]
 8011d08:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8011d0c:	2b00      	cmp	r3, #0
 8011d0e:	d0f0      	beq.n	8011cf2 <RCCEx_PLL3_Config+0x132>
 8011d10:	7bfb      	ldrb	r3, [r7, #15]
 8011d12:	4618      	mov	r0, r3
 8011d14:	3710      	adds	r7, #16
 8011d16:	46bd      	mov	sp, r7
 8011d18:	bd80      	pop	{r7, pc}
 8011d1a:	bf00      	nop
 8011d1c:	58024400 	.word	0x58024400
 8011d20:	ffff0007 	.word	0xffff0007

08011d24 <HAL_RTC_Init>:
 8011d24:	b580      	push	{r7, lr}
 8011d26:	b084      	sub	sp, #16
 8011d28:	af00      	add	r7, sp, #0
 8011d2a:	6078      	str	r0, [r7, #4]
 8011d2c:	2301      	movs	r3, #1
 8011d2e:	73fb      	strb	r3, [r7, #15]
 8011d30:	687b      	ldr	r3, [r7, #4]
 8011d32:	2b00      	cmp	r3, #0
 8011d34:	d071      	beq.n	8011e1a <HAL_RTC_Init+0xf6>
 8011d36:	687b      	ldr	r3, [r7, #4]
 8011d38:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8011d3c:	b2db      	uxtb	r3, r3
 8011d3e:	2b00      	cmp	r3, #0
 8011d40:	d106      	bne.n	8011d50 <HAL_RTC_Init+0x2c>
 8011d42:	687b      	ldr	r3, [r7, #4]
 8011d44:	2200      	movs	r2, #0
 8011d46:	f883 2020 	strb.w	r2, [r3, #32]
 8011d4a:	6878      	ldr	r0, [r7, #4]
 8011d4c:	f7f2 f978 	bl	8004040 <HAL_RTC_MspInit>
 8011d50:	687b      	ldr	r3, [r7, #4]
 8011d52:	2202      	movs	r2, #2
 8011d54:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8011d58:	687b      	ldr	r3, [r7, #4]
 8011d5a:	681b      	ldr	r3, [r3, #0]
 8011d5c:	68db      	ldr	r3, [r3, #12]
 8011d5e:	f003 0310 	and.w	r3, r3, #16
 8011d62:	2b10      	cmp	r3, #16
 8011d64:	d050      	beq.n	8011e08 <HAL_RTC_Init+0xe4>
 8011d66:	687b      	ldr	r3, [r7, #4]
 8011d68:	681b      	ldr	r3, [r3, #0]
 8011d6a:	22ca      	movs	r2, #202	; 0xca
 8011d6c:	625a      	str	r2, [r3, #36]	; 0x24
 8011d6e:	687b      	ldr	r3, [r7, #4]
 8011d70:	681b      	ldr	r3, [r3, #0]
 8011d72:	2253      	movs	r2, #83	; 0x53
 8011d74:	625a      	str	r2, [r3, #36]	; 0x24
 8011d76:	6878      	ldr	r0, [r7, #4]
 8011d78:	f000 fa4a 	bl	8012210 <RTC_EnterInitMode>
 8011d7c:	4603      	mov	r3, r0
 8011d7e:	73fb      	strb	r3, [r7, #15]
 8011d80:	7bfb      	ldrb	r3, [r7, #15]
 8011d82:	2b00      	cmp	r3, #0
 8011d84:	d124      	bne.n	8011dd0 <HAL_RTC_Init+0xac>
 8011d86:	687b      	ldr	r3, [r7, #4]
 8011d88:	681b      	ldr	r3, [r3, #0]
 8011d8a:	6899      	ldr	r1, [r3, #8]
 8011d8c:	687b      	ldr	r3, [r7, #4]
 8011d8e:	681a      	ldr	r2, [r3, #0]
 8011d90:	4b24      	ldr	r3, [pc, #144]	; (8011e24 <HAL_RTC_Init+0x100>)
 8011d92:	400b      	ands	r3, r1
 8011d94:	6093      	str	r3, [r2, #8]
 8011d96:	687b      	ldr	r3, [r7, #4]
 8011d98:	681b      	ldr	r3, [r3, #0]
 8011d9a:	6899      	ldr	r1, [r3, #8]
 8011d9c:	687b      	ldr	r3, [r7, #4]
 8011d9e:	685a      	ldr	r2, [r3, #4]
 8011da0:	687b      	ldr	r3, [r7, #4]
 8011da2:	691b      	ldr	r3, [r3, #16]
 8011da4:	431a      	orrs	r2, r3
 8011da6:	687b      	ldr	r3, [r7, #4]
 8011da8:	699b      	ldr	r3, [r3, #24]
 8011daa:	431a      	orrs	r2, r3
 8011dac:	687b      	ldr	r3, [r7, #4]
 8011dae:	681b      	ldr	r3, [r3, #0]
 8011db0:	430a      	orrs	r2, r1
 8011db2:	609a      	str	r2, [r3, #8]
 8011db4:	687b      	ldr	r3, [r7, #4]
 8011db6:	689b      	ldr	r3, [r3, #8]
 8011db8:	0419      	lsls	r1, r3, #16
 8011dba:	687b      	ldr	r3, [r7, #4]
 8011dbc:	68da      	ldr	r2, [r3, #12]
 8011dbe:	687b      	ldr	r3, [r7, #4]
 8011dc0:	681b      	ldr	r3, [r3, #0]
 8011dc2:	430a      	orrs	r2, r1
 8011dc4:	611a      	str	r2, [r3, #16]
 8011dc6:	6878      	ldr	r0, [r7, #4]
 8011dc8:	f000 fa56 	bl	8012278 <RTC_ExitInitMode>
 8011dcc:	4603      	mov	r3, r0
 8011dce:	73fb      	strb	r3, [r7, #15]
 8011dd0:	7bfb      	ldrb	r3, [r7, #15]
 8011dd2:	2b00      	cmp	r3, #0
 8011dd4:	d113      	bne.n	8011dfe <HAL_RTC_Init+0xda>
 8011dd6:	687b      	ldr	r3, [r7, #4]
 8011dd8:	681b      	ldr	r3, [r3, #0]
 8011dda:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8011ddc:	687b      	ldr	r3, [r7, #4]
 8011dde:	681b      	ldr	r3, [r3, #0]
 8011de0:	f022 0203 	bic.w	r2, r2, #3
 8011de4:	64da      	str	r2, [r3, #76]	; 0x4c
 8011de6:	687b      	ldr	r3, [r7, #4]
 8011de8:	681b      	ldr	r3, [r3, #0]
 8011dea:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 8011dec:	687b      	ldr	r3, [r7, #4]
 8011dee:	69da      	ldr	r2, [r3, #28]
 8011df0:	687b      	ldr	r3, [r7, #4]
 8011df2:	695b      	ldr	r3, [r3, #20]
 8011df4:	431a      	orrs	r2, r3
 8011df6:	687b      	ldr	r3, [r7, #4]
 8011df8:	681b      	ldr	r3, [r3, #0]
 8011dfa:	430a      	orrs	r2, r1
 8011dfc:	64da      	str	r2, [r3, #76]	; 0x4c
 8011dfe:	687b      	ldr	r3, [r7, #4]
 8011e00:	681b      	ldr	r3, [r3, #0]
 8011e02:	22ff      	movs	r2, #255	; 0xff
 8011e04:	625a      	str	r2, [r3, #36]	; 0x24
 8011e06:	e001      	b.n	8011e0c <HAL_RTC_Init+0xe8>
 8011e08:	2300      	movs	r3, #0
 8011e0a:	73fb      	strb	r3, [r7, #15]
 8011e0c:	7bfb      	ldrb	r3, [r7, #15]
 8011e0e:	2b00      	cmp	r3, #0
 8011e10:	d103      	bne.n	8011e1a <HAL_RTC_Init+0xf6>
 8011e12:	687b      	ldr	r3, [r7, #4]
 8011e14:	2201      	movs	r2, #1
 8011e16:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8011e1a:	7bfb      	ldrb	r3, [r7, #15]
 8011e1c:	4618      	mov	r0, r3
 8011e1e:	3710      	adds	r7, #16
 8011e20:	46bd      	mov	sp, r7
 8011e22:	bd80      	pop	{r7, pc}
 8011e24:	ff8fffbf 	.word	0xff8fffbf

08011e28 <HAL_RTC_SetTime>:
 8011e28:	b590      	push	{r4, r7, lr}
 8011e2a:	b087      	sub	sp, #28
 8011e2c:	af00      	add	r7, sp, #0
 8011e2e:	60f8      	str	r0, [r7, #12]
 8011e30:	60b9      	str	r1, [r7, #8]
 8011e32:	607a      	str	r2, [r7, #4]
 8011e34:	68fb      	ldr	r3, [r7, #12]
 8011e36:	f893 3020 	ldrb.w	r3, [r3, #32]
 8011e3a:	2b01      	cmp	r3, #1
 8011e3c:	d101      	bne.n	8011e42 <HAL_RTC_SetTime+0x1a>
 8011e3e:	2302      	movs	r3, #2
 8011e40:	e089      	b.n	8011f56 <HAL_RTC_SetTime+0x12e>
 8011e42:	68fb      	ldr	r3, [r7, #12]
 8011e44:	2201      	movs	r2, #1
 8011e46:	f883 2020 	strb.w	r2, [r3, #32]
 8011e4a:	68fb      	ldr	r3, [r7, #12]
 8011e4c:	2202      	movs	r2, #2
 8011e4e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8011e52:	68fb      	ldr	r3, [r7, #12]
 8011e54:	681b      	ldr	r3, [r3, #0]
 8011e56:	22ca      	movs	r2, #202	; 0xca
 8011e58:	625a      	str	r2, [r3, #36]	; 0x24
 8011e5a:	68fb      	ldr	r3, [r7, #12]
 8011e5c:	681b      	ldr	r3, [r3, #0]
 8011e5e:	2253      	movs	r2, #83	; 0x53
 8011e60:	625a      	str	r2, [r3, #36]	; 0x24
 8011e62:	68f8      	ldr	r0, [r7, #12]
 8011e64:	f000 f9d4 	bl	8012210 <RTC_EnterInitMode>
 8011e68:	4603      	mov	r3, r0
 8011e6a:	74fb      	strb	r3, [r7, #19]
 8011e6c:	7cfb      	ldrb	r3, [r7, #19]
 8011e6e:	2b00      	cmp	r3, #0
 8011e70:	d161      	bne.n	8011f36 <HAL_RTC_SetTime+0x10e>
 8011e72:	687b      	ldr	r3, [r7, #4]
 8011e74:	2b00      	cmp	r3, #0
 8011e76:	d126      	bne.n	8011ec6 <HAL_RTC_SetTime+0x9e>
 8011e78:	68fb      	ldr	r3, [r7, #12]
 8011e7a:	681b      	ldr	r3, [r3, #0]
 8011e7c:	689b      	ldr	r3, [r3, #8]
 8011e7e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8011e82:	2b00      	cmp	r3, #0
 8011e84:	d102      	bne.n	8011e8c <HAL_RTC_SetTime+0x64>
 8011e86:	68bb      	ldr	r3, [r7, #8]
 8011e88:	2200      	movs	r2, #0
 8011e8a:	70da      	strb	r2, [r3, #3]
 8011e8c:	68bb      	ldr	r3, [r7, #8]
 8011e8e:	781b      	ldrb	r3, [r3, #0]
 8011e90:	4618      	mov	r0, r3
 8011e92:	f000 fa2f 	bl	80122f4 <RTC_ByteToBcd2>
 8011e96:	4603      	mov	r3, r0
 8011e98:	041c      	lsls	r4, r3, #16
 8011e9a:	68bb      	ldr	r3, [r7, #8]
 8011e9c:	785b      	ldrb	r3, [r3, #1]
 8011e9e:	4618      	mov	r0, r3
 8011ea0:	f000 fa28 	bl	80122f4 <RTC_ByteToBcd2>
 8011ea4:	4603      	mov	r3, r0
 8011ea6:	021b      	lsls	r3, r3, #8
 8011ea8:	431c      	orrs	r4, r3
 8011eaa:	68bb      	ldr	r3, [r7, #8]
 8011eac:	789b      	ldrb	r3, [r3, #2]
 8011eae:	4618      	mov	r0, r3
 8011eb0:	f000 fa20 	bl	80122f4 <RTC_ByteToBcd2>
 8011eb4:	4603      	mov	r3, r0
 8011eb6:	ea44 0203 	orr.w	r2, r4, r3
 8011eba:	68bb      	ldr	r3, [r7, #8]
 8011ebc:	78db      	ldrb	r3, [r3, #3]
 8011ebe:	059b      	lsls	r3, r3, #22
 8011ec0:	4313      	orrs	r3, r2
 8011ec2:	617b      	str	r3, [r7, #20]
 8011ec4:	e018      	b.n	8011ef8 <HAL_RTC_SetTime+0xd0>
 8011ec6:	68fb      	ldr	r3, [r7, #12]
 8011ec8:	681b      	ldr	r3, [r3, #0]
 8011eca:	689b      	ldr	r3, [r3, #8]
 8011ecc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8011ed0:	2b00      	cmp	r3, #0
 8011ed2:	d102      	bne.n	8011eda <HAL_RTC_SetTime+0xb2>
 8011ed4:	68bb      	ldr	r3, [r7, #8]
 8011ed6:	2200      	movs	r2, #0
 8011ed8:	70da      	strb	r2, [r3, #3]
 8011eda:	68bb      	ldr	r3, [r7, #8]
 8011edc:	781b      	ldrb	r3, [r3, #0]
 8011ede:	041a      	lsls	r2, r3, #16
 8011ee0:	68bb      	ldr	r3, [r7, #8]
 8011ee2:	785b      	ldrb	r3, [r3, #1]
 8011ee4:	021b      	lsls	r3, r3, #8
 8011ee6:	4313      	orrs	r3, r2
 8011ee8:	68ba      	ldr	r2, [r7, #8]
 8011eea:	7892      	ldrb	r2, [r2, #2]
 8011eec:	431a      	orrs	r2, r3
 8011eee:	68bb      	ldr	r3, [r7, #8]
 8011ef0:	78db      	ldrb	r3, [r3, #3]
 8011ef2:	059b      	lsls	r3, r3, #22
 8011ef4:	4313      	orrs	r3, r2
 8011ef6:	617b      	str	r3, [r7, #20]
 8011ef8:	68fb      	ldr	r3, [r7, #12]
 8011efa:	681a      	ldr	r2, [r3, #0]
 8011efc:	6979      	ldr	r1, [r7, #20]
 8011efe:	4b18      	ldr	r3, [pc, #96]	; (8011f60 <HAL_RTC_SetTime+0x138>)
 8011f00:	400b      	ands	r3, r1
 8011f02:	6013      	str	r3, [r2, #0]
 8011f04:	68fb      	ldr	r3, [r7, #12]
 8011f06:	681b      	ldr	r3, [r3, #0]
 8011f08:	689a      	ldr	r2, [r3, #8]
 8011f0a:	68fb      	ldr	r3, [r7, #12]
 8011f0c:	681b      	ldr	r3, [r3, #0]
 8011f0e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8011f12:	609a      	str	r2, [r3, #8]
 8011f14:	68fb      	ldr	r3, [r7, #12]
 8011f16:	681b      	ldr	r3, [r3, #0]
 8011f18:	6899      	ldr	r1, [r3, #8]
 8011f1a:	68bb      	ldr	r3, [r7, #8]
 8011f1c:	68da      	ldr	r2, [r3, #12]
 8011f1e:	68bb      	ldr	r3, [r7, #8]
 8011f20:	691b      	ldr	r3, [r3, #16]
 8011f22:	431a      	orrs	r2, r3
 8011f24:	68fb      	ldr	r3, [r7, #12]
 8011f26:	681b      	ldr	r3, [r3, #0]
 8011f28:	430a      	orrs	r2, r1
 8011f2a:	609a      	str	r2, [r3, #8]
 8011f2c:	68f8      	ldr	r0, [r7, #12]
 8011f2e:	f000 f9a3 	bl	8012278 <RTC_ExitInitMode>
 8011f32:	4603      	mov	r3, r0
 8011f34:	74fb      	strb	r3, [r7, #19]
 8011f36:	68fb      	ldr	r3, [r7, #12]
 8011f38:	681b      	ldr	r3, [r3, #0]
 8011f3a:	22ff      	movs	r2, #255	; 0xff
 8011f3c:	625a      	str	r2, [r3, #36]	; 0x24
 8011f3e:	7cfb      	ldrb	r3, [r7, #19]
 8011f40:	2b00      	cmp	r3, #0
 8011f42:	d103      	bne.n	8011f4c <HAL_RTC_SetTime+0x124>
 8011f44:	68fb      	ldr	r3, [r7, #12]
 8011f46:	2201      	movs	r2, #1
 8011f48:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8011f4c:	68fb      	ldr	r3, [r7, #12]
 8011f4e:	2200      	movs	r2, #0
 8011f50:	f883 2020 	strb.w	r2, [r3, #32]
 8011f54:	7cfb      	ldrb	r3, [r7, #19]
 8011f56:	4618      	mov	r0, r3
 8011f58:	371c      	adds	r7, #28
 8011f5a:	46bd      	mov	sp, r7
 8011f5c:	bd90      	pop	{r4, r7, pc}
 8011f5e:	bf00      	nop
 8011f60:	007f7f7f 	.word	0x007f7f7f

08011f64 <HAL_RTC_GetTime>:
 8011f64:	b580      	push	{r7, lr}
 8011f66:	b086      	sub	sp, #24
 8011f68:	af00      	add	r7, sp, #0
 8011f6a:	60f8      	str	r0, [r7, #12]
 8011f6c:	60b9      	str	r1, [r7, #8]
 8011f6e:	607a      	str	r2, [r7, #4]
 8011f70:	68fb      	ldr	r3, [r7, #12]
 8011f72:	681b      	ldr	r3, [r3, #0]
 8011f74:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8011f76:	68bb      	ldr	r3, [r7, #8]
 8011f78:	605a      	str	r2, [r3, #4]
 8011f7a:	68fb      	ldr	r3, [r7, #12]
 8011f7c:	681b      	ldr	r3, [r3, #0]
 8011f7e:	691b      	ldr	r3, [r3, #16]
 8011f80:	f3c3 020e 	ubfx	r2, r3, #0, #15
 8011f84:	68bb      	ldr	r3, [r7, #8]
 8011f86:	609a      	str	r2, [r3, #8]
 8011f88:	68fb      	ldr	r3, [r7, #12]
 8011f8a:	681b      	ldr	r3, [r3, #0]
 8011f8c:	681a      	ldr	r2, [r3, #0]
 8011f8e:	4b22      	ldr	r3, [pc, #136]	; (8012018 <HAL_RTC_GetTime+0xb4>)
 8011f90:	4013      	ands	r3, r2
 8011f92:	617b      	str	r3, [r7, #20]
 8011f94:	697b      	ldr	r3, [r7, #20]
 8011f96:	0c1b      	lsrs	r3, r3, #16
 8011f98:	b2db      	uxtb	r3, r3
 8011f9a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8011f9e:	b2da      	uxtb	r2, r3
 8011fa0:	68bb      	ldr	r3, [r7, #8]
 8011fa2:	701a      	strb	r2, [r3, #0]
 8011fa4:	697b      	ldr	r3, [r7, #20]
 8011fa6:	0a1b      	lsrs	r3, r3, #8
 8011fa8:	b2db      	uxtb	r3, r3
 8011faa:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8011fae:	b2da      	uxtb	r2, r3
 8011fb0:	68bb      	ldr	r3, [r7, #8]
 8011fb2:	705a      	strb	r2, [r3, #1]
 8011fb4:	697b      	ldr	r3, [r7, #20]
 8011fb6:	b2db      	uxtb	r3, r3
 8011fb8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8011fbc:	b2da      	uxtb	r2, r3
 8011fbe:	68bb      	ldr	r3, [r7, #8]
 8011fc0:	709a      	strb	r2, [r3, #2]
 8011fc2:	697b      	ldr	r3, [r7, #20]
 8011fc4:	0d9b      	lsrs	r3, r3, #22
 8011fc6:	b2db      	uxtb	r3, r3
 8011fc8:	f003 0301 	and.w	r3, r3, #1
 8011fcc:	b2da      	uxtb	r2, r3
 8011fce:	68bb      	ldr	r3, [r7, #8]
 8011fd0:	70da      	strb	r2, [r3, #3]
 8011fd2:	687b      	ldr	r3, [r7, #4]
 8011fd4:	2b00      	cmp	r3, #0
 8011fd6:	d11a      	bne.n	801200e <HAL_RTC_GetTime+0xaa>
 8011fd8:	68bb      	ldr	r3, [r7, #8]
 8011fda:	781b      	ldrb	r3, [r3, #0]
 8011fdc:	4618      	mov	r0, r3
 8011fde:	f000 f9a9 	bl	8012334 <RTC_Bcd2ToByte>
 8011fe2:	4603      	mov	r3, r0
 8011fe4:	461a      	mov	r2, r3
 8011fe6:	68bb      	ldr	r3, [r7, #8]
 8011fe8:	701a      	strb	r2, [r3, #0]
 8011fea:	68bb      	ldr	r3, [r7, #8]
 8011fec:	785b      	ldrb	r3, [r3, #1]
 8011fee:	4618      	mov	r0, r3
 8011ff0:	f000 f9a0 	bl	8012334 <RTC_Bcd2ToByte>
 8011ff4:	4603      	mov	r3, r0
 8011ff6:	461a      	mov	r2, r3
 8011ff8:	68bb      	ldr	r3, [r7, #8]
 8011ffa:	705a      	strb	r2, [r3, #1]
 8011ffc:	68bb      	ldr	r3, [r7, #8]
 8011ffe:	789b      	ldrb	r3, [r3, #2]
 8012000:	4618      	mov	r0, r3
 8012002:	f000 f997 	bl	8012334 <RTC_Bcd2ToByte>
 8012006:	4603      	mov	r3, r0
 8012008:	461a      	mov	r2, r3
 801200a:	68bb      	ldr	r3, [r7, #8]
 801200c:	709a      	strb	r2, [r3, #2]
 801200e:	2300      	movs	r3, #0
 8012010:	4618      	mov	r0, r3
 8012012:	3718      	adds	r7, #24
 8012014:	46bd      	mov	sp, r7
 8012016:	bd80      	pop	{r7, pc}
 8012018:	007f7f7f 	.word	0x007f7f7f

0801201c <HAL_RTC_SetDate>:
 801201c:	b590      	push	{r4, r7, lr}
 801201e:	b087      	sub	sp, #28
 8012020:	af00      	add	r7, sp, #0
 8012022:	60f8      	str	r0, [r7, #12]
 8012024:	60b9      	str	r1, [r7, #8]
 8012026:	607a      	str	r2, [r7, #4]
 8012028:	68fb      	ldr	r3, [r7, #12]
 801202a:	f893 3020 	ldrb.w	r3, [r3, #32]
 801202e:	2b01      	cmp	r3, #1
 8012030:	d101      	bne.n	8012036 <HAL_RTC_SetDate+0x1a>
 8012032:	2302      	movs	r3, #2
 8012034:	e073      	b.n	801211e <HAL_RTC_SetDate+0x102>
 8012036:	68fb      	ldr	r3, [r7, #12]
 8012038:	2201      	movs	r2, #1
 801203a:	f883 2020 	strb.w	r2, [r3, #32]
 801203e:	68fb      	ldr	r3, [r7, #12]
 8012040:	2202      	movs	r2, #2
 8012042:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8012046:	687b      	ldr	r3, [r7, #4]
 8012048:	2b00      	cmp	r3, #0
 801204a:	d10e      	bne.n	801206a <HAL_RTC_SetDate+0x4e>
 801204c:	68bb      	ldr	r3, [r7, #8]
 801204e:	785b      	ldrb	r3, [r3, #1]
 8012050:	f003 0310 	and.w	r3, r3, #16
 8012054:	2b00      	cmp	r3, #0
 8012056:	d008      	beq.n	801206a <HAL_RTC_SetDate+0x4e>
 8012058:	68bb      	ldr	r3, [r7, #8]
 801205a:	785b      	ldrb	r3, [r3, #1]
 801205c:	f023 0310 	bic.w	r3, r3, #16
 8012060:	b2db      	uxtb	r3, r3
 8012062:	330a      	adds	r3, #10
 8012064:	b2da      	uxtb	r2, r3
 8012066:	68bb      	ldr	r3, [r7, #8]
 8012068:	705a      	strb	r2, [r3, #1]
 801206a:	687b      	ldr	r3, [r7, #4]
 801206c:	2b00      	cmp	r3, #0
 801206e:	d11c      	bne.n	80120aa <HAL_RTC_SetDate+0x8e>
 8012070:	68bb      	ldr	r3, [r7, #8]
 8012072:	78db      	ldrb	r3, [r3, #3]
 8012074:	4618      	mov	r0, r3
 8012076:	f000 f93d 	bl	80122f4 <RTC_ByteToBcd2>
 801207a:	4603      	mov	r3, r0
 801207c:	041c      	lsls	r4, r3, #16
 801207e:	68bb      	ldr	r3, [r7, #8]
 8012080:	785b      	ldrb	r3, [r3, #1]
 8012082:	4618      	mov	r0, r3
 8012084:	f000 f936 	bl	80122f4 <RTC_ByteToBcd2>
 8012088:	4603      	mov	r3, r0
 801208a:	021b      	lsls	r3, r3, #8
 801208c:	431c      	orrs	r4, r3
 801208e:	68bb      	ldr	r3, [r7, #8]
 8012090:	789b      	ldrb	r3, [r3, #2]
 8012092:	4618      	mov	r0, r3
 8012094:	f000 f92e 	bl	80122f4 <RTC_ByteToBcd2>
 8012098:	4603      	mov	r3, r0
 801209a:	ea44 0203 	orr.w	r2, r4, r3
 801209e:	68bb      	ldr	r3, [r7, #8]
 80120a0:	781b      	ldrb	r3, [r3, #0]
 80120a2:	035b      	lsls	r3, r3, #13
 80120a4:	4313      	orrs	r3, r2
 80120a6:	617b      	str	r3, [r7, #20]
 80120a8:	e00e      	b.n	80120c8 <HAL_RTC_SetDate+0xac>
 80120aa:	68bb      	ldr	r3, [r7, #8]
 80120ac:	78db      	ldrb	r3, [r3, #3]
 80120ae:	041a      	lsls	r2, r3, #16
 80120b0:	68bb      	ldr	r3, [r7, #8]
 80120b2:	785b      	ldrb	r3, [r3, #1]
 80120b4:	021b      	lsls	r3, r3, #8
 80120b6:	4313      	orrs	r3, r2
 80120b8:	68ba      	ldr	r2, [r7, #8]
 80120ba:	7892      	ldrb	r2, [r2, #2]
 80120bc:	431a      	orrs	r2, r3
 80120be:	68bb      	ldr	r3, [r7, #8]
 80120c0:	781b      	ldrb	r3, [r3, #0]
 80120c2:	035b      	lsls	r3, r3, #13
 80120c4:	4313      	orrs	r3, r2
 80120c6:	617b      	str	r3, [r7, #20]
 80120c8:	68fb      	ldr	r3, [r7, #12]
 80120ca:	681b      	ldr	r3, [r3, #0]
 80120cc:	22ca      	movs	r2, #202	; 0xca
 80120ce:	625a      	str	r2, [r3, #36]	; 0x24
 80120d0:	68fb      	ldr	r3, [r7, #12]
 80120d2:	681b      	ldr	r3, [r3, #0]
 80120d4:	2253      	movs	r2, #83	; 0x53
 80120d6:	625a      	str	r2, [r3, #36]	; 0x24
 80120d8:	68f8      	ldr	r0, [r7, #12]
 80120da:	f000 f899 	bl	8012210 <RTC_EnterInitMode>
 80120de:	4603      	mov	r3, r0
 80120e0:	74fb      	strb	r3, [r7, #19]
 80120e2:	7cfb      	ldrb	r3, [r7, #19]
 80120e4:	2b00      	cmp	r3, #0
 80120e6:	d10a      	bne.n	80120fe <HAL_RTC_SetDate+0xe2>
 80120e8:	68fb      	ldr	r3, [r7, #12]
 80120ea:	681a      	ldr	r2, [r3, #0]
 80120ec:	6979      	ldr	r1, [r7, #20]
 80120ee:	4b0e      	ldr	r3, [pc, #56]	; (8012128 <HAL_RTC_SetDate+0x10c>)
 80120f0:	400b      	ands	r3, r1
 80120f2:	6053      	str	r3, [r2, #4]
 80120f4:	68f8      	ldr	r0, [r7, #12]
 80120f6:	f000 f8bf 	bl	8012278 <RTC_ExitInitMode>
 80120fa:	4603      	mov	r3, r0
 80120fc:	74fb      	strb	r3, [r7, #19]
 80120fe:	68fb      	ldr	r3, [r7, #12]
 8012100:	681b      	ldr	r3, [r3, #0]
 8012102:	22ff      	movs	r2, #255	; 0xff
 8012104:	625a      	str	r2, [r3, #36]	; 0x24
 8012106:	7cfb      	ldrb	r3, [r7, #19]
 8012108:	2b00      	cmp	r3, #0
 801210a:	d103      	bne.n	8012114 <HAL_RTC_SetDate+0xf8>
 801210c:	68fb      	ldr	r3, [r7, #12]
 801210e:	2201      	movs	r2, #1
 8012110:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8012114:	68fb      	ldr	r3, [r7, #12]
 8012116:	2200      	movs	r2, #0
 8012118:	f883 2020 	strb.w	r2, [r3, #32]
 801211c:	7cfb      	ldrb	r3, [r7, #19]
 801211e:	4618      	mov	r0, r3
 8012120:	371c      	adds	r7, #28
 8012122:	46bd      	mov	sp, r7
 8012124:	bd90      	pop	{r4, r7, pc}
 8012126:	bf00      	nop
 8012128:	00ffff3f 	.word	0x00ffff3f

0801212c <HAL_RTC_GetDate>:
 801212c:	b580      	push	{r7, lr}
 801212e:	b086      	sub	sp, #24
 8012130:	af00      	add	r7, sp, #0
 8012132:	60f8      	str	r0, [r7, #12]
 8012134:	60b9      	str	r1, [r7, #8]
 8012136:	607a      	str	r2, [r7, #4]
 8012138:	68fb      	ldr	r3, [r7, #12]
 801213a:	681b      	ldr	r3, [r3, #0]
 801213c:	685a      	ldr	r2, [r3, #4]
 801213e:	4b21      	ldr	r3, [pc, #132]	; (80121c4 <HAL_RTC_GetDate+0x98>)
 8012140:	4013      	ands	r3, r2
 8012142:	617b      	str	r3, [r7, #20]
 8012144:	697b      	ldr	r3, [r7, #20]
 8012146:	0c1b      	lsrs	r3, r3, #16
 8012148:	b2da      	uxtb	r2, r3
 801214a:	68bb      	ldr	r3, [r7, #8]
 801214c:	70da      	strb	r2, [r3, #3]
 801214e:	697b      	ldr	r3, [r7, #20]
 8012150:	0a1b      	lsrs	r3, r3, #8
 8012152:	b2db      	uxtb	r3, r3
 8012154:	f003 031f 	and.w	r3, r3, #31
 8012158:	b2da      	uxtb	r2, r3
 801215a:	68bb      	ldr	r3, [r7, #8]
 801215c:	705a      	strb	r2, [r3, #1]
 801215e:	697b      	ldr	r3, [r7, #20]
 8012160:	b2db      	uxtb	r3, r3
 8012162:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8012166:	b2da      	uxtb	r2, r3
 8012168:	68bb      	ldr	r3, [r7, #8]
 801216a:	709a      	strb	r2, [r3, #2]
 801216c:	697b      	ldr	r3, [r7, #20]
 801216e:	0b5b      	lsrs	r3, r3, #13
 8012170:	b2db      	uxtb	r3, r3
 8012172:	f003 0307 	and.w	r3, r3, #7
 8012176:	b2da      	uxtb	r2, r3
 8012178:	68bb      	ldr	r3, [r7, #8]
 801217a:	701a      	strb	r2, [r3, #0]
 801217c:	687b      	ldr	r3, [r7, #4]
 801217e:	2b00      	cmp	r3, #0
 8012180:	d11a      	bne.n	80121b8 <HAL_RTC_GetDate+0x8c>
 8012182:	68bb      	ldr	r3, [r7, #8]
 8012184:	78db      	ldrb	r3, [r3, #3]
 8012186:	4618      	mov	r0, r3
 8012188:	f000 f8d4 	bl	8012334 <RTC_Bcd2ToByte>
 801218c:	4603      	mov	r3, r0
 801218e:	461a      	mov	r2, r3
 8012190:	68bb      	ldr	r3, [r7, #8]
 8012192:	70da      	strb	r2, [r3, #3]
 8012194:	68bb      	ldr	r3, [r7, #8]
 8012196:	785b      	ldrb	r3, [r3, #1]
 8012198:	4618      	mov	r0, r3
 801219a:	f000 f8cb 	bl	8012334 <RTC_Bcd2ToByte>
 801219e:	4603      	mov	r3, r0
 80121a0:	461a      	mov	r2, r3
 80121a2:	68bb      	ldr	r3, [r7, #8]
 80121a4:	705a      	strb	r2, [r3, #1]
 80121a6:	68bb      	ldr	r3, [r7, #8]
 80121a8:	789b      	ldrb	r3, [r3, #2]
 80121aa:	4618      	mov	r0, r3
 80121ac:	f000 f8c2 	bl	8012334 <RTC_Bcd2ToByte>
 80121b0:	4603      	mov	r3, r0
 80121b2:	461a      	mov	r2, r3
 80121b4:	68bb      	ldr	r3, [r7, #8]
 80121b6:	709a      	strb	r2, [r3, #2]
 80121b8:	2300      	movs	r3, #0
 80121ba:	4618      	mov	r0, r3
 80121bc:	3718      	adds	r7, #24
 80121be:	46bd      	mov	sp, r7
 80121c0:	bd80      	pop	{r7, pc}
 80121c2:	bf00      	nop
 80121c4:	00ffff3f 	.word	0x00ffff3f

080121c8 <HAL_RTC_WaitForSynchro>:
 80121c8:	b580      	push	{r7, lr}
 80121ca:	b084      	sub	sp, #16
 80121cc:	af00      	add	r7, sp, #0
 80121ce:	6078      	str	r0, [r7, #4]
 80121d0:	687b      	ldr	r3, [r7, #4]
 80121d2:	681b      	ldr	r3, [r3, #0]
 80121d4:	4a0d      	ldr	r2, [pc, #52]	; (801220c <HAL_RTC_WaitForSynchro+0x44>)
 80121d6:	60da      	str	r2, [r3, #12]
 80121d8:	f7f4 f80a 	bl	80061f0 <HAL_GetTick>
 80121dc:	60f8      	str	r0, [r7, #12]
 80121de:	e009      	b.n	80121f4 <HAL_RTC_WaitForSynchro+0x2c>
 80121e0:	f7f4 f806 	bl	80061f0 <HAL_GetTick>
 80121e4:	4602      	mov	r2, r0
 80121e6:	68fb      	ldr	r3, [r7, #12]
 80121e8:	1ad3      	subs	r3, r2, r3
 80121ea:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80121ee:	d901      	bls.n	80121f4 <HAL_RTC_WaitForSynchro+0x2c>
 80121f0:	2303      	movs	r3, #3
 80121f2:	e007      	b.n	8012204 <HAL_RTC_WaitForSynchro+0x3c>
 80121f4:	687b      	ldr	r3, [r7, #4]
 80121f6:	681b      	ldr	r3, [r3, #0]
 80121f8:	68db      	ldr	r3, [r3, #12]
 80121fa:	f003 0320 	and.w	r3, r3, #32
 80121fe:	2b00      	cmp	r3, #0
 8012200:	d0ee      	beq.n	80121e0 <HAL_RTC_WaitForSynchro+0x18>
 8012202:	2300      	movs	r3, #0
 8012204:	4618      	mov	r0, r3
 8012206:	3710      	adds	r7, #16
 8012208:	46bd      	mov	sp, r7
 801220a:	bd80      	pop	{r7, pc}
 801220c:	0003ff5f 	.word	0x0003ff5f

08012210 <RTC_EnterInitMode>:
 8012210:	b580      	push	{r7, lr}
 8012212:	b084      	sub	sp, #16
 8012214:	af00      	add	r7, sp, #0
 8012216:	6078      	str	r0, [r7, #4]
 8012218:	2300      	movs	r3, #0
 801221a:	73fb      	strb	r3, [r7, #15]
 801221c:	687b      	ldr	r3, [r7, #4]
 801221e:	681b      	ldr	r3, [r3, #0]
 8012220:	68db      	ldr	r3, [r3, #12]
 8012222:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8012226:	2b00      	cmp	r3, #0
 8012228:	d120      	bne.n	801226c <RTC_EnterInitMode+0x5c>
 801222a:	687b      	ldr	r3, [r7, #4]
 801222c:	681b      	ldr	r3, [r3, #0]
 801222e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8012232:	60da      	str	r2, [r3, #12]
 8012234:	f7f3 ffdc 	bl	80061f0 <HAL_GetTick>
 8012238:	60b8      	str	r0, [r7, #8]
 801223a:	e00d      	b.n	8012258 <RTC_EnterInitMode+0x48>
 801223c:	f7f3 ffd8 	bl	80061f0 <HAL_GetTick>
 8012240:	4602      	mov	r2, r0
 8012242:	68bb      	ldr	r3, [r7, #8]
 8012244:	1ad3      	subs	r3, r2, r3
 8012246:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 801224a:	d905      	bls.n	8012258 <RTC_EnterInitMode+0x48>
 801224c:	2303      	movs	r3, #3
 801224e:	73fb      	strb	r3, [r7, #15]
 8012250:	687b      	ldr	r3, [r7, #4]
 8012252:	2203      	movs	r2, #3
 8012254:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8012258:	687b      	ldr	r3, [r7, #4]
 801225a:	681b      	ldr	r3, [r3, #0]
 801225c:	68db      	ldr	r3, [r3, #12]
 801225e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8012262:	2b00      	cmp	r3, #0
 8012264:	d102      	bne.n	801226c <RTC_EnterInitMode+0x5c>
 8012266:	7bfb      	ldrb	r3, [r7, #15]
 8012268:	2b03      	cmp	r3, #3
 801226a:	d1e7      	bne.n	801223c <RTC_EnterInitMode+0x2c>
 801226c:	7bfb      	ldrb	r3, [r7, #15]
 801226e:	4618      	mov	r0, r3
 8012270:	3710      	adds	r7, #16
 8012272:	46bd      	mov	sp, r7
 8012274:	bd80      	pop	{r7, pc}
	...

08012278 <RTC_ExitInitMode>:
 8012278:	b580      	push	{r7, lr}
 801227a:	b084      	sub	sp, #16
 801227c:	af00      	add	r7, sp, #0
 801227e:	6078      	str	r0, [r7, #4]
 8012280:	2300      	movs	r3, #0
 8012282:	73fb      	strb	r3, [r7, #15]
 8012284:	4b1a      	ldr	r3, [pc, #104]	; (80122f0 <RTC_ExitInitMode+0x78>)
 8012286:	68db      	ldr	r3, [r3, #12]
 8012288:	4a19      	ldr	r2, [pc, #100]	; (80122f0 <RTC_ExitInitMode+0x78>)
 801228a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801228e:	60d3      	str	r3, [r2, #12]
 8012290:	4b17      	ldr	r3, [pc, #92]	; (80122f0 <RTC_ExitInitMode+0x78>)
 8012292:	689b      	ldr	r3, [r3, #8]
 8012294:	f003 0320 	and.w	r3, r3, #32
 8012298:	2b00      	cmp	r3, #0
 801229a:	d10c      	bne.n	80122b6 <RTC_ExitInitMode+0x3e>
 801229c:	6878      	ldr	r0, [r7, #4]
 801229e:	f7ff ff93 	bl	80121c8 <HAL_RTC_WaitForSynchro>
 80122a2:	4603      	mov	r3, r0
 80122a4:	2b00      	cmp	r3, #0
 80122a6:	d01e      	beq.n	80122e6 <RTC_ExitInitMode+0x6e>
 80122a8:	687b      	ldr	r3, [r7, #4]
 80122aa:	2203      	movs	r2, #3
 80122ac:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80122b0:	2303      	movs	r3, #3
 80122b2:	73fb      	strb	r3, [r7, #15]
 80122b4:	e017      	b.n	80122e6 <RTC_ExitInitMode+0x6e>
 80122b6:	4b0e      	ldr	r3, [pc, #56]	; (80122f0 <RTC_ExitInitMode+0x78>)
 80122b8:	689b      	ldr	r3, [r3, #8]
 80122ba:	4a0d      	ldr	r2, [pc, #52]	; (80122f0 <RTC_ExitInitMode+0x78>)
 80122bc:	f023 0320 	bic.w	r3, r3, #32
 80122c0:	6093      	str	r3, [r2, #8]
 80122c2:	6878      	ldr	r0, [r7, #4]
 80122c4:	f7ff ff80 	bl	80121c8 <HAL_RTC_WaitForSynchro>
 80122c8:	4603      	mov	r3, r0
 80122ca:	2b00      	cmp	r3, #0
 80122cc:	d005      	beq.n	80122da <RTC_ExitInitMode+0x62>
 80122ce:	687b      	ldr	r3, [r7, #4]
 80122d0:	2203      	movs	r2, #3
 80122d2:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80122d6:	2303      	movs	r3, #3
 80122d8:	73fb      	strb	r3, [r7, #15]
 80122da:	4b05      	ldr	r3, [pc, #20]	; (80122f0 <RTC_ExitInitMode+0x78>)
 80122dc:	689b      	ldr	r3, [r3, #8]
 80122de:	4a04      	ldr	r2, [pc, #16]	; (80122f0 <RTC_ExitInitMode+0x78>)
 80122e0:	f043 0320 	orr.w	r3, r3, #32
 80122e4:	6093      	str	r3, [r2, #8]
 80122e6:	7bfb      	ldrb	r3, [r7, #15]
 80122e8:	4618      	mov	r0, r3
 80122ea:	3710      	adds	r7, #16
 80122ec:	46bd      	mov	sp, r7
 80122ee:	bd80      	pop	{r7, pc}
 80122f0:	58004000 	.word	0x58004000

080122f4 <RTC_ByteToBcd2>:
 80122f4:	b480      	push	{r7}
 80122f6:	b085      	sub	sp, #20
 80122f8:	af00      	add	r7, sp, #0
 80122fa:	4603      	mov	r3, r0
 80122fc:	71fb      	strb	r3, [r7, #7]
 80122fe:	2300      	movs	r3, #0
 8012300:	60fb      	str	r3, [r7, #12]
 8012302:	79fb      	ldrb	r3, [r7, #7]
 8012304:	72fb      	strb	r3, [r7, #11]
 8012306:	e005      	b.n	8012314 <RTC_ByteToBcd2+0x20>
 8012308:	68fb      	ldr	r3, [r7, #12]
 801230a:	3301      	adds	r3, #1
 801230c:	60fb      	str	r3, [r7, #12]
 801230e:	7afb      	ldrb	r3, [r7, #11]
 8012310:	3b0a      	subs	r3, #10
 8012312:	72fb      	strb	r3, [r7, #11]
 8012314:	7afb      	ldrb	r3, [r7, #11]
 8012316:	2b09      	cmp	r3, #9
 8012318:	d8f6      	bhi.n	8012308 <RTC_ByteToBcd2+0x14>
 801231a:	68fb      	ldr	r3, [r7, #12]
 801231c:	b2db      	uxtb	r3, r3
 801231e:	011b      	lsls	r3, r3, #4
 8012320:	b2da      	uxtb	r2, r3
 8012322:	7afb      	ldrb	r3, [r7, #11]
 8012324:	4313      	orrs	r3, r2
 8012326:	b2db      	uxtb	r3, r3
 8012328:	4618      	mov	r0, r3
 801232a:	3714      	adds	r7, #20
 801232c:	46bd      	mov	sp, r7
 801232e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012332:	4770      	bx	lr

08012334 <RTC_Bcd2ToByte>:
 8012334:	b480      	push	{r7}
 8012336:	b085      	sub	sp, #20
 8012338:	af00      	add	r7, sp, #0
 801233a:	4603      	mov	r3, r0
 801233c:	71fb      	strb	r3, [r7, #7]
 801233e:	79fb      	ldrb	r3, [r7, #7]
 8012340:	091b      	lsrs	r3, r3, #4
 8012342:	b2db      	uxtb	r3, r3
 8012344:	461a      	mov	r2, r3
 8012346:	0092      	lsls	r2, r2, #2
 8012348:	4413      	add	r3, r2
 801234a:	005b      	lsls	r3, r3, #1
 801234c:	73fb      	strb	r3, [r7, #15]
 801234e:	79fb      	ldrb	r3, [r7, #7]
 8012350:	f003 030f 	and.w	r3, r3, #15
 8012354:	b2da      	uxtb	r2, r3
 8012356:	7bfb      	ldrb	r3, [r7, #15]
 8012358:	4413      	add	r3, r2
 801235a:	b2db      	uxtb	r3, r3
 801235c:	4618      	mov	r0, r3
 801235e:	3714      	adds	r7, #20
 8012360:	46bd      	mov	sp, r7
 8012362:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012366:	4770      	bx	lr

08012368 <HAL_SPI_Init>:
 8012368:	b580      	push	{r7, lr}
 801236a:	b084      	sub	sp, #16
 801236c:	af00      	add	r7, sp, #0
 801236e:	6078      	str	r0, [r7, #4]
 8012370:	687b      	ldr	r3, [r7, #4]
 8012372:	2b00      	cmp	r3, #0
 8012374:	d101      	bne.n	801237a <HAL_SPI_Init+0x12>
 8012376:	2301      	movs	r3, #1
 8012378:	e10f      	b.n	801259a <HAL_SPI_Init+0x232>
 801237a:	687b      	ldr	r3, [r7, #4]
 801237c:	2200      	movs	r2, #0
 801237e:	629a      	str	r2, [r3, #40]	; 0x28
 8012380:	687b      	ldr	r3, [r7, #4]
 8012382:	681b      	ldr	r3, [r3, #0]
 8012384:	4a87      	ldr	r2, [pc, #540]	; (80125a4 <HAL_SPI_Init+0x23c>)
 8012386:	4293      	cmp	r3, r2
 8012388:	d00f      	beq.n	80123aa <HAL_SPI_Init+0x42>
 801238a:	687b      	ldr	r3, [r7, #4]
 801238c:	681b      	ldr	r3, [r3, #0]
 801238e:	4a86      	ldr	r2, [pc, #536]	; (80125a8 <HAL_SPI_Init+0x240>)
 8012390:	4293      	cmp	r3, r2
 8012392:	d00a      	beq.n	80123aa <HAL_SPI_Init+0x42>
 8012394:	687b      	ldr	r3, [r7, #4]
 8012396:	681b      	ldr	r3, [r3, #0]
 8012398:	4a84      	ldr	r2, [pc, #528]	; (80125ac <HAL_SPI_Init+0x244>)
 801239a:	4293      	cmp	r3, r2
 801239c:	d005      	beq.n	80123aa <HAL_SPI_Init+0x42>
 801239e:	687b      	ldr	r3, [r7, #4]
 80123a0:	68db      	ldr	r3, [r3, #12]
 80123a2:	2b0f      	cmp	r3, #15
 80123a4:	d901      	bls.n	80123aa <HAL_SPI_Init+0x42>
 80123a6:	2301      	movs	r3, #1
 80123a8:	e0f7      	b.n	801259a <HAL_SPI_Init+0x232>
 80123aa:	6878      	ldr	r0, [r7, #4]
 80123ac:	f000 fd60 	bl	8012e70 <SPI_GetPacketSize>
 80123b0:	60f8      	str	r0, [r7, #12]
 80123b2:	687b      	ldr	r3, [r7, #4]
 80123b4:	681b      	ldr	r3, [r3, #0]
 80123b6:	4a7b      	ldr	r2, [pc, #492]	; (80125a4 <HAL_SPI_Init+0x23c>)
 80123b8:	4293      	cmp	r3, r2
 80123ba:	d00c      	beq.n	80123d6 <HAL_SPI_Init+0x6e>
 80123bc:	687b      	ldr	r3, [r7, #4]
 80123be:	681b      	ldr	r3, [r3, #0]
 80123c0:	4a79      	ldr	r2, [pc, #484]	; (80125a8 <HAL_SPI_Init+0x240>)
 80123c2:	4293      	cmp	r3, r2
 80123c4:	d007      	beq.n	80123d6 <HAL_SPI_Init+0x6e>
 80123c6:	687b      	ldr	r3, [r7, #4]
 80123c8:	681b      	ldr	r3, [r3, #0]
 80123ca:	4a78      	ldr	r2, [pc, #480]	; (80125ac <HAL_SPI_Init+0x244>)
 80123cc:	4293      	cmp	r3, r2
 80123ce:	d002      	beq.n	80123d6 <HAL_SPI_Init+0x6e>
 80123d0:	68fb      	ldr	r3, [r7, #12]
 80123d2:	2b08      	cmp	r3, #8
 80123d4:	d811      	bhi.n	80123fa <HAL_SPI_Init+0x92>
 80123d6:	687b      	ldr	r3, [r7, #4]
 80123d8:	681b      	ldr	r3, [r3, #0]
 80123da:	4a72      	ldr	r2, [pc, #456]	; (80125a4 <HAL_SPI_Init+0x23c>)
 80123dc:	4293      	cmp	r3, r2
 80123de:	d009      	beq.n	80123f4 <HAL_SPI_Init+0x8c>
 80123e0:	687b      	ldr	r3, [r7, #4]
 80123e2:	681b      	ldr	r3, [r3, #0]
 80123e4:	4a70      	ldr	r2, [pc, #448]	; (80125a8 <HAL_SPI_Init+0x240>)
 80123e6:	4293      	cmp	r3, r2
 80123e8:	d004      	beq.n	80123f4 <HAL_SPI_Init+0x8c>
 80123ea:	687b      	ldr	r3, [r7, #4]
 80123ec:	681b      	ldr	r3, [r3, #0]
 80123ee:	4a6f      	ldr	r2, [pc, #444]	; (80125ac <HAL_SPI_Init+0x244>)
 80123f0:	4293      	cmp	r3, r2
 80123f2:	d104      	bne.n	80123fe <HAL_SPI_Init+0x96>
 80123f4:	68fb      	ldr	r3, [r7, #12]
 80123f6:	2b10      	cmp	r3, #16
 80123f8:	d901      	bls.n	80123fe <HAL_SPI_Init+0x96>
 80123fa:	2301      	movs	r3, #1
 80123fc:	e0cd      	b.n	801259a <HAL_SPI_Init+0x232>
 80123fe:	687b      	ldr	r3, [r7, #4]
 8012400:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8012404:	b2db      	uxtb	r3, r3
 8012406:	2b00      	cmp	r3, #0
 8012408:	d106      	bne.n	8012418 <HAL_SPI_Init+0xb0>
 801240a:	687b      	ldr	r3, [r7, #4]
 801240c:	2200      	movs	r2, #0
 801240e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8012412:	6878      	ldr	r0, [r7, #4]
 8012414:	f7f2 f898 	bl	8004548 <HAL_SPI_MspInit>
 8012418:	687b      	ldr	r3, [r7, #4]
 801241a:	2202      	movs	r2, #2
 801241c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012420:	687b      	ldr	r3, [r7, #4]
 8012422:	681b      	ldr	r3, [r3, #0]
 8012424:	681a      	ldr	r2, [r3, #0]
 8012426:	687b      	ldr	r3, [r7, #4]
 8012428:	681b      	ldr	r3, [r3, #0]
 801242a:	f022 0201 	bic.w	r2, r2, #1
 801242e:	601a      	str	r2, [r3, #0]
 8012430:	687b      	ldr	r3, [r7, #4]
 8012432:	681b      	ldr	r3, [r3, #0]
 8012434:	689b      	ldr	r3, [r3, #8]
 8012436:	f403 13f8 	and.w	r3, r3, #2031616	; 0x1f0000
 801243a:	60bb      	str	r3, [r7, #8]
 801243c:	687b      	ldr	r3, [r7, #4]
 801243e:	699b      	ldr	r3, [r3, #24]
 8012440:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8012444:	d119      	bne.n	801247a <HAL_SPI_Init+0x112>
 8012446:	687b      	ldr	r3, [r7, #4]
 8012448:	685b      	ldr	r3, [r3, #4]
 801244a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 801244e:	d103      	bne.n	8012458 <HAL_SPI_Init+0xf0>
 8012450:	687b      	ldr	r3, [r7, #4]
 8012452:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012454:	2b00      	cmp	r3, #0
 8012456:	d008      	beq.n	801246a <HAL_SPI_Init+0x102>
 8012458:	687b      	ldr	r3, [r7, #4]
 801245a:	685b      	ldr	r3, [r3, #4]
 801245c:	2b00      	cmp	r3, #0
 801245e:	d10c      	bne.n	801247a <HAL_SPI_Init+0x112>
 8012460:	687b      	ldr	r3, [r7, #4]
 8012462:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012464:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8012468:	d107      	bne.n	801247a <HAL_SPI_Init+0x112>
 801246a:	687b      	ldr	r3, [r7, #4]
 801246c:	681b      	ldr	r3, [r3, #0]
 801246e:	681a      	ldr	r2, [r3, #0]
 8012470:	687b      	ldr	r3, [r7, #4]
 8012472:	681b      	ldr	r3, [r3, #0]
 8012474:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8012478:	601a      	str	r2, [r3, #0]
 801247a:	687b      	ldr	r3, [r7, #4]
 801247c:	685b      	ldr	r3, [r3, #4]
 801247e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8012482:	2b00      	cmp	r3, #0
 8012484:	d00f      	beq.n	80124a6 <HAL_SPI_Init+0x13e>
 8012486:	687b      	ldr	r3, [r7, #4]
 8012488:	68db      	ldr	r3, [r3, #12]
 801248a:	2b06      	cmp	r3, #6
 801248c:	d90b      	bls.n	80124a6 <HAL_SPI_Init+0x13e>
 801248e:	687b      	ldr	r3, [r7, #4]
 8012490:	681b      	ldr	r3, [r3, #0]
 8012492:	681b      	ldr	r3, [r3, #0]
 8012494:	f423 7180 	bic.w	r1, r3, #256	; 0x100
 8012498:	687b      	ldr	r3, [r7, #4]
 801249a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801249c:	687b      	ldr	r3, [r7, #4]
 801249e:	681b      	ldr	r3, [r3, #0]
 80124a0:	430a      	orrs	r2, r1
 80124a2:	601a      	str	r2, [r3, #0]
 80124a4:	e007      	b.n	80124b6 <HAL_SPI_Init+0x14e>
 80124a6:	687b      	ldr	r3, [r7, #4]
 80124a8:	681b      	ldr	r3, [r3, #0]
 80124aa:	681a      	ldr	r2, [r3, #0]
 80124ac:	687b      	ldr	r3, [r7, #4]
 80124ae:	681b      	ldr	r3, [r3, #0]
 80124b0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80124b4:	601a      	str	r2, [r3, #0]
 80124b6:	687b      	ldr	r3, [r7, #4]
 80124b8:	69da      	ldr	r2, [r3, #28]
 80124ba:	687b      	ldr	r3, [r7, #4]
 80124bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80124be:	431a      	orrs	r2, r3
 80124c0:	68bb      	ldr	r3, [r7, #8]
 80124c2:	431a      	orrs	r2, r3
 80124c4:	687b      	ldr	r3, [r7, #4]
 80124c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80124c8:	ea42 0103 	orr.w	r1, r2, r3
 80124cc:	687b      	ldr	r3, [r7, #4]
 80124ce:	68da      	ldr	r2, [r3, #12]
 80124d0:	687b      	ldr	r3, [r7, #4]
 80124d2:	681b      	ldr	r3, [r3, #0]
 80124d4:	430a      	orrs	r2, r1
 80124d6:	609a      	str	r2, [r3, #8]
 80124d8:	687b      	ldr	r3, [r7, #4]
 80124da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80124dc:	687b      	ldr	r3, [r7, #4]
 80124de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80124e0:	431a      	orrs	r2, r3
 80124e2:	687b      	ldr	r3, [r7, #4]
 80124e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124e6:	431a      	orrs	r2, r3
 80124e8:	687b      	ldr	r3, [r7, #4]
 80124ea:	699b      	ldr	r3, [r3, #24]
 80124ec:	431a      	orrs	r2, r3
 80124ee:	687b      	ldr	r3, [r7, #4]
 80124f0:	691b      	ldr	r3, [r3, #16]
 80124f2:	431a      	orrs	r2, r3
 80124f4:	687b      	ldr	r3, [r7, #4]
 80124f6:	695b      	ldr	r3, [r3, #20]
 80124f8:	431a      	orrs	r2, r3
 80124fa:	687b      	ldr	r3, [r7, #4]
 80124fc:	6a1b      	ldr	r3, [r3, #32]
 80124fe:	431a      	orrs	r2, r3
 8012500:	687b      	ldr	r3, [r7, #4]
 8012502:	685b      	ldr	r3, [r3, #4]
 8012504:	431a      	orrs	r2, r3
 8012506:	687b      	ldr	r3, [r7, #4]
 8012508:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801250a:	431a      	orrs	r2, r3
 801250c:	687b      	ldr	r3, [r7, #4]
 801250e:	689b      	ldr	r3, [r3, #8]
 8012510:	431a      	orrs	r2, r3
 8012512:	687b      	ldr	r3, [r7, #4]
 8012514:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012516:	ea42 0103 	orr.w	r1, r2, r3
 801251a:	687b      	ldr	r3, [r7, #4]
 801251c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 801251e:	687b      	ldr	r3, [r7, #4]
 8012520:	681b      	ldr	r3, [r3, #0]
 8012522:	430a      	orrs	r2, r1
 8012524:	60da      	str	r2, [r3, #12]
 8012526:	687b      	ldr	r3, [r7, #4]
 8012528:	685b      	ldr	r3, [r3, #4]
 801252a:	2b00      	cmp	r3, #0
 801252c:	d113      	bne.n	8012556 <HAL_SPI_Init+0x1ee>
 801252e:	687b      	ldr	r3, [r7, #4]
 8012530:	681b      	ldr	r3, [r3, #0]
 8012532:	689b      	ldr	r3, [r3, #8]
 8012534:	f423 52c0 	bic.w	r2, r3, #6144	; 0x1800
 8012538:	687b      	ldr	r3, [r7, #4]
 801253a:	681b      	ldr	r3, [r3, #0]
 801253c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8012540:	609a      	str	r2, [r3, #8]
 8012542:	687b      	ldr	r3, [r7, #4]
 8012544:	681b      	ldr	r3, [r3, #0]
 8012546:	689b      	ldr	r3, [r3, #8]
 8012548:	f423 62c0 	bic.w	r2, r3, #1536	; 0x600
 801254c:	687b      	ldr	r3, [r7, #4]
 801254e:	681b      	ldr	r3, [r3, #0]
 8012550:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012554:	609a      	str	r2, [r3, #8]
 8012556:	687b      	ldr	r3, [r7, #4]
 8012558:	681b      	ldr	r3, [r3, #0]
 801255a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801255c:	687b      	ldr	r3, [r7, #4]
 801255e:	681b      	ldr	r3, [r3, #0]
 8012560:	f022 0201 	bic.w	r2, r2, #1
 8012564:	651a      	str	r2, [r3, #80]	; 0x50
 8012566:	687b      	ldr	r3, [r7, #4]
 8012568:	685b      	ldr	r3, [r3, #4]
 801256a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 801256e:	2b00      	cmp	r3, #0
 8012570:	d00a      	beq.n	8012588 <HAL_SPI_Init+0x220>
 8012572:	687b      	ldr	r3, [r7, #4]
 8012574:	681b      	ldr	r3, [r3, #0]
 8012576:	68db      	ldr	r3, [r3, #12]
 8012578:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801257c:	687b      	ldr	r3, [r7, #4]
 801257e:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8012580:	687b      	ldr	r3, [r7, #4]
 8012582:	681b      	ldr	r3, [r3, #0]
 8012584:	430a      	orrs	r2, r1
 8012586:	60da      	str	r2, [r3, #12]
 8012588:	687b      	ldr	r3, [r7, #4]
 801258a:	2200      	movs	r2, #0
 801258c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012590:	687b      	ldr	r3, [r7, #4]
 8012592:	2201      	movs	r2, #1
 8012594:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012598:	2300      	movs	r3, #0
 801259a:	4618      	mov	r0, r3
 801259c:	3710      	adds	r7, #16
 801259e:	46bd      	mov	sp, r7
 80125a0:	bd80      	pop	{r7, pc}
 80125a2:	bf00      	nop
 80125a4:	40013000 	.word	0x40013000
 80125a8:	40003800 	.word	0x40003800
 80125ac:	40003c00 	.word	0x40003c00

080125b0 <HAL_SPI_Receive_DMA>:
 80125b0:	b580      	push	{r7, lr}
 80125b2:	b084      	sub	sp, #16
 80125b4:	af00      	add	r7, sp, #0
 80125b6:	60f8      	str	r0, [r7, #12]
 80125b8:	60b9      	str	r1, [r7, #8]
 80125ba:	4613      	mov	r3, r2
 80125bc:	80fb      	strh	r3, [r7, #6]
 80125be:	68fb      	ldr	r3, [r7, #12]
 80125c0:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 80125c4:	b2db      	uxtb	r3, r3
 80125c6:	2b01      	cmp	r3, #1
 80125c8:	d005      	beq.n	80125d6 <HAL_SPI_Receive_DMA+0x26>
 80125ca:	68fb      	ldr	r3, [r7, #12]
 80125cc:	2200      	movs	r2, #0
 80125ce:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80125d2:	2302      	movs	r3, #2
 80125d4:	e127      	b.n	8012826 <HAL_SPI_Receive_DMA+0x276>
 80125d6:	68bb      	ldr	r3, [r7, #8]
 80125d8:	2b00      	cmp	r3, #0
 80125da:	d002      	beq.n	80125e2 <HAL_SPI_Receive_DMA+0x32>
 80125dc:	88fb      	ldrh	r3, [r7, #6]
 80125de:	2b00      	cmp	r3, #0
 80125e0:	d105      	bne.n	80125ee <HAL_SPI_Receive_DMA+0x3e>
 80125e2:	68fb      	ldr	r3, [r7, #12]
 80125e4:	2200      	movs	r2, #0
 80125e6:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80125ea:	2301      	movs	r3, #1
 80125ec:	e11b      	b.n	8012826 <HAL_SPI_Receive_DMA+0x276>
 80125ee:	68fb      	ldr	r3, [r7, #12]
 80125f0:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 80125f4:	2b01      	cmp	r3, #1
 80125f6:	d101      	bne.n	80125fc <HAL_SPI_Receive_DMA+0x4c>
 80125f8:	2302      	movs	r3, #2
 80125fa:	e114      	b.n	8012826 <HAL_SPI_Receive_DMA+0x276>
 80125fc:	68fb      	ldr	r3, [r7, #12]
 80125fe:	2201      	movs	r2, #1
 8012600:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8012604:	68fb      	ldr	r3, [r7, #12]
 8012606:	2204      	movs	r2, #4
 8012608:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 801260c:	68fb      	ldr	r3, [r7, #12]
 801260e:	2200      	movs	r2, #0
 8012610:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012614:	68fb      	ldr	r3, [r7, #12]
 8012616:	68ba      	ldr	r2, [r7, #8]
 8012618:	665a      	str	r2, [r3, #100]	; 0x64
 801261a:	68fb      	ldr	r3, [r7, #12]
 801261c:	88fa      	ldrh	r2, [r7, #6]
 801261e:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8012622:	68fb      	ldr	r3, [r7, #12]
 8012624:	88fa      	ldrh	r2, [r7, #6]
 8012626:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 801262a:	68fb      	ldr	r3, [r7, #12]
 801262c:	2200      	movs	r2, #0
 801262e:	671a      	str	r2, [r3, #112]	; 0x70
 8012630:	68fb      	ldr	r3, [r7, #12]
 8012632:	2200      	movs	r2, #0
 8012634:	675a      	str	r2, [r3, #116]	; 0x74
 8012636:	68fb      	ldr	r3, [r7, #12]
 8012638:	2200      	movs	r2, #0
 801263a:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 801263e:	68fb      	ldr	r3, [r7, #12]
 8012640:	2200      	movs	r2, #0
 8012642:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 8012646:	68fb      	ldr	r3, [r7, #12]
 8012648:	689b      	ldr	r3, [r3, #8]
 801264a:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 801264e:	d108      	bne.n	8012662 <HAL_SPI_Receive_DMA+0xb2>
 8012650:	68fb      	ldr	r3, [r7, #12]
 8012652:	681b      	ldr	r3, [r3, #0]
 8012654:	681a      	ldr	r2, [r3, #0]
 8012656:	68fb      	ldr	r3, [r7, #12]
 8012658:	681b      	ldr	r3, [r3, #0]
 801265a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 801265e:	601a      	str	r2, [r3, #0]
 8012660:	e009      	b.n	8012676 <HAL_SPI_Receive_DMA+0xc6>
 8012662:	68fb      	ldr	r3, [r7, #12]
 8012664:	681b      	ldr	r3, [r3, #0]
 8012666:	68db      	ldr	r3, [r3, #12]
 8012668:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 801266c:	68fb      	ldr	r3, [r7, #12]
 801266e:	681b      	ldr	r3, [r3, #0]
 8012670:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8012674:	60da      	str	r2, [r3, #12]
 8012676:	68fb      	ldr	r3, [r7, #12]
 8012678:	68db      	ldr	r3, [r3, #12]
 801267a:	2b0f      	cmp	r3, #15
 801267c:	d905      	bls.n	801268a <HAL_SPI_Receive_DMA+0xda>
 801267e:	68fb      	ldr	r3, [r7, #12]
 8012680:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012682:	699b      	ldr	r3, [r3, #24]
 8012684:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8012688:	d10f      	bne.n	80126aa <HAL_SPI_Receive_DMA+0xfa>
 801268a:	68fb      	ldr	r3, [r7, #12]
 801268c:	68db      	ldr	r3, [r3, #12]
 801268e:	2b07      	cmp	r3, #7
 8012690:	d911      	bls.n	80126b6 <HAL_SPI_Receive_DMA+0x106>
 8012692:	68fb      	ldr	r3, [r7, #12]
 8012694:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012696:	699b      	ldr	r3, [r3, #24]
 8012698:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801269c:	d00b      	beq.n	80126b6 <HAL_SPI_Receive_DMA+0x106>
 801269e:	68fb      	ldr	r3, [r7, #12]
 80126a0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80126a2:	699b      	ldr	r3, [r3, #24]
 80126a4:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80126a8:	d005      	beq.n	80126b6 <HAL_SPI_Receive_DMA+0x106>
 80126aa:	68fb      	ldr	r3, [r7, #12]
 80126ac:	2200      	movs	r2, #0
 80126ae:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80126b2:	2301      	movs	r3, #1
 80126b4:	e0b7      	b.n	8012826 <HAL_SPI_Receive_DMA+0x276>
 80126b6:	68fb      	ldr	r3, [r7, #12]
 80126b8:	681b      	ldr	r3, [r3, #0]
 80126ba:	689a      	ldr	r2, [r3, #8]
 80126bc:	68fb      	ldr	r3, [r7, #12]
 80126be:	681b      	ldr	r3, [r3, #0]
 80126c0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80126c4:	609a      	str	r2, [r3, #8]
 80126c6:	68fb      	ldr	r3, [r7, #12]
 80126c8:	68db      	ldr	r3, [r3, #12]
 80126ca:	2b07      	cmp	r3, #7
 80126cc:	d820      	bhi.n	8012710 <HAL_SPI_Receive_DMA+0x160>
 80126ce:	68fb      	ldr	r3, [r7, #12]
 80126d0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80126d2:	699b      	ldr	r3, [r3, #24]
 80126d4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80126d8:	d109      	bne.n	80126ee <HAL_SPI_Receive_DMA+0x13e>
 80126da:	68fb      	ldr	r3, [r7, #12]
 80126dc:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 80126e0:	b29b      	uxth	r3, r3
 80126e2:	3301      	adds	r3, #1
 80126e4:	105b      	asrs	r3, r3, #1
 80126e6:	b29a      	uxth	r2, r3
 80126e8:	68fb      	ldr	r3, [r7, #12]
 80126ea:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 80126ee:	68fb      	ldr	r3, [r7, #12]
 80126f0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80126f2:	699b      	ldr	r3, [r3, #24]
 80126f4:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80126f8:	d11e      	bne.n	8012738 <HAL_SPI_Receive_DMA+0x188>
 80126fa:	68fb      	ldr	r3, [r7, #12]
 80126fc:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 8012700:	b29b      	uxth	r3, r3
 8012702:	3303      	adds	r3, #3
 8012704:	109b      	asrs	r3, r3, #2
 8012706:	b29a      	uxth	r2, r3
 8012708:	68fb      	ldr	r3, [r7, #12]
 801270a:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 801270e:	e013      	b.n	8012738 <HAL_SPI_Receive_DMA+0x188>
 8012710:	68fb      	ldr	r3, [r7, #12]
 8012712:	68db      	ldr	r3, [r3, #12]
 8012714:	2b0f      	cmp	r3, #15
 8012716:	d80f      	bhi.n	8012738 <HAL_SPI_Receive_DMA+0x188>
 8012718:	68fb      	ldr	r3, [r7, #12]
 801271a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801271c:	699b      	ldr	r3, [r3, #24]
 801271e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8012722:	d109      	bne.n	8012738 <HAL_SPI_Receive_DMA+0x188>
 8012724:	68fb      	ldr	r3, [r7, #12]
 8012726:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 801272a:	b29b      	uxth	r3, r3
 801272c:	3301      	adds	r3, #1
 801272e:	105b      	asrs	r3, r3, #1
 8012730:	b29a      	uxth	r2, r3
 8012732:	68fb      	ldr	r3, [r7, #12]
 8012734:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8012738:	68fb      	ldr	r3, [r7, #12]
 801273a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801273c:	4a3c      	ldr	r2, [pc, #240]	; (8012830 <HAL_SPI_Receive_DMA+0x280>)
 801273e:	641a      	str	r2, [r3, #64]	; 0x40
 8012740:	68fb      	ldr	r3, [r7, #12]
 8012742:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012744:	4a3b      	ldr	r2, [pc, #236]	; (8012834 <HAL_SPI_Receive_DMA+0x284>)
 8012746:	63da      	str	r2, [r3, #60]	; 0x3c
 8012748:	68fb      	ldr	r3, [r7, #12]
 801274a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801274c:	4a3a      	ldr	r2, [pc, #232]	; (8012838 <HAL_SPI_Receive_DMA+0x288>)
 801274e:	64da      	str	r2, [r3, #76]	; 0x4c
 8012750:	68fb      	ldr	r3, [r7, #12]
 8012752:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012754:	2200      	movs	r2, #0
 8012756:	651a      	str	r2, [r3, #80]	; 0x50
 8012758:	68fb      	ldr	r3, [r7, #12]
 801275a:	6fd8      	ldr	r0, [r3, #124]	; 0x7c
 801275c:	68fb      	ldr	r3, [r7, #12]
 801275e:	681b      	ldr	r3, [r3, #0]
 8012760:	3330      	adds	r3, #48	; 0x30
 8012762:	4619      	mov	r1, r3
 8012764:	68fb      	ldr	r3, [r7, #12]
 8012766:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8012768:	461a      	mov	r2, r3
 801276a:	68fb      	ldr	r3, [r7, #12]
 801276c:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 8012770:	b29b      	uxth	r3, r3
 8012772:	f7f6 f9c1 	bl	8008af8 <HAL_DMA_Start_IT>
 8012776:	4603      	mov	r3, r0
 8012778:	2b00      	cmp	r3, #0
 801277a:	d011      	beq.n	80127a0 <HAL_SPI_Receive_DMA+0x1f0>
 801277c:	68fb      	ldr	r3, [r7, #12]
 801277e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012782:	f043 0210 	orr.w	r2, r3, #16
 8012786:	68fb      	ldr	r3, [r7, #12]
 8012788:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 801278c:	68fb      	ldr	r3, [r7, #12]
 801278e:	2201      	movs	r2, #1
 8012790:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012794:	68fb      	ldr	r3, [r7, #12]
 8012796:	2200      	movs	r2, #0
 8012798:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 801279c:	2301      	movs	r3, #1
 801279e:	e042      	b.n	8012826 <HAL_SPI_Receive_DMA+0x276>
 80127a0:	68fb      	ldr	r3, [r7, #12]
 80127a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80127a4:	69db      	ldr	r3, [r3, #28]
 80127a6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80127aa:	d108      	bne.n	80127be <HAL_SPI_Receive_DMA+0x20e>
 80127ac:	68fb      	ldr	r3, [r7, #12]
 80127ae:	681b      	ldr	r3, [r3, #0]
 80127b0:	6859      	ldr	r1, [r3, #4]
 80127b2:	68fb      	ldr	r3, [r7, #12]
 80127b4:	681a      	ldr	r2, [r3, #0]
 80127b6:	4b21      	ldr	r3, [pc, #132]	; (801283c <HAL_SPI_Receive_DMA+0x28c>)
 80127b8:	400b      	ands	r3, r1
 80127ba:	6053      	str	r3, [r2, #4]
 80127bc:	e009      	b.n	80127d2 <HAL_SPI_Receive_DMA+0x222>
 80127be:	68fb      	ldr	r3, [r7, #12]
 80127c0:	681b      	ldr	r3, [r3, #0]
 80127c2:	685a      	ldr	r2, [r3, #4]
 80127c4:	4b1d      	ldr	r3, [pc, #116]	; (801283c <HAL_SPI_Receive_DMA+0x28c>)
 80127c6:	4013      	ands	r3, r2
 80127c8:	88f9      	ldrh	r1, [r7, #6]
 80127ca:	68fa      	ldr	r2, [r7, #12]
 80127cc:	6812      	ldr	r2, [r2, #0]
 80127ce:	430b      	orrs	r3, r1
 80127d0:	6053      	str	r3, [r2, #4]
 80127d2:	68fb      	ldr	r3, [r7, #12]
 80127d4:	681b      	ldr	r3, [r3, #0]
 80127d6:	689a      	ldr	r2, [r3, #8]
 80127d8:	68fb      	ldr	r3, [r7, #12]
 80127da:	681b      	ldr	r3, [r3, #0]
 80127dc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80127e0:	609a      	str	r2, [r3, #8]
 80127e2:	68fb      	ldr	r3, [r7, #12]
 80127e4:	681b      	ldr	r3, [r3, #0]
 80127e6:	691a      	ldr	r2, [r3, #16]
 80127e8:	68fb      	ldr	r3, [r7, #12]
 80127ea:	681b      	ldr	r3, [r3, #0]
 80127ec:	f442 7250 	orr.w	r2, r2, #832	; 0x340
 80127f0:	611a      	str	r2, [r3, #16]
 80127f2:	68fb      	ldr	r3, [r7, #12]
 80127f4:	681b      	ldr	r3, [r3, #0]
 80127f6:	681a      	ldr	r2, [r3, #0]
 80127f8:	68fb      	ldr	r3, [r7, #12]
 80127fa:	681b      	ldr	r3, [r3, #0]
 80127fc:	f042 0201 	orr.w	r2, r2, #1
 8012800:	601a      	str	r2, [r3, #0]
 8012802:	68fb      	ldr	r3, [r7, #12]
 8012804:	685b      	ldr	r3, [r3, #4]
 8012806:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 801280a:	d107      	bne.n	801281c <HAL_SPI_Receive_DMA+0x26c>
 801280c:	68fb      	ldr	r3, [r7, #12]
 801280e:	681b      	ldr	r3, [r3, #0]
 8012810:	681a      	ldr	r2, [r3, #0]
 8012812:	68fb      	ldr	r3, [r7, #12]
 8012814:	681b      	ldr	r3, [r3, #0]
 8012816:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 801281a:	601a      	str	r2, [r3, #0]
 801281c:	68fb      	ldr	r3, [r7, #12]
 801281e:	2200      	movs	r2, #0
 8012820:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8012824:	2300      	movs	r3, #0
 8012826:	4618      	mov	r0, r3
 8012828:	3710      	adds	r7, #16
 801282a:	46bd      	mov	sp, r7
 801282c:	bd80      	pop	{r7, pc}
 801282e:	bf00      	nop
 8012830:	08012c9b 	.word	0x08012c9b
 8012834:	08012c55 	.word	0x08012c55
 8012838:	08012cb7 	.word	0x08012cb7
 801283c:	ffff0000 	.word	0xffff0000

08012840 <HAL_SPI_IRQHandler>:
 8012840:	b580      	push	{r7, lr}
 8012842:	b08a      	sub	sp, #40	; 0x28
 8012844:	af00      	add	r7, sp, #0
 8012846:	6078      	str	r0, [r7, #4]
 8012848:	687b      	ldr	r3, [r7, #4]
 801284a:	681b      	ldr	r3, [r3, #0]
 801284c:	691b      	ldr	r3, [r3, #16]
 801284e:	623b      	str	r3, [r7, #32]
 8012850:	687b      	ldr	r3, [r7, #4]
 8012852:	681b      	ldr	r3, [r3, #0]
 8012854:	695b      	ldr	r3, [r3, #20]
 8012856:	61fb      	str	r3, [r7, #28]
 8012858:	6a3a      	ldr	r2, [r7, #32]
 801285a:	69fb      	ldr	r3, [r7, #28]
 801285c:	4013      	ands	r3, r2
 801285e:	61bb      	str	r3, [r7, #24]
 8012860:	687b      	ldr	r3, [r7, #4]
 8012862:	681b      	ldr	r3, [r3, #0]
 8012864:	689b      	ldr	r3, [r3, #8]
 8012866:	617b      	str	r3, [r7, #20]
 8012868:	2300      	movs	r3, #0
 801286a:	627b      	str	r3, [r7, #36]	; 0x24
 801286c:	687b      	ldr	r3, [r7, #4]
 801286e:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8012872:	74fb      	strb	r3, [r7, #19]
 8012874:	687b      	ldr	r3, [r7, #4]
 8012876:	681b      	ldr	r3, [r3, #0]
 8012878:	3330      	adds	r3, #48	; 0x30
 801287a:	60fb      	str	r3, [r7, #12]
 801287c:	69fb      	ldr	r3, [r7, #28]
 801287e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8012882:	2b00      	cmp	r3, #0
 8012884:	d010      	beq.n	80128a8 <HAL_SPI_IRQHandler+0x68>
 8012886:	6a3b      	ldr	r3, [r7, #32]
 8012888:	f003 0308 	and.w	r3, r3, #8
 801288c:	2b00      	cmp	r3, #0
 801288e:	d00b      	beq.n	80128a8 <HAL_SPI_IRQHandler+0x68>
 8012890:	687b      	ldr	r3, [r7, #4]
 8012892:	681b      	ldr	r3, [r3, #0]
 8012894:	699a      	ldr	r2, [r3, #24]
 8012896:	687b      	ldr	r3, [r7, #4]
 8012898:	681b      	ldr	r3, [r3, #0]
 801289a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 801289e:	619a      	str	r2, [r3, #24]
 80128a0:	6878      	ldr	r0, [r7, #4]
 80128a2:	f000 f9cd 	bl	8012c40 <HAL_SPI_SuspendCallback>
 80128a6:	e192      	b.n	8012bce <HAL_SPI_IRQHandler+0x38e>
 80128a8:	69bb      	ldr	r3, [r7, #24]
 80128aa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80128ae:	2b00      	cmp	r3, #0
 80128b0:	d113      	bne.n	80128da <HAL_SPI_IRQHandler+0x9a>
 80128b2:	69bb      	ldr	r3, [r7, #24]
 80128b4:	f003 0320 	and.w	r3, r3, #32
 80128b8:	2b00      	cmp	r3, #0
 80128ba:	d10e      	bne.n	80128da <HAL_SPI_IRQHandler+0x9a>
 80128bc:	69bb      	ldr	r3, [r7, #24]
 80128be:	f003 0304 	and.w	r3, r3, #4
 80128c2:	2b00      	cmp	r3, #0
 80128c4:	d009      	beq.n	80128da <HAL_SPI_IRQHandler+0x9a>
 80128c6:	687b      	ldr	r3, [r7, #4]
 80128c8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80128ca:	6878      	ldr	r0, [r7, #4]
 80128cc:	4798      	blx	r3
 80128ce:	687b      	ldr	r3, [r7, #4]
 80128d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80128d2:	6878      	ldr	r0, [r7, #4]
 80128d4:	4798      	blx	r3
 80128d6:	2301      	movs	r3, #1
 80128d8:	627b      	str	r3, [r7, #36]	; 0x24
 80128da:	69bb      	ldr	r3, [r7, #24]
 80128dc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80128e0:	2b00      	cmp	r3, #0
 80128e2:	d10f      	bne.n	8012904 <HAL_SPI_IRQHandler+0xc4>
 80128e4:	69bb      	ldr	r3, [r7, #24]
 80128e6:	f003 0301 	and.w	r3, r3, #1
 80128ea:	2b00      	cmp	r3, #0
 80128ec:	d00a      	beq.n	8012904 <HAL_SPI_IRQHandler+0xc4>
 80128ee:	69bb      	ldr	r3, [r7, #24]
 80128f0:	f003 0304 	and.w	r3, r3, #4
 80128f4:	2b00      	cmp	r3, #0
 80128f6:	d105      	bne.n	8012904 <HAL_SPI_IRQHandler+0xc4>
 80128f8:	687b      	ldr	r3, [r7, #4]
 80128fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80128fc:	6878      	ldr	r0, [r7, #4]
 80128fe:	4798      	blx	r3
 8012900:	2301      	movs	r3, #1
 8012902:	627b      	str	r3, [r7, #36]	; 0x24
 8012904:	69bb      	ldr	r3, [r7, #24]
 8012906:	f003 0320 	and.w	r3, r3, #32
 801290a:	2b00      	cmp	r3, #0
 801290c:	d10f      	bne.n	801292e <HAL_SPI_IRQHandler+0xee>
 801290e:	69bb      	ldr	r3, [r7, #24]
 8012910:	f003 0302 	and.w	r3, r3, #2
 8012914:	2b00      	cmp	r3, #0
 8012916:	d00a      	beq.n	801292e <HAL_SPI_IRQHandler+0xee>
 8012918:	69bb      	ldr	r3, [r7, #24]
 801291a:	f003 0304 	and.w	r3, r3, #4
 801291e:	2b00      	cmp	r3, #0
 8012920:	d105      	bne.n	801292e <HAL_SPI_IRQHandler+0xee>
 8012922:	687b      	ldr	r3, [r7, #4]
 8012924:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012926:	6878      	ldr	r0, [r7, #4]
 8012928:	4798      	blx	r3
 801292a:	2301      	movs	r3, #1
 801292c:	627b      	str	r3, [r7, #36]	; 0x24
 801292e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012930:	2b00      	cmp	r3, #0
 8012932:	f040 8147 	bne.w	8012bc4 <HAL_SPI_IRQHandler+0x384>
 8012936:	69bb      	ldr	r3, [r7, #24]
 8012938:	f003 0308 	and.w	r3, r3, #8
 801293c:	2b00      	cmp	r3, #0
 801293e:	f000 808b 	beq.w	8012a58 <HAL_SPI_IRQHandler+0x218>
 8012942:	687b      	ldr	r3, [r7, #4]
 8012944:	681b      	ldr	r3, [r3, #0]
 8012946:	699a      	ldr	r2, [r3, #24]
 8012948:	687b      	ldr	r3, [r7, #4]
 801294a:	681b      	ldr	r3, [r3, #0]
 801294c:	f042 0208 	orr.w	r2, r2, #8
 8012950:	619a      	str	r2, [r3, #24]
 8012952:	687b      	ldr	r3, [r7, #4]
 8012954:	681b      	ldr	r3, [r3, #0]
 8012956:	699a      	ldr	r2, [r3, #24]
 8012958:	687b      	ldr	r3, [r7, #4]
 801295a:	681b      	ldr	r3, [r3, #0]
 801295c:	f042 0210 	orr.w	r2, r2, #16
 8012960:	619a      	str	r2, [r3, #24]
 8012962:	687b      	ldr	r3, [r7, #4]
 8012964:	681b      	ldr	r3, [r3, #0]
 8012966:	699a      	ldr	r2, [r3, #24]
 8012968:	687b      	ldr	r3, [r7, #4]
 801296a:	681b      	ldr	r3, [r3, #0]
 801296c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8012970:	619a      	str	r2, [r3, #24]
 8012972:	687b      	ldr	r3, [r7, #4]
 8012974:	681b      	ldr	r3, [r3, #0]
 8012976:	691a      	ldr	r2, [r3, #16]
 8012978:	687b      	ldr	r3, [r7, #4]
 801297a:	681b      	ldr	r3, [r3, #0]
 801297c:	f022 0208 	bic.w	r2, r2, #8
 8012980:	611a      	str	r2, [r3, #16]
 8012982:	687b      	ldr	r3, [r7, #4]
 8012984:	681b      	ldr	r3, [r3, #0]
 8012986:	689b      	ldr	r3, [r3, #8]
 8012988:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 801298c:	2b00      	cmp	r3, #0
 801298e:	d13d      	bne.n	8012a0c <HAL_SPI_IRQHandler+0x1cc>
 8012990:	e036      	b.n	8012a00 <HAL_SPI_IRQHandler+0x1c0>
 8012992:	687b      	ldr	r3, [r7, #4]
 8012994:	68db      	ldr	r3, [r3, #12]
 8012996:	2b0f      	cmp	r3, #15
 8012998:	d90b      	bls.n	80129b2 <HAL_SPI_IRQHandler+0x172>
 801299a:	687b      	ldr	r3, [r7, #4]
 801299c:	681a      	ldr	r2, [r3, #0]
 801299e:	687b      	ldr	r3, [r7, #4]
 80129a0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80129a2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80129a4:	601a      	str	r2, [r3, #0]
 80129a6:	687b      	ldr	r3, [r7, #4]
 80129a8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80129aa:	1d1a      	adds	r2, r3, #4
 80129ac:	687b      	ldr	r3, [r7, #4]
 80129ae:	665a      	str	r2, [r3, #100]	; 0x64
 80129b0:	e01d      	b.n	80129ee <HAL_SPI_IRQHandler+0x1ae>
 80129b2:	687b      	ldr	r3, [r7, #4]
 80129b4:	68db      	ldr	r3, [r3, #12]
 80129b6:	2b07      	cmp	r3, #7
 80129b8:	d90b      	bls.n	80129d2 <HAL_SPI_IRQHandler+0x192>
 80129ba:	687b      	ldr	r3, [r7, #4]
 80129bc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80129be:	68fa      	ldr	r2, [r7, #12]
 80129c0:	8812      	ldrh	r2, [r2, #0]
 80129c2:	b292      	uxth	r2, r2
 80129c4:	801a      	strh	r2, [r3, #0]
 80129c6:	687b      	ldr	r3, [r7, #4]
 80129c8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80129ca:	1c9a      	adds	r2, r3, #2
 80129cc:	687b      	ldr	r3, [r7, #4]
 80129ce:	665a      	str	r2, [r3, #100]	; 0x64
 80129d0:	e00d      	b.n	80129ee <HAL_SPI_IRQHandler+0x1ae>
 80129d2:	687b      	ldr	r3, [r7, #4]
 80129d4:	681b      	ldr	r3, [r3, #0]
 80129d6:	f103 0230 	add.w	r2, r3, #48	; 0x30
 80129da:	687b      	ldr	r3, [r7, #4]
 80129dc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80129de:	7812      	ldrb	r2, [r2, #0]
 80129e0:	b2d2      	uxtb	r2, r2
 80129e2:	701a      	strb	r2, [r3, #0]
 80129e4:	687b      	ldr	r3, [r7, #4]
 80129e6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80129e8:	1c5a      	adds	r2, r3, #1
 80129ea:	687b      	ldr	r3, [r7, #4]
 80129ec:	665a      	str	r2, [r3, #100]	; 0x64
 80129ee:	687b      	ldr	r3, [r7, #4]
 80129f0:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 80129f4:	b29b      	uxth	r3, r3
 80129f6:	3b01      	subs	r3, #1
 80129f8:	b29a      	uxth	r2, r3
 80129fa:	687b      	ldr	r3, [r7, #4]
 80129fc:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8012a00:	687b      	ldr	r3, [r7, #4]
 8012a02:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 8012a06:	b29b      	uxth	r3, r3
 8012a08:	2b00      	cmp	r3, #0
 8012a0a:	d1c2      	bne.n	8012992 <HAL_SPI_IRQHandler+0x152>
 8012a0c:	6878      	ldr	r0, [r7, #4]
 8012a0e:	f000 f98f 	bl	8012d30 <SPI_CloseTransfer>
 8012a12:	687b      	ldr	r3, [r7, #4]
 8012a14:	2201      	movs	r2, #1
 8012a16:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012a1a:	687b      	ldr	r3, [r7, #4]
 8012a1c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012a20:	2b00      	cmp	r3, #0
 8012a22:	d003      	beq.n	8012a2c <HAL_SPI_IRQHandler+0x1ec>
 8012a24:	6878      	ldr	r0, [r7, #4]
 8012a26:	f000 f901 	bl	8012c2c <HAL_SPI_ErrorCallback>
 8012a2a:	e0d0      	b.n	8012bce <HAL_SPI_IRQHandler+0x38e>
 8012a2c:	7cfb      	ldrb	r3, [r7, #19]
 8012a2e:	2b05      	cmp	r3, #5
 8012a30:	d103      	bne.n	8012a3a <HAL_SPI_IRQHandler+0x1fa>
 8012a32:	6878      	ldr	r0, [r7, #4]
 8012a34:	f000 f8e6 	bl	8012c04 <HAL_SPI_TxRxCpltCallback>
 8012a38:	e0c6      	b.n	8012bc8 <HAL_SPI_IRQHandler+0x388>
 8012a3a:	7cfb      	ldrb	r3, [r7, #19]
 8012a3c:	2b04      	cmp	r3, #4
 8012a3e:	d103      	bne.n	8012a48 <HAL_SPI_IRQHandler+0x208>
 8012a40:	6878      	ldr	r0, [r7, #4]
 8012a42:	f000 f8d5 	bl	8012bf0 <HAL_SPI_RxCpltCallback>
 8012a46:	e0bf      	b.n	8012bc8 <HAL_SPI_IRQHandler+0x388>
 8012a48:	7cfb      	ldrb	r3, [r7, #19]
 8012a4a:	2b03      	cmp	r3, #3
 8012a4c:	f040 80bc 	bne.w	8012bc8 <HAL_SPI_IRQHandler+0x388>
 8012a50:	6878      	ldr	r0, [r7, #4]
 8012a52:	f000 f8c3 	bl	8012bdc <HAL_SPI_TxCpltCallback>
 8012a56:	e0b7      	b.n	8012bc8 <HAL_SPI_IRQHandler+0x388>
 8012a58:	69bb      	ldr	r3, [r7, #24]
 8012a5a:	f403 7358 	and.w	r3, r3, #864	; 0x360
 8012a5e:	2b00      	cmp	r3, #0
 8012a60:	f000 80b5 	beq.w	8012bce <HAL_SPI_IRQHandler+0x38e>
 8012a64:	69bb      	ldr	r3, [r7, #24]
 8012a66:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8012a6a:	2b00      	cmp	r3, #0
 8012a6c:	d00f      	beq.n	8012a8e <HAL_SPI_IRQHandler+0x24e>
 8012a6e:	687b      	ldr	r3, [r7, #4]
 8012a70:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012a74:	f043 0204 	orr.w	r2, r3, #4
 8012a78:	687b      	ldr	r3, [r7, #4]
 8012a7a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012a7e:	687b      	ldr	r3, [r7, #4]
 8012a80:	681b      	ldr	r3, [r3, #0]
 8012a82:	699a      	ldr	r2, [r3, #24]
 8012a84:	687b      	ldr	r3, [r7, #4]
 8012a86:	681b      	ldr	r3, [r3, #0]
 8012a88:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8012a8c:	619a      	str	r2, [r3, #24]
 8012a8e:	69bb      	ldr	r3, [r7, #24]
 8012a90:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8012a94:	2b00      	cmp	r3, #0
 8012a96:	d00f      	beq.n	8012ab8 <HAL_SPI_IRQHandler+0x278>
 8012a98:	687b      	ldr	r3, [r7, #4]
 8012a9a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012a9e:	f043 0201 	orr.w	r2, r3, #1
 8012aa2:	687b      	ldr	r3, [r7, #4]
 8012aa4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012aa8:	687b      	ldr	r3, [r7, #4]
 8012aaa:	681b      	ldr	r3, [r3, #0]
 8012aac:	699a      	ldr	r2, [r3, #24]
 8012aae:	687b      	ldr	r3, [r7, #4]
 8012ab0:	681b      	ldr	r3, [r3, #0]
 8012ab2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012ab6:	619a      	str	r2, [r3, #24]
 8012ab8:	69bb      	ldr	r3, [r7, #24]
 8012aba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012abe:	2b00      	cmp	r3, #0
 8012ac0:	d00f      	beq.n	8012ae2 <HAL_SPI_IRQHandler+0x2a2>
 8012ac2:	687b      	ldr	r3, [r7, #4]
 8012ac4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012ac8:	f043 0208 	orr.w	r2, r3, #8
 8012acc:	687b      	ldr	r3, [r7, #4]
 8012ace:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012ad2:	687b      	ldr	r3, [r7, #4]
 8012ad4:	681b      	ldr	r3, [r3, #0]
 8012ad6:	699a      	ldr	r2, [r3, #24]
 8012ad8:	687b      	ldr	r3, [r7, #4]
 8012ada:	681b      	ldr	r3, [r3, #0]
 8012adc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8012ae0:	619a      	str	r2, [r3, #24]
 8012ae2:	69bb      	ldr	r3, [r7, #24]
 8012ae4:	f003 0320 	and.w	r3, r3, #32
 8012ae8:	2b00      	cmp	r3, #0
 8012aea:	d00f      	beq.n	8012b0c <HAL_SPI_IRQHandler+0x2cc>
 8012aec:	687b      	ldr	r3, [r7, #4]
 8012aee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012af2:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8012af6:	687b      	ldr	r3, [r7, #4]
 8012af8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012afc:	687b      	ldr	r3, [r7, #4]
 8012afe:	681b      	ldr	r3, [r3, #0]
 8012b00:	699a      	ldr	r2, [r3, #24]
 8012b02:	687b      	ldr	r3, [r7, #4]
 8012b04:	681b      	ldr	r3, [r3, #0]
 8012b06:	f042 0220 	orr.w	r2, r2, #32
 8012b0a:	619a      	str	r2, [r3, #24]
 8012b0c:	687b      	ldr	r3, [r7, #4]
 8012b0e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012b12:	2b00      	cmp	r3, #0
 8012b14:	d05a      	beq.n	8012bcc <HAL_SPI_IRQHandler+0x38c>
 8012b16:	687b      	ldr	r3, [r7, #4]
 8012b18:	681b      	ldr	r3, [r3, #0]
 8012b1a:	681a      	ldr	r2, [r3, #0]
 8012b1c:	687b      	ldr	r3, [r7, #4]
 8012b1e:	681b      	ldr	r3, [r3, #0]
 8012b20:	f022 0201 	bic.w	r2, r2, #1
 8012b24:	601a      	str	r2, [r3, #0]
 8012b26:	687b      	ldr	r3, [r7, #4]
 8012b28:	681b      	ldr	r3, [r3, #0]
 8012b2a:	6919      	ldr	r1, [r3, #16]
 8012b2c:	687b      	ldr	r3, [r7, #4]
 8012b2e:	681a      	ldr	r2, [r3, #0]
 8012b30:	4b28      	ldr	r3, [pc, #160]	; (8012bd4 <HAL_SPI_IRQHandler+0x394>)
 8012b32:	400b      	ands	r3, r1
 8012b34:	6113      	str	r3, [r2, #16]
 8012b36:	697b      	ldr	r3, [r7, #20]
 8012b38:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8012b3c:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8012b40:	d138      	bne.n	8012bb4 <HAL_SPI_IRQHandler+0x374>
 8012b42:	687b      	ldr	r3, [r7, #4]
 8012b44:	681b      	ldr	r3, [r3, #0]
 8012b46:	689a      	ldr	r2, [r3, #8]
 8012b48:	687b      	ldr	r3, [r7, #4]
 8012b4a:	681b      	ldr	r3, [r3, #0]
 8012b4c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8012b50:	609a      	str	r2, [r3, #8]
 8012b52:	687b      	ldr	r3, [r7, #4]
 8012b54:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012b56:	2b00      	cmp	r3, #0
 8012b58:	d013      	beq.n	8012b82 <HAL_SPI_IRQHandler+0x342>
 8012b5a:	687b      	ldr	r3, [r7, #4]
 8012b5c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012b5e:	4a1e      	ldr	r2, [pc, #120]	; (8012bd8 <HAL_SPI_IRQHandler+0x398>)
 8012b60:	651a      	str	r2, [r3, #80]	; 0x50
 8012b62:	687b      	ldr	r3, [r7, #4]
 8012b64:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012b66:	4618      	mov	r0, r3
 8012b68:	f7f6 fd4e 	bl	8009608 <HAL_DMA_Abort_IT>
 8012b6c:	4603      	mov	r3, r0
 8012b6e:	2b00      	cmp	r3, #0
 8012b70:	d007      	beq.n	8012b82 <HAL_SPI_IRQHandler+0x342>
 8012b72:	687b      	ldr	r3, [r7, #4]
 8012b74:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012b78:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8012b7c:	687b      	ldr	r3, [r7, #4]
 8012b7e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012b82:	687b      	ldr	r3, [r7, #4]
 8012b84:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012b86:	2b00      	cmp	r3, #0
 8012b88:	d020      	beq.n	8012bcc <HAL_SPI_IRQHandler+0x38c>
 8012b8a:	687b      	ldr	r3, [r7, #4]
 8012b8c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012b8e:	4a12      	ldr	r2, [pc, #72]	; (8012bd8 <HAL_SPI_IRQHandler+0x398>)
 8012b90:	651a      	str	r2, [r3, #80]	; 0x50
 8012b92:	687b      	ldr	r3, [r7, #4]
 8012b94:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012b96:	4618      	mov	r0, r3
 8012b98:	f7f6 fd36 	bl	8009608 <HAL_DMA_Abort_IT>
 8012b9c:	4603      	mov	r3, r0
 8012b9e:	2b00      	cmp	r3, #0
 8012ba0:	d014      	beq.n	8012bcc <HAL_SPI_IRQHandler+0x38c>
 8012ba2:	687b      	ldr	r3, [r7, #4]
 8012ba4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012ba8:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8012bac:	687b      	ldr	r3, [r7, #4]
 8012bae:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012bb2:	e00b      	b.n	8012bcc <HAL_SPI_IRQHandler+0x38c>
 8012bb4:	687b      	ldr	r3, [r7, #4]
 8012bb6:	2201      	movs	r2, #1
 8012bb8:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012bbc:	6878      	ldr	r0, [r7, #4]
 8012bbe:	f000 f835 	bl	8012c2c <HAL_SPI_ErrorCallback>
 8012bc2:	e003      	b.n	8012bcc <HAL_SPI_IRQHandler+0x38c>
 8012bc4:	bf00      	nop
 8012bc6:	e002      	b.n	8012bce <HAL_SPI_IRQHandler+0x38e>
 8012bc8:	bf00      	nop
 8012bca:	e000      	b.n	8012bce <HAL_SPI_IRQHandler+0x38e>
 8012bcc:	bf00      	nop
 8012bce:	3728      	adds	r7, #40	; 0x28
 8012bd0:	46bd      	mov	sp, r7
 8012bd2:	bd80      	pop	{r7, pc}
 8012bd4:	fffffc94 	.word	0xfffffc94
 8012bd8:	08012cfd 	.word	0x08012cfd

08012bdc <HAL_SPI_TxCpltCallback>:
 8012bdc:	b480      	push	{r7}
 8012bde:	b083      	sub	sp, #12
 8012be0:	af00      	add	r7, sp, #0
 8012be2:	6078      	str	r0, [r7, #4]
 8012be4:	bf00      	nop
 8012be6:	370c      	adds	r7, #12
 8012be8:	46bd      	mov	sp, r7
 8012bea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012bee:	4770      	bx	lr

08012bf0 <HAL_SPI_RxCpltCallback>:
 8012bf0:	b480      	push	{r7}
 8012bf2:	b083      	sub	sp, #12
 8012bf4:	af00      	add	r7, sp, #0
 8012bf6:	6078      	str	r0, [r7, #4]
 8012bf8:	bf00      	nop
 8012bfa:	370c      	adds	r7, #12
 8012bfc:	46bd      	mov	sp, r7
 8012bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c02:	4770      	bx	lr

08012c04 <HAL_SPI_TxRxCpltCallback>:
 8012c04:	b480      	push	{r7}
 8012c06:	b083      	sub	sp, #12
 8012c08:	af00      	add	r7, sp, #0
 8012c0a:	6078      	str	r0, [r7, #4]
 8012c0c:	bf00      	nop
 8012c0e:	370c      	adds	r7, #12
 8012c10:	46bd      	mov	sp, r7
 8012c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c16:	4770      	bx	lr

08012c18 <HAL_SPI_RxHalfCpltCallback>:
 8012c18:	b480      	push	{r7}
 8012c1a:	b083      	sub	sp, #12
 8012c1c:	af00      	add	r7, sp, #0
 8012c1e:	6078      	str	r0, [r7, #4]
 8012c20:	bf00      	nop
 8012c22:	370c      	adds	r7, #12
 8012c24:	46bd      	mov	sp, r7
 8012c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c2a:	4770      	bx	lr

08012c2c <HAL_SPI_ErrorCallback>:
 8012c2c:	b480      	push	{r7}
 8012c2e:	b083      	sub	sp, #12
 8012c30:	af00      	add	r7, sp, #0
 8012c32:	6078      	str	r0, [r7, #4]
 8012c34:	bf00      	nop
 8012c36:	370c      	adds	r7, #12
 8012c38:	46bd      	mov	sp, r7
 8012c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c3e:	4770      	bx	lr

08012c40 <HAL_SPI_SuspendCallback>:
 8012c40:	b480      	push	{r7}
 8012c42:	b083      	sub	sp, #12
 8012c44:	af00      	add	r7, sp, #0
 8012c46:	6078      	str	r0, [r7, #4]
 8012c48:	bf00      	nop
 8012c4a:	370c      	adds	r7, #12
 8012c4c:	46bd      	mov	sp, r7
 8012c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c52:	4770      	bx	lr

08012c54 <SPI_DMAReceiveCplt>:
 8012c54:	b580      	push	{r7, lr}
 8012c56:	b084      	sub	sp, #16
 8012c58:	af00      	add	r7, sp, #0
 8012c5a:	6078      	str	r0, [r7, #4]
 8012c5c:	687b      	ldr	r3, [r7, #4]
 8012c5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012c60:	60fb      	str	r3, [r7, #12]
 8012c62:	68fb      	ldr	r3, [r7, #12]
 8012c64:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8012c68:	b2db      	uxtb	r3, r3
 8012c6a:	2b07      	cmp	r3, #7
 8012c6c:	d011      	beq.n	8012c92 <SPI_DMAReceiveCplt+0x3e>
 8012c6e:	68fb      	ldr	r3, [r7, #12]
 8012c70:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012c72:	69db      	ldr	r3, [r3, #28]
 8012c74:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012c78:	d103      	bne.n	8012c82 <SPI_DMAReceiveCplt+0x2e>
 8012c7a:	68f8      	ldr	r0, [r7, #12]
 8012c7c:	f7ff ffb8 	bl	8012bf0 <HAL_SPI_RxCpltCallback>
 8012c80:	e007      	b.n	8012c92 <SPI_DMAReceiveCplt+0x3e>
 8012c82:	68fb      	ldr	r3, [r7, #12]
 8012c84:	681b      	ldr	r3, [r3, #0]
 8012c86:	691a      	ldr	r2, [r3, #16]
 8012c88:	68fb      	ldr	r3, [r7, #12]
 8012c8a:	681b      	ldr	r3, [r3, #0]
 8012c8c:	f042 0208 	orr.w	r2, r2, #8
 8012c90:	611a      	str	r2, [r3, #16]
 8012c92:	bf00      	nop
 8012c94:	3710      	adds	r7, #16
 8012c96:	46bd      	mov	sp, r7
 8012c98:	bd80      	pop	{r7, pc}

08012c9a <SPI_DMAHalfReceiveCplt>:
 8012c9a:	b580      	push	{r7, lr}
 8012c9c:	b084      	sub	sp, #16
 8012c9e:	af00      	add	r7, sp, #0
 8012ca0:	6078      	str	r0, [r7, #4]
 8012ca2:	687b      	ldr	r3, [r7, #4]
 8012ca4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ca6:	60fb      	str	r3, [r7, #12]
 8012ca8:	68f8      	ldr	r0, [r7, #12]
 8012caa:	f7ff ffb5 	bl	8012c18 <HAL_SPI_RxHalfCpltCallback>
 8012cae:	bf00      	nop
 8012cb0:	3710      	adds	r7, #16
 8012cb2:	46bd      	mov	sp, r7
 8012cb4:	bd80      	pop	{r7, pc}

08012cb6 <SPI_DMAError>:
 8012cb6:	b580      	push	{r7, lr}
 8012cb8:	b084      	sub	sp, #16
 8012cba:	af00      	add	r7, sp, #0
 8012cbc:	6078      	str	r0, [r7, #4]
 8012cbe:	687b      	ldr	r3, [r7, #4]
 8012cc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012cc2:	60fb      	str	r3, [r7, #12]
 8012cc4:	6878      	ldr	r0, [r7, #4]
 8012cc6:	f7f7 fe1d 	bl	800a904 <HAL_DMA_GetError>
 8012cca:	4603      	mov	r3, r0
 8012ccc:	2b02      	cmp	r3, #2
 8012cce:	d011      	beq.n	8012cf4 <SPI_DMAError+0x3e>
 8012cd0:	68f8      	ldr	r0, [r7, #12]
 8012cd2:	f000 f82d 	bl	8012d30 <SPI_CloseTransfer>
 8012cd6:	68fb      	ldr	r3, [r7, #12]
 8012cd8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012cdc:	f043 0210 	orr.w	r2, r3, #16
 8012ce0:	68fb      	ldr	r3, [r7, #12]
 8012ce2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012ce6:	68fb      	ldr	r3, [r7, #12]
 8012ce8:	2201      	movs	r2, #1
 8012cea:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012cee:	68f8      	ldr	r0, [r7, #12]
 8012cf0:	f7ff ff9c 	bl	8012c2c <HAL_SPI_ErrorCallback>
 8012cf4:	bf00      	nop
 8012cf6:	3710      	adds	r7, #16
 8012cf8:	46bd      	mov	sp, r7
 8012cfa:	bd80      	pop	{r7, pc}

08012cfc <SPI_DMAAbortOnError>:
 8012cfc:	b580      	push	{r7, lr}
 8012cfe:	b084      	sub	sp, #16
 8012d00:	af00      	add	r7, sp, #0
 8012d02:	6078      	str	r0, [r7, #4]
 8012d04:	687b      	ldr	r3, [r7, #4]
 8012d06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d08:	60fb      	str	r3, [r7, #12]
 8012d0a:	68fb      	ldr	r3, [r7, #12]
 8012d0c:	2200      	movs	r2, #0
 8012d0e:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8012d12:	68fb      	ldr	r3, [r7, #12]
 8012d14:	2200      	movs	r2, #0
 8012d16:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 8012d1a:	68fb      	ldr	r3, [r7, #12]
 8012d1c:	2201      	movs	r2, #1
 8012d1e:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012d22:	68f8      	ldr	r0, [r7, #12]
 8012d24:	f7ff ff82 	bl	8012c2c <HAL_SPI_ErrorCallback>
 8012d28:	bf00      	nop
 8012d2a:	3710      	adds	r7, #16
 8012d2c:	46bd      	mov	sp, r7
 8012d2e:	bd80      	pop	{r7, pc}

08012d30 <SPI_CloseTransfer>:
 8012d30:	b480      	push	{r7}
 8012d32:	b085      	sub	sp, #20
 8012d34:	af00      	add	r7, sp, #0
 8012d36:	6078      	str	r0, [r7, #4]
 8012d38:	687b      	ldr	r3, [r7, #4]
 8012d3a:	681b      	ldr	r3, [r3, #0]
 8012d3c:	695b      	ldr	r3, [r3, #20]
 8012d3e:	60fb      	str	r3, [r7, #12]
 8012d40:	687b      	ldr	r3, [r7, #4]
 8012d42:	681b      	ldr	r3, [r3, #0]
 8012d44:	699a      	ldr	r2, [r3, #24]
 8012d46:	687b      	ldr	r3, [r7, #4]
 8012d48:	681b      	ldr	r3, [r3, #0]
 8012d4a:	f042 0208 	orr.w	r2, r2, #8
 8012d4e:	619a      	str	r2, [r3, #24]
 8012d50:	687b      	ldr	r3, [r7, #4]
 8012d52:	681b      	ldr	r3, [r3, #0]
 8012d54:	699a      	ldr	r2, [r3, #24]
 8012d56:	687b      	ldr	r3, [r7, #4]
 8012d58:	681b      	ldr	r3, [r3, #0]
 8012d5a:	f042 0210 	orr.w	r2, r2, #16
 8012d5e:	619a      	str	r2, [r3, #24]
 8012d60:	687b      	ldr	r3, [r7, #4]
 8012d62:	681b      	ldr	r3, [r3, #0]
 8012d64:	681a      	ldr	r2, [r3, #0]
 8012d66:	687b      	ldr	r3, [r7, #4]
 8012d68:	681b      	ldr	r3, [r3, #0]
 8012d6a:	f022 0201 	bic.w	r2, r2, #1
 8012d6e:	601a      	str	r2, [r3, #0]
 8012d70:	687b      	ldr	r3, [r7, #4]
 8012d72:	681b      	ldr	r3, [r3, #0]
 8012d74:	6919      	ldr	r1, [r3, #16]
 8012d76:	687b      	ldr	r3, [r7, #4]
 8012d78:	681a      	ldr	r2, [r3, #0]
 8012d7a:	4b3c      	ldr	r3, [pc, #240]	; (8012e6c <SPI_CloseTransfer+0x13c>)
 8012d7c:	400b      	ands	r3, r1
 8012d7e:	6113      	str	r3, [r2, #16]
 8012d80:	687b      	ldr	r3, [r7, #4]
 8012d82:	681b      	ldr	r3, [r3, #0]
 8012d84:	689a      	ldr	r2, [r3, #8]
 8012d86:	687b      	ldr	r3, [r7, #4]
 8012d88:	681b      	ldr	r3, [r3, #0]
 8012d8a:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8012d8e:	609a      	str	r2, [r3, #8]
 8012d90:	687b      	ldr	r3, [r7, #4]
 8012d92:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8012d96:	b2db      	uxtb	r3, r3
 8012d98:	2b04      	cmp	r3, #4
 8012d9a:	d014      	beq.n	8012dc6 <SPI_CloseTransfer+0x96>
 8012d9c:	68fb      	ldr	r3, [r7, #12]
 8012d9e:	f003 0320 	and.w	r3, r3, #32
 8012da2:	2b00      	cmp	r3, #0
 8012da4:	d00f      	beq.n	8012dc6 <SPI_CloseTransfer+0x96>
 8012da6:	687b      	ldr	r3, [r7, #4]
 8012da8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012dac:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8012db0:	687b      	ldr	r3, [r7, #4]
 8012db2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012db6:	687b      	ldr	r3, [r7, #4]
 8012db8:	681b      	ldr	r3, [r3, #0]
 8012dba:	699a      	ldr	r2, [r3, #24]
 8012dbc:	687b      	ldr	r3, [r7, #4]
 8012dbe:	681b      	ldr	r3, [r3, #0]
 8012dc0:	f042 0220 	orr.w	r2, r2, #32
 8012dc4:	619a      	str	r2, [r3, #24]
 8012dc6:	687b      	ldr	r3, [r7, #4]
 8012dc8:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8012dcc:	b2db      	uxtb	r3, r3
 8012dce:	2b03      	cmp	r3, #3
 8012dd0:	d014      	beq.n	8012dfc <SPI_CloseTransfer+0xcc>
 8012dd2:	68fb      	ldr	r3, [r7, #12]
 8012dd4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8012dd8:	2b00      	cmp	r3, #0
 8012dda:	d00f      	beq.n	8012dfc <SPI_CloseTransfer+0xcc>
 8012ddc:	687b      	ldr	r3, [r7, #4]
 8012dde:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012de2:	f043 0204 	orr.w	r2, r3, #4
 8012de6:	687b      	ldr	r3, [r7, #4]
 8012de8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012dec:	687b      	ldr	r3, [r7, #4]
 8012dee:	681b      	ldr	r3, [r3, #0]
 8012df0:	699a      	ldr	r2, [r3, #24]
 8012df2:	687b      	ldr	r3, [r7, #4]
 8012df4:	681b      	ldr	r3, [r3, #0]
 8012df6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8012dfa:	619a      	str	r2, [r3, #24]
 8012dfc:	68fb      	ldr	r3, [r7, #12]
 8012dfe:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8012e02:	2b00      	cmp	r3, #0
 8012e04:	d00f      	beq.n	8012e26 <SPI_CloseTransfer+0xf6>
 8012e06:	687b      	ldr	r3, [r7, #4]
 8012e08:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012e0c:	f043 0201 	orr.w	r2, r3, #1
 8012e10:	687b      	ldr	r3, [r7, #4]
 8012e12:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012e16:	687b      	ldr	r3, [r7, #4]
 8012e18:	681b      	ldr	r3, [r3, #0]
 8012e1a:	699a      	ldr	r2, [r3, #24]
 8012e1c:	687b      	ldr	r3, [r7, #4]
 8012e1e:	681b      	ldr	r3, [r3, #0]
 8012e20:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012e24:	619a      	str	r2, [r3, #24]
 8012e26:	68fb      	ldr	r3, [r7, #12]
 8012e28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012e2c:	2b00      	cmp	r3, #0
 8012e2e:	d00f      	beq.n	8012e50 <SPI_CloseTransfer+0x120>
 8012e30:	687b      	ldr	r3, [r7, #4]
 8012e32:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012e36:	f043 0208 	orr.w	r2, r3, #8
 8012e3a:	687b      	ldr	r3, [r7, #4]
 8012e3c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8012e40:	687b      	ldr	r3, [r7, #4]
 8012e42:	681b      	ldr	r3, [r3, #0]
 8012e44:	699a      	ldr	r2, [r3, #24]
 8012e46:	687b      	ldr	r3, [r7, #4]
 8012e48:	681b      	ldr	r3, [r3, #0]
 8012e4a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8012e4e:	619a      	str	r2, [r3, #24]
 8012e50:	687b      	ldr	r3, [r7, #4]
 8012e52:	2200      	movs	r2, #0
 8012e54:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 8012e58:	687b      	ldr	r3, [r7, #4]
 8012e5a:	2200      	movs	r2, #0
 8012e5c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8012e60:	bf00      	nop
 8012e62:	3714      	adds	r7, #20
 8012e64:	46bd      	mov	sp, r7
 8012e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e6a:	4770      	bx	lr
 8012e6c:	fffffc90 	.word	0xfffffc90

08012e70 <SPI_GetPacketSize>:
 8012e70:	b480      	push	{r7}
 8012e72:	b085      	sub	sp, #20
 8012e74:	af00      	add	r7, sp, #0
 8012e76:	6078      	str	r0, [r7, #4]
 8012e78:	687b      	ldr	r3, [r7, #4]
 8012e7a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012e7c:	095b      	lsrs	r3, r3, #5
 8012e7e:	3301      	adds	r3, #1
 8012e80:	60fb      	str	r3, [r7, #12]
 8012e82:	687b      	ldr	r3, [r7, #4]
 8012e84:	68db      	ldr	r3, [r3, #12]
 8012e86:	3301      	adds	r3, #1
 8012e88:	60bb      	str	r3, [r7, #8]
 8012e8a:	68bb      	ldr	r3, [r7, #8]
 8012e8c:	3307      	adds	r3, #7
 8012e8e:	08db      	lsrs	r3, r3, #3
 8012e90:	60bb      	str	r3, [r7, #8]
 8012e92:	68bb      	ldr	r3, [r7, #8]
 8012e94:	68fa      	ldr	r2, [r7, #12]
 8012e96:	fb02 f303 	mul.w	r3, r2, r3
 8012e9a:	4618      	mov	r0, r3
 8012e9c:	3714      	adds	r7, #20
 8012e9e:	46bd      	mov	sp, r7
 8012ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ea4:	4770      	bx	lr

08012ea6 <HAL_TIM_Base_Init>:
 8012ea6:	b580      	push	{r7, lr}
 8012ea8:	b082      	sub	sp, #8
 8012eaa:	af00      	add	r7, sp, #0
 8012eac:	6078      	str	r0, [r7, #4]
 8012eae:	687b      	ldr	r3, [r7, #4]
 8012eb0:	2b00      	cmp	r3, #0
 8012eb2:	d101      	bne.n	8012eb8 <HAL_TIM_Base_Init+0x12>
 8012eb4:	2301      	movs	r3, #1
 8012eb6:	e049      	b.n	8012f4c <HAL_TIM_Base_Init+0xa6>
 8012eb8:	687b      	ldr	r3, [r7, #4]
 8012eba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012ebe:	b2db      	uxtb	r3, r3
 8012ec0:	2b00      	cmp	r3, #0
 8012ec2:	d106      	bne.n	8012ed2 <HAL_TIM_Base_Init+0x2c>
 8012ec4:	687b      	ldr	r3, [r7, #4]
 8012ec6:	2200      	movs	r2, #0
 8012ec8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012ecc:	6878      	ldr	r0, [r7, #4]
 8012ece:	f7f2 f847 	bl	8004f60 <HAL_TIM_Base_MspInit>
 8012ed2:	687b      	ldr	r3, [r7, #4]
 8012ed4:	2202      	movs	r2, #2
 8012ed6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012eda:	687b      	ldr	r3, [r7, #4]
 8012edc:	681a      	ldr	r2, [r3, #0]
 8012ede:	687b      	ldr	r3, [r7, #4]
 8012ee0:	3304      	adds	r3, #4
 8012ee2:	4619      	mov	r1, r3
 8012ee4:	4610      	mov	r0, r2
 8012ee6:	f000 fe7d 	bl	8013be4 <TIM_Base_SetConfig>
 8012eea:	687b      	ldr	r3, [r7, #4]
 8012eec:	2201      	movs	r2, #1
 8012eee:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8012ef2:	687b      	ldr	r3, [r7, #4]
 8012ef4:	2201      	movs	r2, #1
 8012ef6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012efa:	687b      	ldr	r3, [r7, #4]
 8012efc:	2201      	movs	r2, #1
 8012efe:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8012f02:	687b      	ldr	r3, [r7, #4]
 8012f04:	2201      	movs	r2, #1
 8012f06:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8012f0a:	687b      	ldr	r3, [r7, #4]
 8012f0c:	2201      	movs	r2, #1
 8012f0e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8012f12:	687b      	ldr	r3, [r7, #4]
 8012f14:	2201      	movs	r2, #1
 8012f16:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8012f1a:	687b      	ldr	r3, [r7, #4]
 8012f1c:	2201      	movs	r2, #1
 8012f1e:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8012f22:	687b      	ldr	r3, [r7, #4]
 8012f24:	2201      	movs	r2, #1
 8012f26:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8012f2a:	687b      	ldr	r3, [r7, #4]
 8012f2c:	2201      	movs	r2, #1
 8012f2e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8012f32:	687b      	ldr	r3, [r7, #4]
 8012f34:	2201      	movs	r2, #1
 8012f36:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8012f3a:	687b      	ldr	r3, [r7, #4]
 8012f3c:	2201      	movs	r2, #1
 8012f3e:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8012f42:	687b      	ldr	r3, [r7, #4]
 8012f44:	2201      	movs	r2, #1
 8012f46:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012f4a:	2300      	movs	r3, #0
 8012f4c:	4618      	mov	r0, r3
 8012f4e:	3708      	adds	r7, #8
 8012f50:	46bd      	mov	sp, r7
 8012f52:	bd80      	pop	{r7, pc}

08012f54 <HAL_TIM_Base_Start_IT>:
 8012f54:	b480      	push	{r7}
 8012f56:	b085      	sub	sp, #20
 8012f58:	af00      	add	r7, sp, #0
 8012f5a:	6078      	str	r0, [r7, #4]
 8012f5c:	687b      	ldr	r3, [r7, #4]
 8012f5e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012f62:	b2db      	uxtb	r3, r3
 8012f64:	2b01      	cmp	r3, #1
 8012f66:	d001      	beq.n	8012f6c <HAL_TIM_Base_Start_IT+0x18>
 8012f68:	2301      	movs	r3, #1
 8012f6a:	e054      	b.n	8013016 <HAL_TIM_Base_Start_IT+0xc2>
 8012f6c:	687b      	ldr	r3, [r7, #4]
 8012f6e:	2202      	movs	r2, #2
 8012f70:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012f74:	687b      	ldr	r3, [r7, #4]
 8012f76:	681b      	ldr	r3, [r3, #0]
 8012f78:	68da      	ldr	r2, [r3, #12]
 8012f7a:	687b      	ldr	r3, [r7, #4]
 8012f7c:	681b      	ldr	r3, [r3, #0]
 8012f7e:	f042 0201 	orr.w	r2, r2, #1
 8012f82:	60da      	str	r2, [r3, #12]
 8012f84:	687b      	ldr	r3, [r7, #4]
 8012f86:	681b      	ldr	r3, [r3, #0]
 8012f88:	4a26      	ldr	r2, [pc, #152]	; (8013024 <HAL_TIM_Base_Start_IT+0xd0>)
 8012f8a:	4293      	cmp	r3, r2
 8012f8c:	d022      	beq.n	8012fd4 <HAL_TIM_Base_Start_IT+0x80>
 8012f8e:	687b      	ldr	r3, [r7, #4]
 8012f90:	681b      	ldr	r3, [r3, #0]
 8012f92:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8012f96:	d01d      	beq.n	8012fd4 <HAL_TIM_Base_Start_IT+0x80>
 8012f98:	687b      	ldr	r3, [r7, #4]
 8012f9a:	681b      	ldr	r3, [r3, #0]
 8012f9c:	4a22      	ldr	r2, [pc, #136]	; (8013028 <HAL_TIM_Base_Start_IT+0xd4>)
 8012f9e:	4293      	cmp	r3, r2
 8012fa0:	d018      	beq.n	8012fd4 <HAL_TIM_Base_Start_IT+0x80>
 8012fa2:	687b      	ldr	r3, [r7, #4]
 8012fa4:	681b      	ldr	r3, [r3, #0]
 8012fa6:	4a21      	ldr	r2, [pc, #132]	; (801302c <HAL_TIM_Base_Start_IT+0xd8>)
 8012fa8:	4293      	cmp	r3, r2
 8012faa:	d013      	beq.n	8012fd4 <HAL_TIM_Base_Start_IT+0x80>
 8012fac:	687b      	ldr	r3, [r7, #4]
 8012fae:	681b      	ldr	r3, [r3, #0]
 8012fb0:	4a1f      	ldr	r2, [pc, #124]	; (8013030 <HAL_TIM_Base_Start_IT+0xdc>)
 8012fb2:	4293      	cmp	r3, r2
 8012fb4:	d00e      	beq.n	8012fd4 <HAL_TIM_Base_Start_IT+0x80>
 8012fb6:	687b      	ldr	r3, [r7, #4]
 8012fb8:	681b      	ldr	r3, [r3, #0]
 8012fba:	4a1e      	ldr	r2, [pc, #120]	; (8013034 <HAL_TIM_Base_Start_IT+0xe0>)
 8012fbc:	4293      	cmp	r3, r2
 8012fbe:	d009      	beq.n	8012fd4 <HAL_TIM_Base_Start_IT+0x80>
 8012fc0:	687b      	ldr	r3, [r7, #4]
 8012fc2:	681b      	ldr	r3, [r3, #0]
 8012fc4:	4a1c      	ldr	r2, [pc, #112]	; (8013038 <HAL_TIM_Base_Start_IT+0xe4>)
 8012fc6:	4293      	cmp	r3, r2
 8012fc8:	d004      	beq.n	8012fd4 <HAL_TIM_Base_Start_IT+0x80>
 8012fca:	687b      	ldr	r3, [r7, #4]
 8012fcc:	681b      	ldr	r3, [r3, #0]
 8012fce:	4a1b      	ldr	r2, [pc, #108]	; (801303c <HAL_TIM_Base_Start_IT+0xe8>)
 8012fd0:	4293      	cmp	r3, r2
 8012fd2:	d115      	bne.n	8013000 <HAL_TIM_Base_Start_IT+0xac>
 8012fd4:	687b      	ldr	r3, [r7, #4]
 8012fd6:	681b      	ldr	r3, [r3, #0]
 8012fd8:	689a      	ldr	r2, [r3, #8]
 8012fda:	4b19      	ldr	r3, [pc, #100]	; (8013040 <HAL_TIM_Base_Start_IT+0xec>)
 8012fdc:	4013      	ands	r3, r2
 8012fde:	60fb      	str	r3, [r7, #12]
 8012fe0:	68fb      	ldr	r3, [r7, #12]
 8012fe2:	2b06      	cmp	r3, #6
 8012fe4:	d015      	beq.n	8013012 <HAL_TIM_Base_Start_IT+0xbe>
 8012fe6:	68fb      	ldr	r3, [r7, #12]
 8012fe8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8012fec:	d011      	beq.n	8013012 <HAL_TIM_Base_Start_IT+0xbe>
 8012fee:	687b      	ldr	r3, [r7, #4]
 8012ff0:	681b      	ldr	r3, [r3, #0]
 8012ff2:	681a      	ldr	r2, [r3, #0]
 8012ff4:	687b      	ldr	r3, [r7, #4]
 8012ff6:	681b      	ldr	r3, [r3, #0]
 8012ff8:	f042 0201 	orr.w	r2, r2, #1
 8012ffc:	601a      	str	r2, [r3, #0]
 8012ffe:	e008      	b.n	8013012 <HAL_TIM_Base_Start_IT+0xbe>
 8013000:	687b      	ldr	r3, [r7, #4]
 8013002:	681b      	ldr	r3, [r3, #0]
 8013004:	681a      	ldr	r2, [r3, #0]
 8013006:	687b      	ldr	r3, [r7, #4]
 8013008:	681b      	ldr	r3, [r3, #0]
 801300a:	f042 0201 	orr.w	r2, r2, #1
 801300e:	601a      	str	r2, [r3, #0]
 8013010:	e000      	b.n	8013014 <HAL_TIM_Base_Start_IT+0xc0>
 8013012:	bf00      	nop
 8013014:	2300      	movs	r3, #0
 8013016:	4618      	mov	r0, r3
 8013018:	3714      	adds	r7, #20
 801301a:	46bd      	mov	sp, r7
 801301c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013020:	4770      	bx	lr
 8013022:	bf00      	nop
 8013024:	40010000 	.word	0x40010000
 8013028:	40000400 	.word	0x40000400
 801302c:	40000800 	.word	0x40000800
 8013030:	40000c00 	.word	0x40000c00
 8013034:	40010400 	.word	0x40010400
 8013038:	40001800 	.word	0x40001800
 801303c:	40014000 	.word	0x40014000
 8013040:	00010007 	.word	0x00010007

08013044 <HAL_TIM_OC_Start_IT>:
 8013044:	b580      	push	{r7, lr}
 8013046:	b084      	sub	sp, #16
 8013048:	af00      	add	r7, sp, #0
 801304a:	6078      	str	r0, [r7, #4]
 801304c:	6039      	str	r1, [r7, #0]
 801304e:	2300      	movs	r3, #0
 8013050:	73fb      	strb	r3, [r7, #15]
 8013052:	683b      	ldr	r3, [r7, #0]
 8013054:	2b00      	cmp	r3, #0
 8013056:	d109      	bne.n	801306c <HAL_TIM_OC_Start_IT+0x28>
 8013058:	687b      	ldr	r3, [r7, #4]
 801305a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 801305e:	b2db      	uxtb	r3, r3
 8013060:	2b01      	cmp	r3, #1
 8013062:	bf14      	ite	ne
 8013064:	2301      	movne	r3, #1
 8013066:	2300      	moveq	r3, #0
 8013068:	b2db      	uxtb	r3, r3
 801306a:	e03c      	b.n	80130e6 <HAL_TIM_OC_Start_IT+0xa2>
 801306c:	683b      	ldr	r3, [r7, #0]
 801306e:	2b04      	cmp	r3, #4
 8013070:	d109      	bne.n	8013086 <HAL_TIM_OC_Start_IT+0x42>
 8013072:	687b      	ldr	r3, [r7, #4]
 8013074:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8013078:	b2db      	uxtb	r3, r3
 801307a:	2b01      	cmp	r3, #1
 801307c:	bf14      	ite	ne
 801307e:	2301      	movne	r3, #1
 8013080:	2300      	moveq	r3, #0
 8013082:	b2db      	uxtb	r3, r3
 8013084:	e02f      	b.n	80130e6 <HAL_TIM_OC_Start_IT+0xa2>
 8013086:	683b      	ldr	r3, [r7, #0]
 8013088:	2b08      	cmp	r3, #8
 801308a:	d109      	bne.n	80130a0 <HAL_TIM_OC_Start_IT+0x5c>
 801308c:	687b      	ldr	r3, [r7, #4]
 801308e:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8013092:	b2db      	uxtb	r3, r3
 8013094:	2b01      	cmp	r3, #1
 8013096:	bf14      	ite	ne
 8013098:	2301      	movne	r3, #1
 801309a:	2300      	moveq	r3, #0
 801309c:	b2db      	uxtb	r3, r3
 801309e:	e022      	b.n	80130e6 <HAL_TIM_OC_Start_IT+0xa2>
 80130a0:	683b      	ldr	r3, [r7, #0]
 80130a2:	2b0c      	cmp	r3, #12
 80130a4:	d109      	bne.n	80130ba <HAL_TIM_OC_Start_IT+0x76>
 80130a6:	687b      	ldr	r3, [r7, #4]
 80130a8:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80130ac:	b2db      	uxtb	r3, r3
 80130ae:	2b01      	cmp	r3, #1
 80130b0:	bf14      	ite	ne
 80130b2:	2301      	movne	r3, #1
 80130b4:	2300      	moveq	r3, #0
 80130b6:	b2db      	uxtb	r3, r3
 80130b8:	e015      	b.n	80130e6 <HAL_TIM_OC_Start_IT+0xa2>
 80130ba:	683b      	ldr	r3, [r7, #0]
 80130bc:	2b10      	cmp	r3, #16
 80130be:	d109      	bne.n	80130d4 <HAL_TIM_OC_Start_IT+0x90>
 80130c0:	687b      	ldr	r3, [r7, #4]
 80130c2:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 80130c6:	b2db      	uxtb	r3, r3
 80130c8:	2b01      	cmp	r3, #1
 80130ca:	bf14      	ite	ne
 80130cc:	2301      	movne	r3, #1
 80130ce:	2300      	moveq	r3, #0
 80130d0:	b2db      	uxtb	r3, r3
 80130d2:	e008      	b.n	80130e6 <HAL_TIM_OC_Start_IT+0xa2>
 80130d4:	687b      	ldr	r3, [r7, #4]
 80130d6:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 80130da:	b2db      	uxtb	r3, r3
 80130dc:	2b01      	cmp	r3, #1
 80130de:	bf14      	ite	ne
 80130e0:	2301      	movne	r3, #1
 80130e2:	2300      	moveq	r3, #0
 80130e4:	b2db      	uxtb	r3, r3
 80130e6:	2b00      	cmp	r3, #0
 80130e8:	d001      	beq.n	80130ee <HAL_TIM_OC_Start_IT+0xaa>
 80130ea:	2301      	movs	r3, #1
 80130ec:	e0ec      	b.n	80132c8 <HAL_TIM_OC_Start_IT+0x284>
 80130ee:	683b      	ldr	r3, [r7, #0]
 80130f0:	2b00      	cmp	r3, #0
 80130f2:	d104      	bne.n	80130fe <HAL_TIM_OC_Start_IT+0xba>
 80130f4:	687b      	ldr	r3, [r7, #4]
 80130f6:	2202      	movs	r2, #2
 80130f8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80130fc:	e023      	b.n	8013146 <HAL_TIM_OC_Start_IT+0x102>
 80130fe:	683b      	ldr	r3, [r7, #0]
 8013100:	2b04      	cmp	r3, #4
 8013102:	d104      	bne.n	801310e <HAL_TIM_OC_Start_IT+0xca>
 8013104:	687b      	ldr	r3, [r7, #4]
 8013106:	2202      	movs	r2, #2
 8013108:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 801310c:	e01b      	b.n	8013146 <HAL_TIM_OC_Start_IT+0x102>
 801310e:	683b      	ldr	r3, [r7, #0]
 8013110:	2b08      	cmp	r3, #8
 8013112:	d104      	bne.n	801311e <HAL_TIM_OC_Start_IT+0xda>
 8013114:	687b      	ldr	r3, [r7, #4]
 8013116:	2202      	movs	r2, #2
 8013118:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 801311c:	e013      	b.n	8013146 <HAL_TIM_OC_Start_IT+0x102>
 801311e:	683b      	ldr	r3, [r7, #0]
 8013120:	2b0c      	cmp	r3, #12
 8013122:	d104      	bne.n	801312e <HAL_TIM_OC_Start_IT+0xea>
 8013124:	687b      	ldr	r3, [r7, #4]
 8013126:	2202      	movs	r2, #2
 8013128:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 801312c:	e00b      	b.n	8013146 <HAL_TIM_OC_Start_IT+0x102>
 801312e:	683b      	ldr	r3, [r7, #0]
 8013130:	2b10      	cmp	r3, #16
 8013132:	d104      	bne.n	801313e <HAL_TIM_OC_Start_IT+0xfa>
 8013134:	687b      	ldr	r3, [r7, #4]
 8013136:	2202      	movs	r2, #2
 8013138:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 801313c:	e003      	b.n	8013146 <HAL_TIM_OC_Start_IT+0x102>
 801313e:	687b      	ldr	r3, [r7, #4]
 8013140:	2202      	movs	r2, #2
 8013142:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8013146:	683b      	ldr	r3, [r7, #0]
 8013148:	2b0c      	cmp	r3, #12
 801314a:	d841      	bhi.n	80131d0 <HAL_TIM_OC_Start_IT+0x18c>
 801314c:	a201      	add	r2, pc, #4	; (adr r2, 8013154 <HAL_TIM_OC_Start_IT+0x110>)
 801314e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8013152:	bf00      	nop
 8013154:	08013189 	.word	0x08013189
 8013158:	080131d1 	.word	0x080131d1
 801315c:	080131d1 	.word	0x080131d1
 8013160:	080131d1 	.word	0x080131d1
 8013164:	0801319b 	.word	0x0801319b
 8013168:	080131d1 	.word	0x080131d1
 801316c:	080131d1 	.word	0x080131d1
 8013170:	080131d1 	.word	0x080131d1
 8013174:	080131ad 	.word	0x080131ad
 8013178:	080131d1 	.word	0x080131d1
 801317c:	080131d1 	.word	0x080131d1
 8013180:	080131d1 	.word	0x080131d1
 8013184:	080131bf 	.word	0x080131bf
 8013188:	687b      	ldr	r3, [r7, #4]
 801318a:	681b      	ldr	r3, [r3, #0]
 801318c:	68da      	ldr	r2, [r3, #12]
 801318e:	687b      	ldr	r3, [r7, #4]
 8013190:	681b      	ldr	r3, [r3, #0]
 8013192:	f042 0202 	orr.w	r2, r2, #2
 8013196:	60da      	str	r2, [r3, #12]
 8013198:	e01d      	b.n	80131d6 <HAL_TIM_OC_Start_IT+0x192>
 801319a:	687b      	ldr	r3, [r7, #4]
 801319c:	681b      	ldr	r3, [r3, #0]
 801319e:	68da      	ldr	r2, [r3, #12]
 80131a0:	687b      	ldr	r3, [r7, #4]
 80131a2:	681b      	ldr	r3, [r3, #0]
 80131a4:	f042 0204 	orr.w	r2, r2, #4
 80131a8:	60da      	str	r2, [r3, #12]
 80131aa:	e014      	b.n	80131d6 <HAL_TIM_OC_Start_IT+0x192>
 80131ac:	687b      	ldr	r3, [r7, #4]
 80131ae:	681b      	ldr	r3, [r3, #0]
 80131b0:	68da      	ldr	r2, [r3, #12]
 80131b2:	687b      	ldr	r3, [r7, #4]
 80131b4:	681b      	ldr	r3, [r3, #0]
 80131b6:	f042 0208 	orr.w	r2, r2, #8
 80131ba:	60da      	str	r2, [r3, #12]
 80131bc:	e00b      	b.n	80131d6 <HAL_TIM_OC_Start_IT+0x192>
 80131be:	687b      	ldr	r3, [r7, #4]
 80131c0:	681b      	ldr	r3, [r3, #0]
 80131c2:	68da      	ldr	r2, [r3, #12]
 80131c4:	687b      	ldr	r3, [r7, #4]
 80131c6:	681b      	ldr	r3, [r3, #0]
 80131c8:	f042 0210 	orr.w	r2, r2, #16
 80131cc:	60da      	str	r2, [r3, #12]
 80131ce:	e002      	b.n	80131d6 <HAL_TIM_OC_Start_IT+0x192>
 80131d0:	2301      	movs	r3, #1
 80131d2:	73fb      	strb	r3, [r7, #15]
 80131d4:	bf00      	nop
 80131d6:	7bfb      	ldrb	r3, [r7, #15]
 80131d8:	2b00      	cmp	r3, #0
 80131da:	d174      	bne.n	80132c6 <HAL_TIM_OC_Start_IT+0x282>
 80131dc:	687b      	ldr	r3, [r7, #4]
 80131de:	681b      	ldr	r3, [r3, #0]
 80131e0:	2201      	movs	r2, #1
 80131e2:	6839      	ldr	r1, [r7, #0]
 80131e4:	4618      	mov	r0, r3
 80131e6:	f001 f917 	bl	8014418 <TIM_CCxChannelCmd>
 80131ea:	687b      	ldr	r3, [r7, #4]
 80131ec:	681b      	ldr	r3, [r3, #0]
 80131ee:	4a38      	ldr	r2, [pc, #224]	; (80132d0 <HAL_TIM_OC_Start_IT+0x28c>)
 80131f0:	4293      	cmp	r3, r2
 80131f2:	d013      	beq.n	801321c <HAL_TIM_OC_Start_IT+0x1d8>
 80131f4:	687b      	ldr	r3, [r7, #4]
 80131f6:	681b      	ldr	r3, [r3, #0]
 80131f8:	4a36      	ldr	r2, [pc, #216]	; (80132d4 <HAL_TIM_OC_Start_IT+0x290>)
 80131fa:	4293      	cmp	r3, r2
 80131fc:	d00e      	beq.n	801321c <HAL_TIM_OC_Start_IT+0x1d8>
 80131fe:	687b      	ldr	r3, [r7, #4]
 8013200:	681b      	ldr	r3, [r3, #0]
 8013202:	4a35      	ldr	r2, [pc, #212]	; (80132d8 <HAL_TIM_OC_Start_IT+0x294>)
 8013204:	4293      	cmp	r3, r2
 8013206:	d009      	beq.n	801321c <HAL_TIM_OC_Start_IT+0x1d8>
 8013208:	687b      	ldr	r3, [r7, #4]
 801320a:	681b      	ldr	r3, [r3, #0]
 801320c:	4a33      	ldr	r2, [pc, #204]	; (80132dc <HAL_TIM_OC_Start_IT+0x298>)
 801320e:	4293      	cmp	r3, r2
 8013210:	d004      	beq.n	801321c <HAL_TIM_OC_Start_IT+0x1d8>
 8013212:	687b      	ldr	r3, [r7, #4]
 8013214:	681b      	ldr	r3, [r3, #0]
 8013216:	4a32      	ldr	r2, [pc, #200]	; (80132e0 <HAL_TIM_OC_Start_IT+0x29c>)
 8013218:	4293      	cmp	r3, r2
 801321a:	d101      	bne.n	8013220 <HAL_TIM_OC_Start_IT+0x1dc>
 801321c:	2301      	movs	r3, #1
 801321e:	e000      	b.n	8013222 <HAL_TIM_OC_Start_IT+0x1de>
 8013220:	2300      	movs	r3, #0
 8013222:	2b00      	cmp	r3, #0
 8013224:	d007      	beq.n	8013236 <HAL_TIM_OC_Start_IT+0x1f2>
 8013226:	687b      	ldr	r3, [r7, #4]
 8013228:	681b      	ldr	r3, [r3, #0]
 801322a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 801322c:	687b      	ldr	r3, [r7, #4]
 801322e:	681b      	ldr	r3, [r3, #0]
 8013230:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8013234:	645a      	str	r2, [r3, #68]	; 0x44
 8013236:	687b      	ldr	r3, [r7, #4]
 8013238:	681b      	ldr	r3, [r3, #0]
 801323a:	4a25      	ldr	r2, [pc, #148]	; (80132d0 <HAL_TIM_OC_Start_IT+0x28c>)
 801323c:	4293      	cmp	r3, r2
 801323e:	d022      	beq.n	8013286 <HAL_TIM_OC_Start_IT+0x242>
 8013240:	687b      	ldr	r3, [r7, #4]
 8013242:	681b      	ldr	r3, [r3, #0]
 8013244:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8013248:	d01d      	beq.n	8013286 <HAL_TIM_OC_Start_IT+0x242>
 801324a:	687b      	ldr	r3, [r7, #4]
 801324c:	681b      	ldr	r3, [r3, #0]
 801324e:	4a25      	ldr	r2, [pc, #148]	; (80132e4 <HAL_TIM_OC_Start_IT+0x2a0>)
 8013250:	4293      	cmp	r3, r2
 8013252:	d018      	beq.n	8013286 <HAL_TIM_OC_Start_IT+0x242>
 8013254:	687b      	ldr	r3, [r7, #4]
 8013256:	681b      	ldr	r3, [r3, #0]
 8013258:	4a23      	ldr	r2, [pc, #140]	; (80132e8 <HAL_TIM_OC_Start_IT+0x2a4>)
 801325a:	4293      	cmp	r3, r2
 801325c:	d013      	beq.n	8013286 <HAL_TIM_OC_Start_IT+0x242>
 801325e:	687b      	ldr	r3, [r7, #4]
 8013260:	681b      	ldr	r3, [r3, #0]
 8013262:	4a22      	ldr	r2, [pc, #136]	; (80132ec <HAL_TIM_OC_Start_IT+0x2a8>)
 8013264:	4293      	cmp	r3, r2
 8013266:	d00e      	beq.n	8013286 <HAL_TIM_OC_Start_IT+0x242>
 8013268:	687b      	ldr	r3, [r7, #4]
 801326a:	681b      	ldr	r3, [r3, #0]
 801326c:	4a19      	ldr	r2, [pc, #100]	; (80132d4 <HAL_TIM_OC_Start_IT+0x290>)
 801326e:	4293      	cmp	r3, r2
 8013270:	d009      	beq.n	8013286 <HAL_TIM_OC_Start_IT+0x242>
 8013272:	687b      	ldr	r3, [r7, #4]
 8013274:	681b      	ldr	r3, [r3, #0]
 8013276:	4a1e      	ldr	r2, [pc, #120]	; (80132f0 <HAL_TIM_OC_Start_IT+0x2ac>)
 8013278:	4293      	cmp	r3, r2
 801327a:	d004      	beq.n	8013286 <HAL_TIM_OC_Start_IT+0x242>
 801327c:	687b      	ldr	r3, [r7, #4]
 801327e:	681b      	ldr	r3, [r3, #0]
 8013280:	4a15      	ldr	r2, [pc, #84]	; (80132d8 <HAL_TIM_OC_Start_IT+0x294>)
 8013282:	4293      	cmp	r3, r2
 8013284:	d115      	bne.n	80132b2 <HAL_TIM_OC_Start_IT+0x26e>
 8013286:	687b      	ldr	r3, [r7, #4]
 8013288:	681b      	ldr	r3, [r3, #0]
 801328a:	689a      	ldr	r2, [r3, #8]
 801328c:	4b19      	ldr	r3, [pc, #100]	; (80132f4 <HAL_TIM_OC_Start_IT+0x2b0>)
 801328e:	4013      	ands	r3, r2
 8013290:	60bb      	str	r3, [r7, #8]
 8013292:	68bb      	ldr	r3, [r7, #8]
 8013294:	2b06      	cmp	r3, #6
 8013296:	d015      	beq.n	80132c4 <HAL_TIM_OC_Start_IT+0x280>
 8013298:	68bb      	ldr	r3, [r7, #8]
 801329a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 801329e:	d011      	beq.n	80132c4 <HAL_TIM_OC_Start_IT+0x280>
 80132a0:	687b      	ldr	r3, [r7, #4]
 80132a2:	681b      	ldr	r3, [r3, #0]
 80132a4:	681a      	ldr	r2, [r3, #0]
 80132a6:	687b      	ldr	r3, [r7, #4]
 80132a8:	681b      	ldr	r3, [r3, #0]
 80132aa:	f042 0201 	orr.w	r2, r2, #1
 80132ae:	601a      	str	r2, [r3, #0]
 80132b0:	e008      	b.n	80132c4 <HAL_TIM_OC_Start_IT+0x280>
 80132b2:	687b      	ldr	r3, [r7, #4]
 80132b4:	681b      	ldr	r3, [r3, #0]
 80132b6:	681a      	ldr	r2, [r3, #0]
 80132b8:	687b      	ldr	r3, [r7, #4]
 80132ba:	681b      	ldr	r3, [r3, #0]
 80132bc:	f042 0201 	orr.w	r2, r2, #1
 80132c0:	601a      	str	r2, [r3, #0]
 80132c2:	e000      	b.n	80132c6 <HAL_TIM_OC_Start_IT+0x282>
 80132c4:	bf00      	nop
 80132c6:	7bfb      	ldrb	r3, [r7, #15]
 80132c8:	4618      	mov	r0, r3
 80132ca:	3710      	adds	r7, #16
 80132cc:	46bd      	mov	sp, r7
 80132ce:	bd80      	pop	{r7, pc}
 80132d0:	40010000 	.word	0x40010000
 80132d4:	40010400 	.word	0x40010400
 80132d8:	40014000 	.word	0x40014000
 80132dc:	40014400 	.word	0x40014400
 80132e0:	40014800 	.word	0x40014800
 80132e4:	40000400 	.word	0x40000400
 80132e8:	40000800 	.word	0x40000800
 80132ec:	40000c00 	.word	0x40000c00
 80132f0:	40001800 	.word	0x40001800
 80132f4:	00010007 	.word	0x00010007

080132f8 <HAL_TIM_OC_Stop_IT>:
 80132f8:	b580      	push	{r7, lr}
 80132fa:	b084      	sub	sp, #16
 80132fc:	af00      	add	r7, sp, #0
 80132fe:	6078      	str	r0, [r7, #4]
 8013300:	6039      	str	r1, [r7, #0]
 8013302:	2300      	movs	r3, #0
 8013304:	73fb      	strb	r3, [r7, #15]
 8013306:	683b      	ldr	r3, [r7, #0]
 8013308:	2b0c      	cmp	r3, #12
 801330a:	d841      	bhi.n	8013390 <HAL_TIM_OC_Stop_IT+0x98>
 801330c:	a201      	add	r2, pc, #4	; (adr r2, 8013314 <HAL_TIM_OC_Stop_IT+0x1c>)
 801330e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8013312:	bf00      	nop
 8013314:	08013349 	.word	0x08013349
 8013318:	08013391 	.word	0x08013391
 801331c:	08013391 	.word	0x08013391
 8013320:	08013391 	.word	0x08013391
 8013324:	0801335b 	.word	0x0801335b
 8013328:	08013391 	.word	0x08013391
 801332c:	08013391 	.word	0x08013391
 8013330:	08013391 	.word	0x08013391
 8013334:	0801336d 	.word	0x0801336d
 8013338:	08013391 	.word	0x08013391
 801333c:	08013391 	.word	0x08013391
 8013340:	08013391 	.word	0x08013391
 8013344:	0801337f 	.word	0x0801337f
 8013348:	687b      	ldr	r3, [r7, #4]
 801334a:	681b      	ldr	r3, [r3, #0]
 801334c:	68da      	ldr	r2, [r3, #12]
 801334e:	687b      	ldr	r3, [r7, #4]
 8013350:	681b      	ldr	r3, [r3, #0]
 8013352:	f022 0202 	bic.w	r2, r2, #2
 8013356:	60da      	str	r2, [r3, #12]
 8013358:	e01d      	b.n	8013396 <HAL_TIM_OC_Stop_IT+0x9e>
 801335a:	687b      	ldr	r3, [r7, #4]
 801335c:	681b      	ldr	r3, [r3, #0]
 801335e:	68da      	ldr	r2, [r3, #12]
 8013360:	687b      	ldr	r3, [r7, #4]
 8013362:	681b      	ldr	r3, [r3, #0]
 8013364:	f022 0204 	bic.w	r2, r2, #4
 8013368:	60da      	str	r2, [r3, #12]
 801336a:	e014      	b.n	8013396 <HAL_TIM_OC_Stop_IT+0x9e>
 801336c:	687b      	ldr	r3, [r7, #4]
 801336e:	681b      	ldr	r3, [r3, #0]
 8013370:	68da      	ldr	r2, [r3, #12]
 8013372:	687b      	ldr	r3, [r7, #4]
 8013374:	681b      	ldr	r3, [r3, #0]
 8013376:	f022 0208 	bic.w	r2, r2, #8
 801337a:	60da      	str	r2, [r3, #12]
 801337c:	e00b      	b.n	8013396 <HAL_TIM_OC_Stop_IT+0x9e>
 801337e:	687b      	ldr	r3, [r7, #4]
 8013380:	681b      	ldr	r3, [r3, #0]
 8013382:	68da      	ldr	r2, [r3, #12]
 8013384:	687b      	ldr	r3, [r7, #4]
 8013386:	681b      	ldr	r3, [r3, #0]
 8013388:	f022 0210 	bic.w	r2, r2, #16
 801338c:	60da      	str	r2, [r3, #12]
 801338e:	e002      	b.n	8013396 <HAL_TIM_OC_Stop_IT+0x9e>
 8013390:	2301      	movs	r3, #1
 8013392:	73fb      	strb	r3, [r7, #15]
 8013394:	bf00      	nop
 8013396:	7bfb      	ldrb	r3, [r7, #15]
 8013398:	2b00      	cmp	r3, #0
 801339a:	f040 8081 	bne.w	80134a0 <HAL_TIM_OC_Stop_IT+0x1a8>
 801339e:	687b      	ldr	r3, [r7, #4]
 80133a0:	681b      	ldr	r3, [r3, #0]
 80133a2:	2200      	movs	r2, #0
 80133a4:	6839      	ldr	r1, [r7, #0]
 80133a6:	4618      	mov	r0, r3
 80133a8:	f001 f836 	bl	8014418 <TIM_CCxChannelCmd>
 80133ac:	687b      	ldr	r3, [r7, #4]
 80133ae:	681b      	ldr	r3, [r3, #0]
 80133b0:	4a3e      	ldr	r2, [pc, #248]	; (80134ac <HAL_TIM_OC_Stop_IT+0x1b4>)
 80133b2:	4293      	cmp	r3, r2
 80133b4:	d013      	beq.n	80133de <HAL_TIM_OC_Stop_IT+0xe6>
 80133b6:	687b      	ldr	r3, [r7, #4]
 80133b8:	681b      	ldr	r3, [r3, #0]
 80133ba:	4a3d      	ldr	r2, [pc, #244]	; (80134b0 <HAL_TIM_OC_Stop_IT+0x1b8>)
 80133bc:	4293      	cmp	r3, r2
 80133be:	d00e      	beq.n	80133de <HAL_TIM_OC_Stop_IT+0xe6>
 80133c0:	687b      	ldr	r3, [r7, #4]
 80133c2:	681b      	ldr	r3, [r3, #0]
 80133c4:	4a3b      	ldr	r2, [pc, #236]	; (80134b4 <HAL_TIM_OC_Stop_IT+0x1bc>)
 80133c6:	4293      	cmp	r3, r2
 80133c8:	d009      	beq.n	80133de <HAL_TIM_OC_Stop_IT+0xe6>
 80133ca:	687b      	ldr	r3, [r7, #4]
 80133cc:	681b      	ldr	r3, [r3, #0]
 80133ce:	4a3a      	ldr	r2, [pc, #232]	; (80134b8 <HAL_TIM_OC_Stop_IT+0x1c0>)
 80133d0:	4293      	cmp	r3, r2
 80133d2:	d004      	beq.n	80133de <HAL_TIM_OC_Stop_IT+0xe6>
 80133d4:	687b      	ldr	r3, [r7, #4]
 80133d6:	681b      	ldr	r3, [r3, #0]
 80133d8:	4a38      	ldr	r2, [pc, #224]	; (80134bc <HAL_TIM_OC_Stop_IT+0x1c4>)
 80133da:	4293      	cmp	r3, r2
 80133dc:	d101      	bne.n	80133e2 <HAL_TIM_OC_Stop_IT+0xea>
 80133de:	2301      	movs	r3, #1
 80133e0:	e000      	b.n	80133e4 <HAL_TIM_OC_Stop_IT+0xec>
 80133e2:	2300      	movs	r3, #0
 80133e4:	2b00      	cmp	r3, #0
 80133e6:	d017      	beq.n	8013418 <HAL_TIM_OC_Stop_IT+0x120>
 80133e8:	687b      	ldr	r3, [r7, #4]
 80133ea:	681b      	ldr	r3, [r3, #0]
 80133ec:	6a1a      	ldr	r2, [r3, #32]
 80133ee:	f241 1311 	movw	r3, #4369	; 0x1111
 80133f2:	4013      	ands	r3, r2
 80133f4:	2b00      	cmp	r3, #0
 80133f6:	d10f      	bne.n	8013418 <HAL_TIM_OC_Stop_IT+0x120>
 80133f8:	687b      	ldr	r3, [r7, #4]
 80133fa:	681b      	ldr	r3, [r3, #0]
 80133fc:	6a1a      	ldr	r2, [r3, #32]
 80133fe:	f240 4344 	movw	r3, #1092	; 0x444
 8013402:	4013      	ands	r3, r2
 8013404:	2b00      	cmp	r3, #0
 8013406:	d107      	bne.n	8013418 <HAL_TIM_OC_Stop_IT+0x120>
 8013408:	687b      	ldr	r3, [r7, #4]
 801340a:	681b      	ldr	r3, [r3, #0]
 801340c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 801340e:	687b      	ldr	r3, [r7, #4]
 8013410:	681b      	ldr	r3, [r3, #0]
 8013412:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8013416:	645a      	str	r2, [r3, #68]	; 0x44
 8013418:	687b      	ldr	r3, [r7, #4]
 801341a:	681b      	ldr	r3, [r3, #0]
 801341c:	6a1a      	ldr	r2, [r3, #32]
 801341e:	f241 1311 	movw	r3, #4369	; 0x1111
 8013422:	4013      	ands	r3, r2
 8013424:	2b00      	cmp	r3, #0
 8013426:	d10f      	bne.n	8013448 <HAL_TIM_OC_Stop_IT+0x150>
 8013428:	687b      	ldr	r3, [r7, #4]
 801342a:	681b      	ldr	r3, [r3, #0]
 801342c:	6a1a      	ldr	r2, [r3, #32]
 801342e:	f240 4344 	movw	r3, #1092	; 0x444
 8013432:	4013      	ands	r3, r2
 8013434:	2b00      	cmp	r3, #0
 8013436:	d107      	bne.n	8013448 <HAL_TIM_OC_Stop_IT+0x150>
 8013438:	687b      	ldr	r3, [r7, #4]
 801343a:	681b      	ldr	r3, [r3, #0]
 801343c:	681a      	ldr	r2, [r3, #0]
 801343e:	687b      	ldr	r3, [r7, #4]
 8013440:	681b      	ldr	r3, [r3, #0]
 8013442:	f022 0201 	bic.w	r2, r2, #1
 8013446:	601a      	str	r2, [r3, #0]
 8013448:	683b      	ldr	r3, [r7, #0]
 801344a:	2b00      	cmp	r3, #0
 801344c:	d104      	bne.n	8013458 <HAL_TIM_OC_Stop_IT+0x160>
 801344e:	687b      	ldr	r3, [r7, #4]
 8013450:	2201      	movs	r2, #1
 8013452:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8013456:	e023      	b.n	80134a0 <HAL_TIM_OC_Stop_IT+0x1a8>
 8013458:	683b      	ldr	r3, [r7, #0]
 801345a:	2b04      	cmp	r3, #4
 801345c:	d104      	bne.n	8013468 <HAL_TIM_OC_Stop_IT+0x170>
 801345e:	687b      	ldr	r3, [r7, #4]
 8013460:	2201      	movs	r2, #1
 8013462:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8013466:	e01b      	b.n	80134a0 <HAL_TIM_OC_Stop_IT+0x1a8>
 8013468:	683b      	ldr	r3, [r7, #0]
 801346a:	2b08      	cmp	r3, #8
 801346c:	d104      	bne.n	8013478 <HAL_TIM_OC_Stop_IT+0x180>
 801346e:	687b      	ldr	r3, [r7, #4]
 8013470:	2201      	movs	r2, #1
 8013472:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8013476:	e013      	b.n	80134a0 <HAL_TIM_OC_Stop_IT+0x1a8>
 8013478:	683b      	ldr	r3, [r7, #0]
 801347a:	2b0c      	cmp	r3, #12
 801347c:	d104      	bne.n	8013488 <HAL_TIM_OC_Stop_IT+0x190>
 801347e:	687b      	ldr	r3, [r7, #4]
 8013480:	2201      	movs	r2, #1
 8013482:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8013486:	e00b      	b.n	80134a0 <HAL_TIM_OC_Stop_IT+0x1a8>
 8013488:	683b      	ldr	r3, [r7, #0]
 801348a:	2b10      	cmp	r3, #16
 801348c:	d104      	bne.n	8013498 <HAL_TIM_OC_Stop_IT+0x1a0>
 801348e:	687b      	ldr	r3, [r7, #4]
 8013490:	2201      	movs	r2, #1
 8013492:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8013496:	e003      	b.n	80134a0 <HAL_TIM_OC_Stop_IT+0x1a8>
 8013498:	687b      	ldr	r3, [r7, #4]
 801349a:	2201      	movs	r2, #1
 801349c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80134a0:	7bfb      	ldrb	r3, [r7, #15]
 80134a2:	4618      	mov	r0, r3
 80134a4:	3710      	adds	r7, #16
 80134a6:	46bd      	mov	sp, r7
 80134a8:	bd80      	pop	{r7, pc}
 80134aa:	bf00      	nop
 80134ac:	40010000 	.word	0x40010000
 80134b0:	40010400 	.word	0x40010400
 80134b4:	40014000 	.word	0x40014000
 80134b8:	40014400 	.word	0x40014400
 80134bc:	40014800 	.word	0x40014800

080134c0 <HAL_TIM_PWM_Init>:
 80134c0:	b580      	push	{r7, lr}
 80134c2:	b082      	sub	sp, #8
 80134c4:	af00      	add	r7, sp, #0
 80134c6:	6078      	str	r0, [r7, #4]
 80134c8:	687b      	ldr	r3, [r7, #4]
 80134ca:	2b00      	cmp	r3, #0
 80134cc:	d101      	bne.n	80134d2 <HAL_TIM_PWM_Init+0x12>
 80134ce:	2301      	movs	r3, #1
 80134d0:	e049      	b.n	8013566 <HAL_TIM_PWM_Init+0xa6>
 80134d2:	687b      	ldr	r3, [r7, #4]
 80134d4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80134d8:	b2db      	uxtb	r3, r3
 80134da:	2b00      	cmp	r3, #0
 80134dc:	d106      	bne.n	80134ec <HAL_TIM_PWM_Init+0x2c>
 80134de:	687b      	ldr	r3, [r7, #4]
 80134e0:	2200      	movs	r2, #0
 80134e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80134e6:	6878      	ldr	r0, [r7, #4]
 80134e8:	f000 f841 	bl	801356e <HAL_TIM_PWM_MspInit>
 80134ec:	687b      	ldr	r3, [r7, #4]
 80134ee:	2202      	movs	r2, #2
 80134f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80134f4:	687b      	ldr	r3, [r7, #4]
 80134f6:	681a      	ldr	r2, [r3, #0]
 80134f8:	687b      	ldr	r3, [r7, #4]
 80134fa:	3304      	adds	r3, #4
 80134fc:	4619      	mov	r1, r3
 80134fe:	4610      	mov	r0, r2
 8013500:	f000 fb70 	bl	8013be4 <TIM_Base_SetConfig>
 8013504:	687b      	ldr	r3, [r7, #4]
 8013506:	2201      	movs	r2, #1
 8013508:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 801350c:	687b      	ldr	r3, [r7, #4]
 801350e:	2201      	movs	r2, #1
 8013510:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8013514:	687b      	ldr	r3, [r7, #4]
 8013516:	2201      	movs	r2, #1
 8013518:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 801351c:	687b      	ldr	r3, [r7, #4]
 801351e:	2201      	movs	r2, #1
 8013520:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8013524:	687b      	ldr	r3, [r7, #4]
 8013526:	2201      	movs	r2, #1
 8013528:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 801352c:	687b      	ldr	r3, [r7, #4]
 801352e:	2201      	movs	r2, #1
 8013530:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8013534:	687b      	ldr	r3, [r7, #4]
 8013536:	2201      	movs	r2, #1
 8013538:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 801353c:	687b      	ldr	r3, [r7, #4]
 801353e:	2201      	movs	r2, #1
 8013540:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8013544:	687b      	ldr	r3, [r7, #4]
 8013546:	2201      	movs	r2, #1
 8013548:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801354c:	687b      	ldr	r3, [r7, #4]
 801354e:	2201      	movs	r2, #1
 8013550:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8013554:	687b      	ldr	r3, [r7, #4]
 8013556:	2201      	movs	r2, #1
 8013558:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 801355c:	687b      	ldr	r3, [r7, #4]
 801355e:	2201      	movs	r2, #1
 8013560:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8013564:	2300      	movs	r3, #0
 8013566:	4618      	mov	r0, r3
 8013568:	3708      	adds	r7, #8
 801356a:	46bd      	mov	sp, r7
 801356c:	bd80      	pop	{r7, pc}

0801356e <HAL_TIM_PWM_MspInit>:
 801356e:	b480      	push	{r7}
 8013570:	b083      	sub	sp, #12
 8013572:	af00      	add	r7, sp, #0
 8013574:	6078      	str	r0, [r7, #4]
 8013576:	bf00      	nop
 8013578:	370c      	adds	r7, #12
 801357a:	46bd      	mov	sp, r7
 801357c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013580:	4770      	bx	lr

08013582 <HAL_TIM_IRQHandler>:
 8013582:	b580      	push	{r7, lr}
 8013584:	b084      	sub	sp, #16
 8013586:	af00      	add	r7, sp, #0
 8013588:	6078      	str	r0, [r7, #4]
 801358a:	687b      	ldr	r3, [r7, #4]
 801358c:	681b      	ldr	r3, [r3, #0]
 801358e:	68db      	ldr	r3, [r3, #12]
 8013590:	60fb      	str	r3, [r7, #12]
 8013592:	687b      	ldr	r3, [r7, #4]
 8013594:	681b      	ldr	r3, [r3, #0]
 8013596:	691b      	ldr	r3, [r3, #16]
 8013598:	60bb      	str	r3, [r7, #8]
 801359a:	68bb      	ldr	r3, [r7, #8]
 801359c:	f003 0302 	and.w	r3, r3, #2
 80135a0:	2b00      	cmp	r3, #0
 80135a2:	d020      	beq.n	80135e6 <HAL_TIM_IRQHandler+0x64>
 80135a4:	68fb      	ldr	r3, [r7, #12]
 80135a6:	f003 0302 	and.w	r3, r3, #2
 80135aa:	2b00      	cmp	r3, #0
 80135ac:	d01b      	beq.n	80135e6 <HAL_TIM_IRQHandler+0x64>
 80135ae:	687b      	ldr	r3, [r7, #4]
 80135b0:	681b      	ldr	r3, [r3, #0]
 80135b2:	f06f 0202 	mvn.w	r2, #2
 80135b6:	611a      	str	r2, [r3, #16]
 80135b8:	687b      	ldr	r3, [r7, #4]
 80135ba:	2201      	movs	r2, #1
 80135bc:	771a      	strb	r2, [r3, #28]
 80135be:	687b      	ldr	r3, [r7, #4]
 80135c0:	681b      	ldr	r3, [r3, #0]
 80135c2:	699b      	ldr	r3, [r3, #24]
 80135c4:	f003 0303 	and.w	r3, r3, #3
 80135c8:	2b00      	cmp	r3, #0
 80135ca:	d003      	beq.n	80135d4 <HAL_TIM_IRQHandler+0x52>
 80135cc:	6878      	ldr	r0, [r7, #4]
 80135ce:	f000 faeb 	bl	8013ba8 <HAL_TIM_IC_CaptureCallback>
 80135d2:	e005      	b.n	80135e0 <HAL_TIM_IRQHandler+0x5e>
 80135d4:	6878      	ldr	r0, [r7, #4]
 80135d6:	f7ef fbdd 	bl	8002d94 <HAL_TIM_OC_DelayElapsedCallback>
 80135da:	6878      	ldr	r0, [r7, #4]
 80135dc:	f000 faee 	bl	8013bbc <HAL_TIM_PWM_PulseFinishedCallback>
 80135e0:	687b      	ldr	r3, [r7, #4]
 80135e2:	2200      	movs	r2, #0
 80135e4:	771a      	strb	r2, [r3, #28]
 80135e6:	68bb      	ldr	r3, [r7, #8]
 80135e8:	f003 0304 	and.w	r3, r3, #4
 80135ec:	2b00      	cmp	r3, #0
 80135ee:	d020      	beq.n	8013632 <HAL_TIM_IRQHandler+0xb0>
 80135f0:	68fb      	ldr	r3, [r7, #12]
 80135f2:	f003 0304 	and.w	r3, r3, #4
 80135f6:	2b00      	cmp	r3, #0
 80135f8:	d01b      	beq.n	8013632 <HAL_TIM_IRQHandler+0xb0>
 80135fa:	687b      	ldr	r3, [r7, #4]
 80135fc:	681b      	ldr	r3, [r3, #0]
 80135fe:	f06f 0204 	mvn.w	r2, #4
 8013602:	611a      	str	r2, [r3, #16]
 8013604:	687b      	ldr	r3, [r7, #4]
 8013606:	2202      	movs	r2, #2
 8013608:	771a      	strb	r2, [r3, #28]
 801360a:	687b      	ldr	r3, [r7, #4]
 801360c:	681b      	ldr	r3, [r3, #0]
 801360e:	699b      	ldr	r3, [r3, #24]
 8013610:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8013614:	2b00      	cmp	r3, #0
 8013616:	d003      	beq.n	8013620 <HAL_TIM_IRQHandler+0x9e>
 8013618:	6878      	ldr	r0, [r7, #4]
 801361a:	f000 fac5 	bl	8013ba8 <HAL_TIM_IC_CaptureCallback>
 801361e:	e005      	b.n	801362c <HAL_TIM_IRQHandler+0xaa>
 8013620:	6878      	ldr	r0, [r7, #4]
 8013622:	f7ef fbb7 	bl	8002d94 <HAL_TIM_OC_DelayElapsedCallback>
 8013626:	6878      	ldr	r0, [r7, #4]
 8013628:	f000 fac8 	bl	8013bbc <HAL_TIM_PWM_PulseFinishedCallback>
 801362c:	687b      	ldr	r3, [r7, #4]
 801362e:	2200      	movs	r2, #0
 8013630:	771a      	strb	r2, [r3, #28]
 8013632:	68bb      	ldr	r3, [r7, #8]
 8013634:	f003 0308 	and.w	r3, r3, #8
 8013638:	2b00      	cmp	r3, #0
 801363a:	d020      	beq.n	801367e <HAL_TIM_IRQHandler+0xfc>
 801363c:	68fb      	ldr	r3, [r7, #12]
 801363e:	f003 0308 	and.w	r3, r3, #8
 8013642:	2b00      	cmp	r3, #0
 8013644:	d01b      	beq.n	801367e <HAL_TIM_IRQHandler+0xfc>
 8013646:	687b      	ldr	r3, [r7, #4]
 8013648:	681b      	ldr	r3, [r3, #0]
 801364a:	f06f 0208 	mvn.w	r2, #8
 801364e:	611a      	str	r2, [r3, #16]
 8013650:	687b      	ldr	r3, [r7, #4]
 8013652:	2204      	movs	r2, #4
 8013654:	771a      	strb	r2, [r3, #28]
 8013656:	687b      	ldr	r3, [r7, #4]
 8013658:	681b      	ldr	r3, [r3, #0]
 801365a:	69db      	ldr	r3, [r3, #28]
 801365c:	f003 0303 	and.w	r3, r3, #3
 8013660:	2b00      	cmp	r3, #0
 8013662:	d003      	beq.n	801366c <HAL_TIM_IRQHandler+0xea>
 8013664:	6878      	ldr	r0, [r7, #4]
 8013666:	f000 fa9f 	bl	8013ba8 <HAL_TIM_IC_CaptureCallback>
 801366a:	e005      	b.n	8013678 <HAL_TIM_IRQHandler+0xf6>
 801366c:	6878      	ldr	r0, [r7, #4]
 801366e:	f7ef fb91 	bl	8002d94 <HAL_TIM_OC_DelayElapsedCallback>
 8013672:	6878      	ldr	r0, [r7, #4]
 8013674:	f000 faa2 	bl	8013bbc <HAL_TIM_PWM_PulseFinishedCallback>
 8013678:	687b      	ldr	r3, [r7, #4]
 801367a:	2200      	movs	r2, #0
 801367c:	771a      	strb	r2, [r3, #28]
 801367e:	68bb      	ldr	r3, [r7, #8]
 8013680:	f003 0310 	and.w	r3, r3, #16
 8013684:	2b00      	cmp	r3, #0
 8013686:	d020      	beq.n	80136ca <HAL_TIM_IRQHandler+0x148>
 8013688:	68fb      	ldr	r3, [r7, #12]
 801368a:	f003 0310 	and.w	r3, r3, #16
 801368e:	2b00      	cmp	r3, #0
 8013690:	d01b      	beq.n	80136ca <HAL_TIM_IRQHandler+0x148>
 8013692:	687b      	ldr	r3, [r7, #4]
 8013694:	681b      	ldr	r3, [r3, #0]
 8013696:	f06f 0210 	mvn.w	r2, #16
 801369a:	611a      	str	r2, [r3, #16]
 801369c:	687b      	ldr	r3, [r7, #4]
 801369e:	2208      	movs	r2, #8
 80136a0:	771a      	strb	r2, [r3, #28]
 80136a2:	687b      	ldr	r3, [r7, #4]
 80136a4:	681b      	ldr	r3, [r3, #0]
 80136a6:	69db      	ldr	r3, [r3, #28]
 80136a8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80136ac:	2b00      	cmp	r3, #0
 80136ae:	d003      	beq.n	80136b8 <HAL_TIM_IRQHandler+0x136>
 80136b0:	6878      	ldr	r0, [r7, #4]
 80136b2:	f000 fa79 	bl	8013ba8 <HAL_TIM_IC_CaptureCallback>
 80136b6:	e005      	b.n	80136c4 <HAL_TIM_IRQHandler+0x142>
 80136b8:	6878      	ldr	r0, [r7, #4]
 80136ba:	f7ef fb6b 	bl	8002d94 <HAL_TIM_OC_DelayElapsedCallback>
 80136be:	6878      	ldr	r0, [r7, #4]
 80136c0:	f000 fa7c 	bl	8013bbc <HAL_TIM_PWM_PulseFinishedCallback>
 80136c4:	687b      	ldr	r3, [r7, #4]
 80136c6:	2200      	movs	r2, #0
 80136c8:	771a      	strb	r2, [r3, #28]
 80136ca:	68bb      	ldr	r3, [r7, #8]
 80136cc:	f003 0301 	and.w	r3, r3, #1
 80136d0:	2b00      	cmp	r3, #0
 80136d2:	d00c      	beq.n	80136ee <HAL_TIM_IRQHandler+0x16c>
 80136d4:	68fb      	ldr	r3, [r7, #12]
 80136d6:	f003 0301 	and.w	r3, r3, #1
 80136da:	2b00      	cmp	r3, #0
 80136dc:	d007      	beq.n	80136ee <HAL_TIM_IRQHandler+0x16c>
 80136de:	687b      	ldr	r3, [r7, #4]
 80136e0:	681b      	ldr	r3, [r3, #0]
 80136e2:	f06f 0201 	mvn.w	r2, #1
 80136e6:	611a      	str	r2, [r3, #16]
 80136e8:	6878      	ldr	r0, [r7, #4]
 80136ea:	f7f0 fa2d 	bl	8003b48 <HAL_TIM_PeriodElapsedCallback>
 80136ee:	68bb      	ldr	r3, [r7, #8]
 80136f0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80136f4:	2b00      	cmp	r3, #0
 80136f6:	d104      	bne.n	8013702 <HAL_TIM_IRQHandler+0x180>
 80136f8:	68bb      	ldr	r3, [r7, #8]
 80136fa:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80136fe:	2b00      	cmp	r3, #0
 8013700:	d00c      	beq.n	801371c <HAL_TIM_IRQHandler+0x19a>
 8013702:	68fb      	ldr	r3, [r7, #12]
 8013704:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8013708:	2b00      	cmp	r3, #0
 801370a:	d007      	beq.n	801371c <HAL_TIM_IRQHandler+0x19a>
 801370c:	687b      	ldr	r3, [r7, #4]
 801370e:	681b      	ldr	r3, [r3, #0]
 8013710:	f46f 5202 	mvn.w	r2, #8320	; 0x2080
 8013714:	611a      	str	r2, [r3, #16]
 8013716:	6878      	ldr	r0, [r7, #4]
 8013718:	f000 ffba 	bl	8014690 <HAL_TIMEx_BreakCallback>
 801371c:	68bb      	ldr	r3, [r7, #8]
 801371e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013722:	2b00      	cmp	r3, #0
 8013724:	d00c      	beq.n	8013740 <HAL_TIM_IRQHandler+0x1be>
 8013726:	68fb      	ldr	r3, [r7, #12]
 8013728:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801372c:	2b00      	cmp	r3, #0
 801372e:	d007      	beq.n	8013740 <HAL_TIM_IRQHandler+0x1be>
 8013730:	687b      	ldr	r3, [r7, #4]
 8013732:	681b      	ldr	r3, [r3, #0]
 8013734:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8013738:	611a      	str	r2, [r3, #16]
 801373a:	6878      	ldr	r0, [r7, #4]
 801373c:	f000 ffb2 	bl	80146a4 <HAL_TIMEx_Break2Callback>
 8013740:	68bb      	ldr	r3, [r7, #8]
 8013742:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8013746:	2b00      	cmp	r3, #0
 8013748:	d00c      	beq.n	8013764 <HAL_TIM_IRQHandler+0x1e2>
 801374a:	68fb      	ldr	r3, [r7, #12]
 801374c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8013750:	2b00      	cmp	r3, #0
 8013752:	d007      	beq.n	8013764 <HAL_TIM_IRQHandler+0x1e2>
 8013754:	687b      	ldr	r3, [r7, #4]
 8013756:	681b      	ldr	r3, [r3, #0]
 8013758:	f06f 0240 	mvn.w	r2, #64	; 0x40
 801375c:	611a      	str	r2, [r3, #16]
 801375e:	6878      	ldr	r0, [r7, #4]
 8013760:	f000 fa36 	bl	8013bd0 <HAL_TIM_TriggerCallback>
 8013764:	68bb      	ldr	r3, [r7, #8]
 8013766:	f003 0320 	and.w	r3, r3, #32
 801376a:	2b00      	cmp	r3, #0
 801376c:	d00c      	beq.n	8013788 <HAL_TIM_IRQHandler+0x206>
 801376e:	68fb      	ldr	r3, [r7, #12]
 8013770:	f003 0320 	and.w	r3, r3, #32
 8013774:	2b00      	cmp	r3, #0
 8013776:	d007      	beq.n	8013788 <HAL_TIM_IRQHandler+0x206>
 8013778:	687b      	ldr	r3, [r7, #4]
 801377a:	681b      	ldr	r3, [r3, #0]
 801377c:	f06f 0220 	mvn.w	r2, #32
 8013780:	611a      	str	r2, [r3, #16]
 8013782:	6878      	ldr	r0, [r7, #4]
 8013784:	f000 ff7a 	bl	801467c <HAL_TIMEx_CommutCallback>
 8013788:	bf00      	nop
 801378a:	3710      	adds	r7, #16
 801378c:	46bd      	mov	sp, r7
 801378e:	bd80      	pop	{r7, pc}

08013790 <HAL_TIM_PWM_ConfigChannel>:
 8013790:	b580      	push	{r7, lr}
 8013792:	b086      	sub	sp, #24
 8013794:	af00      	add	r7, sp, #0
 8013796:	60f8      	str	r0, [r7, #12]
 8013798:	60b9      	str	r1, [r7, #8]
 801379a:	607a      	str	r2, [r7, #4]
 801379c:	2300      	movs	r3, #0
 801379e:	75fb      	strb	r3, [r7, #23]
 80137a0:	68fb      	ldr	r3, [r7, #12]
 80137a2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80137a6:	2b01      	cmp	r3, #1
 80137a8:	d101      	bne.n	80137ae <HAL_TIM_PWM_ConfigChannel+0x1e>
 80137aa:	2302      	movs	r3, #2
 80137ac:	e0ff      	b.n	80139ae <HAL_TIM_PWM_ConfigChannel+0x21e>
 80137ae:	68fb      	ldr	r3, [r7, #12]
 80137b0:	2201      	movs	r2, #1
 80137b2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80137b6:	687b      	ldr	r3, [r7, #4]
 80137b8:	2b14      	cmp	r3, #20
 80137ba:	f200 80f0 	bhi.w	801399e <HAL_TIM_PWM_ConfigChannel+0x20e>
 80137be:	a201      	add	r2, pc, #4	; (adr r2, 80137c4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80137c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80137c4:	08013819 	.word	0x08013819
 80137c8:	0801399f 	.word	0x0801399f
 80137cc:	0801399f 	.word	0x0801399f
 80137d0:	0801399f 	.word	0x0801399f
 80137d4:	08013859 	.word	0x08013859
 80137d8:	0801399f 	.word	0x0801399f
 80137dc:	0801399f 	.word	0x0801399f
 80137e0:	0801399f 	.word	0x0801399f
 80137e4:	0801389b 	.word	0x0801389b
 80137e8:	0801399f 	.word	0x0801399f
 80137ec:	0801399f 	.word	0x0801399f
 80137f0:	0801399f 	.word	0x0801399f
 80137f4:	080138db 	.word	0x080138db
 80137f8:	0801399f 	.word	0x0801399f
 80137fc:	0801399f 	.word	0x0801399f
 8013800:	0801399f 	.word	0x0801399f
 8013804:	0801391d 	.word	0x0801391d
 8013808:	0801399f 	.word	0x0801399f
 801380c:	0801399f 	.word	0x0801399f
 8013810:	0801399f 	.word	0x0801399f
 8013814:	0801395d 	.word	0x0801395d
 8013818:	68fb      	ldr	r3, [r7, #12]
 801381a:	681b      	ldr	r3, [r3, #0]
 801381c:	68b9      	ldr	r1, [r7, #8]
 801381e:	4618      	mov	r0, r3
 8013820:	f000 fa86 	bl	8013d30 <TIM_OC1_SetConfig>
 8013824:	68fb      	ldr	r3, [r7, #12]
 8013826:	681b      	ldr	r3, [r3, #0]
 8013828:	699a      	ldr	r2, [r3, #24]
 801382a:	68fb      	ldr	r3, [r7, #12]
 801382c:	681b      	ldr	r3, [r3, #0]
 801382e:	f042 0208 	orr.w	r2, r2, #8
 8013832:	619a      	str	r2, [r3, #24]
 8013834:	68fb      	ldr	r3, [r7, #12]
 8013836:	681b      	ldr	r3, [r3, #0]
 8013838:	699a      	ldr	r2, [r3, #24]
 801383a:	68fb      	ldr	r3, [r7, #12]
 801383c:	681b      	ldr	r3, [r3, #0]
 801383e:	f022 0204 	bic.w	r2, r2, #4
 8013842:	619a      	str	r2, [r3, #24]
 8013844:	68fb      	ldr	r3, [r7, #12]
 8013846:	681b      	ldr	r3, [r3, #0]
 8013848:	6999      	ldr	r1, [r3, #24]
 801384a:	68bb      	ldr	r3, [r7, #8]
 801384c:	691a      	ldr	r2, [r3, #16]
 801384e:	68fb      	ldr	r3, [r7, #12]
 8013850:	681b      	ldr	r3, [r3, #0]
 8013852:	430a      	orrs	r2, r1
 8013854:	619a      	str	r2, [r3, #24]
 8013856:	e0a5      	b.n	80139a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 8013858:	68fb      	ldr	r3, [r7, #12]
 801385a:	681b      	ldr	r3, [r3, #0]
 801385c:	68b9      	ldr	r1, [r7, #8]
 801385e:	4618      	mov	r0, r3
 8013860:	f000 faf6 	bl	8013e50 <TIM_OC2_SetConfig>
 8013864:	68fb      	ldr	r3, [r7, #12]
 8013866:	681b      	ldr	r3, [r3, #0]
 8013868:	699a      	ldr	r2, [r3, #24]
 801386a:	68fb      	ldr	r3, [r7, #12]
 801386c:	681b      	ldr	r3, [r3, #0]
 801386e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8013872:	619a      	str	r2, [r3, #24]
 8013874:	68fb      	ldr	r3, [r7, #12]
 8013876:	681b      	ldr	r3, [r3, #0]
 8013878:	699a      	ldr	r2, [r3, #24]
 801387a:	68fb      	ldr	r3, [r7, #12]
 801387c:	681b      	ldr	r3, [r3, #0]
 801387e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8013882:	619a      	str	r2, [r3, #24]
 8013884:	68fb      	ldr	r3, [r7, #12]
 8013886:	681b      	ldr	r3, [r3, #0]
 8013888:	6999      	ldr	r1, [r3, #24]
 801388a:	68bb      	ldr	r3, [r7, #8]
 801388c:	691b      	ldr	r3, [r3, #16]
 801388e:	021a      	lsls	r2, r3, #8
 8013890:	68fb      	ldr	r3, [r7, #12]
 8013892:	681b      	ldr	r3, [r3, #0]
 8013894:	430a      	orrs	r2, r1
 8013896:	619a      	str	r2, [r3, #24]
 8013898:	e084      	b.n	80139a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 801389a:	68fb      	ldr	r3, [r7, #12]
 801389c:	681b      	ldr	r3, [r3, #0]
 801389e:	68b9      	ldr	r1, [r7, #8]
 80138a0:	4618      	mov	r0, r3
 80138a2:	f000 fb5f 	bl	8013f64 <TIM_OC3_SetConfig>
 80138a6:	68fb      	ldr	r3, [r7, #12]
 80138a8:	681b      	ldr	r3, [r3, #0]
 80138aa:	69da      	ldr	r2, [r3, #28]
 80138ac:	68fb      	ldr	r3, [r7, #12]
 80138ae:	681b      	ldr	r3, [r3, #0]
 80138b0:	f042 0208 	orr.w	r2, r2, #8
 80138b4:	61da      	str	r2, [r3, #28]
 80138b6:	68fb      	ldr	r3, [r7, #12]
 80138b8:	681b      	ldr	r3, [r3, #0]
 80138ba:	69da      	ldr	r2, [r3, #28]
 80138bc:	68fb      	ldr	r3, [r7, #12]
 80138be:	681b      	ldr	r3, [r3, #0]
 80138c0:	f022 0204 	bic.w	r2, r2, #4
 80138c4:	61da      	str	r2, [r3, #28]
 80138c6:	68fb      	ldr	r3, [r7, #12]
 80138c8:	681b      	ldr	r3, [r3, #0]
 80138ca:	69d9      	ldr	r1, [r3, #28]
 80138cc:	68bb      	ldr	r3, [r7, #8]
 80138ce:	691a      	ldr	r2, [r3, #16]
 80138d0:	68fb      	ldr	r3, [r7, #12]
 80138d2:	681b      	ldr	r3, [r3, #0]
 80138d4:	430a      	orrs	r2, r1
 80138d6:	61da      	str	r2, [r3, #28]
 80138d8:	e064      	b.n	80139a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 80138da:	68fb      	ldr	r3, [r7, #12]
 80138dc:	681b      	ldr	r3, [r3, #0]
 80138de:	68b9      	ldr	r1, [r7, #8]
 80138e0:	4618      	mov	r0, r3
 80138e2:	f000 fbc7 	bl	8014074 <TIM_OC4_SetConfig>
 80138e6:	68fb      	ldr	r3, [r7, #12]
 80138e8:	681b      	ldr	r3, [r3, #0]
 80138ea:	69da      	ldr	r2, [r3, #28]
 80138ec:	68fb      	ldr	r3, [r7, #12]
 80138ee:	681b      	ldr	r3, [r3, #0]
 80138f0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80138f4:	61da      	str	r2, [r3, #28]
 80138f6:	68fb      	ldr	r3, [r7, #12]
 80138f8:	681b      	ldr	r3, [r3, #0]
 80138fa:	69da      	ldr	r2, [r3, #28]
 80138fc:	68fb      	ldr	r3, [r7, #12]
 80138fe:	681b      	ldr	r3, [r3, #0]
 8013900:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8013904:	61da      	str	r2, [r3, #28]
 8013906:	68fb      	ldr	r3, [r7, #12]
 8013908:	681b      	ldr	r3, [r3, #0]
 801390a:	69d9      	ldr	r1, [r3, #28]
 801390c:	68bb      	ldr	r3, [r7, #8]
 801390e:	691b      	ldr	r3, [r3, #16]
 8013910:	021a      	lsls	r2, r3, #8
 8013912:	68fb      	ldr	r3, [r7, #12]
 8013914:	681b      	ldr	r3, [r3, #0]
 8013916:	430a      	orrs	r2, r1
 8013918:	61da      	str	r2, [r3, #28]
 801391a:	e043      	b.n	80139a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 801391c:	68fb      	ldr	r3, [r7, #12]
 801391e:	681b      	ldr	r3, [r3, #0]
 8013920:	68b9      	ldr	r1, [r7, #8]
 8013922:	4618      	mov	r0, r3
 8013924:	f000 fc10 	bl	8014148 <TIM_OC5_SetConfig>
 8013928:	68fb      	ldr	r3, [r7, #12]
 801392a:	681b      	ldr	r3, [r3, #0]
 801392c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 801392e:	68fb      	ldr	r3, [r7, #12]
 8013930:	681b      	ldr	r3, [r3, #0]
 8013932:	f042 0208 	orr.w	r2, r2, #8
 8013936:	655a      	str	r2, [r3, #84]	; 0x54
 8013938:	68fb      	ldr	r3, [r7, #12]
 801393a:	681b      	ldr	r3, [r3, #0]
 801393c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 801393e:	68fb      	ldr	r3, [r7, #12]
 8013940:	681b      	ldr	r3, [r3, #0]
 8013942:	f022 0204 	bic.w	r2, r2, #4
 8013946:	655a      	str	r2, [r3, #84]	; 0x54
 8013948:	68fb      	ldr	r3, [r7, #12]
 801394a:	681b      	ldr	r3, [r3, #0]
 801394c:	6d59      	ldr	r1, [r3, #84]	; 0x54
 801394e:	68bb      	ldr	r3, [r7, #8]
 8013950:	691a      	ldr	r2, [r3, #16]
 8013952:	68fb      	ldr	r3, [r7, #12]
 8013954:	681b      	ldr	r3, [r3, #0]
 8013956:	430a      	orrs	r2, r1
 8013958:	655a      	str	r2, [r3, #84]	; 0x54
 801395a:	e023      	b.n	80139a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 801395c:	68fb      	ldr	r3, [r7, #12]
 801395e:	681b      	ldr	r3, [r3, #0]
 8013960:	68b9      	ldr	r1, [r7, #8]
 8013962:	4618      	mov	r0, r3
 8013964:	f000 fc54 	bl	8014210 <TIM_OC6_SetConfig>
 8013968:	68fb      	ldr	r3, [r7, #12]
 801396a:	681b      	ldr	r3, [r3, #0]
 801396c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 801396e:	68fb      	ldr	r3, [r7, #12]
 8013970:	681b      	ldr	r3, [r3, #0]
 8013972:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8013976:	655a      	str	r2, [r3, #84]	; 0x54
 8013978:	68fb      	ldr	r3, [r7, #12]
 801397a:	681b      	ldr	r3, [r3, #0]
 801397c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 801397e:	68fb      	ldr	r3, [r7, #12]
 8013980:	681b      	ldr	r3, [r3, #0]
 8013982:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8013986:	655a      	str	r2, [r3, #84]	; 0x54
 8013988:	68fb      	ldr	r3, [r7, #12]
 801398a:	681b      	ldr	r3, [r3, #0]
 801398c:	6d59      	ldr	r1, [r3, #84]	; 0x54
 801398e:	68bb      	ldr	r3, [r7, #8]
 8013990:	691b      	ldr	r3, [r3, #16]
 8013992:	021a      	lsls	r2, r3, #8
 8013994:	68fb      	ldr	r3, [r7, #12]
 8013996:	681b      	ldr	r3, [r3, #0]
 8013998:	430a      	orrs	r2, r1
 801399a:	655a      	str	r2, [r3, #84]	; 0x54
 801399c:	e002      	b.n	80139a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 801399e:	2301      	movs	r3, #1
 80139a0:	75fb      	strb	r3, [r7, #23]
 80139a2:	bf00      	nop
 80139a4:	68fb      	ldr	r3, [r7, #12]
 80139a6:	2200      	movs	r2, #0
 80139a8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80139ac:	7dfb      	ldrb	r3, [r7, #23]
 80139ae:	4618      	mov	r0, r3
 80139b0:	3718      	adds	r7, #24
 80139b2:	46bd      	mov	sp, r7
 80139b4:	bd80      	pop	{r7, pc}
 80139b6:	bf00      	nop

080139b8 <HAL_TIM_ConfigClockSource>:
 80139b8:	b580      	push	{r7, lr}
 80139ba:	b084      	sub	sp, #16
 80139bc:	af00      	add	r7, sp, #0
 80139be:	6078      	str	r0, [r7, #4]
 80139c0:	6039      	str	r1, [r7, #0]
 80139c2:	2300      	movs	r3, #0
 80139c4:	73fb      	strb	r3, [r7, #15]
 80139c6:	687b      	ldr	r3, [r7, #4]
 80139c8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80139cc:	2b01      	cmp	r3, #1
 80139ce:	d101      	bne.n	80139d4 <HAL_TIM_ConfigClockSource+0x1c>
 80139d0:	2302      	movs	r3, #2
 80139d2:	e0dc      	b.n	8013b8e <HAL_TIM_ConfigClockSource+0x1d6>
 80139d4:	687b      	ldr	r3, [r7, #4]
 80139d6:	2201      	movs	r2, #1
 80139d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80139dc:	687b      	ldr	r3, [r7, #4]
 80139de:	2202      	movs	r2, #2
 80139e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80139e4:	687b      	ldr	r3, [r7, #4]
 80139e6:	681b      	ldr	r3, [r3, #0]
 80139e8:	689b      	ldr	r3, [r3, #8]
 80139ea:	60bb      	str	r3, [r7, #8]
 80139ec:	68ba      	ldr	r2, [r7, #8]
 80139ee:	4b6a      	ldr	r3, [pc, #424]	; (8013b98 <HAL_TIM_ConfigClockSource+0x1e0>)
 80139f0:	4013      	ands	r3, r2
 80139f2:	60bb      	str	r3, [r7, #8]
 80139f4:	68bb      	ldr	r3, [r7, #8]
 80139f6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80139fa:	60bb      	str	r3, [r7, #8]
 80139fc:	687b      	ldr	r3, [r7, #4]
 80139fe:	681b      	ldr	r3, [r3, #0]
 8013a00:	68ba      	ldr	r2, [r7, #8]
 8013a02:	609a      	str	r2, [r3, #8]
 8013a04:	683b      	ldr	r3, [r7, #0]
 8013a06:	681b      	ldr	r3, [r3, #0]
 8013a08:	4a64      	ldr	r2, [pc, #400]	; (8013b9c <HAL_TIM_ConfigClockSource+0x1e4>)
 8013a0a:	4293      	cmp	r3, r2
 8013a0c:	f000 80a9 	beq.w	8013b62 <HAL_TIM_ConfigClockSource+0x1aa>
 8013a10:	4a62      	ldr	r2, [pc, #392]	; (8013b9c <HAL_TIM_ConfigClockSource+0x1e4>)
 8013a12:	4293      	cmp	r3, r2
 8013a14:	f200 80ae 	bhi.w	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a18:	4a61      	ldr	r2, [pc, #388]	; (8013ba0 <HAL_TIM_ConfigClockSource+0x1e8>)
 8013a1a:	4293      	cmp	r3, r2
 8013a1c:	f000 80a1 	beq.w	8013b62 <HAL_TIM_ConfigClockSource+0x1aa>
 8013a20:	4a5f      	ldr	r2, [pc, #380]	; (8013ba0 <HAL_TIM_ConfigClockSource+0x1e8>)
 8013a22:	4293      	cmp	r3, r2
 8013a24:	f200 80a6 	bhi.w	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a28:	4a5e      	ldr	r2, [pc, #376]	; (8013ba4 <HAL_TIM_ConfigClockSource+0x1ec>)
 8013a2a:	4293      	cmp	r3, r2
 8013a2c:	f000 8099 	beq.w	8013b62 <HAL_TIM_ConfigClockSource+0x1aa>
 8013a30:	4a5c      	ldr	r2, [pc, #368]	; (8013ba4 <HAL_TIM_ConfigClockSource+0x1ec>)
 8013a32:	4293      	cmp	r3, r2
 8013a34:	f200 809e 	bhi.w	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a38:	f1b3 1f10 	cmp.w	r3, #1048592	; 0x100010
 8013a3c:	f000 8091 	beq.w	8013b62 <HAL_TIM_ConfigClockSource+0x1aa>
 8013a40:	f1b3 1f10 	cmp.w	r3, #1048592	; 0x100010
 8013a44:	f200 8096 	bhi.w	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a48:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8013a4c:	f000 8089 	beq.w	8013b62 <HAL_TIM_ConfigClockSource+0x1aa>
 8013a50:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8013a54:	f200 808e 	bhi.w	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a58:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8013a5c:	d03e      	beq.n	8013adc <HAL_TIM_ConfigClockSource+0x124>
 8013a5e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8013a62:	f200 8087 	bhi.w	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a66:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8013a6a:	f000 8086 	beq.w	8013b7a <HAL_TIM_ConfigClockSource+0x1c2>
 8013a6e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8013a72:	d87f      	bhi.n	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a74:	2b70      	cmp	r3, #112	; 0x70
 8013a76:	d01a      	beq.n	8013aae <HAL_TIM_ConfigClockSource+0xf6>
 8013a78:	2b70      	cmp	r3, #112	; 0x70
 8013a7a:	d87b      	bhi.n	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a7c:	2b60      	cmp	r3, #96	; 0x60
 8013a7e:	d050      	beq.n	8013b22 <HAL_TIM_ConfigClockSource+0x16a>
 8013a80:	2b60      	cmp	r3, #96	; 0x60
 8013a82:	d877      	bhi.n	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a84:	2b50      	cmp	r3, #80	; 0x50
 8013a86:	d03c      	beq.n	8013b02 <HAL_TIM_ConfigClockSource+0x14a>
 8013a88:	2b50      	cmp	r3, #80	; 0x50
 8013a8a:	d873      	bhi.n	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a8c:	2b40      	cmp	r3, #64	; 0x40
 8013a8e:	d058      	beq.n	8013b42 <HAL_TIM_ConfigClockSource+0x18a>
 8013a90:	2b40      	cmp	r3, #64	; 0x40
 8013a92:	d86f      	bhi.n	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a94:	2b30      	cmp	r3, #48	; 0x30
 8013a96:	d064      	beq.n	8013b62 <HAL_TIM_ConfigClockSource+0x1aa>
 8013a98:	2b30      	cmp	r3, #48	; 0x30
 8013a9a:	d86b      	bhi.n	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013a9c:	2b20      	cmp	r3, #32
 8013a9e:	d060      	beq.n	8013b62 <HAL_TIM_ConfigClockSource+0x1aa>
 8013aa0:	2b20      	cmp	r3, #32
 8013aa2:	d867      	bhi.n	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013aa4:	2b00      	cmp	r3, #0
 8013aa6:	d05c      	beq.n	8013b62 <HAL_TIM_ConfigClockSource+0x1aa>
 8013aa8:	2b10      	cmp	r3, #16
 8013aaa:	d05a      	beq.n	8013b62 <HAL_TIM_ConfigClockSource+0x1aa>
 8013aac:	e062      	b.n	8013b74 <HAL_TIM_ConfigClockSource+0x1bc>
 8013aae:	687b      	ldr	r3, [r7, #4]
 8013ab0:	6818      	ldr	r0, [r3, #0]
 8013ab2:	683b      	ldr	r3, [r7, #0]
 8013ab4:	6899      	ldr	r1, [r3, #8]
 8013ab6:	683b      	ldr	r3, [r7, #0]
 8013ab8:	685a      	ldr	r2, [r3, #4]
 8013aba:	683b      	ldr	r3, [r7, #0]
 8013abc:	68db      	ldr	r3, [r3, #12]
 8013abe:	f000 fc8b 	bl	80143d8 <TIM_ETR_SetConfig>
 8013ac2:	687b      	ldr	r3, [r7, #4]
 8013ac4:	681b      	ldr	r3, [r3, #0]
 8013ac6:	689b      	ldr	r3, [r3, #8]
 8013ac8:	60bb      	str	r3, [r7, #8]
 8013aca:	68bb      	ldr	r3, [r7, #8]
 8013acc:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8013ad0:	60bb      	str	r3, [r7, #8]
 8013ad2:	687b      	ldr	r3, [r7, #4]
 8013ad4:	681b      	ldr	r3, [r3, #0]
 8013ad6:	68ba      	ldr	r2, [r7, #8]
 8013ad8:	609a      	str	r2, [r3, #8]
 8013ada:	e04f      	b.n	8013b7c <HAL_TIM_ConfigClockSource+0x1c4>
 8013adc:	687b      	ldr	r3, [r7, #4]
 8013ade:	6818      	ldr	r0, [r3, #0]
 8013ae0:	683b      	ldr	r3, [r7, #0]
 8013ae2:	6899      	ldr	r1, [r3, #8]
 8013ae4:	683b      	ldr	r3, [r7, #0]
 8013ae6:	685a      	ldr	r2, [r3, #4]
 8013ae8:	683b      	ldr	r3, [r7, #0]
 8013aea:	68db      	ldr	r3, [r3, #12]
 8013aec:	f000 fc74 	bl	80143d8 <TIM_ETR_SetConfig>
 8013af0:	687b      	ldr	r3, [r7, #4]
 8013af2:	681b      	ldr	r3, [r3, #0]
 8013af4:	689a      	ldr	r2, [r3, #8]
 8013af6:	687b      	ldr	r3, [r7, #4]
 8013af8:	681b      	ldr	r3, [r3, #0]
 8013afa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8013afe:	609a      	str	r2, [r3, #8]
 8013b00:	e03c      	b.n	8013b7c <HAL_TIM_ConfigClockSource+0x1c4>
 8013b02:	687b      	ldr	r3, [r7, #4]
 8013b04:	6818      	ldr	r0, [r3, #0]
 8013b06:	683b      	ldr	r3, [r7, #0]
 8013b08:	6859      	ldr	r1, [r3, #4]
 8013b0a:	683b      	ldr	r3, [r7, #0]
 8013b0c:	68db      	ldr	r3, [r3, #12]
 8013b0e:	461a      	mov	r2, r3
 8013b10:	f000 fbe4 	bl	80142dc <TIM_TI1_ConfigInputStage>
 8013b14:	687b      	ldr	r3, [r7, #4]
 8013b16:	681b      	ldr	r3, [r3, #0]
 8013b18:	2150      	movs	r1, #80	; 0x50
 8013b1a:	4618      	mov	r0, r3
 8013b1c:	f000 fc3e 	bl	801439c <TIM_ITRx_SetConfig>
 8013b20:	e02c      	b.n	8013b7c <HAL_TIM_ConfigClockSource+0x1c4>
 8013b22:	687b      	ldr	r3, [r7, #4]
 8013b24:	6818      	ldr	r0, [r3, #0]
 8013b26:	683b      	ldr	r3, [r7, #0]
 8013b28:	6859      	ldr	r1, [r3, #4]
 8013b2a:	683b      	ldr	r3, [r7, #0]
 8013b2c:	68db      	ldr	r3, [r3, #12]
 8013b2e:	461a      	mov	r2, r3
 8013b30:	f000 fc03 	bl	801433a <TIM_TI2_ConfigInputStage>
 8013b34:	687b      	ldr	r3, [r7, #4]
 8013b36:	681b      	ldr	r3, [r3, #0]
 8013b38:	2160      	movs	r1, #96	; 0x60
 8013b3a:	4618      	mov	r0, r3
 8013b3c:	f000 fc2e 	bl	801439c <TIM_ITRx_SetConfig>
 8013b40:	e01c      	b.n	8013b7c <HAL_TIM_ConfigClockSource+0x1c4>
 8013b42:	687b      	ldr	r3, [r7, #4]
 8013b44:	6818      	ldr	r0, [r3, #0]
 8013b46:	683b      	ldr	r3, [r7, #0]
 8013b48:	6859      	ldr	r1, [r3, #4]
 8013b4a:	683b      	ldr	r3, [r7, #0]
 8013b4c:	68db      	ldr	r3, [r3, #12]
 8013b4e:	461a      	mov	r2, r3
 8013b50:	f000 fbc4 	bl	80142dc <TIM_TI1_ConfigInputStage>
 8013b54:	687b      	ldr	r3, [r7, #4]
 8013b56:	681b      	ldr	r3, [r3, #0]
 8013b58:	2140      	movs	r1, #64	; 0x40
 8013b5a:	4618      	mov	r0, r3
 8013b5c:	f000 fc1e 	bl	801439c <TIM_ITRx_SetConfig>
 8013b60:	e00c      	b.n	8013b7c <HAL_TIM_ConfigClockSource+0x1c4>
 8013b62:	687b      	ldr	r3, [r7, #4]
 8013b64:	681a      	ldr	r2, [r3, #0]
 8013b66:	683b      	ldr	r3, [r7, #0]
 8013b68:	681b      	ldr	r3, [r3, #0]
 8013b6a:	4619      	mov	r1, r3
 8013b6c:	4610      	mov	r0, r2
 8013b6e:	f000 fc15 	bl	801439c <TIM_ITRx_SetConfig>
 8013b72:	e003      	b.n	8013b7c <HAL_TIM_ConfigClockSource+0x1c4>
 8013b74:	2301      	movs	r3, #1
 8013b76:	73fb      	strb	r3, [r7, #15]
 8013b78:	e000      	b.n	8013b7c <HAL_TIM_ConfigClockSource+0x1c4>
 8013b7a:	bf00      	nop
 8013b7c:	687b      	ldr	r3, [r7, #4]
 8013b7e:	2201      	movs	r2, #1
 8013b80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8013b84:	687b      	ldr	r3, [r7, #4]
 8013b86:	2200      	movs	r2, #0
 8013b88:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8013b8c:	7bfb      	ldrb	r3, [r7, #15]
 8013b8e:	4618      	mov	r0, r3
 8013b90:	3710      	adds	r7, #16
 8013b92:	46bd      	mov	sp, r7
 8013b94:	bd80      	pop	{r7, pc}
 8013b96:	bf00      	nop
 8013b98:	ffceff88 	.word	0xffceff88
 8013b9c:	00100040 	.word	0x00100040
 8013ba0:	00100030 	.word	0x00100030
 8013ba4:	00100020 	.word	0x00100020

08013ba8 <HAL_TIM_IC_CaptureCallback>:
 8013ba8:	b480      	push	{r7}
 8013baa:	b083      	sub	sp, #12
 8013bac:	af00      	add	r7, sp, #0
 8013bae:	6078      	str	r0, [r7, #4]
 8013bb0:	bf00      	nop
 8013bb2:	370c      	adds	r7, #12
 8013bb4:	46bd      	mov	sp, r7
 8013bb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013bba:	4770      	bx	lr

08013bbc <HAL_TIM_PWM_PulseFinishedCallback>:
 8013bbc:	b480      	push	{r7}
 8013bbe:	b083      	sub	sp, #12
 8013bc0:	af00      	add	r7, sp, #0
 8013bc2:	6078      	str	r0, [r7, #4]
 8013bc4:	bf00      	nop
 8013bc6:	370c      	adds	r7, #12
 8013bc8:	46bd      	mov	sp, r7
 8013bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013bce:	4770      	bx	lr

08013bd0 <HAL_TIM_TriggerCallback>:
 8013bd0:	b480      	push	{r7}
 8013bd2:	b083      	sub	sp, #12
 8013bd4:	af00      	add	r7, sp, #0
 8013bd6:	6078      	str	r0, [r7, #4]
 8013bd8:	bf00      	nop
 8013bda:	370c      	adds	r7, #12
 8013bdc:	46bd      	mov	sp, r7
 8013bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013be2:	4770      	bx	lr

08013be4 <TIM_Base_SetConfig>:
 8013be4:	b480      	push	{r7}
 8013be6:	b085      	sub	sp, #20
 8013be8:	af00      	add	r7, sp, #0
 8013bea:	6078      	str	r0, [r7, #4]
 8013bec:	6039      	str	r1, [r7, #0]
 8013bee:	687b      	ldr	r3, [r7, #4]
 8013bf0:	681b      	ldr	r3, [r3, #0]
 8013bf2:	60fb      	str	r3, [r7, #12]
 8013bf4:	687b      	ldr	r3, [r7, #4]
 8013bf6:	4a46      	ldr	r2, [pc, #280]	; (8013d10 <TIM_Base_SetConfig+0x12c>)
 8013bf8:	4293      	cmp	r3, r2
 8013bfa:	d013      	beq.n	8013c24 <TIM_Base_SetConfig+0x40>
 8013bfc:	687b      	ldr	r3, [r7, #4]
 8013bfe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8013c02:	d00f      	beq.n	8013c24 <TIM_Base_SetConfig+0x40>
 8013c04:	687b      	ldr	r3, [r7, #4]
 8013c06:	4a43      	ldr	r2, [pc, #268]	; (8013d14 <TIM_Base_SetConfig+0x130>)
 8013c08:	4293      	cmp	r3, r2
 8013c0a:	d00b      	beq.n	8013c24 <TIM_Base_SetConfig+0x40>
 8013c0c:	687b      	ldr	r3, [r7, #4]
 8013c0e:	4a42      	ldr	r2, [pc, #264]	; (8013d18 <TIM_Base_SetConfig+0x134>)
 8013c10:	4293      	cmp	r3, r2
 8013c12:	d007      	beq.n	8013c24 <TIM_Base_SetConfig+0x40>
 8013c14:	687b      	ldr	r3, [r7, #4]
 8013c16:	4a41      	ldr	r2, [pc, #260]	; (8013d1c <TIM_Base_SetConfig+0x138>)
 8013c18:	4293      	cmp	r3, r2
 8013c1a:	d003      	beq.n	8013c24 <TIM_Base_SetConfig+0x40>
 8013c1c:	687b      	ldr	r3, [r7, #4]
 8013c1e:	4a40      	ldr	r2, [pc, #256]	; (8013d20 <TIM_Base_SetConfig+0x13c>)
 8013c20:	4293      	cmp	r3, r2
 8013c22:	d108      	bne.n	8013c36 <TIM_Base_SetConfig+0x52>
 8013c24:	68fb      	ldr	r3, [r7, #12]
 8013c26:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8013c2a:	60fb      	str	r3, [r7, #12]
 8013c2c:	683b      	ldr	r3, [r7, #0]
 8013c2e:	685b      	ldr	r3, [r3, #4]
 8013c30:	68fa      	ldr	r2, [r7, #12]
 8013c32:	4313      	orrs	r3, r2
 8013c34:	60fb      	str	r3, [r7, #12]
 8013c36:	687b      	ldr	r3, [r7, #4]
 8013c38:	4a35      	ldr	r2, [pc, #212]	; (8013d10 <TIM_Base_SetConfig+0x12c>)
 8013c3a:	4293      	cmp	r3, r2
 8013c3c:	d01f      	beq.n	8013c7e <TIM_Base_SetConfig+0x9a>
 8013c3e:	687b      	ldr	r3, [r7, #4]
 8013c40:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8013c44:	d01b      	beq.n	8013c7e <TIM_Base_SetConfig+0x9a>
 8013c46:	687b      	ldr	r3, [r7, #4]
 8013c48:	4a32      	ldr	r2, [pc, #200]	; (8013d14 <TIM_Base_SetConfig+0x130>)
 8013c4a:	4293      	cmp	r3, r2
 8013c4c:	d017      	beq.n	8013c7e <TIM_Base_SetConfig+0x9a>
 8013c4e:	687b      	ldr	r3, [r7, #4]
 8013c50:	4a31      	ldr	r2, [pc, #196]	; (8013d18 <TIM_Base_SetConfig+0x134>)
 8013c52:	4293      	cmp	r3, r2
 8013c54:	d013      	beq.n	8013c7e <TIM_Base_SetConfig+0x9a>
 8013c56:	687b      	ldr	r3, [r7, #4]
 8013c58:	4a30      	ldr	r2, [pc, #192]	; (8013d1c <TIM_Base_SetConfig+0x138>)
 8013c5a:	4293      	cmp	r3, r2
 8013c5c:	d00f      	beq.n	8013c7e <TIM_Base_SetConfig+0x9a>
 8013c5e:	687b      	ldr	r3, [r7, #4]
 8013c60:	4a2f      	ldr	r2, [pc, #188]	; (8013d20 <TIM_Base_SetConfig+0x13c>)
 8013c62:	4293      	cmp	r3, r2
 8013c64:	d00b      	beq.n	8013c7e <TIM_Base_SetConfig+0x9a>
 8013c66:	687b      	ldr	r3, [r7, #4]
 8013c68:	4a2e      	ldr	r2, [pc, #184]	; (8013d24 <TIM_Base_SetConfig+0x140>)
 8013c6a:	4293      	cmp	r3, r2
 8013c6c:	d007      	beq.n	8013c7e <TIM_Base_SetConfig+0x9a>
 8013c6e:	687b      	ldr	r3, [r7, #4]
 8013c70:	4a2d      	ldr	r2, [pc, #180]	; (8013d28 <TIM_Base_SetConfig+0x144>)
 8013c72:	4293      	cmp	r3, r2
 8013c74:	d003      	beq.n	8013c7e <TIM_Base_SetConfig+0x9a>
 8013c76:	687b      	ldr	r3, [r7, #4]
 8013c78:	4a2c      	ldr	r2, [pc, #176]	; (8013d2c <TIM_Base_SetConfig+0x148>)
 8013c7a:	4293      	cmp	r3, r2
 8013c7c:	d108      	bne.n	8013c90 <TIM_Base_SetConfig+0xac>
 8013c7e:	68fb      	ldr	r3, [r7, #12]
 8013c80:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8013c84:	60fb      	str	r3, [r7, #12]
 8013c86:	683b      	ldr	r3, [r7, #0]
 8013c88:	68db      	ldr	r3, [r3, #12]
 8013c8a:	68fa      	ldr	r2, [r7, #12]
 8013c8c:	4313      	orrs	r3, r2
 8013c8e:	60fb      	str	r3, [r7, #12]
 8013c90:	68fb      	ldr	r3, [r7, #12]
 8013c92:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8013c96:	683b      	ldr	r3, [r7, #0]
 8013c98:	695b      	ldr	r3, [r3, #20]
 8013c9a:	4313      	orrs	r3, r2
 8013c9c:	60fb      	str	r3, [r7, #12]
 8013c9e:	687b      	ldr	r3, [r7, #4]
 8013ca0:	68fa      	ldr	r2, [r7, #12]
 8013ca2:	601a      	str	r2, [r3, #0]
 8013ca4:	683b      	ldr	r3, [r7, #0]
 8013ca6:	689a      	ldr	r2, [r3, #8]
 8013ca8:	687b      	ldr	r3, [r7, #4]
 8013caa:	62da      	str	r2, [r3, #44]	; 0x2c
 8013cac:	683b      	ldr	r3, [r7, #0]
 8013cae:	681a      	ldr	r2, [r3, #0]
 8013cb0:	687b      	ldr	r3, [r7, #4]
 8013cb2:	629a      	str	r2, [r3, #40]	; 0x28
 8013cb4:	687b      	ldr	r3, [r7, #4]
 8013cb6:	4a16      	ldr	r2, [pc, #88]	; (8013d10 <TIM_Base_SetConfig+0x12c>)
 8013cb8:	4293      	cmp	r3, r2
 8013cba:	d00f      	beq.n	8013cdc <TIM_Base_SetConfig+0xf8>
 8013cbc:	687b      	ldr	r3, [r7, #4]
 8013cbe:	4a18      	ldr	r2, [pc, #96]	; (8013d20 <TIM_Base_SetConfig+0x13c>)
 8013cc0:	4293      	cmp	r3, r2
 8013cc2:	d00b      	beq.n	8013cdc <TIM_Base_SetConfig+0xf8>
 8013cc4:	687b      	ldr	r3, [r7, #4]
 8013cc6:	4a17      	ldr	r2, [pc, #92]	; (8013d24 <TIM_Base_SetConfig+0x140>)
 8013cc8:	4293      	cmp	r3, r2
 8013cca:	d007      	beq.n	8013cdc <TIM_Base_SetConfig+0xf8>
 8013ccc:	687b      	ldr	r3, [r7, #4]
 8013cce:	4a16      	ldr	r2, [pc, #88]	; (8013d28 <TIM_Base_SetConfig+0x144>)
 8013cd0:	4293      	cmp	r3, r2
 8013cd2:	d003      	beq.n	8013cdc <TIM_Base_SetConfig+0xf8>
 8013cd4:	687b      	ldr	r3, [r7, #4]
 8013cd6:	4a15      	ldr	r2, [pc, #84]	; (8013d2c <TIM_Base_SetConfig+0x148>)
 8013cd8:	4293      	cmp	r3, r2
 8013cda:	d103      	bne.n	8013ce4 <TIM_Base_SetConfig+0x100>
 8013cdc:	683b      	ldr	r3, [r7, #0]
 8013cde:	691a      	ldr	r2, [r3, #16]
 8013ce0:	687b      	ldr	r3, [r7, #4]
 8013ce2:	631a      	str	r2, [r3, #48]	; 0x30
 8013ce4:	687b      	ldr	r3, [r7, #4]
 8013ce6:	2201      	movs	r2, #1
 8013ce8:	615a      	str	r2, [r3, #20]
 8013cea:	687b      	ldr	r3, [r7, #4]
 8013cec:	691b      	ldr	r3, [r3, #16]
 8013cee:	f003 0301 	and.w	r3, r3, #1
 8013cf2:	2b01      	cmp	r3, #1
 8013cf4:	d105      	bne.n	8013d02 <TIM_Base_SetConfig+0x11e>
 8013cf6:	687b      	ldr	r3, [r7, #4]
 8013cf8:	691b      	ldr	r3, [r3, #16]
 8013cfa:	f023 0201 	bic.w	r2, r3, #1
 8013cfe:	687b      	ldr	r3, [r7, #4]
 8013d00:	611a      	str	r2, [r3, #16]
 8013d02:	bf00      	nop
 8013d04:	3714      	adds	r7, #20
 8013d06:	46bd      	mov	sp, r7
 8013d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013d0c:	4770      	bx	lr
 8013d0e:	bf00      	nop
 8013d10:	40010000 	.word	0x40010000
 8013d14:	40000400 	.word	0x40000400
 8013d18:	40000800 	.word	0x40000800
 8013d1c:	40000c00 	.word	0x40000c00
 8013d20:	40010400 	.word	0x40010400
 8013d24:	40014000 	.word	0x40014000
 8013d28:	40014400 	.word	0x40014400
 8013d2c:	40014800 	.word	0x40014800

08013d30 <TIM_OC1_SetConfig>:
 8013d30:	b480      	push	{r7}
 8013d32:	b087      	sub	sp, #28
 8013d34:	af00      	add	r7, sp, #0
 8013d36:	6078      	str	r0, [r7, #4]
 8013d38:	6039      	str	r1, [r7, #0]
 8013d3a:	687b      	ldr	r3, [r7, #4]
 8013d3c:	6a1b      	ldr	r3, [r3, #32]
 8013d3e:	617b      	str	r3, [r7, #20]
 8013d40:	687b      	ldr	r3, [r7, #4]
 8013d42:	6a1b      	ldr	r3, [r3, #32]
 8013d44:	f023 0201 	bic.w	r2, r3, #1
 8013d48:	687b      	ldr	r3, [r7, #4]
 8013d4a:	621a      	str	r2, [r3, #32]
 8013d4c:	687b      	ldr	r3, [r7, #4]
 8013d4e:	685b      	ldr	r3, [r3, #4]
 8013d50:	613b      	str	r3, [r7, #16]
 8013d52:	687b      	ldr	r3, [r7, #4]
 8013d54:	699b      	ldr	r3, [r3, #24]
 8013d56:	60fb      	str	r3, [r7, #12]
 8013d58:	68fa      	ldr	r2, [r7, #12]
 8013d5a:	4b37      	ldr	r3, [pc, #220]	; (8013e38 <TIM_OC1_SetConfig+0x108>)
 8013d5c:	4013      	ands	r3, r2
 8013d5e:	60fb      	str	r3, [r7, #12]
 8013d60:	68fb      	ldr	r3, [r7, #12]
 8013d62:	f023 0303 	bic.w	r3, r3, #3
 8013d66:	60fb      	str	r3, [r7, #12]
 8013d68:	683b      	ldr	r3, [r7, #0]
 8013d6a:	681b      	ldr	r3, [r3, #0]
 8013d6c:	68fa      	ldr	r2, [r7, #12]
 8013d6e:	4313      	orrs	r3, r2
 8013d70:	60fb      	str	r3, [r7, #12]
 8013d72:	697b      	ldr	r3, [r7, #20]
 8013d74:	f023 0302 	bic.w	r3, r3, #2
 8013d78:	617b      	str	r3, [r7, #20]
 8013d7a:	683b      	ldr	r3, [r7, #0]
 8013d7c:	689b      	ldr	r3, [r3, #8]
 8013d7e:	697a      	ldr	r2, [r7, #20]
 8013d80:	4313      	orrs	r3, r2
 8013d82:	617b      	str	r3, [r7, #20]
 8013d84:	687b      	ldr	r3, [r7, #4]
 8013d86:	4a2d      	ldr	r2, [pc, #180]	; (8013e3c <TIM_OC1_SetConfig+0x10c>)
 8013d88:	4293      	cmp	r3, r2
 8013d8a:	d00f      	beq.n	8013dac <TIM_OC1_SetConfig+0x7c>
 8013d8c:	687b      	ldr	r3, [r7, #4]
 8013d8e:	4a2c      	ldr	r2, [pc, #176]	; (8013e40 <TIM_OC1_SetConfig+0x110>)
 8013d90:	4293      	cmp	r3, r2
 8013d92:	d00b      	beq.n	8013dac <TIM_OC1_SetConfig+0x7c>
 8013d94:	687b      	ldr	r3, [r7, #4]
 8013d96:	4a2b      	ldr	r2, [pc, #172]	; (8013e44 <TIM_OC1_SetConfig+0x114>)
 8013d98:	4293      	cmp	r3, r2
 8013d9a:	d007      	beq.n	8013dac <TIM_OC1_SetConfig+0x7c>
 8013d9c:	687b      	ldr	r3, [r7, #4]
 8013d9e:	4a2a      	ldr	r2, [pc, #168]	; (8013e48 <TIM_OC1_SetConfig+0x118>)
 8013da0:	4293      	cmp	r3, r2
 8013da2:	d003      	beq.n	8013dac <TIM_OC1_SetConfig+0x7c>
 8013da4:	687b      	ldr	r3, [r7, #4]
 8013da6:	4a29      	ldr	r2, [pc, #164]	; (8013e4c <TIM_OC1_SetConfig+0x11c>)
 8013da8:	4293      	cmp	r3, r2
 8013daa:	d10c      	bne.n	8013dc6 <TIM_OC1_SetConfig+0x96>
 8013dac:	697b      	ldr	r3, [r7, #20]
 8013dae:	f023 0308 	bic.w	r3, r3, #8
 8013db2:	617b      	str	r3, [r7, #20]
 8013db4:	683b      	ldr	r3, [r7, #0]
 8013db6:	68db      	ldr	r3, [r3, #12]
 8013db8:	697a      	ldr	r2, [r7, #20]
 8013dba:	4313      	orrs	r3, r2
 8013dbc:	617b      	str	r3, [r7, #20]
 8013dbe:	697b      	ldr	r3, [r7, #20]
 8013dc0:	f023 0304 	bic.w	r3, r3, #4
 8013dc4:	617b      	str	r3, [r7, #20]
 8013dc6:	687b      	ldr	r3, [r7, #4]
 8013dc8:	4a1c      	ldr	r2, [pc, #112]	; (8013e3c <TIM_OC1_SetConfig+0x10c>)
 8013dca:	4293      	cmp	r3, r2
 8013dcc:	d00f      	beq.n	8013dee <TIM_OC1_SetConfig+0xbe>
 8013dce:	687b      	ldr	r3, [r7, #4]
 8013dd0:	4a1b      	ldr	r2, [pc, #108]	; (8013e40 <TIM_OC1_SetConfig+0x110>)
 8013dd2:	4293      	cmp	r3, r2
 8013dd4:	d00b      	beq.n	8013dee <TIM_OC1_SetConfig+0xbe>
 8013dd6:	687b      	ldr	r3, [r7, #4]
 8013dd8:	4a1a      	ldr	r2, [pc, #104]	; (8013e44 <TIM_OC1_SetConfig+0x114>)
 8013dda:	4293      	cmp	r3, r2
 8013ddc:	d007      	beq.n	8013dee <TIM_OC1_SetConfig+0xbe>
 8013dde:	687b      	ldr	r3, [r7, #4]
 8013de0:	4a19      	ldr	r2, [pc, #100]	; (8013e48 <TIM_OC1_SetConfig+0x118>)
 8013de2:	4293      	cmp	r3, r2
 8013de4:	d003      	beq.n	8013dee <TIM_OC1_SetConfig+0xbe>
 8013de6:	687b      	ldr	r3, [r7, #4]
 8013de8:	4a18      	ldr	r2, [pc, #96]	; (8013e4c <TIM_OC1_SetConfig+0x11c>)
 8013dea:	4293      	cmp	r3, r2
 8013dec:	d111      	bne.n	8013e12 <TIM_OC1_SetConfig+0xe2>
 8013dee:	693b      	ldr	r3, [r7, #16]
 8013df0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8013df4:	613b      	str	r3, [r7, #16]
 8013df6:	693b      	ldr	r3, [r7, #16]
 8013df8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8013dfc:	613b      	str	r3, [r7, #16]
 8013dfe:	683b      	ldr	r3, [r7, #0]
 8013e00:	695b      	ldr	r3, [r3, #20]
 8013e02:	693a      	ldr	r2, [r7, #16]
 8013e04:	4313      	orrs	r3, r2
 8013e06:	613b      	str	r3, [r7, #16]
 8013e08:	683b      	ldr	r3, [r7, #0]
 8013e0a:	699b      	ldr	r3, [r3, #24]
 8013e0c:	693a      	ldr	r2, [r7, #16]
 8013e0e:	4313      	orrs	r3, r2
 8013e10:	613b      	str	r3, [r7, #16]
 8013e12:	687b      	ldr	r3, [r7, #4]
 8013e14:	693a      	ldr	r2, [r7, #16]
 8013e16:	605a      	str	r2, [r3, #4]
 8013e18:	687b      	ldr	r3, [r7, #4]
 8013e1a:	68fa      	ldr	r2, [r7, #12]
 8013e1c:	619a      	str	r2, [r3, #24]
 8013e1e:	683b      	ldr	r3, [r7, #0]
 8013e20:	685a      	ldr	r2, [r3, #4]
 8013e22:	687b      	ldr	r3, [r7, #4]
 8013e24:	635a      	str	r2, [r3, #52]	; 0x34
 8013e26:	687b      	ldr	r3, [r7, #4]
 8013e28:	697a      	ldr	r2, [r7, #20]
 8013e2a:	621a      	str	r2, [r3, #32]
 8013e2c:	bf00      	nop
 8013e2e:	371c      	adds	r7, #28
 8013e30:	46bd      	mov	sp, r7
 8013e32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e36:	4770      	bx	lr
 8013e38:	fffeff8f 	.word	0xfffeff8f
 8013e3c:	40010000 	.word	0x40010000
 8013e40:	40010400 	.word	0x40010400
 8013e44:	40014000 	.word	0x40014000
 8013e48:	40014400 	.word	0x40014400
 8013e4c:	40014800 	.word	0x40014800

08013e50 <TIM_OC2_SetConfig>:
 8013e50:	b480      	push	{r7}
 8013e52:	b087      	sub	sp, #28
 8013e54:	af00      	add	r7, sp, #0
 8013e56:	6078      	str	r0, [r7, #4]
 8013e58:	6039      	str	r1, [r7, #0]
 8013e5a:	687b      	ldr	r3, [r7, #4]
 8013e5c:	6a1b      	ldr	r3, [r3, #32]
 8013e5e:	617b      	str	r3, [r7, #20]
 8013e60:	687b      	ldr	r3, [r7, #4]
 8013e62:	6a1b      	ldr	r3, [r3, #32]
 8013e64:	f023 0210 	bic.w	r2, r3, #16
 8013e68:	687b      	ldr	r3, [r7, #4]
 8013e6a:	621a      	str	r2, [r3, #32]
 8013e6c:	687b      	ldr	r3, [r7, #4]
 8013e6e:	685b      	ldr	r3, [r3, #4]
 8013e70:	613b      	str	r3, [r7, #16]
 8013e72:	687b      	ldr	r3, [r7, #4]
 8013e74:	699b      	ldr	r3, [r3, #24]
 8013e76:	60fb      	str	r3, [r7, #12]
 8013e78:	68fa      	ldr	r2, [r7, #12]
 8013e7a:	4b34      	ldr	r3, [pc, #208]	; (8013f4c <TIM_OC2_SetConfig+0xfc>)
 8013e7c:	4013      	ands	r3, r2
 8013e7e:	60fb      	str	r3, [r7, #12]
 8013e80:	68fb      	ldr	r3, [r7, #12]
 8013e82:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8013e86:	60fb      	str	r3, [r7, #12]
 8013e88:	683b      	ldr	r3, [r7, #0]
 8013e8a:	681b      	ldr	r3, [r3, #0]
 8013e8c:	021b      	lsls	r3, r3, #8
 8013e8e:	68fa      	ldr	r2, [r7, #12]
 8013e90:	4313      	orrs	r3, r2
 8013e92:	60fb      	str	r3, [r7, #12]
 8013e94:	697b      	ldr	r3, [r7, #20]
 8013e96:	f023 0320 	bic.w	r3, r3, #32
 8013e9a:	617b      	str	r3, [r7, #20]
 8013e9c:	683b      	ldr	r3, [r7, #0]
 8013e9e:	689b      	ldr	r3, [r3, #8]
 8013ea0:	011b      	lsls	r3, r3, #4
 8013ea2:	697a      	ldr	r2, [r7, #20]
 8013ea4:	4313      	orrs	r3, r2
 8013ea6:	617b      	str	r3, [r7, #20]
 8013ea8:	687b      	ldr	r3, [r7, #4]
 8013eaa:	4a29      	ldr	r2, [pc, #164]	; (8013f50 <TIM_OC2_SetConfig+0x100>)
 8013eac:	4293      	cmp	r3, r2
 8013eae:	d003      	beq.n	8013eb8 <TIM_OC2_SetConfig+0x68>
 8013eb0:	687b      	ldr	r3, [r7, #4]
 8013eb2:	4a28      	ldr	r2, [pc, #160]	; (8013f54 <TIM_OC2_SetConfig+0x104>)
 8013eb4:	4293      	cmp	r3, r2
 8013eb6:	d10d      	bne.n	8013ed4 <TIM_OC2_SetConfig+0x84>
 8013eb8:	697b      	ldr	r3, [r7, #20]
 8013eba:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8013ebe:	617b      	str	r3, [r7, #20]
 8013ec0:	683b      	ldr	r3, [r7, #0]
 8013ec2:	68db      	ldr	r3, [r3, #12]
 8013ec4:	011b      	lsls	r3, r3, #4
 8013ec6:	697a      	ldr	r2, [r7, #20]
 8013ec8:	4313      	orrs	r3, r2
 8013eca:	617b      	str	r3, [r7, #20]
 8013ecc:	697b      	ldr	r3, [r7, #20]
 8013ece:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8013ed2:	617b      	str	r3, [r7, #20]
 8013ed4:	687b      	ldr	r3, [r7, #4]
 8013ed6:	4a1e      	ldr	r2, [pc, #120]	; (8013f50 <TIM_OC2_SetConfig+0x100>)
 8013ed8:	4293      	cmp	r3, r2
 8013eda:	d00f      	beq.n	8013efc <TIM_OC2_SetConfig+0xac>
 8013edc:	687b      	ldr	r3, [r7, #4]
 8013ede:	4a1d      	ldr	r2, [pc, #116]	; (8013f54 <TIM_OC2_SetConfig+0x104>)
 8013ee0:	4293      	cmp	r3, r2
 8013ee2:	d00b      	beq.n	8013efc <TIM_OC2_SetConfig+0xac>
 8013ee4:	687b      	ldr	r3, [r7, #4]
 8013ee6:	4a1c      	ldr	r2, [pc, #112]	; (8013f58 <TIM_OC2_SetConfig+0x108>)
 8013ee8:	4293      	cmp	r3, r2
 8013eea:	d007      	beq.n	8013efc <TIM_OC2_SetConfig+0xac>
 8013eec:	687b      	ldr	r3, [r7, #4]
 8013eee:	4a1b      	ldr	r2, [pc, #108]	; (8013f5c <TIM_OC2_SetConfig+0x10c>)
 8013ef0:	4293      	cmp	r3, r2
 8013ef2:	d003      	beq.n	8013efc <TIM_OC2_SetConfig+0xac>
 8013ef4:	687b      	ldr	r3, [r7, #4]
 8013ef6:	4a1a      	ldr	r2, [pc, #104]	; (8013f60 <TIM_OC2_SetConfig+0x110>)
 8013ef8:	4293      	cmp	r3, r2
 8013efa:	d113      	bne.n	8013f24 <TIM_OC2_SetConfig+0xd4>
 8013efc:	693b      	ldr	r3, [r7, #16]
 8013efe:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8013f02:	613b      	str	r3, [r7, #16]
 8013f04:	693b      	ldr	r3, [r7, #16]
 8013f06:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8013f0a:	613b      	str	r3, [r7, #16]
 8013f0c:	683b      	ldr	r3, [r7, #0]
 8013f0e:	695b      	ldr	r3, [r3, #20]
 8013f10:	009b      	lsls	r3, r3, #2
 8013f12:	693a      	ldr	r2, [r7, #16]
 8013f14:	4313      	orrs	r3, r2
 8013f16:	613b      	str	r3, [r7, #16]
 8013f18:	683b      	ldr	r3, [r7, #0]
 8013f1a:	699b      	ldr	r3, [r3, #24]
 8013f1c:	009b      	lsls	r3, r3, #2
 8013f1e:	693a      	ldr	r2, [r7, #16]
 8013f20:	4313      	orrs	r3, r2
 8013f22:	613b      	str	r3, [r7, #16]
 8013f24:	687b      	ldr	r3, [r7, #4]
 8013f26:	693a      	ldr	r2, [r7, #16]
 8013f28:	605a      	str	r2, [r3, #4]
 8013f2a:	687b      	ldr	r3, [r7, #4]
 8013f2c:	68fa      	ldr	r2, [r7, #12]
 8013f2e:	619a      	str	r2, [r3, #24]
 8013f30:	683b      	ldr	r3, [r7, #0]
 8013f32:	685a      	ldr	r2, [r3, #4]
 8013f34:	687b      	ldr	r3, [r7, #4]
 8013f36:	639a      	str	r2, [r3, #56]	; 0x38
 8013f38:	687b      	ldr	r3, [r7, #4]
 8013f3a:	697a      	ldr	r2, [r7, #20]
 8013f3c:	621a      	str	r2, [r3, #32]
 8013f3e:	bf00      	nop
 8013f40:	371c      	adds	r7, #28
 8013f42:	46bd      	mov	sp, r7
 8013f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f48:	4770      	bx	lr
 8013f4a:	bf00      	nop
 8013f4c:	feff8fff 	.word	0xfeff8fff
 8013f50:	40010000 	.word	0x40010000
 8013f54:	40010400 	.word	0x40010400
 8013f58:	40014000 	.word	0x40014000
 8013f5c:	40014400 	.word	0x40014400
 8013f60:	40014800 	.word	0x40014800

08013f64 <TIM_OC3_SetConfig>:
 8013f64:	b480      	push	{r7}
 8013f66:	b087      	sub	sp, #28
 8013f68:	af00      	add	r7, sp, #0
 8013f6a:	6078      	str	r0, [r7, #4]
 8013f6c:	6039      	str	r1, [r7, #0]
 8013f6e:	687b      	ldr	r3, [r7, #4]
 8013f70:	6a1b      	ldr	r3, [r3, #32]
 8013f72:	617b      	str	r3, [r7, #20]
 8013f74:	687b      	ldr	r3, [r7, #4]
 8013f76:	6a1b      	ldr	r3, [r3, #32]
 8013f78:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8013f7c:	687b      	ldr	r3, [r7, #4]
 8013f7e:	621a      	str	r2, [r3, #32]
 8013f80:	687b      	ldr	r3, [r7, #4]
 8013f82:	685b      	ldr	r3, [r3, #4]
 8013f84:	613b      	str	r3, [r7, #16]
 8013f86:	687b      	ldr	r3, [r7, #4]
 8013f88:	69db      	ldr	r3, [r3, #28]
 8013f8a:	60fb      	str	r3, [r7, #12]
 8013f8c:	68fa      	ldr	r2, [r7, #12]
 8013f8e:	4b33      	ldr	r3, [pc, #204]	; (801405c <TIM_OC3_SetConfig+0xf8>)
 8013f90:	4013      	ands	r3, r2
 8013f92:	60fb      	str	r3, [r7, #12]
 8013f94:	68fb      	ldr	r3, [r7, #12]
 8013f96:	f023 0303 	bic.w	r3, r3, #3
 8013f9a:	60fb      	str	r3, [r7, #12]
 8013f9c:	683b      	ldr	r3, [r7, #0]
 8013f9e:	681b      	ldr	r3, [r3, #0]
 8013fa0:	68fa      	ldr	r2, [r7, #12]
 8013fa2:	4313      	orrs	r3, r2
 8013fa4:	60fb      	str	r3, [r7, #12]
 8013fa6:	697b      	ldr	r3, [r7, #20]
 8013fa8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8013fac:	617b      	str	r3, [r7, #20]
 8013fae:	683b      	ldr	r3, [r7, #0]
 8013fb0:	689b      	ldr	r3, [r3, #8]
 8013fb2:	021b      	lsls	r3, r3, #8
 8013fb4:	697a      	ldr	r2, [r7, #20]
 8013fb6:	4313      	orrs	r3, r2
 8013fb8:	617b      	str	r3, [r7, #20]
 8013fba:	687b      	ldr	r3, [r7, #4]
 8013fbc:	4a28      	ldr	r2, [pc, #160]	; (8014060 <TIM_OC3_SetConfig+0xfc>)
 8013fbe:	4293      	cmp	r3, r2
 8013fc0:	d003      	beq.n	8013fca <TIM_OC3_SetConfig+0x66>
 8013fc2:	687b      	ldr	r3, [r7, #4]
 8013fc4:	4a27      	ldr	r2, [pc, #156]	; (8014064 <TIM_OC3_SetConfig+0x100>)
 8013fc6:	4293      	cmp	r3, r2
 8013fc8:	d10d      	bne.n	8013fe6 <TIM_OC3_SetConfig+0x82>
 8013fca:	697b      	ldr	r3, [r7, #20]
 8013fcc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8013fd0:	617b      	str	r3, [r7, #20]
 8013fd2:	683b      	ldr	r3, [r7, #0]
 8013fd4:	68db      	ldr	r3, [r3, #12]
 8013fd6:	021b      	lsls	r3, r3, #8
 8013fd8:	697a      	ldr	r2, [r7, #20]
 8013fda:	4313      	orrs	r3, r2
 8013fdc:	617b      	str	r3, [r7, #20]
 8013fde:	697b      	ldr	r3, [r7, #20]
 8013fe0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8013fe4:	617b      	str	r3, [r7, #20]
 8013fe6:	687b      	ldr	r3, [r7, #4]
 8013fe8:	4a1d      	ldr	r2, [pc, #116]	; (8014060 <TIM_OC3_SetConfig+0xfc>)
 8013fea:	4293      	cmp	r3, r2
 8013fec:	d00f      	beq.n	801400e <TIM_OC3_SetConfig+0xaa>
 8013fee:	687b      	ldr	r3, [r7, #4]
 8013ff0:	4a1c      	ldr	r2, [pc, #112]	; (8014064 <TIM_OC3_SetConfig+0x100>)
 8013ff2:	4293      	cmp	r3, r2
 8013ff4:	d00b      	beq.n	801400e <TIM_OC3_SetConfig+0xaa>
 8013ff6:	687b      	ldr	r3, [r7, #4]
 8013ff8:	4a1b      	ldr	r2, [pc, #108]	; (8014068 <TIM_OC3_SetConfig+0x104>)
 8013ffa:	4293      	cmp	r3, r2
 8013ffc:	d007      	beq.n	801400e <TIM_OC3_SetConfig+0xaa>
 8013ffe:	687b      	ldr	r3, [r7, #4]
 8014000:	4a1a      	ldr	r2, [pc, #104]	; (801406c <TIM_OC3_SetConfig+0x108>)
 8014002:	4293      	cmp	r3, r2
 8014004:	d003      	beq.n	801400e <TIM_OC3_SetConfig+0xaa>
 8014006:	687b      	ldr	r3, [r7, #4]
 8014008:	4a19      	ldr	r2, [pc, #100]	; (8014070 <TIM_OC3_SetConfig+0x10c>)
 801400a:	4293      	cmp	r3, r2
 801400c:	d113      	bne.n	8014036 <TIM_OC3_SetConfig+0xd2>
 801400e:	693b      	ldr	r3, [r7, #16]
 8014010:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8014014:	613b      	str	r3, [r7, #16]
 8014016:	693b      	ldr	r3, [r7, #16]
 8014018:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 801401c:	613b      	str	r3, [r7, #16]
 801401e:	683b      	ldr	r3, [r7, #0]
 8014020:	695b      	ldr	r3, [r3, #20]
 8014022:	011b      	lsls	r3, r3, #4
 8014024:	693a      	ldr	r2, [r7, #16]
 8014026:	4313      	orrs	r3, r2
 8014028:	613b      	str	r3, [r7, #16]
 801402a:	683b      	ldr	r3, [r7, #0]
 801402c:	699b      	ldr	r3, [r3, #24]
 801402e:	011b      	lsls	r3, r3, #4
 8014030:	693a      	ldr	r2, [r7, #16]
 8014032:	4313      	orrs	r3, r2
 8014034:	613b      	str	r3, [r7, #16]
 8014036:	687b      	ldr	r3, [r7, #4]
 8014038:	693a      	ldr	r2, [r7, #16]
 801403a:	605a      	str	r2, [r3, #4]
 801403c:	687b      	ldr	r3, [r7, #4]
 801403e:	68fa      	ldr	r2, [r7, #12]
 8014040:	61da      	str	r2, [r3, #28]
 8014042:	683b      	ldr	r3, [r7, #0]
 8014044:	685a      	ldr	r2, [r3, #4]
 8014046:	687b      	ldr	r3, [r7, #4]
 8014048:	63da      	str	r2, [r3, #60]	; 0x3c
 801404a:	687b      	ldr	r3, [r7, #4]
 801404c:	697a      	ldr	r2, [r7, #20]
 801404e:	621a      	str	r2, [r3, #32]
 8014050:	bf00      	nop
 8014052:	371c      	adds	r7, #28
 8014054:	46bd      	mov	sp, r7
 8014056:	f85d 7b04 	ldr.w	r7, [sp], #4
 801405a:	4770      	bx	lr
 801405c:	fffeff8f 	.word	0xfffeff8f
 8014060:	40010000 	.word	0x40010000
 8014064:	40010400 	.word	0x40010400
 8014068:	40014000 	.word	0x40014000
 801406c:	40014400 	.word	0x40014400
 8014070:	40014800 	.word	0x40014800

08014074 <TIM_OC4_SetConfig>:
 8014074:	b480      	push	{r7}
 8014076:	b087      	sub	sp, #28
 8014078:	af00      	add	r7, sp, #0
 801407a:	6078      	str	r0, [r7, #4]
 801407c:	6039      	str	r1, [r7, #0]
 801407e:	687b      	ldr	r3, [r7, #4]
 8014080:	6a1b      	ldr	r3, [r3, #32]
 8014082:	613b      	str	r3, [r7, #16]
 8014084:	687b      	ldr	r3, [r7, #4]
 8014086:	6a1b      	ldr	r3, [r3, #32]
 8014088:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 801408c:	687b      	ldr	r3, [r7, #4]
 801408e:	621a      	str	r2, [r3, #32]
 8014090:	687b      	ldr	r3, [r7, #4]
 8014092:	685b      	ldr	r3, [r3, #4]
 8014094:	617b      	str	r3, [r7, #20]
 8014096:	687b      	ldr	r3, [r7, #4]
 8014098:	69db      	ldr	r3, [r3, #28]
 801409a:	60fb      	str	r3, [r7, #12]
 801409c:	68fa      	ldr	r2, [r7, #12]
 801409e:	4b24      	ldr	r3, [pc, #144]	; (8014130 <TIM_OC4_SetConfig+0xbc>)
 80140a0:	4013      	ands	r3, r2
 80140a2:	60fb      	str	r3, [r7, #12]
 80140a4:	68fb      	ldr	r3, [r7, #12]
 80140a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80140aa:	60fb      	str	r3, [r7, #12]
 80140ac:	683b      	ldr	r3, [r7, #0]
 80140ae:	681b      	ldr	r3, [r3, #0]
 80140b0:	021b      	lsls	r3, r3, #8
 80140b2:	68fa      	ldr	r2, [r7, #12]
 80140b4:	4313      	orrs	r3, r2
 80140b6:	60fb      	str	r3, [r7, #12]
 80140b8:	693b      	ldr	r3, [r7, #16]
 80140ba:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80140be:	613b      	str	r3, [r7, #16]
 80140c0:	683b      	ldr	r3, [r7, #0]
 80140c2:	689b      	ldr	r3, [r3, #8]
 80140c4:	031b      	lsls	r3, r3, #12
 80140c6:	693a      	ldr	r2, [r7, #16]
 80140c8:	4313      	orrs	r3, r2
 80140ca:	613b      	str	r3, [r7, #16]
 80140cc:	687b      	ldr	r3, [r7, #4]
 80140ce:	4a19      	ldr	r2, [pc, #100]	; (8014134 <TIM_OC4_SetConfig+0xc0>)
 80140d0:	4293      	cmp	r3, r2
 80140d2:	d00f      	beq.n	80140f4 <TIM_OC4_SetConfig+0x80>
 80140d4:	687b      	ldr	r3, [r7, #4]
 80140d6:	4a18      	ldr	r2, [pc, #96]	; (8014138 <TIM_OC4_SetConfig+0xc4>)
 80140d8:	4293      	cmp	r3, r2
 80140da:	d00b      	beq.n	80140f4 <TIM_OC4_SetConfig+0x80>
 80140dc:	687b      	ldr	r3, [r7, #4]
 80140de:	4a17      	ldr	r2, [pc, #92]	; (801413c <TIM_OC4_SetConfig+0xc8>)
 80140e0:	4293      	cmp	r3, r2
 80140e2:	d007      	beq.n	80140f4 <TIM_OC4_SetConfig+0x80>
 80140e4:	687b      	ldr	r3, [r7, #4]
 80140e6:	4a16      	ldr	r2, [pc, #88]	; (8014140 <TIM_OC4_SetConfig+0xcc>)
 80140e8:	4293      	cmp	r3, r2
 80140ea:	d003      	beq.n	80140f4 <TIM_OC4_SetConfig+0x80>
 80140ec:	687b      	ldr	r3, [r7, #4]
 80140ee:	4a15      	ldr	r2, [pc, #84]	; (8014144 <TIM_OC4_SetConfig+0xd0>)
 80140f0:	4293      	cmp	r3, r2
 80140f2:	d109      	bne.n	8014108 <TIM_OC4_SetConfig+0x94>
 80140f4:	697b      	ldr	r3, [r7, #20]
 80140f6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80140fa:	617b      	str	r3, [r7, #20]
 80140fc:	683b      	ldr	r3, [r7, #0]
 80140fe:	695b      	ldr	r3, [r3, #20]
 8014100:	019b      	lsls	r3, r3, #6
 8014102:	697a      	ldr	r2, [r7, #20]
 8014104:	4313      	orrs	r3, r2
 8014106:	617b      	str	r3, [r7, #20]
 8014108:	687b      	ldr	r3, [r7, #4]
 801410a:	697a      	ldr	r2, [r7, #20]
 801410c:	605a      	str	r2, [r3, #4]
 801410e:	687b      	ldr	r3, [r7, #4]
 8014110:	68fa      	ldr	r2, [r7, #12]
 8014112:	61da      	str	r2, [r3, #28]
 8014114:	683b      	ldr	r3, [r7, #0]
 8014116:	685a      	ldr	r2, [r3, #4]
 8014118:	687b      	ldr	r3, [r7, #4]
 801411a:	641a      	str	r2, [r3, #64]	; 0x40
 801411c:	687b      	ldr	r3, [r7, #4]
 801411e:	693a      	ldr	r2, [r7, #16]
 8014120:	621a      	str	r2, [r3, #32]
 8014122:	bf00      	nop
 8014124:	371c      	adds	r7, #28
 8014126:	46bd      	mov	sp, r7
 8014128:	f85d 7b04 	ldr.w	r7, [sp], #4
 801412c:	4770      	bx	lr
 801412e:	bf00      	nop
 8014130:	feff8fff 	.word	0xfeff8fff
 8014134:	40010000 	.word	0x40010000
 8014138:	40010400 	.word	0x40010400
 801413c:	40014000 	.word	0x40014000
 8014140:	40014400 	.word	0x40014400
 8014144:	40014800 	.word	0x40014800

08014148 <TIM_OC5_SetConfig>:
 8014148:	b480      	push	{r7}
 801414a:	b087      	sub	sp, #28
 801414c:	af00      	add	r7, sp, #0
 801414e:	6078      	str	r0, [r7, #4]
 8014150:	6039      	str	r1, [r7, #0]
 8014152:	687b      	ldr	r3, [r7, #4]
 8014154:	6a1b      	ldr	r3, [r3, #32]
 8014156:	613b      	str	r3, [r7, #16]
 8014158:	687b      	ldr	r3, [r7, #4]
 801415a:	6a1b      	ldr	r3, [r3, #32]
 801415c:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8014160:	687b      	ldr	r3, [r7, #4]
 8014162:	621a      	str	r2, [r3, #32]
 8014164:	687b      	ldr	r3, [r7, #4]
 8014166:	685b      	ldr	r3, [r3, #4]
 8014168:	617b      	str	r3, [r7, #20]
 801416a:	687b      	ldr	r3, [r7, #4]
 801416c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801416e:	60fb      	str	r3, [r7, #12]
 8014170:	68fa      	ldr	r2, [r7, #12]
 8014172:	4b21      	ldr	r3, [pc, #132]	; (80141f8 <TIM_OC5_SetConfig+0xb0>)
 8014174:	4013      	ands	r3, r2
 8014176:	60fb      	str	r3, [r7, #12]
 8014178:	683b      	ldr	r3, [r7, #0]
 801417a:	681b      	ldr	r3, [r3, #0]
 801417c:	68fa      	ldr	r2, [r7, #12]
 801417e:	4313      	orrs	r3, r2
 8014180:	60fb      	str	r3, [r7, #12]
 8014182:	693b      	ldr	r3, [r7, #16]
 8014184:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8014188:	613b      	str	r3, [r7, #16]
 801418a:	683b      	ldr	r3, [r7, #0]
 801418c:	689b      	ldr	r3, [r3, #8]
 801418e:	041b      	lsls	r3, r3, #16
 8014190:	693a      	ldr	r2, [r7, #16]
 8014192:	4313      	orrs	r3, r2
 8014194:	613b      	str	r3, [r7, #16]
 8014196:	687b      	ldr	r3, [r7, #4]
 8014198:	4a18      	ldr	r2, [pc, #96]	; (80141fc <TIM_OC5_SetConfig+0xb4>)
 801419a:	4293      	cmp	r3, r2
 801419c:	d00f      	beq.n	80141be <TIM_OC5_SetConfig+0x76>
 801419e:	687b      	ldr	r3, [r7, #4]
 80141a0:	4a17      	ldr	r2, [pc, #92]	; (8014200 <TIM_OC5_SetConfig+0xb8>)
 80141a2:	4293      	cmp	r3, r2
 80141a4:	d00b      	beq.n	80141be <TIM_OC5_SetConfig+0x76>
 80141a6:	687b      	ldr	r3, [r7, #4]
 80141a8:	4a16      	ldr	r2, [pc, #88]	; (8014204 <TIM_OC5_SetConfig+0xbc>)
 80141aa:	4293      	cmp	r3, r2
 80141ac:	d007      	beq.n	80141be <TIM_OC5_SetConfig+0x76>
 80141ae:	687b      	ldr	r3, [r7, #4]
 80141b0:	4a15      	ldr	r2, [pc, #84]	; (8014208 <TIM_OC5_SetConfig+0xc0>)
 80141b2:	4293      	cmp	r3, r2
 80141b4:	d003      	beq.n	80141be <TIM_OC5_SetConfig+0x76>
 80141b6:	687b      	ldr	r3, [r7, #4]
 80141b8:	4a14      	ldr	r2, [pc, #80]	; (801420c <TIM_OC5_SetConfig+0xc4>)
 80141ba:	4293      	cmp	r3, r2
 80141bc:	d109      	bne.n	80141d2 <TIM_OC5_SetConfig+0x8a>
 80141be:	697b      	ldr	r3, [r7, #20]
 80141c0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80141c4:	617b      	str	r3, [r7, #20]
 80141c6:	683b      	ldr	r3, [r7, #0]
 80141c8:	695b      	ldr	r3, [r3, #20]
 80141ca:	021b      	lsls	r3, r3, #8
 80141cc:	697a      	ldr	r2, [r7, #20]
 80141ce:	4313      	orrs	r3, r2
 80141d0:	617b      	str	r3, [r7, #20]
 80141d2:	687b      	ldr	r3, [r7, #4]
 80141d4:	697a      	ldr	r2, [r7, #20]
 80141d6:	605a      	str	r2, [r3, #4]
 80141d8:	687b      	ldr	r3, [r7, #4]
 80141da:	68fa      	ldr	r2, [r7, #12]
 80141dc:	655a      	str	r2, [r3, #84]	; 0x54
 80141de:	683b      	ldr	r3, [r7, #0]
 80141e0:	685a      	ldr	r2, [r3, #4]
 80141e2:	687b      	ldr	r3, [r7, #4]
 80141e4:	659a      	str	r2, [r3, #88]	; 0x58
 80141e6:	687b      	ldr	r3, [r7, #4]
 80141e8:	693a      	ldr	r2, [r7, #16]
 80141ea:	621a      	str	r2, [r3, #32]
 80141ec:	bf00      	nop
 80141ee:	371c      	adds	r7, #28
 80141f0:	46bd      	mov	sp, r7
 80141f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80141f6:	4770      	bx	lr
 80141f8:	fffeff8f 	.word	0xfffeff8f
 80141fc:	40010000 	.word	0x40010000
 8014200:	40010400 	.word	0x40010400
 8014204:	40014000 	.word	0x40014000
 8014208:	40014400 	.word	0x40014400
 801420c:	40014800 	.word	0x40014800

08014210 <TIM_OC6_SetConfig>:
 8014210:	b480      	push	{r7}
 8014212:	b087      	sub	sp, #28
 8014214:	af00      	add	r7, sp, #0
 8014216:	6078      	str	r0, [r7, #4]
 8014218:	6039      	str	r1, [r7, #0]
 801421a:	687b      	ldr	r3, [r7, #4]
 801421c:	6a1b      	ldr	r3, [r3, #32]
 801421e:	613b      	str	r3, [r7, #16]
 8014220:	687b      	ldr	r3, [r7, #4]
 8014222:	6a1b      	ldr	r3, [r3, #32]
 8014224:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 8014228:	687b      	ldr	r3, [r7, #4]
 801422a:	621a      	str	r2, [r3, #32]
 801422c:	687b      	ldr	r3, [r7, #4]
 801422e:	685b      	ldr	r3, [r3, #4]
 8014230:	617b      	str	r3, [r7, #20]
 8014232:	687b      	ldr	r3, [r7, #4]
 8014234:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8014236:	60fb      	str	r3, [r7, #12]
 8014238:	68fa      	ldr	r2, [r7, #12]
 801423a:	4b22      	ldr	r3, [pc, #136]	; (80142c4 <TIM_OC6_SetConfig+0xb4>)
 801423c:	4013      	ands	r3, r2
 801423e:	60fb      	str	r3, [r7, #12]
 8014240:	683b      	ldr	r3, [r7, #0]
 8014242:	681b      	ldr	r3, [r3, #0]
 8014244:	021b      	lsls	r3, r3, #8
 8014246:	68fa      	ldr	r2, [r7, #12]
 8014248:	4313      	orrs	r3, r2
 801424a:	60fb      	str	r3, [r7, #12]
 801424c:	693b      	ldr	r3, [r7, #16]
 801424e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8014252:	613b      	str	r3, [r7, #16]
 8014254:	683b      	ldr	r3, [r7, #0]
 8014256:	689b      	ldr	r3, [r3, #8]
 8014258:	051b      	lsls	r3, r3, #20
 801425a:	693a      	ldr	r2, [r7, #16]
 801425c:	4313      	orrs	r3, r2
 801425e:	613b      	str	r3, [r7, #16]
 8014260:	687b      	ldr	r3, [r7, #4]
 8014262:	4a19      	ldr	r2, [pc, #100]	; (80142c8 <TIM_OC6_SetConfig+0xb8>)
 8014264:	4293      	cmp	r3, r2
 8014266:	d00f      	beq.n	8014288 <TIM_OC6_SetConfig+0x78>
 8014268:	687b      	ldr	r3, [r7, #4]
 801426a:	4a18      	ldr	r2, [pc, #96]	; (80142cc <TIM_OC6_SetConfig+0xbc>)
 801426c:	4293      	cmp	r3, r2
 801426e:	d00b      	beq.n	8014288 <TIM_OC6_SetConfig+0x78>
 8014270:	687b      	ldr	r3, [r7, #4]
 8014272:	4a17      	ldr	r2, [pc, #92]	; (80142d0 <TIM_OC6_SetConfig+0xc0>)
 8014274:	4293      	cmp	r3, r2
 8014276:	d007      	beq.n	8014288 <TIM_OC6_SetConfig+0x78>
 8014278:	687b      	ldr	r3, [r7, #4]
 801427a:	4a16      	ldr	r2, [pc, #88]	; (80142d4 <TIM_OC6_SetConfig+0xc4>)
 801427c:	4293      	cmp	r3, r2
 801427e:	d003      	beq.n	8014288 <TIM_OC6_SetConfig+0x78>
 8014280:	687b      	ldr	r3, [r7, #4]
 8014282:	4a15      	ldr	r2, [pc, #84]	; (80142d8 <TIM_OC6_SetConfig+0xc8>)
 8014284:	4293      	cmp	r3, r2
 8014286:	d109      	bne.n	801429c <TIM_OC6_SetConfig+0x8c>
 8014288:	697b      	ldr	r3, [r7, #20]
 801428a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 801428e:	617b      	str	r3, [r7, #20]
 8014290:	683b      	ldr	r3, [r7, #0]
 8014292:	695b      	ldr	r3, [r3, #20]
 8014294:	029b      	lsls	r3, r3, #10
 8014296:	697a      	ldr	r2, [r7, #20]
 8014298:	4313      	orrs	r3, r2
 801429a:	617b      	str	r3, [r7, #20]
 801429c:	687b      	ldr	r3, [r7, #4]
 801429e:	697a      	ldr	r2, [r7, #20]
 80142a0:	605a      	str	r2, [r3, #4]
 80142a2:	687b      	ldr	r3, [r7, #4]
 80142a4:	68fa      	ldr	r2, [r7, #12]
 80142a6:	655a      	str	r2, [r3, #84]	; 0x54
 80142a8:	683b      	ldr	r3, [r7, #0]
 80142aa:	685a      	ldr	r2, [r3, #4]
 80142ac:	687b      	ldr	r3, [r7, #4]
 80142ae:	65da      	str	r2, [r3, #92]	; 0x5c
 80142b0:	687b      	ldr	r3, [r7, #4]
 80142b2:	693a      	ldr	r2, [r7, #16]
 80142b4:	621a      	str	r2, [r3, #32]
 80142b6:	bf00      	nop
 80142b8:	371c      	adds	r7, #28
 80142ba:	46bd      	mov	sp, r7
 80142bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80142c0:	4770      	bx	lr
 80142c2:	bf00      	nop
 80142c4:	feff8fff 	.word	0xfeff8fff
 80142c8:	40010000 	.word	0x40010000
 80142cc:	40010400 	.word	0x40010400
 80142d0:	40014000 	.word	0x40014000
 80142d4:	40014400 	.word	0x40014400
 80142d8:	40014800 	.word	0x40014800

080142dc <TIM_TI1_ConfigInputStage>:
 80142dc:	b480      	push	{r7}
 80142de:	b087      	sub	sp, #28
 80142e0:	af00      	add	r7, sp, #0
 80142e2:	60f8      	str	r0, [r7, #12]
 80142e4:	60b9      	str	r1, [r7, #8]
 80142e6:	607a      	str	r2, [r7, #4]
 80142e8:	68fb      	ldr	r3, [r7, #12]
 80142ea:	6a1b      	ldr	r3, [r3, #32]
 80142ec:	617b      	str	r3, [r7, #20]
 80142ee:	68fb      	ldr	r3, [r7, #12]
 80142f0:	6a1b      	ldr	r3, [r3, #32]
 80142f2:	f023 0201 	bic.w	r2, r3, #1
 80142f6:	68fb      	ldr	r3, [r7, #12]
 80142f8:	621a      	str	r2, [r3, #32]
 80142fa:	68fb      	ldr	r3, [r7, #12]
 80142fc:	699b      	ldr	r3, [r3, #24]
 80142fe:	613b      	str	r3, [r7, #16]
 8014300:	693b      	ldr	r3, [r7, #16]
 8014302:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8014306:	613b      	str	r3, [r7, #16]
 8014308:	687b      	ldr	r3, [r7, #4]
 801430a:	011b      	lsls	r3, r3, #4
 801430c:	693a      	ldr	r2, [r7, #16]
 801430e:	4313      	orrs	r3, r2
 8014310:	613b      	str	r3, [r7, #16]
 8014312:	697b      	ldr	r3, [r7, #20]
 8014314:	f023 030a 	bic.w	r3, r3, #10
 8014318:	617b      	str	r3, [r7, #20]
 801431a:	697a      	ldr	r2, [r7, #20]
 801431c:	68bb      	ldr	r3, [r7, #8]
 801431e:	4313      	orrs	r3, r2
 8014320:	617b      	str	r3, [r7, #20]
 8014322:	68fb      	ldr	r3, [r7, #12]
 8014324:	693a      	ldr	r2, [r7, #16]
 8014326:	619a      	str	r2, [r3, #24]
 8014328:	68fb      	ldr	r3, [r7, #12]
 801432a:	697a      	ldr	r2, [r7, #20]
 801432c:	621a      	str	r2, [r3, #32]
 801432e:	bf00      	nop
 8014330:	371c      	adds	r7, #28
 8014332:	46bd      	mov	sp, r7
 8014334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014338:	4770      	bx	lr

0801433a <TIM_TI2_ConfigInputStage>:
 801433a:	b480      	push	{r7}
 801433c:	b087      	sub	sp, #28
 801433e:	af00      	add	r7, sp, #0
 8014340:	60f8      	str	r0, [r7, #12]
 8014342:	60b9      	str	r1, [r7, #8]
 8014344:	607a      	str	r2, [r7, #4]
 8014346:	68fb      	ldr	r3, [r7, #12]
 8014348:	6a1b      	ldr	r3, [r3, #32]
 801434a:	617b      	str	r3, [r7, #20]
 801434c:	68fb      	ldr	r3, [r7, #12]
 801434e:	6a1b      	ldr	r3, [r3, #32]
 8014350:	f023 0210 	bic.w	r2, r3, #16
 8014354:	68fb      	ldr	r3, [r7, #12]
 8014356:	621a      	str	r2, [r3, #32]
 8014358:	68fb      	ldr	r3, [r7, #12]
 801435a:	699b      	ldr	r3, [r3, #24]
 801435c:	613b      	str	r3, [r7, #16]
 801435e:	693b      	ldr	r3, [r7, #16]
 8014360:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8014364:	613b      	str	r3, [r7, #16]
 8014366:	687b      	ldr	r3, [r7, #4]
 8014368:	031b      	lsls	r3, r3, #12
 801436a:	693a      	ldr	r2, [r7, #16]
 801436c:	4313      	orrs	r3, r2
 801436e:	613b      	str	r3, [r7, #16]
 8014370:	697b      	ldr	r3, [r7, #20]
 8014372:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8014376:	617b      	str	r3, [r7, #20]
 8014378:	68bb      	ldr	r3, [r7, #8]
 801437a:	011b      	lsls	r3, r3, #4
 801437c:	697a      	ldr	r2, [r7, #20]
 801437e:	4313      	orrs	r3, r2
 8014380:	617b      	str	r3, [r7, #20]
 8014382:	68fb      	ldr	r3, [r7, #12]
 8014384:	693a      	ldr	r2, [r7, #16]
 8014386:	619a      	str	r2, [r3, #24]
 8014388:	68fb      	ldr	r3, [r7, #12]
 801438a:	697a      	ldr	r2, [r7, #20]
 801438c:	621a      	str	r2, [r3, #32]
 801438e:	bf00      	nop
 8014390:	371c      	adds	r7, #28
 8014392:	46bd      	mov	sp, r7
 8014394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014398:	4770      	bx	lr
	...

0801439c <TIM_ITRx_SetConfig>:
 801439c:	b480      	push	{r7}
 801439e:	b085      	sub	sp, #20
 80143a0:	af00      	add	r7, sp, #0
 80143a2:	6078      	str	r0, [r7, #4]
 80143a4:	6039      	str	r1, [r7, #0]
 80143a6:	687b      	ldr	r3, [r7, #4]
 80143a8:	689b      	ldr	r3, [r3, #8]
 80143aa:	60fb      	str	r3, [r7, #12]
 80143ac:	68fa      	ldr	r2, [r7, #12]
 80143ae:	4b09      	ldr	r3, [pc, #36]	; (80143d4 <TIM_ITRx_SetConfig+0x38>)
 80143b0:	4013      	ands	r3, r2
 80143b2:	60fb      	str	r3, [r7, #12]
 80143b4:	683a      	ldr	r2, [r7, #0]
 80143b6:	68fb      	ldr	r3, [r7, #12]
 80143b8:	4313      	orrs	r3, r2
 80143ba:	f043 0307 	orr.w	r3, r3, #7
 80143be:	60fb      	str	r3, [r7, #12]
 80143c0:	687b      	ldr	r3, [r7, #4]
 80143c2:	68fa      	ldr	r2, [r7, #12]
 80143c4:	609a      	str	r2, [r3, #8]
 80143c6:	bf00      	nop
 80143c8:	3714      	adds	r7, #20
 80143ca:	46bd      	mov	sp, r7
 80143cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80143d0:	4770      	bx	lr
 80143d2:	bf00      	nop
 80143d4:	ffcfff8f 	.word	0xffcfff8f

080143d8 <TIM_ETR_SetConfig>:
 80143d8:	b480      	push	{r7}
 80143da:	b087      	sub	sp, #28
 80143dc:	af00      	add	r7, sp, #0
 80143de:	60f8      	str	r0, [r7, #12]
 80143e0:	60b9      	str	r1, [r7, #8]
 80143e2:	607a      	str	r2, [r7, #4]
 80143e4:	603b      	str	r3, [r7, #0]
 80143e6:	68fb      	ldr	r3, [r7, #12]
 80143e8:	689b      	ldr	r3, [r3, #8]
 80143ea:	617b      	str	r3, [r7, #20]
 80143ec:	697b      	ldr	r3, [r7, #20]
 80143ee:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80143f2:	617b      	str	r3, [r7, #20]
 80143f4:	683b      	ldr	r3, [r7, #0]
 80143f6:	021a      	lsls	r2, r3, #8
 80143f8:	687b      	ldr	r3, [r7, #4]
 80143fa:	431a      	orrs	r2, r3
 80143fc:	68bb      	ldr	r3, [r7, #8]
 80143fe:	4313      	orrs	r3, r2
 8014400:	697a      	ldr	r2, [r7, #20]
 8014402:	4313      	orrs	r3, r2
 8014404:	617b      	str	r3, [r7, #20]
 8014406:	68fb      	ldr	r3, [r7, #12]
 8014408:	697a      	ldr	r2, [r7, #20]
 801440a:	609a      	str	r2, [r3, #8]
 801440c:	bf00      	nop
 801440e:	371c      	adds	r7, #28
 8014410:	46bd      	mov	sp, r7
 8014412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014416:	4770      	bx	lr

08014418 <TIM_CCxChannelCmd>:
 8014418:	b480      	push	{r7}
 801441a:	b087      	sub	sp, #28
 801441c:	af00      	add	r7, sp, #0
 801441e:	60f8      	str	r0, [r7, #12]
 8014420:	60b9      	str	r1, [r7, #8]
 8014422:	607a      	str	r2, [r7, #4]
 8014424:	68bb      	ldr	r3, [r7, #8]
 8014426:	f003 031f 	and.w	r3, r3, #31
 801442a:	2201      	movs	r2, #1
 801442c:	fa02 f303 	lsl.w	r3, r2, r3
 8014430:	617b      	str	r3, [r7, #20]
 8014432:	68fb      	ldr	r3, [r7, #12]
 8014434:	6a1a      	ldr	r2, [r3, #32]
 8014436:	697b      	ldr	r3, [r7, #20]
 8014438:	43db      	mvns	r3, r3
 801443a:	401a      	ands	r2, r3
 801443c:	68fb      	ldr	r3, [r7, #12]
 801443e:	621a      	str	r2, [r3, #32]
 8014440:	68fb      	ldr	r3, [r7, #12]
 8014442:	6a1a      	ldr	r2, [r3, #32]
 8014444:	68bb      	ldr	r3, [r7, #8]
 8014446:	f003 031f 	and.w	r3, r3, #31
 801444a:	6879      	ldr	r1, [r7, #4]
 801444c:	fa01 f303 	lsl.w	r3, r1, r3
 8014450:	431a      	orrs	r2, r3
 8014452:	68fb      	ldr	r3, [r7, #12]
 8014454:	621a      	str	r2, [r3, #32]
 8014456:	bf00      	nop
 8014458:	371c      	adds	r7, #28
 801445a:	46bd      	mov	sp, r7
 801445c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014460:	4770      	bx	lr
	...

08014464 <HAL_TIMEx_MasterConfigSynchronization>:
 8014464:	b480      	push	{r7}
 8014466:	b085      	sub	sp, #20
 8014468:	af00      	add	r7, sp, #0
 801446a:	6078      	str	r0, [r7, #4]
 801446c:	6039      	str	r1, [r7, #0]
 801446e:	687b      	ldr	r3, [r7, #4]
 8014470:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8014474:	2b01      	cmp	r3, #1
 8014476:	d101      	bne.n	801447c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8014478:	2302      	movs	r3, #2
 801447a:	e06d      	b.n	8014558 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 801447c:	687b      	ldr	r3, [r7, #4]
 801447e:	2201      	movs	r2, #1
 8014480:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8014484:	687b      	ldr	r3, [r7, #4]
 8014486:	2202      	movs	r2, #2
 8014488:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801448c:	687b      	ldr	r3, [r7, #4]
 801448e:	681b      	ldr	r3, [r3, #0]
 8014490:	685b      	ldr	r3, [r3, #4]
 8014492:	60fb      	str	r3, [r7, #12]
 8014494:	687b      	ldr	r3, [r7, #4]
 8014496:	681b      	ldr	r3, [r3, #0]
 8014498:	689b      	ldr	r3, [r3, #8]
 801449a:	60bb      	str	r3, [r7, #8]
 801449c:	687b      	ldr	r3, [r7, #4]
 801449e:	681b      	ldr	r3, [r3, #0]
 80144a0:	4a30      	ldr	r2, [pc, #192]	; (8014564 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 80144a2:	4293      	cmp	r3, r2
 80144a4:	d004      	beq.n	80144b0 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 80144a6:	687b      	ldr	r3, [r7, #4]
 80144a8:	681b      	ldr	r3, [r3, #0]
 80144aa:	4a2f      	ldr	r2, [pc, #188]	; (8014568 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 80144ac:	4293      	cmp	r3, r2
 80144ae:	d108      	bne.n	80144c2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80144b0:	68fb      	ldr	r3, [r7, #12]
 80144b2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80144b6:	60fb      	str	r3, [r7, #12]
 80144b8:	683b      	ldr	r3, [r7, #0]
 80144ba:	685b      	ldr	r3, [r3, #4]
 80144bc:	68fa      	ldr	r2, [r7, #12]
 80144be:	4313      	orrs	r3, r2
 80144c0:	60fb      	str	r3, [r7, #12]
 80144c2:	68fb      	ldr	r3, [r7, #12]
 80144c4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80144c8:	60fb      	str	r3, [r7, #12]
 80144ca:	683b      	ldr	r3, [r7, #0]
 80144cc:	681b      	ldr	r3, [r3, #0]
 80144ce:	68fa      	ldr	r2, [r7, #12]
 80144d0:	4313      	orrs	r3, r2
 80144d2:	60fb      	str	r3, [r7, #12]
 80144d4:	687b      	ldr	r3, [r7, #4]
 80144d6:	681b      	ldr	r3, [r3, #0]
 80144d8:	68fa      	ldr	r2, [r7, #12]
 80144da:	605a      	str	r2, [r3, #4]
 80144dc:	687b      	ldr	r3, [r7, #4]
 80144de:	681b      	ldr	r3, [r3, #0]
 80144e0:	4a20      	ldr	r2, [pc, #128]	; (8014564 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 80144e2:	4293      	cmp	r3, r2
 80144e4:	d022      	beq.n	801452c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80144e6:	687b      	ldr	r3, [r7, #4]
 80144e8:	681b      	ldr	r3, [r3, #0]
 80144ea:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80144ee:	d01d      	beq.n	801452c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80144f0:	687b      	ldr	r3, [r7, #4]
 80144f2:	681b      	ldr	r3, [r3, #0]
 80144f4:	4a1d      	ldr	r2, [pc, #116]	; (801456c <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 80144f6:	4293      	cmp	r3, r2
 80144f8:	d018      	beq.n	801452c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80144fa:	687b      	ldr	r3, [r7, #4]
 80144fc:	681b      	ldr	r3, [r3, #0]
 80144fe:	4a1c      	ldr	r2, [pc, #112]	; (8014570 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 8014500:	4293      	cmp	r3, r2
 8014502:	d013      	beq.n	801452c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8014504:	687b      	ldr	r3, [r7, #4]
 8014506:	681b      	ldr	r3, [r3, #0]
 8014508:	4a1a      	ldr	r2, [pc, #104]	; (8014574 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 801450a:	4293      	cmp	r3, r2
 801450c:	d00e      	beq.n	801452c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 801450e:	687b      	ldr	r3, [r7, #4]
 8014510:	681b      	ldr	r3, [r3, #0]
 8014512:	4a15      	ldr	r2, [pc, #84]	; (8014568 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8014514:	4293      	cmp	r3, r2
 8014516:	d009      	beq.n	801452c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8014518:	687b      	ldr	r3, [r7, #4]
 801451a:	681b      	ldr	r3, [r3, #0]
 801451c:	4a16      	ldr	r2, [pc, #88]	; (8014578 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 801451e:	4293      	cmp	r3, r2
 8014520:	d004      	beq.n	801452c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8014522:	687b      	ldr	r3, [r7, #4]
 8014524:	681b      	ldr	r3, [r3, #0]
 8014526:	4a15      	ldr	r2, [pc, #84]	; (801457c <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8014528:	4293      	cmp	r3, r2
 801452a:	d10c      	bne.n	8014546 <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 801452c:	68bb      	ldr	r3, [r7, #8]
 801452e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8014532:	60bb      	str	r3, [r7, #8]
 8014534:	683b      	ldr	r3, [r7, #0]
 8014536:	689b      	ldr	r3, [r3, #8]
 8014538:	68ba      	ldr	r2, [r7, #8]
 801453a:	4313      	orrs	r3, r2
 801453c:	60bb      	str	r3, [r7, #8]
 801453e:	687b      	ldr	r3, [r7, #4]
 8014540:	681b      	ldr	r3, [r3, #0]
 8014542:	68ba      	ldr	r2, [r7, #8]
 8014544:	609a      	str	r2, [r3, #8]
 8014546:	687b      	ldr	r3, [r7, #4]
 8014548:	2201      	movs	r2, #1
 801454a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801454e:	687b      	ldr	r3, [r7, #4]
 8014550:	2200      	movs	r2, #0
 8014552:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8014556:	2300      	movs	r3, #0
 8014558:	4618      	mov	r0, r3
 801455a:	3714      	adds	r7, #20
 801455c:	46bd      	mov	sp, r7
 801455e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014562:	4770      	bx	lr
 8014564:	40010000 	.word	0x40010000
 8014568:	40010400 	.word	0x40010400
 801456c:	40000400 	.word	0x40000400
 8014570:	40000800 	.word	0x40000800
 8014574:	40000c00 	.word	0x40000c00
 8014578:	40001800 	.word	0x40001800
 801457c:	40014000 	.word	0x40014000

08014580 <HAL_TIMEx_ConfigBreakDeadTime>:
 8014580:	b480      	push	{r7}
 8014582:	b085      	sub	sp, #20
 8014584:	af00      	add	r7, sp, #0
 8014586:	6078      	str	r0, [r7, #4]
 8014588:	6039      	str	r1, [r7, #0]
 801458a:	2300      	movs	r3, #0
 801458c:	60fb      	str	r3, [r7, #12]
 801458e:	687b      	ldr	r3, [r7, #4]
 8014590:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8014594:	2b01      	cmp	r3, #1
 8014596:	d101      	bne.n	801459c <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8014598:	2302      	movs	r3, #2
 801459a:	e065      	b.n	8014668 <HAL_TIMEx_ConfigBreakDeadTime+0xe8>
 801459c:	687b      	ldr	r3, [r7, #4]
 801459e:	2201      	movs	r2, #1
 80145a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80145a4:	68fb      	ldr	r3, [r7, #12]
 80145a6:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 80145aa:	683b      	ldr	r3, [r7, #0]
 80145ac:	68db      	ldr	r3, [r3, #12]
 80145ae:	4313      	orrs	r3, r2
 80145b0:	60fb      	str	r3, [r7, #12]
 80145b2:	68fb      	ldr	r3, [r7, #12]
 80145b4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80145b8:	683b      	ldr	r3, [r7, #0]
 80145ba:	689b      	ldr	r3, [r3, #8]
 80145bc:	4313      	orrs	r3, r2
 80145be:	60fb      	str	r3, [r7, #12]
 80145c0:	68fb      	ldr	r3, [r7, #12]
 80145c2:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 80145c6:	683b      	ldr	r3, [r7, #0]
 80145c8:	685b      	ldr	r3, [r3, #4]
 80145ca:	4313      	orrs	r3, r2
 80145cc:	60fb      	str	r3, [r7, #12]
 80145ce:	68fb      	ldr	r3, [r7, #12]
 80145d0:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 80145d4:	683b      	ldr	r3, [r7, #0]
 80145d6:	681b      	ldr	r3, [r3, #0]
 80145d8:	4313      	orrs	r3, r2
 80145da:	60fb      	str	r3, [r7, #12]
 80145dc:	68fb      	ldr	r3, [r7, #12]
 80145de:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80145e2:	683b      	ldr	r3, [r7, #0]
 80145e4:	691b      	ldr	r3, [r3, #16]
 80145e6:	4313      	orrs	r3, r2
 80145e8:	60fb      	str	r3, [r7, #12]
 80145ea:	68fb      	ldr	r3, [r7, #12]
 80145ec:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80145f0:	683b      	ldr	r3, [r7, #0]
 80145f2:	695b      	ldr	r3, [r3, #20]
 80145f4:	4313      	orrs	r3, r2
 80145f6:	60fb      	str	r3, [r7, #12]
 80145f8:	68fb      	ldr	r3, [r7, #12]
 80145fa:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 80145fe:	683b      	ldr	r3, [r7, #0]
 8014600:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014602:	4313      	orrs	r3, r2
 8014604:	60fb      	str	r3, [r7, #12]
 8014606:	68fb      	ldr	r3, [r7, #12]
 8014608:	f423 2270 	bic.w	r2, r3, #983040	; 0xf0000
 801460c:	683b      	ldr	r3, [r7, #0]
 801460e:	699b      	ldr	r3, [r3, #24]
 8014610:	041b      	lsls	r3, r3, #16
 8014612:	4313      	orrs	r3, r2
 8014614:	60fb      	str	r3, [r7, #12]
 8014616:	687b      	ldr	r3, [r7, #4]
 8014618:	681b      	ldr	r3, [r3, #0]
 801461a:	4a16      	ldr	r2, [pc, #88]	; (8014674 <HAL_TIMEx_ConfigBreakDeadTime+0xf4>)
 801461c:	4293      	cmp	r3, r2
 801461e:	d004      	beq.n	801462a <HAL_TIMEx_ConfigBreakDeadTime+0xaa>
 8014620:	687b      	ldr	r3, [r7, #4]
 8014622:	681b      	ldr	r3, [r3, #0]
 8014624:	4a14      	ldr	r2, [pc, #80]	; (8014678 <HAL_TIMEx_ConfigBreakDeadTime+0xf8>)
 8014626:	4293      	cmp	r3, r2
 8014628:	d115      	bne.n	8014656 <HAL_TIMEx_ConfigBreakDeadTime+0xd6>
 801462a:	68fb      	ldr	r3, [r7, #12]
 801462c:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 8014630:	683b      	ldr	r3, [r7, #0]
 8014632:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014634:	051b      	lsls	r3, r3, #20
 8014636:	4313      	orrs	r3, r2
 8014638:	60fb      	str	r3, [r7, #12]
 801463a:	68fb      	ldr	r3, [r7, #12]
 801463c:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8014640:	683b      	ldr	r3, [r7, #0]
 8014642:	69db      	ldr	r3, [r3, #28]
 8014644:	4313      	orrs	r3, r2
 8014646:	60fb      	str	r3, [r7, #12]
 8014648:	68fb      	ldr	r3, [r7, #12]
 801464a:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 801464e:	683b      	ldr	r3, [r7, #0]
 8014650:	6a1b      	ldr	r3, [r3, #32]
 8014652:	4313      	orrs	r3, r2
 8014654:	60fb      	str	r3, [r7, #12]
 8014656:	687b      	ldr	r3, [r7, #4]
 8014658:	681b      	ldr	r3, [r3, #0]
 801465a:	68fa      	ldr	r2, [r7, #12]
 801465c:	645a      	str	r2, [r3, #68]	; 0x44
 801465e:	687b      	ldr	r3, [r7, #4]
 8014660:	2200      	movs	r2, #0
 8014662:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8014666:	2300      	movs	r3, #0
 8014668:	4618      	mov	r0, r3
 801466a:	3714      	adds	r7, #20
 801466c:	46bd      	mov	sp, r7
 801466e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014672:	4770      	bx	lr
 8014674:	40010000 	.word	0x40010000
 8014678:	40010400 	.word	0x40010400

0801467c <HAL_TIMEx_CommutCallback>:
 801467c:	b480      	push	{r7}
 801467e:	b083      	sub	sp, #12
 8014680:	af00      	add	r7, sp, #0
 8014682:	6078      	str	r0, [r7, #4]
 8014684:	bf00      	nop
 8014686:	370c      	adds	r7, #12
 8014688:	46bd      	mov	sp, r7
 801468a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801468e:	4770      	bx	lr

08014690 <HAL_TIMEx_BreakCallback>:
 8014690:	b480      	push	{r7}
 8014692:	b083      	sub	sp, #12
 8014694:	af00      	add	r7, sp, #0
 8014696:	6078      	str	r0, [r7, #4]
 8014698:	bf00      	nop
 801469a:	370c      	adds	r7, #12
 801469c:	46bd      	mov	sp, r7
 801469e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80146a2:	4770      	bx	lr

080146a4 <HAL_TIMEx_Break2Callback>:
 80146a4:	b480      	push	{r7}
 80146a6:	b083      	sub	sp, #12
 80146a8:	af00      	add	r7, sp, #0
 80146aa:	6078      	str	r0, [r7, #4]
 80146ac:	bf00      	nop
 80146ae:	370c      	adds	r7, #12
 80146b0:	46bd      	mov	sp, r7
 80146b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80146b6:	4770      	bx	lr

080146b8 <HAL_UART_Init>:
 80146b8:	b580      	push	{r7, lr}
 80146ba:	b082      	sub	sp, #8
 80146bc:	af00      	add	r7, sp, #0
 80146be:	6078      	str	r0, [r7, #4]
 80146c0:	687b      	ldr	r3, [r7, #4]
 80146c2:	2b00      	cmp	r3, #0
 80146c4:	d101      	bne.n	80146ca <HAL_UART_Init+0x12>
 80146c6:	2301      	movs	r3, #1
 80146c8:	e042      	b.n	8014750 <HAL_UART_Init+0x98>
 80146ca:	687b      	ldr	r3, [r7, #4]
 80146cc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80146d0:	2b00      	cmp	r3, #0
 80146d2:	d106      	bne.n	80146e2 <HAL_UART_Init+0x2a>
 80146d4:	687b      	ldr	r3, [r7, #4]
 80146d6:	2200      	movs	r2, #0
 80146d8:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 80146dc:	6878      	ldr	r0, [r7, #4]
 80146de:	f7f0 ffb5 	bl	800564c <HAL_UART_MspInit>
 80146e2:	687b      	ldr	r3, [r7, #4]
 80146e4:	2224      	movs	r2, #36	; 0x24
 80146e6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80146ea:	687b      	ldr	r3, [r7, #4]
 80146ec:	681b      	ldr	r3, [r3, #0]
 80146ee:	681a      	ldr	r2, [r3, #0]
 80146f0:	687b      	ldr	r3, [r7, #4]
 80146f2:	681b      	ldr	r3, [r3, #0]
 80146f4:	f022 0201 	bic.w	r2, r2, #1
 80146f8:	601a      	str	r2, [r3, #0]
 80146fa:	687b      	ldr	r3, [r7, #4]
 80146fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80146fe:	2b00      	cmp	r3, #0
 8014700:	d002      	beq.n	8014708 <HAL_UART_Init+0x50>
 8014702:	6878      	ldr	r0, [r7, #4]
 8014704:	f001 fbc2 	bl	8015e8c <UART_AdvFeatureConfig>
 8014708:	6878      	ldr	r0, [r7, #4]
 801470a:	f000 fe57 	bl	80153bc <UART_SetConfig>
 801470e:	4603      	mov	r3, r0
 8014710:	2b01      	cmp	r3, #1
 8014712:	d101      	bne.n	8014718 <HAL_UART_Init+0x60>
 8014714:	2301      	movs	r3, #1
 8014716:	e01b      	b.n	8014750 <HAL_UART_Init+0x98>
 8014718:	687b      	ldr	r3, [r7, #4]
 801471a:	681b      	ldr	r3, [r3, #0]
 801471c:	685a      	ldr	r2, [r3, #4]
 801471e:	687b      	ldr	r3, [r7, #4]
 8014720:	681b      	ldr	r3, [r3, #0]
 8014722:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8014726:	605a      	str	r2, [r3, #4]
 8014728:	687b      	ldr	r3, [r7, #4]
 801472a:	681b      	ldr	r3, [r3, #0]
 801472c:	689a      	ldr	r2, [r3, #8]
 801472e:	687b      	ldr	r3, [r7, #4]
 8014730:	681b      	ldr	r3, [r3, #0]
 8014732:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8014736:	609a      	str	r2, [r3, #8]
 8014738:	687b      	ldr	r3, [r7, #4]
 801473a:	681b      	ldr	r3, [r3, #0]
 801473c:	681a      	ldr	r2, [r3, #0]
 801473e:	687b      	ldr	r3, [r7, #4]
 8014740:	681b      	ldr	r3, [r3, #0]
 8014742:	f042 0201 	orr.w	r2, r2, #1
 8014746:	601a      	str	r2, [r3, #0]
 8014748:	6878      	ldr	r0, [r7, #4]
 801474a:	f001 fc41 	bl	8015fd0 <UART_CheckIdleState>
 801474e:	4603      	mov	r3, r0
 8014750:	4618      	mov	r0, r3
 8014752:	3708      	adds	r7, #8
 8014754:	46bd      	mov	sp, r7
 8014756:	bd80      	pop	{r7, pc}

08014758 <HAL_UART_Transmit>:
 8014758:	b580      	push	{r7, lr}
 801475a:	b08a      	sub	sp, #40	; 0x28
 801475c:	af02      	add	r7, sp, #8
 801475e:	60f8      	str	r0, [r7, #12]
 8014760:	60b9      	str	r1, [r7, #8]
 8014762:	603b      	str	r3, [r7, #0]
 8014764:	4613      	mov	r3, r2
 8014766:	80fb      	strh	r3, [r7, #6]
 8014768:	68fb      	ldr	r3, [r7, #12]
 801476a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801476e:	2b20      	cmp	r3, #32
 8014770:	d17b      	bne.n	801486a <HAL_UART_Transmit+0x112>
 8014772:	68bb      	ldr	r3, [r7, #8]
 8014774:	2b00      	cmp	r3, #0
 8014776:	d002      	beq.n	801477e <HAL_UART_Transmit+0x26>
 8014778:	88fb      	ldrh	r3, [r7, #6]
 801477a:	2b00      	cmp	r3, #0
 801477c:	d101      	bne.n	8014782 <HAL_UART_Transmit+0x2a>
 801477e:	2301      	movs	r3, #1
 8014780:	e074      	b.n	801486c <HAL_UART_Transmit+0x114>
 8014782:	68fb      	ldr	r3, [r7, #12]
 8014784:	2200      	movs	r2, #0
 8014786:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 801478a:	68fb      	ldr	r3, [r7, #12]
 801478c:	2221      	movs	r2, #33	; 0x21
 801478e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8014792:	f7f1 fd2d 	bl	80061f0 <HAL_GetTick>
 8014796:	6178      	str	r0, [r7, #20]
 8014798:	68fb      	ldr	r3, [r7, #12]
 801479a:	88fa      	ldrh	r2, [r7, #6]
 801479c:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 80147a0:	68fb      	ldr	r3, [r7, #12]
 80147a2:	88fa      	ldrh	r2, [r7, #6]
 80147a4:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 80147a8:	68fb      	ldr	r3, [r7, #12]
 80147aa:	689b      	ldr	r3, [r3, #8]
 80147ac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80147b0:	d108      	bne.n	80147c4 <HAL_UART_Transmit+0x6c>
 80147b2:	68fb      	ldr	r3, [r7, #12]
 80147b4:	691b      	ldr	r3, [r3, #16]
 80147b6:	2b00      	cmp	r3, #0
 80147b8:	d104      	bne.n	80147c4 <HAL_UART_Transmit+0x6c>
 80147ba:	2300      	movs	r3, #0
 80147bc:	61fb      	str	r3, [r7, #28]
 80147be:	68bb      	ldr	r3, [r7, #8]
 80147c0:	61bb      	str	r3, [r7, #24]
 80147c2:	e003      	b.n	80147cc <HAL_UART_Transmit+0x74>
 80147c4:	68bb      	ldr	r3, [r7, #8]
 80147c6:	61fb      	str	r3, [r7, #28]
 80147c8:	2300      	movs	r3, #0
 80147ca:	61bb      	str	r3, [r7, #24]
 80147cc:	e030      	b.n	8014830 <HAL_UART_Transmit+0xd8>
 80147ce:	683b      	ldr	r3, [r7, #0]
 80147d0:	9300      	str	r3, [sp, #0]
 80147d2:	697b      	ldr	r3, [r7, #20]
 80147d4:	2200      	movs	r2, #0
 80147d6:	2180      	movs	r1, #128	; 0x80
 80147d8:	68f8      	ldr	r0, [r7, #12]
 80147da:	f001 fca3 	bl	8016124 <UART_WaitOnFlagUntilTimeout>
 80147de:	4603      	mov	r3, r0
 80147e0:	2b00      	cmp	r3, #0
 80147e2:	d005      	beq.n	80147f0 <HAL_UART_Transmit+0x98>
 80147e4:	68fb      	ldr	r3, [r7, #12]
 80147e6:	2220      	movs	r2, #32
 80147e8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80147ec:	2303      	movs	r3, #3
 80147ee:	e03d      	b.n	801486c <HAL_UART_Transmit+0x114>
 80147f0:	69fb      	ldr	r3, [r7, #28]
 80147f2:	2b00      	cmp	r3, #0
 80147f4:	d10b      	bne.n	801480e <HAL_UART_Transmit+0xb6>
 80147f6:	69bb      	ldr	r3, [r7, #24]
 80147f8:	881b      	ldrh	r3, [r3, #0]
 80147fa:	461a      	mov	r2, r3
 80147fc:	68fb      	ldr	r3, [r7, #12]
 80147fe:	681b      	ldr	r3, [r3, #0]
 8014800:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8014804:	629a      	str	r2, [r3, #40]	; 0x28
 8014806:	69bb      	ldr	r3, [r7, #24]
 8014808:	3302      	adds	r3, #2
 801480a:	61bb      	str	r3, [r7, #24]
 801480c:	e007      	b.n	801481e <HAL_UART_Transmit+0xc6>
 801480e:	69fb      	ldr	r3, [r7, #28]
 8014810:	781a      	ldrb	r2, [r3, #0]
 8014812:	68fb      	ldr	r3, [r7, #12]
 8014814:	681b      	ldr	r3, [r3, #0]
 8014816:	629a      	str	r2, [r3, #40]	; 0x28
 8014818:	69fb      	ldr	r3, [r7, #28]
 801481a:	3301      	adds	r3, #1
 801481c:	61fb      	str	r3, [r7, #28]
 801481e:	68fb      	ldr	r3, [r7, #12]
 8014820:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 8014824:	b29b      	uxth	r3, r3
 8014826:	3b01      	subs	r3, #1
 8014828:	b29a      	uxth	r2, r3
 801482a:	68fb      	ldr	r3, [r7, #12]
 801482c:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 8014830:	68fb      	ldr	r3, [r7, #12]
 8014832:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 8014836:	b29b      	uxth	r3, r3
 8014838:	2b00      	cmp	r3, #0
 801483a:	d1c8      	bne.n	80147ce <HAL_UART_Transmit+0x76>
 801483c:	683b      	ldr	r3, [r7, #0]
 801483e:	9300      	str	r3, [sp, #0]
 8014840:	697b      	ldr	r3, [r7, #20]
 8014842:	2200      	movs	r2, #0
 8014844:	2140      	movs	r1, #64	; 0x40
 8014846:	68f8      	ldr	r0, [r7, #12]
 8014848:	f001 fc6c 	bl	8016124 <UART_WaitOnFlagUntilTimeout>
 801484c:	4603      	mov	r3, r0
 801484e:	2b00      	cmp	r3, #0
 8014850:	d005      	beq.n	801485e <HAL_UART_Transmit+0x106>
 8014852:	68fb      	ldr	r3, [r7, #12]
 8014854:	2220      	movs	r2, #32
 8014856:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 801485a:	2303      	movs	r3, #3
 801485c:	e006      	b.n	801486c <HAL_UART_Transmit+0x114>
 801485e:	68fb      	ldr	r3, [r7, #12]
 8014860:	2220      	movs	r2, #32
 8014862:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8014866:	2300      	movs	r3, #0
 8014868:	e000      	b.n	801486c <HAL_UART_Transmit+0x114>
 801486a:	2302      	movs	r3, #2
 801486c:	4618      	mov	r0, r3
 801486e:	3720      	adds	r7, #32
 8014870:	46bd      	mov	sp, r7
 8014872:	bd80      	pop	{r7, pc}

08014874 <HAL_UART_Receive>:
 8014874:	b580      	push	{r7, lr}
 8014876:	b08a      	sub	sp, #40	; 0x28
 8014878:	af02      	add	r7, sp, #8
 801487a:	60f8      	str	r0, [r7, #12]
 801487c:	60b9      	str	r1, [r7, #8]
 801487e:	603b      	str	r3, [r7, #0]
 8014880:	4613      	mov	r3, r2
 8014882:	80fb      	strh	r3, [r7, #6]
 8014884:	68fb      	ldr	r3, [r7, #12]
 8014886:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801488a:	2b20      	cmp	r3, #32
 801488c:	f040 80b5 	bne.w	80149fa <HAL_UART_Receive+0x186>
 8014890:	68bb      	ldr	r3, [r7, #8]
 8014892:	2b00      	cmp	r3, #0
 8014894:	d002      	beq.n	801489c <HAL_UART_Receive+0x28>
 8014896:	88fb      	ldrh	r3, [r7, #6]
 8014898:	2b00      	cmp	r3, #0
 801489a:	d101      	bne.n	80148a0 <HAL_UART_Receive+0x2c>
 801489c:	2301      	movs	r3, #1
 801489e:	e0ad      	b.n	80149fc <HAL_UART_Receive+0x188>
 80148a0:	68fb      	ldr	r3, [r7, #12]
 80148a2:	2200      	movs	r2, #0
 80148a4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80148a8:	68fb      	ldr	r3, [r7, #12]
 80148aa:	2222      	movs	r2, #34	; 0x22
 80148ac:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80148b0:	68fb      	ldr	r3, [r7, #12]
 80148b2:	2200      	movs	r2, #0
 80148b4:	66da      	str	r2, [r3, #108]	; 0x6c
 80148b6:	f7f1 fc9b 	bl	80061f0 <HAL_GetTick>
 80148ba:	6178      	str	r0, [r7, #20]
 80148bc:	68fb      	ldr	r3, [r7, #12]
 80148be:	88fa      	ldrh	r2, [r7, #6]
 80148c0:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80148c4:	68fb      	ldr	r3, [r7, #12]
 80148c6:	88fa      	ldrh	r2, [r7, #6]
 80148c8:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 80148cc:	68fb      	ldr	r3, [r7, #12]
 80148ce:	689b      	ldr	r3, [r3, #8]
 80148d0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80148d4:	d10e      	bne.n	80148f4 <HAL_UART_Receive+0x80>
 80148d6:	68fb      	ldr	r3, [r7, #12]
 80148d8:	691b      	ldr	r3, [r3, #16]
 80148da:	2b00      	cmp	r3, #0
 80148dc:	d105      	bne.n	80148ea <HAL_UART_Receive+0x76>
 80148de:	68fb      	ldr	r3, [r7, #12]
 80148e0:	f240 12ff 	movw	r2, #511	; 0x1ff
 80148e4:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 80148e8:	e02d      	b.n	8014946 <HAL_UART_Receive+0xd2>
 80148ea:	68fb      	ldr	r3, [r7, #12]
 80148ec:	22ff      	movs	r2, #255	; 0xff
 80148ee:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 80148f2:	e028      	b.n	8014946 <HAL_UART_Receive+0xd2>
 80148f4:	68fb      	ldr	r3, [r7, #12]
 80148f6:	689b      	ldr	r3, [r3, #8]
 80148f8:	2b00      	cmp	r3, #0
 80148fa:	d10d      	bne.n	8014918 <HAL_UART_Receive+0xa4>
 80148fc:	68fb      	ldr	r3, [r7, #12]
 80148fe:	691b      	ldr	r3, [r3, #16]
 8014900:	2b00      	cmp	r3, #0
 8014902:	d104      	bne.n	801490e <HAL_UART_Receive+0x9a>
 8014904:	68fb      	ldr	r3, [r7, #12]
 8014906:	22ff      	movs	r2, #255	; 0xff
 8014908:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 801490c:	e01b      	b.n	8014946 <HAL_UART_Receive+0xd2>
 801490e:	68fb      	ldr	r3, [r7, #12]
 8014910:	227f      	movs	r2, #127	; 0x7f
 8014912:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8014916:	e016      	b.n	8014946 <HAL_UART_Receive+0xd2>
 8014918:	68fb      	ldr	r3, [r7, #12]
 801491a:	689b      	ldr	r3, [r3, #8]
 801491c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8014920:	d10d      	bne.n	801493e <HAL_UART_Receive+0xca>
 8014922:	68fb      	ldr	r3, [r7, #12]
 8014924:	691b      	ldr	r3, [r3, #16]
 8014926:	2b00      	cmp	r3, #0
 8014928:	d104      	bne.n	8014934 <HAL_UART_Receive+0xc0>
 801492a:	68fb      	ldr	r3, [r7, #12]
 801492c:	227f      	movs	r2, #127	; 0x7f
 801492e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8014932:	e008      	b.n	8014946 <HAL_UART_Receive+0xd2>
 8014934:	68fb      	ldr	r3, [r7, #12]
 8014936:	223f      	movs	r2, #63	; 0x3f
 8014938:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 801493c:	e003      	b.n	8014946 <HAL_UART_Receive+0xd2>
 801493e:	68fb      	ldr	r3, [r7, #12]
 8014940:	2200      	movs	r2, #0
 8014942:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8014946:	68fb      	ldr	r3, [r7, #12]
 8014948:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 801494c:	827b      	strh	r3, [r7, #18]
 801494e:	68fb      	ldr	r3, [r7, #12]
 8014950:	689b      	ldr	r3, [r3, #8]
 8014952:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8014956:	d108      	bne.n	801496a <HAL_UART_Receive+0xf6>
 8014958:	68fb      	ldr	r3, [r7, #12]
 801495a:	691b      	ldr	r3, [r3, #16]
 801495c:	2b00      	cmp	r3, #0
 801495e:	d104      	bne.n	801496a <HAL_UART_Receive+0xf6>
 8014960:	2300      	movs	r3, #0
 8014962:	61fb      	str	r3, [r7, #28]
 8014964:	68bb      	ldr	r3, [r7, #8]
 8014966:	61bb      	str	r3, [r7, #24]
 8014968:	e003      	b.n	8014972 <HAL_UART_Receive+0xfe>
 801496a:	68bb      	ldr	r3, [r7, #8]
 801496c:	61fb      	str	r3, [r7, #28]
 801496e:	2300      	movs	r3, #0
 8014970:	61bb      	str	r3, [r7, #24]
 8014972:	e036      	b.n	80149e2 <HAL_UART_Receive+0x16e>
 8014974:	683b      	ldr	r3, [r7, #0]
 8014976:	9300      	str	r3, [sp, #0]
 8014978:	697b      	ldr	r3, [r7, #20]
 801497a:	2200      	movs	r2, #0
 801497c:	2120      	movs	r1, #32
 801497e:	68f8      	ldr	r0, [r7, #12]
 8014980:	f001 fbd0 	bl	8016124 <UART_WaitOnFlagUntilTimeout>
 8014984:	4603      	mov	r3, r0
 8014986:	2b00      	cmp	r3, #0
 8014988:	d005      	beq.n	8014996 <HAL_UART_Receive+0x122>
 801498a:	68fb      	ldr	r3, [r7, #12]
 801498c:	2220      	movs	r2, #32
 801498e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8014992:	2303      	movs	r3, #3
 8014994:	e032      	b.n	80149fc <HAL_UART_Receive+0x188>
 8014996:	69fb      	ldr	r3, [r7, #28]
 8014998:	2b00      	cmp	r3, #0
 801499a:	d10c      	bne.n	80149b6 <HAL_UART_Receive+0x142>
 801499c:	68fb      	ldr	r3, [r7, #12]
 801499e:	681b      	ldr	r3, [r3, #0]
 80149a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80149a2:	b29a      	uxth	r2, r3
 80149a4:	8a7b      	ldrh	r3, [r7, #18]
 80149a6:	4013      	ands	r3, r2
 80149a8:	b29a      	uxth	r2, r3
 80149aa:	69bb      	ldr	r3, [r7, #24]
 80149ac:	801a      	strh	r2, [r3, #0]
 80149ae:	69bb      	ldr	r3, [r7, #24]
 80149b0:	3302      	adds	r3, #2
 80149b2:	61bb      	str	r3, [r7, #24]
 80149b4:	e00c      	b.n	80149d0 <HAL_UART_Receive+0x15c>
 80149b6:	68fb      	ldr	r3, [r7, #12]
 80149b8:	681b      	ldr	r3, [r3, #0]
 80149ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80149bc:	b2da      	uxtb	r2, r3
 80149be:	8a7b      	ldrh	r3, [r7, #18]
 80149c0:	b2db      	uxtb	r3, r3
 80149c2:	4013      	ands	r3, r2
 80149c4:	b2da      	uxtb	r2, r3
 80149c6:	69fb      	ldr	r3, [r7, #28]
 80149c8:	701a      	strb	r2, [r3, #0]
 80149ca:	69fb      	ldr	r3, [r7, #28]
 80149cc:	3301      	adds	r3, #1
 80149ce:	61fb      	str	r3, [r7, #28]
 80149d0:	68fb      	ldr	r3, [r7, #12]
 80149d2:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80149d6:	b29b      	uxth	r3, r3
 80149d8:	3b01      	subs	r3, #1
 80149da:	b29a      	uxth	r2, r3
 80149dc:	68fb      	ldr	r3, [r7, #12]
 80149de:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 80149e2:	68fb      	ldr	r3, [r7, #12]
 80149e4:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80149e8:	b29b      	uxth	r3, r3
 80149ea:	2b00      	cmp	r3, #0
 80149ec:	d1c2      	bne.n	8014974 <HAL_UART_Receive+0x100>
 80149ee:	68fb      	ldr	r3, [r7, #12]
 80149f0:	2220      	movs	r2, #32
 80149f2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80149f6:	2300      	movs	r3, #0
 80149f8:	e000      	b.n	80149fc <HAL_UART_Receive+0x188>
 80149fa:	2302      	movs	r3, #2
 80149fc:	4618      	mov	r0, r3
 80149fe:	3720      	adds	r7, #32
 8014a00:	46bd      	mov	sp, r7
 8014a02:	bd80      	pop	{r7, pc}

08014a04 <HAL_UART_Receive_IT>:
 8014a04:	b580      	push	{r7, lr}
 8014a06:	b08a      	sub	sp, #40	; 0x28
 8014a08:	af00      	add	r7, sp, #0
 8014a0a:	60f8      	str	r0, [r7, #12]
 8014a0c:	60b9      	str	r1, [r7, #8]
 8014a0e:	4613      	mov	r3, r2
 8014a10:	80fb      	strh	r3, [r7, #6]
 8014a12:	68fb      	ldr	r3, [r7, #12]
 8014a14:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8014a18:	2b20      	cmp	r3, #32
 8014a1a:	d137      	bne.n	8014a8c <HAL_UART_Receive_IT+0x88>
 8014a1c:	68bb      	ldr	r3, [r7, #8]
 8014a1e:	2b00      	cmp	r3, #0
 8014a20:	d002      	beq.n	8014a28 <HAL_UART_Receive_IT+0x24>
 8014a22:	88fb      	ldrh	r3, [r7, #6]
 8014a24:	2b00      	cmp	r3, #0
 8014a26:	d101      	bne.n	8014a2c <HAL_UART_Receive_IT+0x28>
 8014a28:	2301      	movs	r3, #1
 8014a2a:	e030      	b.n	8014a8e <HAL_UART_Receive_IT+0x8a>
 8014a2c:	68fb      	ldr	r3, [r7, #12]
 8014a2e:	2200      	movs	r2, #0
 8014a30:	66da      	str	r2, [r3, #108]	; 0x6c
 8014a32:	68fb      	ldr	r3, [r7, #12]
 8014a34:	681b      	ldr	r3, [r3, #0]
 8014a36:	4a18      	ldr	r2, [pc, #96]	; (8014a98 <HAL_UART_Receive_IT+0x94>)
 8014a38:	4293      	cmp	r3, r2
 8014a3a:	d01f      	beq.n	8014a7c <HAL_UART_Receive_IT+0x78>
 8014a3c:	68fb      	ldr	r3, [r7, #12]
 8014a3e:	681b      	ldr	r3, [r3, #0]
 8014a40:	685b      	ldr	r3, [r3, #4]
 8014a42:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8014a46:	2b00      	cmp	r3, #0
 8014a48:	d018      	beq.n	8014a7c <HAL_UART_Receive_IT+0x78>
 8014a4a:	68fb      	ldr	r3, [r7, #12]
 8014a4c:	681b      	ldr	r3, [r3, #0]
 8014a4e:	617b      	str	r3, [r7, #20]
 8014a50:	697b      	ldr	r3, [r7, #20]
 8014a52:	e853 3f00 	ldrex	r3, [r3]
 8014a56:	613b      	str	r3, [r7, #16]
 8014a58:	693b      	ldr	r3, [r7, #16]
 8014a5a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8014a5e:	627b      	str	r3, [r7, #36]	; 0x24
 8014a60:	68fb      	ldr	r3, [r7, #12]
 8014a62:	681b      	ldr	r3, [r3, #0]
 8014a64:	461a      	mov	r2, r3
 8014a66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8014a68:	623b      	str	r3, [r7, #32]
 8014a6a:	61fa      	str	r2, [r7, #28]
 8014a6c:	69f9      	ldr	r1, [r7, #28]
 8014a6e:	6a3a      	ldr	r2, [r7, #32]
 8014a70:	e841 2300 	strex	r3, r2, [r1]
 8014a74:	61bb      	str	r3, [r7, #24]
 8014a76:	69bb      	ldr	r3, [r7, #24]
 8014a78:	2b00      	cmp	r3, #0
 8014a7a:	d1e6      	bne.n	8014a4a <HAL_UART_Receive_IT+0x46>
 8014a7c:	88fb      	ldrh	r3, [r7, #6]
 8014a7e:	461a      	mov	r2, r3
 8014a80:	68b9      	ldr	r1, [r7, #8]
 8014a82:	68f8      	ldr	r0, [r7, #12]
 8014a84:	f001 fbbc 	bl	8016200 <UART_Start_Receive_IT>
 8014a88:	4603      	mov	r3, r0
 8014a8a:	e000      	b.n	8014a8e <HAL_UART_Receive_IT+0x8a>
 8014a8c:	2302      	movs	r3, #2
 8014a8e:	4618      	mov	r0, r3
 8014a90:	3728      	adds	r7, #40	; 0x28
 8014a92:	46bd      	mov	sp, r7
 8014a94:	bd80      	pop	{r7, pc}
 8014a96:	bf00      	nop
 8014a98:	58000c00 	.word	0x58000c00

08014a9c <HAL_UART_AbortReceive>:
 8014a9c:	b580      	push	{r7, lr}
 8014a9e:	b09a      	sub	sp, #104	; 0x68
 8014aa0:	af00      	add	r7, sp, #0
 8014aa2:	6078      	str	r0, [r7, #4]
 8014aa4:	687b      	ldr	r3, [r7, #4]
 8014aa6:	681b      	ldr	r3, [r3, #0]
 8014aa8:	64bb      	str	r3, [r7, #72]	; 0x48
 8014aaa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8014aac:	e853 3f00 	ldrex	r3, [r3]
 8014ab0:	647b      	str	r3, [r7, #68]	; 0x44
 8014ab2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8014ab4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8014ab8:	667b      	str	r3, [r7, #100]	; 0x64
 8014aba:	687b      	ldr	r3, [r7, #4]
 8014abc:	681b      	ldr	r3, [r3, #0]
 8014abe:	461a      	mov	r2, r3
 8014ac0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8014ac2:	657b      	str	r3, [r7, #84]	; 0x54
 8014ac4:	653a      	str	r2, [r7, #80]	; 0x50
 8014ac6:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8014ac8:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8014aca:	e841 2300 	strex	r3, r2, [r1]
 8014ace:	64fb      	str	r3, [r7, #76]	; 0x4c
 8014ad0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014ad2:	2b00      	cmp	r3, #0
 8014ad4:	d1e6      	bne.n	8014aa4 <HAL_UART_AbortReceive+0x8>
 8014ad6:	687b      	ldr	r3, [r7, #4]
 8014ad8:	681b      	ldr	r3, [r3, #0]
 8014ada:	3308      	adds	r3, #8
 8014adc:	637b      	str	r3, [r7, #52]	; 0x34
 8014ade:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8014ae0:	e853 3f00 	ldrex	r3, [r3]
 8014ae4:	633b      	str	r3, [r7, #48]	; 0x30
 8014ae6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8014ae8:	4b46      	ldr	r3, [pc, #280]	; (8014c04 <HAL_UART_AbortReceive+0x168>)
 8014aea:	4013      	ands	r3, r2
 8014aec:	663b      	str	r3, [r7, #96]	; 0x60
 8014aee:	687b      	ldr	r3, [r7, #4]
 8014af0:	681b      	ldr	r3, [r3, #0]
 8014af2:	3308      	adds	r3, #8
 8014af4:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8014af6:	643a      	str	r2, [r7, #64]	; 0x40
 8014af8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8014afa:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8014afc:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8014afe:	e841 2300 	strex	r3, r2, [r1]
 8014b02:	63bb      	str	r3, [r7, #56]	; 0x38
 8014b04:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8014b06:	2b00      	cmp	r3, #0
 8014b08:	d1e5      	bne.n	8014ad6 <HAL_UART_AbortReceive+0x3a>
 8014b0a:	687b      	ldr	r3, [r7, #4]
 8014b0c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014b0e:	2b01      	cmp	r3, #1
 8014b10:	d118      	bne.n	8014b44 <HAL_UART_AbortReceive+0xa8>
 8014b12:	687b      	ldr	r3, [r7, #4]
 8014b14:	681b      	ldr	r3, [r3, #0]
 8014b16:	623b      	str	r3, [r7, #32]
 8014b18:	6a3b      	ldr	r3, [r7, #32]
 8014b1a:	e853 3f00 	ldrex	r3, [r3]
 8014b1e:	61fb      	str	r3, [r7, #28]
 8014b20:	69fb      	ldr	r3, [r7, #28]
 8014b22:	f023 0310 	bic.w	r3, r3, #16
 8014b26:	65fb      	str	r3, [r7, #92]	; 0x5c
 8014b28:	687b      	ldr	r3, [r7, #4]
 8014b2a:	681b      	ldr	r3, [r3, #0]
 8014b2c:	461a      	mov	r2, r3
 8014b2e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8014b30:	62fb      	str	r3, [r7, #44]	; 0x2c
 8014b32:	62ba      	str	r2, [r7, #40]	; 0x28
 8014b34:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014b36:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8014b38:	e841 2300 	strex	r3, r2, [r1]
 8014b3c:	627b      	str	r3, [r7, #36]	; 0x24
 8014b3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8014b40:	2b00      	cmp	r3, #0
 8014b42:	d1e6      	bne.n	8014b12 <HAL_UART_AbortReceive+0x76>
 8014b44:	687b      	ldr	r3, [r7, #4]
 8014b46:	681b      	ldr	r3, [r3, #0]
 8014b48:	689b      	ldr	r3, [r3, #8]
 8014b4a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8014b4e:	2b40      	cmp	r3, #64	; 0x40
 8014b50:	d13b      	bne.n	8014bca <HAL_UART_AbortReceive+0x12e>
 8014b52:	687b      	ldr	r3, [r7, #4]
 8014b54:	681b      	ldr	r3, [r3, #0]
 8014b56:	3308      	adds	r3, #8
 8014b58:	60fb      	str	r3, [r7, #12]
 8014b5a:	68fb      	ldr	r3, [r7, #12]
 8014b5c:	e853 3f00 	ldrex	r3, [r3]
 8014b60:	60bb      	str	r3, [r7, #8]
 8014b62:	68bb      	ldr	r3, [r7, #8]
 8014b64:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8014b68:	65bb      	str	r3, [r7, #88]	; 0x58
 8014b6a:	687b      	ldr	r3, [r7, #4]
 8014b6c:	681b      	ldr	r3, [r3, #0]
 8014b6e:	3308      	adds	r3, #8
 8014b70:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8014b72:	61ba      	str	r2, [r7, #24]
 8014b74:	617b      	str	r3, [r7, #20]
 8014b76:	6979      	ldr	r1, [r7, #20]
 8014b78:	69ba      	ldr	r2, [r7, #24]
 8014b7a:	e841 2300 	strex	r3, r2, [r1]
 8014b7e:	613b      	str	r3, [r7, #16]
 8014b80:	693b      	ldr	r3, [r7, #16]
 8014b82:	2b00      	cmp	r3, #0
 8014b84:	d1e5      	bne.n	8014b52 <HAL_UART_AbortReceive+0xb6>
 8014b86:	687b      	ldr	r3, [r7, #4]
 8014b88:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014b8c:	2b00      	cmp	r3, #0
 8014b8e:	d01c      	beq.n	8014bca <HAL_UART_AbortReceive+0x12e>
 8014b90:	687b      	ldr	r3, [r7, #4]
 8014b92:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014b96:	2200      	movs	r2, #0
 8014b98:	651a      	str	r2, [r3, #80]	; 0x50
 8014b9a:	687b      	ldr	r3, [r7, #4]
 8014b9c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014ba0:	4618      	mov	r0, r3
 8014ba2:	f7f4 fa13 	bl	8008fcc <HAL_DMA_Abort>
 8014ba6:	4603      	mov	r3, r0
 8014ba8:	2b00      	cmp	r3, #0
 8014baa:	d00e      	beq.n	8014bca <HAL_UART_AbortReceive+0x12e>
 8014bac:	687b      	ldr	r3, [r7, #4]
 8014bae:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014bb2:	4618      	mov	r0, r3
 8014bb4:	f7f5 fea6 	bl	800a904 <HAL_DMA_GetError>
 8014bb8:	4603      	mov	r3, r0
 8014bba:	2b20      	cmp	r3, #32
 8014bbc:	d105      	bne.n	8014bca <HAL_UART_AbortReceive+0x12e>
 8014bbe:	687b      	ldr	r3, [r7, #4]
 8014bc0:	2210      	movs	r2, #16
 8014bc2:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8014bc6:	2303      	movs	r3, #3
 8014bc8:	e017      	b.n	8014bfa <HAL_UART_AbortReceive+0x15e>
 8014bca:	687b      	ldr	r3, [r7, #4]
 8014bcc:	2200      	movs	r2, #0
 8014bce:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 8014bd2:	687b      	ldr	r3, [r7, #4]
 8014bd4:	681b      	ldr	r3, [r3, #0]
 8014bd6:	220f      	movs	r2, #15
 8014bd8:	621a      	str	r2, [r3, #32]
 8014bda:	687b      	ldr	r3, [r7, #4]
 8014bdc:	681b      	ldr	r3, [r3, #0]
 8014bde:	699a      	ldr	r2, [r3, #24]
 8014be0:	687b      	ldr	r3, [r7, #4]
 8014be2:	681b      	ldr	r3, [r3, #0]
 8014be4:	f042 0208 	orr.w	r2, r2, #8
 8014be8:	619a      	str	r2, [r3, #24]
 8014bea:	687b      	ldr	r3, [r7, #4]
 8014bec:	2220      	movs	r2, #32
 8014bee:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8014bf2:	687b      	ldr	r3, [r7, #4]
 8014bf4:	2200      	movs	r2, #0
 8014bf6:	66da      	str	r2, [r3, #108]	; 0x6c
 8014bf8:	2300      	movs	r3, #0
 8014bfa:	4618      	mov	r0, r3
 8014bfc:	3768      	adds	r7, #104	; 0x68
 8014bfe:	46bd      	mov	sp, r7
 8014c00:	bd80      	pop	{r7, pc}
 8014c02:	bf00      	nop
 8014c04:	effffffe 	.word	0xeffffffe

08014c08 <HAL_UART_IRQHandler>:
 8014c08:	b580      	push	{r7, lr}
 8014c0a:	b0ba      	sub	sp, #232	; 0xe8
 8014c0c:	af00      	add	r7, sp, #0
 8014c0e:	6078      	str	r0, [r7, #4]
 8014c10:	687b      	ldr	r3, [r7, #4]
 8014c12:	681b      	ldr	r3, [r3, #0]
 8014c14:	69db      	ldr	r3, [r3, #28]
 8014c16:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8014c1a:	687b      	ldr	r3, [r7, #4]
 8014c1c:	681b      	ldr	r3, [r3, #0]
 8014c1e:	681b      	ldr	r3, [r3, #0]
 8014c20:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8014c24:	687b      	ldr	r3, [r7, #4]
 8014c26:	681b      	ldr	r3, [r3, #0]
 8014c28:	689b      	ldr	r3, [r3, #8]
 8014c2a:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8014c2e:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 8014c32:	f640 030f 	movw	r3, #2063	; 0x80f
 8014c36:	4013      	ands	r3, r2
 8014c38:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8014c3c:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8014c40:	2b00      	cmp	r3, #0
 8014c42:	d11b      	bne.n	8014c7c <HAL_UART_IRQHandler+0x74>
 8014c44:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8014c48:	f003 0320 	and.w	r3, r3, #32
 8014c4c:	2b00      	cmp	r3, #0
 8014c4e:	d015      	beq.n	8014c7c <HAL_UART_IRQHandler+0x74>
 8014c50:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8014c54:	f003 0320 	and.w	r3, r3, #32
 8014c58:	2b00      	cmp	r3, #0
 8014c5a:	d105      	bne.n	8014c68 <HAL_UART_IRQHandler+0x60>
 8014c5c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8014c60:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8014c64:	2b00      	cmp	r3, #0
 8014c66:	d009      	beq.n	8014c7c <HAL_UART_IRQHandler+0x74>
 8014c68:	687b      	ldr	r3, [r7, #4]
 8014c6a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8014c6c:	2b00      	cmp	r3, #0
 8014c6e:	f000 8377 	beq.w	8015360 <HAL_UART_IRQHandler+0x758>
 8014c72:	687b      	ldr	r3, [r7, #4]
 8014c74:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8014c76:	6878      	ldr	r0, [r7, #4]
 8014c78:	4798      	blx	r3
 8014c7a:	e371      	b.n	8015360 <HAL_UART_IRQHandler+0x758>
 8014c7c:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8014c80:	2b00      	cmp	r3, #0
 8014c82:	f000 8123 	beq.w	8014ecc <HAL_UART_IRQHandler+0x2c4>
 8014c86:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 8014c8a:	4b8d      	ldr	r3, [pc, #564]	; (8014ec0 <HAL_UART_IRQHandler+0x2b8>)
 8014c8c:	4013      	ands	r3, r2
 8014c8e:	2b00      	cmp	r3, #0
 8014c90:	d106      	bne.n	8014ca0 <HAL_UART_IRQHandler+0x98>
 8014c92:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8014c96:	4b8b      	ldr	r3, [pc, #556]	; (8014ec4 <HAL_UART_IRQHandler+0x2bc>)
 8014c98:	4013      	ands	r3, r2
 8014c9a:	2b00      	cmp	r3, #0
 8014c9c:	f000 8116 	beq.w	8014ecc <HAL_UART_IRQHandler+0x2c4>
 8014ca0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8014ca4:	f003 0301 	and.w	r3, r3, #1
 8014ca8:	2b00      	cmp	r3, #0
 8014caa:	d011      	beq.n	8014cd0 <HAL_UART_IRQHandler+0xc8>
 8014cac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8014cb0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014cb4:	2b00      	cmp	r3, #0
 8014cb6:	d00b      	beq.n	8014cd0 <HAL_UART_IRQHandler+0xc8>
 8014cb8:	687b      	ldr	r3, [r7, #4]
 8014cba:	681b      	ldr	r3, [r3, #0]
 8014cbc:	2201      	movs	r2, #1
 8014cbe:	621a      	str	r2, [r3, #32]
 8014cc0:	687b      	ldr	r3, [r7, #4]
 8014cc2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8014cc6:	f043 0201 	orr.w	r2, r3, #1
 8014cca:	687b      	ldr	r3, [r7, #4]
 8014ccc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8014cd0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8014cd4:	f003 0302 	and.w	r3, r3, #2
 8014cd8:	2b00      	cmp	r3, #0
 8014cda:	d011      	beq.n	8014d00 <HAL_UART_IRQHandler+0xf8>
 8014cdc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8014ce0:	f003 0301 	and.w	r3, r3, #1
 8014ce4:	2b00      	cmp	r3, #0
 8014ce6:	d00b      	beq.n	8014d00 <HAL_UART_IRQHandler+0xf8>
 8014ce8:	687b      	ldr	r3, [r7, #4]
 8014cea:	681b      	ldr	r3, [r3, #0]
 8014cec:	2202      	movs	r2, #2
 8014cee:	621a      	str	r2, [r3, #32]
 8014cf0:	687b      	ldr	r3, [r7, #4]
 8014cf2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8014cf6:	f043 0204 	orr.w	r2, r3, #4
 8014cfa:	687b      	ldr	r3, [r7, #4]
 8014cfc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8014d00:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8014d04:	f003 0304 	and.w	r3, r3, #4
 8014d08:	2b00      	cmp	r3, #0
 8014d0a:	d011      	beq.n	8014d30 <HAL_UART_IRQHandler+0x128>
 8014d0c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8014d10:	f003 0301 	and.w	r3, r3, #1
 8014d14:	2b00      	cmp	r3, #0
 8014d16:	d00b      	beq.n	8014d30 <HAL_UART_IRQHandler+0x128>
 8014d18:	687b      	ldr	r3, [r7, #4]
 8014d1a:	681b      	ldr	r3, [r3, #0]
 8014d1c:	2204      	movs	r2, #4
 8014d1e:	621a      	str	r2, [r3, #32]
 8014d20:	687b      	ldr	r3, [r7, #4]
 8014d22:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8014d26:	f043 0202 	orr.w	r2, r3, #2
 8014d2a:	687b      	ldr	r3, [r7, #4]
 8014d2c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8014d30:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8014d34:	f003 0308 	and.w	r3, r3, #8
 8014d38:	2b00      	cmp	r3, #0
 8014d3a:	d017      	beq.n	8014d6c <HAL_UART_IRQHandler+0x164>
 8014d3c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8014d40:	f003 0320 	and.w	r3, r3, #32
 8014d44:	2b00      	cmp	r3, #0
 8014d46:	d105      	bne.n	8014d54 <HAL_UART_IRQHandler+0x14c>
 8014d48:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 8014d4c:	4b5c      	ldr	r3, [pc, #368]	; (8014ec0 <HAL_UART_IRQHandler+0x2b8>)
 8014d4e:	4013      	ands	r3, r2
 8014d50:	2b00      	cmp	r3, #0
 8014d52:	d00b      	beq.n	8014d6c <HAL_UART_IRQHandler+0x164>
 8014d54:	687b      	ldr	r3, [r7, #4]
 8014d56:	681b      	ldr	r3, [r3, #0]
 8014d58:	2208      	movs	r2, #8
 8014d5a:	621a      	str	r2, [r3, #32]
 8014d5c:	687b      	ldr	r3, [r7, #4]
 8014d5e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8014d62:	f043 0208 	orr.w	r2, r3, #8
 8014d66:	687b      	ldr	r3, [r7, #4]
 8014d68:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8014d6c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8014d70:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8014d74:	2b00      	cmp	r3, #0
 8014d76:	d012      	beq.n	8014d9e <HAL_UART_IRQHandler+0x196>
 8014d78:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8014d7c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8014d80:	2b00      	cmp	r3, #0
 8014d82:	d00c      	beq.n	8014d9e <HAL_UART_IRQHandler+0x196>
 8014d84:	687b      	ldr	r3, [r7, #4]
 8014d86:	681b      	ldr	r3, [r3, #0]
 8014d88:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8014d8c:	621a      	str	r2, [r3, #32]
 8014d8e:	687b      	ldr	r3, [r7, #4]
 8014d90:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8014d94:	f043 0220 	orr.w	r2, r3, #32
 8014d98:	687b      	ldr	r3, [r7, #4]
 8014d9a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8014d9e:	687b      	ldr	r3, [r7, #4]
 8014da0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8014da4:	2b00      	cmp	r3, #0
 8014da6:	f000 82dd 	beq.w	8015364 <HAL_UART_IRQHandler+0x75c>
 8014daa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8014dae:	f003 0320 	and.w	r3, r3, #32
 8014db2:	2b00      	cmp	r3, #0
 8014db4:	d013      	beq.n	8014dde <HAL_UART_IRQHandler+0x1d6>
 8014db6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8014dba:	f003 0320 	and.w	r3, r3, #32
 8014dbe:	2b00      	cmp	r3, #0
 8014dc0:	d105      	bne.n	8014dce <HAL_UART_IRQHandler+0x1c6>
 8014dc2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8014dc6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8014dca:	2b00      	cmp	r3, #0
 8014dcc:	d007      	beq.n	8014dde <HAL_UART_IRQHandler+0x1d6>
 8014dce:	687b      	ldr	r3, [r7, #4]
 8014dd0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8014dd2:	2b00      	cmp	r3, #0
 8014dd4:	d003      	beq.n	8014dde <HAL_UART_IRQHandler+0x1d6>
 8014dd6:	687b      	ldr	r3, [r7, #4]
 8014dd8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8014dda:	6878      	ldr	r0, [r7, #4]
 8014ddc:	4798      	blx	r3
 8014dde:	687b      	ldr	r3, [r7, #4]
 8014de0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8014de4:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8014de8:	687b      	ldr	r3, [r7, #4]
 8014dea:	681b      	ldr	r3, [r3, #0]
 8014dec:	689b      	ldr	r3, [r3, #8]
 8014dee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8014df2:	2b40      	cmp	r3, #64	; 0x40
 8014df4:	d005      	beq.n	8014e02 <HAL_UART_IRQHandler+0x1fa>
 8014df6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8014dfa:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8014dfe:	2b00      	cmp	r3, #0
 8014e00:	d054      	beq.n	8014eac <HAL_UART_IRQHandler+0x2a4>
 8014e02:	6878      	ldr	r0, [r7, #4]
 8014e04:	f001 fb1e 	bl	8016444 <UART_EndRxTransfer>
 8014e08:	687b      	ldr	r3, [r7, #4]
 8014e0a:	681b      	ldr	r3, [r3, #0]
 8014e0c:	689b      	ldr	r3, [r3, #8]
 8014e0e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8014e12:	2b40      	cmp	r3, #64	; 0x40
 8014e14:	d146      	bne.n	8014ea4 <HAL_UART_IRQHandler+0x29c>
 8014e16:	687b      	ldr	r3, [r7, #4]
 8014e18:	681b      	ldr	r3, [r3, #0]
 8014e1a:	3308      	adds	r3, #8
 8014e1c:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8014e20:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8014e24:	e853 3f00 	ldrex	r3, [r3]
 8014e28:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8014e2c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8014e30:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8014e34:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8014e38:	687b      	ldr	r3, [r7, #4]
 8014e3a:	681b      	ldr	r3, [r3, #0]
 8014e3c:	3308      	adds	r3, #8
 8014e3e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8014e42:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8014e46:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8014e4a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8014e4e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8014e52:	e841 2300 	strex	r3, r2, [r1]
 8014e56:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8014e5a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8014e5e:	2b00      	cmp	r3, #0
 8014e60:	d1d9      	bne.n	8014e16 <HAL_UART_IRQHandler+0x20e>
 8014e62:	687b      	ldr	r3, [r7, #4]
 8014e64:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e68:	2b00      	cmp	r3, #0
 8014e6a:	d017      	beq.n	8014e9c <HAL_UART_IRQHandler+0x294>
 8014e6c:	687b      	ldr	r3, [r7, #4]
 8014e6e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e72:	4a15      	ldr	r2, [pc, #84]	; (8014ec8 <HAL_UART_IRQHandler+0x2c0>)
 8014e74:	651a      	str	r2, [r3, #80]	; 0x50
 8014e76:	687b      	ldr	r3, [r7, #4]
 8014e78:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e7c:	4618      	mov	r0, r3
 8014e7e:	f7f4 fbc3 	bl	8009608 <HAL_DMA_Abort_IT>
 8014e82:	4603      	mov	r3, r0
 8014e84:	2b00      	cmp	r3, #0
 8014e86:	d019      	beq.n	8014ebc <HAL_UART_IRQHandler+0x2b4>
 8014e88:	687b      	ldr	r3, [r7, #4]
 8014e8a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e8e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014e90:	687a      	ldr	r2, [r7, #4]
 8014e92:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8014e96:	4610      	mov	r0, r2
 8014e98:	4798      	blx	r3
 8014e9a:	e00f      	b.n	8014ebc <HAL_UART_IRQHandler+0x2b4>
 8014e9c:	6878      	ldr	r0, [r7, #4]
 8014e9e:	f000 fa77 	bl	8015390 <HAL_UART_ErrorCallback>
 8014ea2:	e00b      	b.n	8014ebc <HAL_UART_IRQHandler+0x2b4>
 8014ea4:	6878      	ldr	r0, [r7, #4]
 8014ea6:	f000 fa73 	bl	8015390 <HAL_UART_ErrorCallback>
 8014eaa:	e007      	b.n	8014ebc <HAL_UART_IRQHandler+0x2b4>
 8014eac:	6878      	ldr	r0, [r7, #4]
 8014eae:	f000 fa6f 	bl	8015390 <HAL_UART_ErrorCallback>
 8014eb2:	687b      	ldr	r3, [r7, #4]
 8014eb4:	2200      	movs	r2, #0
 8014eb6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8014eba:	e253      	b.n	8015364 <HAL_UART_IRQHandler+0x75c>
 8014ebc:	bf00      	nop
 8014ebe:	e251      	b.n	8015364 <HAL_UART_IRQHandler+0x75c>
 8014ec0:	10000001 	.word	0x10000001
 8014ec4:	04000120 	.word	0x04000120
 8014ec8:	08016511 	.word	0x08016511
 8014ecc:	687b      	ldr	r3, [r7, #4]
 8014ece:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014ed0:	2b01      	cmp	r3, #1
 8014ed2:	f040 81e7 	bne.w	80152a4 <HAL_UART_IRQHandler+0x69c>
 8014ed6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8014eda:	f003 0310 	and.w	r3, r3, #16
 8014ede:	2b00      	cmp	r3, #0
 8014ee0:	f000 81e0 	beq.w	80152a4 <HAL_UART_IRQHandler+0x69c>
 8014ee4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8014ee8:	f003 0310 	and.w	r3, r3, #16
 8014eec:	2b00      	cmp	r3, #0
 8014eee:	f000 81d9 	beq.w	80152a4 <HAL_UART_IRQHandler+0x69c>
 8014ef2:	687b      	ldr	r3, [r7, #4]
 8014ef4:	681b      	ldr	r3, [r3, #0]
 8014ef6:	2210      	movs	r2, #16
 8014ef8:	621a      	str	r2, [r3, #32]
 8014efa:	687b      	ldr	r3, [r7, #4]
 8014efc:	681b      	ldr	r3, [r3, #0]
 8014efe:	689b      	ldr	r3, [r3, #8]
 8014f00:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8014f04:	2b40      	cmp	r3, #64	; 0x40
 8014f06:	f040 8151 	bne.w	80151ac <HAL_UART_IRQHandler+0x5a4>
 8014f0a:	687b      	ldr	r3, [r7, #4]
 8014f0c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f10:	681b      	ldr	r3, [r3, #0]
 8014f12:	4a96      	ldr	r2, [pc, #600]	; (801516c <HAL_UART_IRQHandler+0x564>)
 8014f14:	4293      	cmp	r3, r2
 8014f16:	d068      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f18:	687b      	ldr	r3, [r7, #4]
 8014f1a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f1e:	681b      	ldr	r3, [r3, #0]
 8014f20:	4a93      	ldr	r2, [pc, #588]	; (8015170 <HAL_UART_IRQHandler+0x568>)
 8014f22:	4293      	cmp	r3, r2
 8014f24:	d061      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f26:	687b      	ldr	r3, [r7, #4]
 8014f28:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f2c:	681b      	ldr	r3, [r3, #0]
 8014f2e:	4a91      	ldr	r2, [pc, #580]	; (8015174 <HAL_UART_IRQHandler+0x56c>)
 8014f30:	4293      	cmp	r3, r2
 8014f32:	d05a      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f34:	687b      	ldr	r3, [r7, #4]
 8014f36:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f3a:	681b      	ldr	r3, [r3, #0]
 8014f3c:	4a8e      	ldr	r2, [pc, #568]	; (8015178 <HAL_UART_IRQHandler+0x570>)
 8014f3e:	4293      	cmp	r3, r2
 8014f40:	d053      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f42:	687b      	ldr	r3, [r7, #4]
 8014f44:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f48:	681b      	ldr	r3, [r3, #0]
 8014f4a:	4a8c      	ldr	r2, [pc, #560]	; (801517c <HAL_UART_IRQHandler+0x574>)
 8014f4c:	4293      	cmp	r3, r2
 8014f4e:	d04c      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f50:	687b      	ldr	r3, [r7, #4]
 8014f52:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f56:	681b      	ldr	r3, [r3, #0]
 8014f58:	4a89      	ldr	r2, [pc, #548]	; (8015180 <HAL_UART_IRQHandler+0x578>)
 8014f5a:	4293      	cmp	r3, r2
 8014f5c:	d045      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f5e:	687b      	ldr	r3, [r7, #4]
 8014f60:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f64:	681b      	ldr	r3, [r3, #0]
 8014f66:	4a87      	ldr	r2, [pc, #540]	; (8015184 <HAL_UART_IRQHandler+0x57c>)
 8014f68:	4293      	cmp	r3, r2
 8014f6a:	d03e      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f6c:	687b      	ldr	r3, [r7, #4]
 8014f6e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f72:	681b      	ldr	r3, [r3, #0]
 8014f74:	4a84      	ldr	r2, [pc, #528]	; (8015188 <HAL_UART_IRQHandler+0x580>)
 8014f76:	4293      	cmp	r3, r2
 8014f78:	d037      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f7a:	687b      	ldr	r3, [r7, #4]
 8014f7c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f80:	681b      	ldr	r3, [r3, #0]
 8014f82:	4a82      	ldr	r2, [pc, #520]	; (801518c <HAL_UART_IRQHandler+0x584>)
 8014f84:	4293      	cmp	r3, r2
 8014f86:	d030      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f88:	687b      	ldr	r3, [r7, #4]
 8014f8a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f8e:	681b      	ldr	r3, [r3, #0]
 8014f90:	4a7f      	ldr	r2, [pc, #508]	; (8015190 <HAL_UART_IRQHandler+0x588>)
 8014f92:	4293      	cmp	r3, r2
 8014f94:	d029      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014f96:	687b      	ldr	r3, [r7, #4]
 8014f98:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f9c:	681b      	ldr	r3, [r3, #0]
 8014f9e:	4a7d      	ldr	r2, [pc, #500]	; (8015194 <HAL_UART_IRQHandler+0x58c>)
 8014fa0:	4293      	cmp	r3, r2
 8014fa2:	d022      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014fa4:	687b      	ldr	r3, [r7, #4]
 8014fa6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014faa:	681b      	ldr	r3, [r3, #0]
 8014fac:	4a7a      	ldr	r2, [pc, #488]	; (8015198 <HAL_UART_IRQHandler+0x590>)
 8014fae:	4293      	cmp	r3, r2
 8014fb0:	d01b      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014fb2:	687b      	ldr	r3, [r7, #4]
 8014fb4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014fb8:	681b      	ldr	r3, [r3, #0]
 8014fba:	4a78      	ldr	r2, [pc, #480]	; (801519c <HAL_UART_IRQHandler+0x594>)
 8014fbc:	4293      	cmp	r3, r2
 8014fbe:	d014      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014fc0:	687b      	ldr	r3, [r7, #4]
 8014fc2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014fc6:	681b      	ldr	r3, [r3, #0]
 8014fc8:	4a75      	ldr	r2, [pc, #468]	; (80151a0 <HAL_UART_IRQHandler+0x598>)
 8014fca:	4293      	cmp	r3, r2
 8014fcc:	d00d      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014fce:	687b      	ldr	r3, [r7, #4]
 8014fd0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014fd4:	681b      	ldr	r3, [r3, #0]
 8014fd6:	4a73      	ldr	r2, [pc, #460]	; (80151a4 <HAL_UART_IRQHandler+0x59c>)
 8014fd8:	4293      	cmp	r3, r2
 8014fda:	d006      	beq.n	8014fea <HAL_UART_IRQHandler+0x3e2>
 8014fdc:	687b      	ldr	r3, [r7, #4]
 8014fde:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014fe2:	681b      	ldr	r3, [r3, #0]
 8014fe4:	4a70      	ldr	r2, [pc, #448]	; (80151a8 <HAL_UART_IRQHandler+0x5a0>)
 8014fe6:	4293      	cmp	r3, r2
 8014fe8:	d106      	bne.n	8014ff8 <HAL_UART_IRQHandler+0x3f0>
 8014fea:	687b      	ldr	r3, [r7, #4]
 8014fec:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014ff0:	681b      	ldr	r3, [r3, #0]
 8014ff2:	685b      	ldr	r3, [r3, #4]
 8014ff4:	b29b      	uxth	r3, r3
 8014ff6:	e005      	b.n	8015004 <HAL_UART_IRQHandler+0x3fc>
 8014ff8:	687b      	ldr	r3, [r7, #4]
 8014ffa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014ffe:	681b      	ldr	r3, [r3, #0]
 8015000:	685b      	ldr	r3, [r3, #4]
 8015002:	b29b      	uxth	r3, r3
 8015004:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8015008:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 801500c:	2b00      	cmp	r3, #0
 801500e:	f000 81ab 	beq.w	8015368 <HAL_UART_IRQHandler+0x760>
 8015012:	687b      	ldr	r3, [r7, #4]
 8015014:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8015018:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 801501c:	429a      	cmp	r2, r3
 801501e:	f080 81a3 	bcs.w	8015368 <HAL_UART_IRQHandler+0x760>
 8015022:	687b      	ldr	r3, [r7, #4]
 8015024:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8015028:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 801502c:	687b      	ldr	r3, [r7, #4]
 801502e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015032:	69db      	ldr	r3, [r3, #28]
 8015034:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8015038:	f000 8087 	beq.w	801514a <HAL_UART_IRQHandler+0x542>
 801503c:	687b      	ldr	r3, [r7, #4]
 801503e:	681b      	ldr	r3, [r3, #0]
 8015040:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8015044:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8015048:	e853 3f00 	ldrex	r3, [r3]
 801504c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8015050:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8015054:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8015058:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 801505c:	687b      	ldr	r3, [r7, #4]
 801505e:	681b      	ldr	r3, [r3, #0]
 8015060:	461a      	mov	r2, r3
 8015062:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8015066:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 801506a:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 801506e:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8015072:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8015076:	e841 2300 	strex	r3, r2, [r1]
 801507a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 801507e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8015082:	2b00      	cmp	r3, #0
 8015084:	d1da      	bne.n	801503c <HAL_UART_IRQHandler+0x434>
 8015086:	687b      	ldr	r3, [r7, #4]
 8015088:	681b      	ldr	r3, [r3, #0]
 801508a:	3308      	adds	r3, #8
 801508c:	677b      	str	r3, [r7, #116]	; 0x74
 801508e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8015090:	e853 3f00 	ldrex	r3, [r3]
 8015094:	673b      	str	r3, [r7, #112]	; 0x70
 8015096:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8015098:	f023 0301 	bic.w	r3, r3, #1
 801509c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80150a0:	687b      	ldr	r3, [r7, #4]
 80150a2:	681b      	ldr	r3, [r3, #0]
 80150a4:	3308      	adds	r3, #8
 80150a6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80150aa:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 80150ae:	67fb      	str	r3, [r7, #124]	; 0x7c
 80150b0:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 80150b2:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 80150b6:	e841 2300 	strex	r3, r2, [r1]
 80150ba:	67bb      	str	r3, [r7, #120]	; 0x78
 80150bc:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80150be:	2b00      	cmp	r3, #0
 80150c0:	d1e1      	bne.n	8015086 <HAL_UART_IRQHandler+0x47e>
 80150c2:	687b      	ldr	r3, [r7, #4]
 80150c4:	681b      	ldr	r3, [r3, #0]
 80150c6:	3308      	adds	r3, #8
 80150c8:	663b      	str	r3, [r7, #96]	; 0x60
 80150ca:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80150cc:	e853 3f00 	ldrex	r3, [r3]
 80150d0:	65fb      	str	r3, [r7, #92]	; 0x5c
 80150d2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80150d4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80150d8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80150dc:	687b      	ldr	r3, [r7, #4]
 80150de:	681b      	ldr	r3, [r3, #0]
 80150e0:	3308      	adds	r3, #8
 80150e2:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 80150e6:	66fa      	str	r2, [r7, #108]	; 0x6c
 80150e8:	66bb      	str	r3, [r7, #104]	; 0x68
 80150ea:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 80150ec:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80150ee:	e841 2300 	strex	r3, r2, [r1]
 80150f2:	667b      	str	r3, [r7, #100]	; 0x64
 80150f4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80150f6:	2b00      	cmp	r3, #0
 80150f8:	d1e3      	bne.n	80150c2 <HAL_UART_IRQHandler+0x4ba>
 80150fa:	687b      	ldr	r3, [r7, #4]
 80150fc:	2220      	movs	r2, #32
 80150fe:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8015102:	687b      	ldr	r3, [r7, #4]
 8015104:	2200      	movs	r2, #0
 8015106:	66da      	str	r2, [r3, #108]	; 0x6c
 8015108:	687b      	ldr	r3, [r7, #4]
 801510a:	681b      	ldr	r3, [r3, #0]
 801510c:	64fb      	str	r3, [r7, #76]	; 0x4c
 801510e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8015110:	e853 3f00 	ldrex	r3, [r3]
 8015114:	64bb      	str	r3, [r7, #72]	; 0x48
 8015116:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015118:	f023 0310 	bic.w	r3, r3, #16
 801511c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8015120:	687b      	ldr	r3, [r7, #4]
 8015122:	681b      	ldr	r3, [r3, #0]
 8015124:	461a      	mov	r2, r3
 8015126:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 801512a:	65bb      	str	r3, [r7, #88]	; 0x58
 801512c:	657a      	str	r2, [r7, #84]	; 0x54
 801512e:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8015130:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8015132:	e841 2300 	strex	r3, r2, [r1]
 8015136:	653b      	str	r3, [r7, #80]	; 0x50
 8015138:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801513a:	2b00      	cmp	r3, #0
 801513c:	d1e4      	bne.n	8015108 <HAL_UART_IRQHandler+0x500>
 801513e:	687b      	ldr	r3, [r7, #4]
 8015140:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015144:	4618      	mov	r0, r3
 8015146:	f7f3 ff41 	bl	8008fcc <HAL_DMA_Abort>
 801514a:	687b      	ldr	r3, [r7, #4]
 801514c:	2202      	movs	r2, #2
 801514e:	671a      	str	r2, [r3, #112]	; 0x70
 8015150:	687b      	ldr	r3, [r7, #4]
 8015152:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 8015156:	687b      	ldr	r3, [r7, #4]
 8015158:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 801515c:	b29b      	uxth	r3, r3
 801515e:	1ad3      	subs	r3, r2, r3
 8015160:	b29b      	uxth	r3, r3
 8015162:	4619      	mov	r1, r3
 8015164:	6878      	ldr	r0, [r7, #4]
 8015166:	f000 f91d 	bl	80153a4 <HAL_UARTEx_RxEventCallback>
 801516a:	e0fd      	b.n	8015368 <HAL_UART_IRQHandler+0x760>
 801516c:	40020010 	.word	0x40020010
 8015170:	40020028 	.word	0x40020028
 8015174:	40020040 	.word	0x40020040
 8015178:	40020058 	.word	0x40020058
 801517c:	40020070 	.word	0x40020070
 8015180:	40020088 	.word	0x40020088
 8015184:	400200a0 	.word	0x400200a0
 8015188:	400200b8 	.word	0x400200b8
 801518c:	40020410 	.word	0x40020410
 8015190:	40020428 	.word	0x40020428
 8015194:	40020440 	.word	0x40020440
 8015198:	40020458 	.word	0x40020458
 801519c:	40020470 	.word	0x40020470
 80151a0:	40020488 	.word	0x40020488
 80151a4:	400204a0 	.word	0x400204a0
 80151a8:	400204b8 	.word	0x400204b8
 80151ac:	687b      	ldr	r3, [r7, #4]
 80151ae:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 80151b2:	687b      	ldr	r3, [r7, #4]
 80151b4:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80151b8:	b29b      	uxth	r3, r3
 80151ba:	1ad3      	subs	r3, r2, r3
 80151bc:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 80151c0:	687b      	ldr	r3, [r7, #4]
 80151c2:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80151c6:	b29b      	uxth	r3, r3
 80151c8:	2b00      	cmp	r3, #0
 80151ca:	f000 80cf 	beq.w	801536c <HAL_UART_IRQHandler+0x764>
 80151ce:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80151d2:	2b00      	cmp	r3, #0
 80151d4:	f000 80ca 	beq.w	801536c <HAL_UART_IRQHandler+0x764>
 80151d8:	687b      	ldr	r3, [r7, #4]
 80151da:	681b      	ldr	r3, [r3, #0]
 80151dc:	63bb      	str	r3, [r7, #56]	; 0x38
 80151de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80151e0:	e853 3f00 	ldrex	r3, [r3]
 80151e4:	637b      	str	r3, [r7, #52]	; 0x34
 80151e6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80151e8:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80151ec:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80151f0:	687b      	ldr	r3, [r7, #4]
 80151f2:	681b      	ldr	r3, [r3, #0]
 80151f4:	461a      	mov	r2, r3
 80151f6:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 80151fa:	647b      	str	r3, [r7, #68]	; 0x44
 80151fc:	643a      	str	r2, [r7, #64]	; 0x40
 80151fe:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8015200:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8015202:	e841 2300 	strex	r3, r2, [r1]
 8015206:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015208:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801520a:	2b00      	cmp	r3, #0
 801520c:	d1e4      	bne.n	80151d8 <HAL_UART_IRQHandler+0x5d0>
 801520e:	687b      	ldr	r3, [r7, #4]
 8015210:	681b      	ldr	r3, [r3, #0]
 8015212:	3308      	adds	r3, #8
 8015214:	627b      	str	r3, [r7, #36]	; 0x24
 8015216:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8015218:	e853 3f00 	ldrex	r3, [r3]
 801521c:	623b      	str	r3, [r7, #32]
 801521e:	6a3a      	ldr	r2, [r7, #32]
 8015220:	4b55      	ldr	r3, [pc, #340]	; (8015378 <HAL_UART_IRQHandler+0x770>)
 8015222:	4013      	ands	r3, r2
 8015224:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8015228:	687b      	ldr	r3, [r7, #4]
 801522a:	681b      	ldr	r3, [r3, #0]
 801522c:	3308      	adds	r3, #8
 801522e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8015232:	633a      	str	r2, [r7, #48]	; 0x30
 8015234:	62fb      	str	r3, [r7, #44]	; 0x2c
 8015236:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8015238:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801523a:	e841 2300 	strex	r3, r2, [r1]
 801523e:	62bb      	str	r3, [r7, #40]	; 0x28
 8015240:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8015242:	2b00      	cmp	r3, #0
 8015244:	d1e3      	bne.n	801520e <HAL_UART_IRQHandler+0x606>
 8015246:	687b      	ldr	r3, [r7, #4]
 8015248:	2220      	movs	r2, #32
 801524a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 801524e:	687b      	ldr	r3, [r7, #4]
 8015250:	2200      	movs	r2, #0
 8015252:	66da      	str	r2, [r3, #108]	; 0x6c
 8015254:	687b      	ldr	r3, [r7, #4]
 8015256:	2200      	movs	r2, #0
 8015258:	675a      	str	r2, [r3, #116]	; 0x74
 801525a:	687b      	ldr	r3, [r7, #4]
 801525c:	681b      	ldr	r3, [r3, #0]
 801525e:	613b      	str	r3, [r7, #16]
 8015260:	693b      	ldr	r3, [r7, #16]
 8015262:	e853 3f00 	ldrex	r3, [r3]
 8015266:	60fb      	str	r3, [r7, #12]
 8015268:	68fb      	ldr	r3, [r7, #12]
 801526a:	f023 0310 	bic.w	r3, r3, #16
 801526e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8015272:	687b      	ldr	r3, [r7, #4]
 8015274:	681b      	ldr	r3, [r3, #0]
 8015276:	461a      	mov	r2, r3
 8015278:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 801527c:	61fb      	str	r3, [r7, #28]
 801527e:	61ba      	str	r2, [r7, #24]
 8015280:	69b9      	ldr	r1, [r7, #24]
 8015282:	69fa      	ldr	r2, [r7, #28]
 8015284:	e841 2300 	strex	r3, r2, [r1]
 8015288:	617b      	str	r3, [r7, #20]
 801528a:	697b      	ldr	r3, [r7, #20]
 801528c:	2b00      	cmp	r3, #0
 801528e:	d1e4      	bne.n	801525a <HAL_UART_IRQHandler+0x652>
 8015290:	687b      	ldr	r3, [r7, #4]
 8015292:	2202      	movs	r2, #2
 8015294:	671a      	str	r2, [r3, #112]	; 0x70
 8015296:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 801529a:	4619      	mov	r1, r3
 801529c:	6878      	ldr	r0, [r7, #4]
 801529e:	f000 f881 	bl	80153a4 <HAL_UARTEx_RxEventCallback>
 80152a2:	e063      	b.n	801536c <HAL_UART_IRQHandler+0x764>
 80152a4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80152a8:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80152ac:	2b00      	cmp	r3, #0
 80152ae:	d00e      	beq.n	80152ce <HAL_UART_IRQHandler+0x6c6>
 80152b0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80152b4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80152b8:	2b00      	cmp	r3, #0
 80152ba:	d008      	beq.n	80152ce <HAL_UART_IRQHandler+0x6c6>
 80152bc:	687b      	ldr	r3, [r7, #4]
 80152be:	681b      	ldr	r3, [r3, #0]
 80152c0:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80152c4:	621a      	str	r2, [r3, #32]
 80152c6:	6878      	ldr	r0, [r7, #4]
 80152c8:	f001 fe80 	bl	8016fcc <HAL_UARTEx_WakeupCallback>
 80152cc:	e051      	b.n	8015372 <HAL_UART_IRQHandler+0x76a>
 80152ce:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80152d2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80152d6:	2b00      	cmp	r3, #0
 80152d8:	d014      	beq.n	8015304 <HAL_UART_IRQHandler+0x6fc>
 80152da:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80152de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80152e2:	2b00      	cmp	r3, #0
 80152e4:	d105      	bne.n	80152f2 <HAL_UART_IRQHandler+0x6ea>
 80152e6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80152ea:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80152ee:	2b00      	cmp	r3, #0
 80152f0:	d008      	beq.n	8015304 <HAL_UART_IRQHandler+0x6fc>
 80152f2:	687b      	ldr	r3, [r7, #4]
 80152f4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80152f6:	2b00      	cmp	r3, #0
 80152f8:	d03a      	beq.n	8015370 <HAL_UART_IRQHandler+0x768>
 80152fa:	687b      	ldr	r3, [r7, #4]
 80152fc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80152fe:	6878      	ldr	r0, [r7, #4]
 8015300:	4798      	blx	r3
 8015302:	e035      	b.n	8015370 <HAL_UART_IRQHandler+0x768>
 8015304:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8015308:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801530c:	2b00      	cmp	r3, #0
 801530e:	d009      	beq.n	8015324 <HAL_UART_IRQHandler+0x71c>
 8015310:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8015314:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8015318:	2b00      	cmp	r3, #0
 801531a:	d003      	beq.n	8015324 <HAL_UART_IRQHandler+0x71c>
 801531c:	6878      	ldr	r0, [r7, #4]
 801531e:	f001 f90d 	bl	801653c <UART_EndTransmit_IT>
 8015322:	e026      	b.n	8015372 <HAL_UART_IRQHandler+0x76a>
 8015324:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8015328:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 801532c:	2b00      	cmp	r3, #0
 801532e:	d009      	beq.n	8015344 <HAL_UART_IRQHandler+0x73c>
 8015330:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8015334:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8015338:	2b00      	cmp	r3, #0
 801533a:	d003      	beq.n	8015344 <HAL_UART_IRQHandler+0x73c>
 801533c:	6878      	ldr	r0, [r7, #4]
 801533e:	f001 fe59 	bl	8016ff4 <HAL_UARTEx_TxFifoEmptyCallback>
 8015342:	e016      	b.n	8015372 <HAL_UART_IRQHandler+0x76a>
 8015344:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8015348:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801534c:	2b00      	cmp	r3, #0
 801534e:	d010      	beq.n	8015372 <HAL_UART_IRQHandler+0x76a>
 8015350:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8015354:	2b00      	cmp	r3, #0
 8015356:	da0c      	bge.n	8015372 <HAL_UART_IRQHandler+0x76a>
 8015358:	6878      	ldr	r0, [r7, #4]
 801535a:	f001 fe41 	bl	8016fe0 <HAL_UARTEx_RxFifoFullCallback>
 801535e:	e008      	b.n	8015372 <HAL_UART_IRQHandler+0x76a>
 8015360:	bf00      	nop
 8015362:	e006      	b.n	8015372 <HAL_UART_IRQHandler+0x76a>
 8015364:	bf00      	nop
 8015366:	e004      	b.n	8015372 <HAL_UART_IRQHandler+0x76a>
 8015368:	bf00      	nop
 801536a:	e002      	b.n	8015372 <HAL_UART_IRQHandler+0x76a>
 801536c:	bf00      	nop
 801536e:	e000      	b.n	8015372 <HAL_UART_IRQHandler+0x76a>
 8015370:	bf00      	nop
 8015372:	37e8      	adds	r7, #232	; 0xe8
 8015374:	46bd      	mov	sp, r7
 8015376:	bd80      	pop	{r7, pc}
 8015378:	effffffe 	.word	0xeffffffe

0801537c <HAL_UART_TxCpltCallback>:
 801537c:	b480      	push	{r7}
 801537e:	b083      	sub	sp, #12
 8015380:	af00      	add	r7, sp, #0
 8015382:	6078      	str	r0, [r7, #4]
 8015384:	bf00      	nop
 8015386:	370c      	adds	r7, #12
 8015388:	46bd      	mov	sp, r7
 801538a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801538e:	4770      	bx	lr

08015390 <HAL_UART_ErrorCallback>:
 8015390:	b480      	push	{r7}
 8015392:	b083      	sub	sp, #12
 8015394:	af00      	add	r7, sp, #0
 8015396:	6078      	str	r0, [r7, #4]
 8015398:	bf00      	nop
 801539a:	370c      	adds	r7, #12
 801539c:	46bd      	mov	sp, r7
 801539e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80153a2:	4770      	bx	lr

080153a4 <HAL_UARTEx_RxEventCallback>:
 80153a4:	b480      	push	{r7}
 80153a6:	b083      	sub	sp, #12
 80153a8:	af00      	add	r7, sp, #0
 80153aa:	6078      	str	r0, [r7, #4]
 80153ac:	460b      	mov	r3, r1
 80153ae:	807b      	strh	r3, [r7, #2]
 80153b0:	bf00      	nop
 80153b2:	370c      	adds	r7, #12
 80153b4:	46bd      	mov	sp, r7
 80153b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80153ba:	4770      	bx	lr

080153bc <UART_SetConfig>:
 80153bc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80153c0:	b092      	sub	sp, #72	; 0x48
 80153c2:	af00      	add	r7, sp, #0
 80153c4:	6178      	str	r0, [r7, #20]
 80153c6:	2300      	movs	r3, #0
 80153c8:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 80153cc:	697b      	ldr	r3, [r7, #20]
 80153ce:	689a      	ldr	r2, [r3, #8]
 80153d0:	697b      	ldr	r3, [r7, #20]
 80153d2:	691b      	ldr	r3, [r3, #16]
 80153d4:	431a      	orrs	r2, r3
 80153d6:	697b      	ldr	r3, [r7, #20]
 80153d8:	695b      	ldr	r3, [r3, #20]
 80153da:	431a      	orrs	r2, r3
 80153dc:	697b      	ldr	r3, [r7, #20]
 80153de:	69db      	ldr	r3, [r3, #28]
 80153e0:	4313      	orrs	r3, r2
 80153e2:	647b      	str	r3, [r7, #68]	; 0x44
 80153e4:	697b      	ldr	r3, [r7, #20]
 80153e6:	681b      	ldr	r3, [r3, #0]
 80153e8:	681a      	ldr	r2, [r3, #0]
 80153ea:	4bbe      	ldr	r3, [pc, #760]	; (80156e4 <UART_SetConfig+0x328>)
 80153ec:	4013      	ands	r3, r2
 80153ee:	697a      	ldr	r2, [r7, #20]
 80153f0:	6812      	ldr	r2, [r2, #0]
 80153f2:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80153f4:	430b      	orrs	r3, r1
 80153f6:	6013      	str	r3, [r2, #0]
 80153f8:	697b      	ldr	r3, [r7, #20]
 80153fa:	681b      	ldr	r3, [r3, #0]
 80153fc:	685b      	ldr	r3, [r3, #4]
 80153fe:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8015402:	697b      	ldr	r3, [r7, #20]
 8015404:	68da      	ldr	r2, [r3, #12]
 8015406:	697b      	ldr	r3, [r7, #20]
 8015408:	681b      	ldr	r3, [r3, #0]
 801540a:	430a      	orrs	r2, r1
 801540c:	605a      	str	r2, [r3, #4]
 801540e:	697b      	ldr	r3, [r7, #20]
 8015410:	699b      	ldr	r3, [r3, #24]
 8015412:	647b      	str	r3, [r7, #68]	; 0x44
 8015414:	697b      	ldr	r3, [r7, #20]
 8015416:	681b      	ldr	r3, [r3, #0]
 8015418:	4ab3      	ldr	r2, [pc, #716]	; (80156e8 <UART_SetConfig+0x32c>)
 801541a:	4293      	cmp	r3, r2
 801541c:	d004      	beq.n	8015428 <UART_SetConfig+0x6c>
 801541e:	697b      	ldr	r3, [r7, #20]
 8015420:	6a1b      	ldr	r3, [r3, #32]
 8015422:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8015424:	4313      	orrs	r3, r2
 8015426:	647b      	str	r3, [r7, #68]	; 0x44
 8015428:	697b      	ldr	r3, [r7, #20]
 801542a:	681b      	ldr	r3, [r3, #0]
 801542c:	689a      	ldr	r2, [r3, #8]
 801542e:	4baf      	ldr	r3, [pc, #700]	; (80156ec <UART_SetConfig+0x330>)
 8015430:	4013      	ands	r3, r2
 8015432:	697a      	ldr	r2, [r7, #20]
 8015434:	6812      	ldr	r2, [r2, #0]
 8015436:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8015438:	430b      	orrs	r3, r1
 801543a:	6093      	str	r3, [r2, #8]
 801543c:	697b      	ldr	r3, [r7, #20]
 801543e:	681b      	ldr	r3, [r3, #0]
 8015440:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015442:	f023 010f 	bic.w	r1, r3, #15
 8015446:	697b      	ldr	r3, [r7, #20]
 8015448:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 801544a:	697b      	ldr	r3, [r7, #20]
 801544c:	681b      	ldr	r3, [r3, #0]
 801544e:	430a      	orrs	r2, r1
 8015450:	62da      	str	r2, [r3, #44]	; 0x2c
 8015452:	697b      	ldr	r3, [r7, #20]
 8015454:	681b      	ldr	r3, [r3, #0]
 8015456:	4aa6      	ldr	r2, [pc, #664]	; (80156f0 <UART_SetConfig+0x334>)
 8015458:	4293      	cmp	r3, r2
 801545a:	d177      	bne.n	801554c <UART_SetConfig+0x190>
 801545c:	4ba5      	ldr	r3, [pc, #660]	; (80156f4 <UART_SetConfig+0x338>)
 801545e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015460:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8015464:	2b28      	cmp	r3, #40	; 0x28
 8015466:	d86d      	bhi.n	8015544 <UART_SetConfig+0x188>
 8015468:	a201      	add	r2, pc, #4	; (adr r2, 8015470 <UART_SetConfig+0xb4>)
 801546a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801546e:	bf00      	nop
 8015470:	08015515 	.word	0x08015515
 8015474:	08015545 	.word	0x08015545
 8015478:	08015545 	.word	0x08015545
 801547c:	08015545 	.word	0x08015545
 8015480:	08015545 	.word	0x08015545
 8015484:	08015545 	.word	0x08015545
 8015488:	08015545 	.word	0x08015545
 801548c:	08015545 	.word	0x08015545
 8015490:	0801551d 	.word	0x0801551d
 8015494:	08015545 	.word	0x08015545
 8015498:	08015545 	.word	0x08015545
 801549c:	08015545 	.word	0x08015545
 80154a0:	08015545 	.word	0x08015545
 80154a4:	08015545 	.word	0x08015545
 80154a8:	08015545 	.word	0x08015545
 80154ac:	08015545 	.word	0x08015545
 80154b0:	08015525 	.word	0x08015525
 80154b4:	08015545 	.word	0x08015545
 80154b8:	08015545 	.word	0x08015545
 80154bc:	08015545 	.word	0x08015545
 80154c0:	08015545 	.word	0x08015545
 80154c4:	08015545 	.word	0x08015545
 80154c8:	08015545 	.word	0x08015545
 80154cc:	08015545 	.word	0x08015545
 80154d0:	0801552d 	.word	0x0801552d
 80154d4:	08015545 	.word	0x08015545
 80154d8:	08015545 	.word	0x08015545
 80154dc:	08015545 	.word	0x08015545
 80154e0:	08015545 	.word	0x08015545
 80154e4:	08015545 	.word	0x08015545
 80154e8:	08015545 	.word	0x08015545
 80154ec:	08015545 	.word	0x08015545
 80154f0:	08015535 	.word	0x08015535
 80154f4:	08015545 	.word	0x08015545
 80154f8:	08015545 	.word	0x08015545
 80154fc:	08015545 	.word	0x08015545
 8015500:	08015545 	.word	0x08015545
 8015504:	08015545 	.word	0x08015545
 8015508:	08015545 	.word	0x08015545
 801550c:	08015545 	.word	0x08015545
 8015510:	0801553d 	.word	0x0801553d
 8015514:	2301      	movs	r3, #1
 8015516:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801551a:	e222      	b.n	8015962 <UART_SetConfig+0x5a6>
 801551c:	2304      	movs	r3, #4
 801551e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015522:	e21e      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015524:	2308      	movs	r3, #8
 8015526:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801552a:	e21a      	b.n	8015962 <UART_SetConfig+0x5a6>
 801552c:	2310      	movs	r3, #16
 801552e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015532:	e216      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015534:	2320      	movs	r3, #32
 8015536:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801553a:	e212      	b.n	8015962 <UART_SetConfig+0x5a6>
 801553c:	2340      	movs	r3, #64	; 0x40
 801553e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015542:	e20e      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015544:	2380      	movs	r3, #128	; 0x80
 8015546:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801554a:	e20a      	b.n	8015962 <UART_SetConfig+0x5a6>
 801554c:	697b      	ldr	r3, [r7, #20]
 801554e:	681b      	ldr	r3, [r3, #0]
 8015550:	4a69      	ldr	r2, [pc, #420]	; (80156f8 <UART_SetConfig+0x33c>)
 8015552:	4293      	cmp	r3, r2
 8015554:	d130      	bne.n	80155b8 <UART_SetConfig+0x1fc>
 8015556:	4b67      	ldr	r3, [pc, #412]	; (80156f4 <UART_SetConfig+0x338>)
 8015558:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801555a:	f003 0307 	and.w	r3, r3, #7
 801555e:	2b05      	cmp	r3, #5
 8015560:	d826      	bhi.n	80155b0 <UART_SetConfig+0x1f4>
 8015562:	a201      	add	r2, pc, #4	; (adr r2, 8015568 <UART_SetConfig+0x1ac>)
 8015564:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015568:	08015581 	.word	0x08015581
 801556c:	08015589 	.word	0x08015589
 8015570:	08015591 	.word	0x08015591
 8015574:	08015599 	.word	0x08015599
 8015578:	080155a1 	.word	0x080155a1
 801557c:	080155a9 	.word	0x080155a9
 8015580:	2300      	movs	r3, #0
 8015582:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015586:	e1ec      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015588:	2304      	movs	r3, #4
 801558a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801558e:	e1e8      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015590:	2308      	movs	r3, #8
 8015592:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015596:	e1e4      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015598:	2310      	movs	r3, #16
 801559a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801559e:	e1e0      	b.n	8015962 <UART_SetConfig+0x5a6>
 80155a0:	2320      	movs	r3, #32
 80155a2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80155a6:	e1dc      	b.n	8015962 <UART_SetConfig+0x5a6>
 80155a8:	2340      	movs	r3, #64	; 0x40
 80155aa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80155ae:	e1d8      	b.n	8015962 <UART_SetConfig+0x5a6>
 80155b0:	2380      	movs	r3, #128	; 0x80
 80155b2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80155b6:	e1d4      	b.n	8015962 <UART_SetConfig+0x5a6>
 80155b8:	697b      	ldr	r3, [r7, #20]
 80155ba:	681b      	ldr	r3, [r3, #0]
 80155bc:	4a4f      	ldr	r2, [pc, #316]	; (80156fc <UART_SetConfig+0x340>)
 80155be:	4293      	cmp	r3, r2
 80155c0:	d130      	bne.n	8015624 <UART_SetConfig+0x268>
 80155c2:	4b4c      	ldr	r3, [pc, #304]	; (80156f4 <UART_SetConfig+0x338>)
 80155c4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80155c6:	f003 0307 	and.w	r3, r3, #7
 80155ca:	2b05      	cmp	r3, #5
 80155cc:	d826      	bhi.n	801561c <UART_SetConfig+0x260>
 80155ce:	a201      	add	r2, pc, #4	; (adr r2, 80155d4 <UART_SetConfig+0x218>)
 80155d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80155d4:	080155ed 	.word	0x080155ed
 80155d8:	080155f5 	.word	0x080155f5
 80155dc:	080155fd 	.word	0x080155fd
 80155e0:	08015605 	.word	0x08015605
 80155e4:	0801560d 	.word	0x0801560d
 80155e8:	08015615 	.word	0x08015615
 80155ec:	2300      	movs	r3, #0
 80155ee:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80155f2:	e1b6      	b.n	8015962 <UART_SetConfig+0x5a6>
 80155f4:	2304      	movs	r3, #4
 80155f6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80155fa:	e1b2      	b.n	8015962 <UART_SetConfig+0x5a6>
 80155fc:	2308      	movs	r3, #8
 80155fe:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015602:	e1ae      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015604:	2310      	movs	r3, #16
 8015606:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801560a:	e1aa      	b.n	8015962 <UART_SetConfig+0x5a6>
 801560c:	2320      	movs	r3, #32
 801560e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015612:	e1a6      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015614:	2340      	movs	r3, #64	; 0x40
 8015616:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801561a:	e1a2      	b.n	8015962 <UART_SetConfig+0x5a6>
 801561c:	2380      	movs	r3, #128	; 0x80
 801561e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015622:	e19e      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015624:	697b      	ldr	r3, [r7, #20]
 8015626:	681b      	ldr	r3, [r3, #0]
 8015628:	4a35      	ldr	r2, [pc, #212]	; (8015700 <UART_SetConfig+0x344>)
 801562a:	4293      	cmp	r3, r2
 801562c:	d130      	bne.n	8015690 <UART_SetConfig+0x2d4>
 801562e:	4b31      	ldr	r3, [pc, #196]	; (80156f4 <UART_SetConfig+0x338>)
 8015630:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015632:	f003 0307 	and.w	r3, r3, #7
 8015636:	2b05      	cmp	r3, #5
 8015638:	d826      	bhi.n	8015688 <UART_SetConfig+0x2cc>
 801563a:	a201      	add	r2, pc, #4	; (adr r2, 8015640 <UART_SetConfig+0x284>)
 801563c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015640:	08015659 	.word	0x08015659
 8015644:	08015661 	.word	0x08015661
 8015648:	08015669 	.word	0x08015669
 801564c:	08015671 	.word	0x08015671
 8015650:	08015679 	.word	0x08015679
 8015654:	08015681 	.word	0x08015681
 8015658:	2300      	movs	r3, #0
 801565a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801565e:	e180      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015660:	2304      	movs	r3, #4
 8015662:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015666:	e17c      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015668:	2308      	movs	r3, #8
 801566a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801566e:	e178      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015670:	2310      	movs	r3, #16
 8015672:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015676:	e174      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015678:	2320      	movs	r3, #32
 801567a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801567e:	e170      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015680:	2340      	movs	r3, #64	; 0x40
 8015682:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015686:	e16c      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015688:	2380      	movs	r3, #128	; 0x80
 801568a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801568e:	e168      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015690:	697b      	ldr	r3, [r7, #20]
 8015692:	681b      	ldr	r3, [r3, #0]
 8015694:	4a1b      	ldr	r2, [pc, #108]	; (8015704 <UART_SetConfig+0x348>)
 8015696:	4293      	cmp	r3, r2
 8015698:	d142      	bne.n	8015720 <UART_SetConfig+0x364>
 801569a:	4b16      	ldr	r3, [pc, #88]	; (80156f4 <UART_SetConfig+0x338>)
 801569c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801569e:	f003 0307 	and.w	r3, r3, #7
 80156a2:	2b05      	cmp	r3, #5
 80156a4:	d838      	bhi.n	8015718 <UART_SetConfig+0x35c>
 80156a6:	a201      	add	r2, pc, #4	; (adr r2, 80156ac <UART_SetConfig+0x2f0>)
 80156a8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80156ac:	080156c5 	.word	0x080156c5
 80156b0:	080156cd 	.word	0x080156cd
 80156b4:	080156d5 	.word	0x080156d5
 80156b8:	080156dd 	.word	0x080156dd
 80156bc:	08015709 	.word	0x08015709
 80156c0:	08015711 	.word	0x08015711
 80156c4:	2300      	movs	r3, #0
 80156c6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80156ca:	e14a      	b.n	8015962 <UART_SetConfig+0x5a6>
 80156cc:	2304      	movs	r3, #4
 80156ce:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80156d2:	e146      	b.n	8015962 <UART_SetConfig+0x5a6>
 80156d4:	2308      	movs	r3, #8
 80156d6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80156da:	e142      	b.n	8015962 <UART_SetConfig+0x5a6>
 80156dc:	2310      	movs	r3, #16
 80156de:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80156e2:	e13e      	b.n	8015962 <UART_SetConfig+0x5a6>
 80156e4:	cfff69f3 	.word	0xcfff69f3
 80156e8:	58000c00 	.word	0x58000c00
 80156ec:	11fff4ff 	.word	0x11fff4ff
 80156f0:	40011000 	.word	0x40011000
 80156f4:	58024400 	.word	0x58024400
 80156f8:	40004400 	.word	0x40004400
 80156fc:	40004800 	.word	0x40004800
 8015700:	40004c00 	.word	0x40004c00
 8015704:	40005000 	.word	0x40005000
 8015708:	2320      	movs	r3, #32
 801570a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801570e:	e128      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015710:	2340      	movs	r3, #64	; 0x40
 8015712:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015716:	e124      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015718:	2380      	movs	r3, #128	; 0x80
 801571a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801571e:	e120      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015720:	697b      	ldr	r3, [r7, #20]
 8015722:	681b      	ldr	r3, [r3, #0]
 8015724:	4acb      	ldr	r2, [pc, #812]	; (8015a54 <UART_SetConfig+0x698>)
 8015726:	4293      	cmp	r3, r2
 8015728:	d176      	bne.n	8015818 <UART_SetConfig+0x45c>
 801572a:	4bcb      	ldr	r3, [pc, #812]	; (8015a58 <UART_SetConfig+0x69c>)
 801572c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801572e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8015732:	2b28      	cmp	r3, #40	; 0x28
 8015734:	d86c      	bhi.n	8015810 <UART_SetConfig+0x454>
 8015736:	a201      	add	r2, pc, #4	; (adr r2, 801573c <UART_SetConfig+0x380>)
 8015738:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801573c:	080157e1 	.word	0x080157e1
 8015740:	08015811 	.word	0x08015811
 8015744:	08015811 	.word	0x08015811
 8015748:	08015811 	.word	0x08015811
 801574c:	08015811 	.word	0x08015811
 8015750:	08015811 	.word	0x08015811
 8015754:	08015811 	.word	0x08015811
 8015758:	08015811 	.word	0x08015811
 801575c:	080157e9 	.word	0x080157e9
 8015760:	08015811 	.word	0x08015811
 8015764:	08015811 	.word	0x08015811
 8015768:	08015811 	.word	0x08015811
 801576c:	08015811 	.word	0x08015811
 8015770:	08015811 	.word	0x08015811
 8015774:	08015811 	.word	0x08015811
 8015778:	08015811 	.word	0x08015811
 801577c:	080157f1 	.word	0x080157f1
 8015780:	08015811 	.word	0x08015811
 8015784:	08015811 	.word	0x08015811
 8015788:	08015811 	.word	0x08015811
 801578c:	08015811 	.word	0x08015811
 8015790:	08015811 	.word	0x08015811
 8015794:	08015811 	.word	0x08015811
 8015798:	08015811 	.word	0x08015811
 801579c:	080157f9 	.word	0x080157f9
 80157a0:	08015811 	.word	0x08015811
 80157a4:	08015811 	.word	0x08015811
 80157a8:	08015811 	.word	0x08015811
 80157ac:	08015811 	.word	0x08015811
 80157b0:	08015811 	.word	0x08015811
 80157b4:	08015811 	.word	0x08015811
 80157b8:	08015811 	.word	0x08015811
 80157bc:	08015801 	.word	0x08015801
 80157c0:	08015811 	.word	0x08015811
 80157c4:	08015811 	.word	0x08015811
 80157c8:	08015811 	.word	0x08015811
 80157cc:	08015811 	.word	0x08015811
 80157d0:	08015811 	.word	0x08015811
 80157d4:	08015811 	.word	0x08015811
 80157d8:	08015811 	.word	0x08015811
 80157dc:	08015809 	.word	0x08015809
 80157e0:	2301      	movs	r3, #1
 80157e2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80157e6:	e0bc      	b.n	8015962 <UART_SetConfig+0x5a6>
 80157e8:	2304      	movs	r3, #4
 80157ea:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80157ee:	e0b8      	b.n	8015962 <UART_SetConfig+0x5a6>
 80157f0:	2308      	movs	r3, #8
 80157f2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80157f6:	e0b4      	b.n	8015962 <UART_SetConfig+0x5a6>
 80157f8:	2310      	movs	r3, #16
 80157fa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80157fe:	e0b0      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015800:	2320      	movs	r3, #32
 8015802:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015806:	e0ac      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015808:	2340      	movs	r3, #64	; 0x40
 801580a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801580e:	e0a8      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015810:	2380      	movs	r3, #128	; 0x80
 8015812:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015816:	e0a4      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015818:	697b      	ldr	r3, [r7, #20]
 801581a:	681b      	ldr	r3, [r3, #0]
 801581c:	4a8f      	ldr	r2, [pc, #572]	; (8015a5c <UART_SetConfig+0x6a0>)
 801581e:	4293      	cmp	r3, r2
 8015820:	d130      	bne.n	8015884 <UART_SetConfig+0x4c8>
 8015822:	4b8d      	ldr	r3, [pc, #564]	; (8015a58 <UART_SetConfig+0x69c>)
 8015824:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015826:	f003 0307 	and.w	r3, r3, #7
 801582a:	2b05      	cmp	r3, #5
 801582c:	d826      	bhi.n	801587c <UART_SetConfig+0x4c0>
 801582e:	a201      	add	r2, pc, #4	; (adr r2, 8015834 <UART_SetConfig+0x478>)
 8015830:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015834:	0801584d 	.word	0x0801584d
 8015838:	08015855 	.word	0x08015855
 801583c:	0801585d 	.word	0x0801585d
 8015840:	08015865 	.word	0x08015865
 8015844:	0801586d 	.word	0x0801586d
 8015848:	08015875 	.word	0x08015875
 801584c:	2300      	movs	r3, #0
 801584e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015852:	e086      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015854:	2304      	movs	r3, #4
 8015856:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801585a:	e082      	b.n	8015962 <UART_SetConfig+0x5a6>
 801585c:	2308      	movs	r3, #8
 801585e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015862:	e07e      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015864:	2310      	movs	r3, #16
 8015866:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801586a:	e07a      	b.n	8015962 <UART_SetConfig+0x5a6>
 801586c:	2320      	movs	r3, #32
 801586e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015872:	e076      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015874:	2340      	movs	r3, #64	; 0x40
 8015876:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801587a:	e072      	b.n	8015962 <UART_SetConfig+0x5a6>
 801587c:	2380      	movs	r3, #128	; 0x80
 801587e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015882:	e06e      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015884:	697b      	ldr	r3, [r7, #20]
 8015886:	681b      	ldr	r3, [r3, #0]
 8015888:	4a75      	ldr	r2, [pc, #468]	; (8015a60 <UART_SetConfig+0x6a4>)
 801588a:	4293      	cmp	r3, r2
 801588c:	d130      	bne.n	80158f0 <UART_SetConfig+0x534>
 801588e:	4b72      	ldr	r3, [pc, #456]	; (8015a58 <UART_SetConfig+0x69c>)
 8015890:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015892:	f003 0307 	and.w	r3, r3, #7
 8015896:	2b05      	cmp	r3, #5
 8015898:	d826      	bhi.n	80158e8 <UART_SetConfig+0x52c>
 801589a:	a201      	add	r2, pc, #4	; (adr r2, 80158a0 <UART_SetConfig+0x4e4>)
 801589c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80158a0:	080158b9 	.word	0x080158b9
 80158a4:	080158c1 	.word	0x080158c1
 80158a8:	080158c9 	.word	0x080158c9
 80158ac:	080158d1 	.word	0x080158d1
 80158b0:	080158d9 	.word	0x080158d9
 80158b4:	080158e1 	.word	0x080158e1
 80158b8:	2300      	movs	r3, #0
 80158ba:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80158be:	e050      	b.n	8015962 <UART_SetConfig+0x5a6>
 80158c0:	2304      	movs	r3, #4
 80158c2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80158c6:	e04c      	b.n	8015962 <UART_SetConfig+0x5a6>
 80158c8:	2308      	movs	r3, #8
 80158ca:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80158ce:	e048      	b.n	8015962 <UART_SetConfig+0x5a6>
 80158d0:	2310      	movs	r3, #16
 80158d2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80158d6:	e044      	b.n	8015962 <UART_SetConfig+0x5a6>
 80158d8:	2320      	movs	r3, #32
 80158da:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80158de:	e040      	b.n	8015962 <UART_SetConfig+0x5a6>
 80158e0:	2340      	movs	r3, #64	; 0x40
 80158e2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80158e6:	e03c      	b.n	8015962 <UART_SetConfig+0x5a6>
 80158e8:	2380      	movs	r3, #128	; 0x80
 80158ea:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80158ee:	e038      	b.n	8015962 <UART_SetConfig+0x5a6>
 80158f0:	697b      	ldr	r3, [r7, #20]
 80158f2:	681b      	ldr	r3, [r3, #0]
 80158f4:	4a5b      	ldr	r2, [pc, #364]	; (8015a64 <UART_SetConfig+0x6a8>)
 80158f6:	4293      	cmp	r3, r2
 80158f8:	d130      	bne.n	801595c <UART_SetConfig+0x5a0>
 80158fa:	4b57      	ldr	r3, [pc, #348]	; (8015a58 <UART_SetConfig+0x69c>)
 80158fc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80158fe:	f003 0307 	and.w	r3, r3, #7
 8015902:	2b05      	cmp	r3, #5
 8015904:	d826      	bhi.n	8015954 <UART_SetConfig+0x598>
 8015906:	a201      	add	r2, pc, #4	; (adr r2, 801590c <UART_SetConfig+0x550>)
 8015908:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801590c:	08015925 	.word	0x08015925
 8015910:	0801592d 	.word	0x0801592d
 8015914:	08015935 	.word	0x08015935
 8015918:	0801593d 	.word	0x0801593d
 801591c:	08015945 	.word	0x08015945
 8015920:	0801594d 	.word	0x0801594d
 8015924:	2302      	movs	r3, #2
 8015926:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801592a:	e01a      	b.n	8015962 <UART_SetConfig+0x5a6>
 801592c:	2304      	movs	r3, #4
 801592e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015932:	e016      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015934:	2308      	movs	r3, #8
 8015936:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801593a:	e012      	b.n	8015962 <UART_SetConfig+0x5a6>
 801593c:	2310      	movs	r3, #16
 801593e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015942:	e00e      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015944:	2320      	movs	r3, #32
 8015946:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801594a:	e00a      	b.n	8015962 <UART_SetConfig+0x5a6>
 801594c:	2340      	movs	r3, #64	; 0x40
 801594e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015952:	e006      	b.n	8015962 <UART_SetConfig+0x5a6>
 8015954:	2380      	movs	r3, #128	; 0x80
 8015956:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 801595a:	e002      	b.n	8015962 <UART_SetConfig+0x5a6>
 801595c:	2380      	movs	r3, #128	; 0x80
 801595e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8015962:	697b      	ldr	r3, [r7, #20]
 8015964:	681b      	ldr	r3, [r3, #0]
 8015966:	4a3f      	ldr	r2, [pc, #252]	; (8015a64 <UART_SetConfig+0x6a8>)
 8015968:	4293      	cmp	r3, r2
 801596a:	f040 80f8 	bne.w	8015b5e <UART_SetConfig+0x7a2>
 801596e:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8015972:	2b20      	cmp	r3, #32
 8015974:	dc46      	bgt.n	8015a04 <UART_SetConfig+0x648>
 8015976:	2b02      	cmp	r3, #2
 8015978:	f2c0 8082 	blt.w	8015a80 <UART_SetConfig+0x6c4>
 801597c:	3b02      	subs	r3, #2
 801597e:	2b1e      	cmp	r3, #30
 8015980:	d87e      	bhi.n	8015a80 <UART_SetConfig+0x6c4>
 8015982:	a201      	add	r2, pc, #4	; (adr r2, 8015988 <UART_SetConfig+0x5cc>)
 8015984:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015988:	08015a0b 	.word	0x08015a0b
 801598c:	08015a81 	.word	0x08015a81
 8015990:	08015a13 	.word	0x08015a13
 8015994:	08015a81 	.word	0x08015a81
 8015998:	08015a81 	.word	0x08015a81
 801599c:	08015a81 	.word	0x08015a81
 80159a0:	08015a23 	.word	0x08015a23
 80159a4:	08015a81 	.word	0x08015a81
 80159a8:	08015a81 	.word	0x08015a81
 80159ac:	08015a81 	.word	0x08015a81
 80159b0:	08015a81 	.word	0x08015a81
 80159b4:	08015a81 	.word	0x08015a81
 80159b8:	08015a81 	.word	0x08015a81
 80159bc:	08015a81 	.word	0x08015a81
 80159c0:	08015a33 	.word	0x08015a33
 80159c4:	08015a81 	.word	0x08015a81
 80159c8:	08015a81 	.word	0x08015a81
 80159cc:	08015a81 	.word	0x08015a81
 80159d0:	08015a81 	.word	0x08015a81
 80159d4:	08015a81 	.word	0x08015a81
 80159d8:	08015a81 	.word	0x08015a81
 80159dc:	08015a81 	.word	0x08015a81
 80159e0:	08015a81 	.word	0x08015a81
 80159e4:	08015a81 	.word	0x08015a81
 80159e8:	08015a81 	.word	0x08015a81
 80159ec:	08015a81 	.word	0x08015a81
 80159f0:	08015a81 	.word	0x08015a81
 80159f4:	08015a81 	.word	0x08015a81
 80159f8:	08015a81 	.word	0x08015a81
 80159fc:	08015a81 	.word	0x08015a81
 8015a00:	08015a73 	.word	0x08015a73
 8015a04:	2b40      	cmp	r3, #64	; 0x40
 8015a06:	d037      	beq.n	8015a78 <UART_SetConfig+0x6bc>
 8015a08:	e03a      	b.n	8015a80 <UART_SetConfig+0x6c4>
 8015a0a:	f7fb fc17 	bl	801123c <HAL_RCCEx_GetD3PCLK1Freq>
 8015a0e:	63f8      	str	r0, [r7, #60]	; 0x3c
 8015a10:	e03c      	b.n	8015a8c <UART_SetConfig+0x6d0>
 8015a12:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8015a16:	4618      	mov	r0, r3
 8015a18:	f7fb fc26 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8015a1c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8015a1e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015a20:	e034      	b.n	8015a8c <UART_SetConfig+0x6d0>
 8015a22:	f107 0318 	add.w	r3, r7, #24
 8015a26:	4618      	mov	r0, r3
 8015a28:	f7fb fd72 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 8015a2c:	69fb      	ldr	r3, [r7, #28]
 8015a2e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015a30:	e02c      	b.n	8015a8c <UART_SetConfig+0x6d0>
 8015a32:	4b09      	ldr	r3, [pc, #36]	; (8015a58 <UART_SetConfig+0x69c>)
 8015a34:	681b      	ldr	r3, [r3, #0]
 8015a36:	f003 0320 	and.w	r3, r3, #32
 8015a3a:	2b00      	cmp	r3, #0
 8015a3c:	d016      	beq.n	8015a6c <UART_SetConfig+0x6b0>
 8015a3e:	4b06      	ldr	r3, [pc, #24]	; (8015a58 <UART_SetConfig+0x69c>)
 8015a40:	681b      	ldr	r3, [r3, #0]
 8015a42:	08db      	lsrs	r3, r3, #3
 8015a44:	f003 0303 	and.w	r3, r3, #3
 8015a48:	4a07      	ldr	r2, [pc, #28]	; (8015a68 <UART_SetConfig+0x6ac>)
 8015a4a:	fa22 f303 	lsr.w	r3, r2, r3
 8015a4e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015a50:	e01c      	b.n	8015a8c <UART_SetConfig+0x6d0>
 8015a52:	bf00      	nop
 8015a54:	40011400 	.word	0x40011400
 8015a58:	58024400 	.word	0x58024400
 8015a5c:	40007800 	.word	0x40007800
 8015a60:	40007c00 	.word	0x40007c00
 8015a64:	58000c00 	.word	0x58000c00
 8015a68:	03d09000 	.word	0x03d09000
 8015a6c:	4b9d      	ldr	r3, [pc, #628]	; (8015ce4 <UART_SetConfig+0x928>)
 8015a6e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015a70:	e00c      	b.n	8015a8c <UART_SetConfig+0x6d0>
 8015a72:	4b9d      	ldr	r3, [pc, #628]	; (8015ce8 <UART_SetConfig+0x92c>)
 8015a74:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015a76:	e009      	b.n	8015a8c <UART_SetConfig+0x6d0>
 8015a78:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015a7c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015a7e:	e005      	b.n	8015a8c <UART_SetConfig+0x6d0>
 8015a80:	2300      	movs	r3, #0
 8015a82:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015a84:	2301      	movs	r3, #1
 8015a86:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8015a8a:	bf00      	nop
 8015a8c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015a8e:	2b00      	cmp	r3, #0
 8015a90:	f000 81de 	beq.w	8015e50 <UART_SetConfig+0xa94>
 8015a94:	697b      	ldr	r3, [r7, #20]
 8015a96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015a98:	4a94      	ldr	r2, [pc, #592]	; (8015cec <UART_SetConfig+0x930>)
 8015a9a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8015a9e:	461a      	mov	r2, r3
 8015aa0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015aa2:	fbb3 f3f2 	udiv	r3, r3, r2
 8015aa6:	633b      	str	r3, [r7, #48]	; 0x30
 8015aa8:	697b      	ldr	r3, [r7, #20]
 8015aaa:	685a      	ldr	r2, [r3, #4]
 8015aac:	4613      	mov	r3, r2
 8015aae:	005b      	lsls	r3, r3, #1
 8015ab0:	4413      	add	r3, r2
 8015ab2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8015ab4:	429a      	cmp	r2, r3
 8015ab6:	d305      	bcc.n	8015ac4 <UART_SetConfig+0x708>
 8015ab8:	697b      	ldr	r3, [r7, #20]
 8015aba:	685b      	ldr	r3, [r3, #4]
 8015abc:	031b      	lsls	r3, r3, #12
 8015abe:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8015ac0:	429a      	cmp	r2, r3
 8015ac2:	d903      	bls.n	8015acc <UART_SetConfig+0x710>
 8015ac4:	2301      	movs	r3, #1
 8015ac6:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8015aca:	e1c1      	b.n	8015e50 <UART_SetConfig+0xa94>
 8015acc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015ace:	2200      	movs	r2, #0
 8015ad0:	60bb      	str	r3, [r7, #8]
 8015ad2:	60fa      	str	r2, [r7, #12]
 8015ad4:	697b      	ldr	r3, [r7, #20]
 8015ad6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015ad8:	4a84      	ldr	r2, [pc, #528]	; (8015cec <UART_SetConfig+0x930>)
 8015ada:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8015ade:	b29b      	uxth	r3, r3
 8015ae0:	2200      	movs	r2, #0
 8015ae2:	603b      	str	r3, [r7, #0]
 8015ae4:	607a      	str	r2, [r7, #4]
 8015ae6:	e9d7 2300 	ldrd	r2, r3, [r7]
 8015aea:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8015aee:	f7ea fbf7 	bl	80002e0 <__aeabi_uldivmod>
 8015af2:	4602      	mov	r2, r0
 8015af4:	460b      	mov	r3, r1
 8015af6:	4610      	mov	r0, r2
 8015af8:	4619      	mov	r1, r3
 8015afa:	f04f 0200 	mov.w	r2, #0
 8015afe:	f04f 0300 	mov.w	r3, #0
 8015b02:	020b      	lsls	r3, r1, #8
 8015b04:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 8015b08:	0202      	lsls	r2, r0, #8
 8015b0a:	6979      	ldr	r1, [r7, #20]
 8015b0c:	6849      	ldr	r1, [r1, #4]
 8015b0e:	0849      	lsrs	r1, r1, #1
 8015b10:	2000      	movs	r0, #0
 8015b12:	460c      	mov	r4, r1
 8015b14:	4605      	mov	r5, r0
 8015b16:	eb12 0804 	adds.w	r8, r2, r4
 8015b1a:	eb43 0905 	adc.w	r9, r3, r5
 8015b1e:	697b      	ldr	r3, [r7, #20]
 8015b20:	685b      	ldr	r3, [r3, #4]
 8015b22:	2200      	movs	r2, #0
 8015b24:	469a      	mov	sl, r3
 8015b26:	4693      	mov	fp, r2
 8015b28:	4652      	mov	r2, sl
 8015b2a:	465b      	mov	r3, fp
 8015b2c:	4640      	mov	r0, r8
 8015b2e:	4649      	mov	r1, r9
 8015b30:	f7ea fbd6 	bl	80002e0 <__aeabi_uldivmod>
 8015b34:	4602      	mov	r2, r0
 8015b36:	460b      	mov	r3, r1
 8015b38:	4613      	mov	r3, r2
 8015b3a:	63bb      	str	r3, [r7, #56]	; 0x38
 8015b3c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015b3e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8015b42:	d308      	bcc.n	8015b56 <UART_SetConfig+0x79a>
 8015b44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015b46:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8015b4a:	d204      	bcs.n	8015b56 <UART_SetConfig+0x79a>
 8015b4c:	697b      	ldr	r3, [r7, #20]
 8015b4e:	681b      	ldr	r3, [r3, #0]
 8015b50:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8015b52:	60da      	str	r2, [r3, #12]
 8015b54:	e17c      	b.n	8015e50 <UART_SetConfig+0xa94>
 8015b56:	2301      	movs	r3, #1
 8015b58:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8015b5c:	e178      	b.n	8015e50 <UART_SetConfig+0xa94>
 8015b5e:	697b      	ldr	r3, [r7, #20]
 8015b60:	69db      	ldr	r3, [r3, #28]
 8015b62:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8015b66:	f040 80c5 	bne.w	8015cf4 <UART_SetConfig+0x938>
 8015b6a:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8015b6e:	2b20      	cmp	r3, #32
 8015b70:	dc48      	bgt.n	8015c04 <UART_SetConfig+0x848>
 8015b72:	2b00      	cmp	r3, #0
 8015b74:	db7b      	blt.n	8015c6e <UART_SetConfig+0x8b2>
 8015b76:	2b20      	cmp	r3, #32
 8015b78:	d879      	bhi.n	8015c6e <UART_SetConfig+0x8b2>
 8015b7a:	a201      	add	r2, pc, #4	; (adr r2, 8015b80 <UART_SetConfig+0x7c4>)
 8015b7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015b80:	08015c0b 	.word	0x08015c0b
 8015b84:	08015c13 	.word	0x08015c13
 8015b88:	08015c6f 	.word	0x08015c6f
 8015b8c:	08015c6f 	.word	0x08015c6f
 8015b90:	08015c1b 	.word	0x08015c1b
 8015b94:	08015c6f 	.word	0x08015c6f
 8015b98:	08015c6f 	.word	0x08015c6f
 8015b9c:	08015c6f 	.word	0x08015c6f
 8015ba0:	08015c2b 	.word	0x08015c2b
 8015ba4:	08015c6f 	.word	0x08015c6f
 8015ba8:	08015c6f 	.word	0x08015c6f
 8015bac:	08015c6f 	.word	0x08015c6f
 8015bb0:	08015c6f 	.word	0x08015c6f
 8015bb4:	08015c6f 	.word	0x08015c6f
 8015bb8:	08015c6f 	.word	0x08015c6f
 8015bbc:	08015c6f 	.word	0x08015c6f
 8015bc0:	08015c3b 	.word	0x08015c3b
 8015bc4:	08015c6f 	.word	0x08015c6f
 8015bc8:	08015c6f 	.word	0x08015c6f
 8015bcc:	08015c6f 	.word	0x08015c6f
 8015bd0:	08015c6f 	.word	0x08015c6f
 8015bd4:	08015c6f 	.word	0x08015c6f
 8015bd8:	08015c6f 	.word	0x08015c6f
 8015bdc:	08015c6f 	.word	0x08015c6f
 8015be0:	08015c6f 	.word	0x08015c6f
 8015be4:	08015c6f 	.word	0x08015c6f
 8015be8:	08015c6f 	.word	0x08015c6f
 8015bec:	08015c6f 	.word	0x08015c6f
 8015bf0:	08015c6f 	.word	0x08015c6f
 8015bf4:	08015c6f 	.word	0x08015c6f
 8015bf8:	08015c6f 	.word	0x08015c6f
 8015bfc:	08015c6f 	.word	0x08015c6f
 8015c00:	08015c61 	.word	0x08015c61
 8015c04:	2b40      	cmp	r3, #64	; 0x40
 8015c06:	d02e      	beq.n	8015c66 <UART_SetConfig+0x8aa>
 8015c08:	e031      	b.n	8015c6e <UART_SetConfig+0x8b2>
 8015c0a:	f7f9 fb1f 	bl	800f24c <HAL_RCC_GetPCLK1Freq>
 8015c0e:	63f8      	str	r0, [r7, #60]	; 0x3c
 8015c10:	e033      	b.n	8015c7a <UART_SetConfig+0x8be>
 8015c12:	f7f9 fb31 	bl	800f278 <HAL_RCC_GetPCLK2Freq>
 8015c16:	63f8      	str	r0, [r7, #60]	; 0x3c
 8015c18:	e02f      	b.n	8015c7a <UART_SetConfig+0x8be>
 8015c1a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8015c1e:	4618      	mov	r0, r3
 8015c20:	f7fb fb22 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8015c24:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8015c26:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015c28:	e027      	b.n	8015c7a <UART_SetConfig+0x8be>
 8015c2a:	f107 0318 	add.w	r3, r7, #24
 8015c2e:	4618      	mov	r0, r3
 8015c30:	f7fb fc6e 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 8015c34:	69fb      	ldr	r3, [r7, #28]
 8015c36:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015c38:	e01f      	b.n	8015c7a <UART_SetConfig+0x8be>
 8015c3a:	4b2d      	ldr	r3, [pc, #180]	; (8015cf0 <UART_SetConfig+0x934>)
 8015c3c:	681b      	ldr	r3, [r3, #0]
 8015c3e:	f003 0320 	and.w	r3, r3, #32
 8015c42:	2b00      	cmp	r3, #0
 8015c44:	d009      	beq.n	8015c5a <UART_SetConfig+0x89e>
 8015c46:	4b2a      	ldr	r3, [pc, #168]	; (8015cf0 <UART_SetConfig+0x934>)
 8015c48:	681b      	ldr	r3, [r3, #0]
 8015c4a:	08db      	lsrs	r3, r3, #3
 8015c4c:	f003 0303 	and.w	r3, r3, #3
 8015c50:	4a24      	ldr	r2, [pc, #144]	; (8015ce4 <UART_SetConfig+0x928>)
 8015c52:	fa22 f303 	lsr.w	r3, r2, r3
 8015c56:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015c58:	e00f      	b.n	8015c7a <UART_SetConfig+0x8be>
 8015c5a:	4b22      	ldr	r3, [pc, #136]	; (8015ce4 <UART_SetConfig+0x928>)
 8015c5c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015c5e:	e00c      	b.n	8015c7a <UART_SetConfig+0x8be>
 8015c60:	4b21      	ldr	r3, [pc, #132]	; (8015ce8 <UART_SetConfig+0x92c>)
 8015c62:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015c64:	e009      	b.n	8015c7a <UART_SetConfig+0x8be>
 8015c66:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015c6a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015c6c:	e005      	b.n	8015c7a <UART_SetConfig+0x8be>
 8015c6e:	2300      	movs	r3, #0
 8015c70:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015c72:	2301      	movs	r3, #1
 8015c74:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8015c78:	bf00      	nop
 8015c7a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015c7c:	2b00      	cmp	r3, #0
 8015c7e:	f000 80e7 	beq.w	8015e50 <UART_SetConfig+0xa94>
 8015c82:	697b      	ldr	r3, [r7, #20]
 8015c84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015c86:	4a19      	ldr	r2, [pc, #100]	; (8015cec <UART_SetConfig+0x930>)
 8015c88:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8015c8c:	461a      	mov	r2, r3
 8015c8e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015c90:	fbb3 f3f2 	udiv	r3, r3, r2
 8015c94:	005a      	lsls	r2, r3, #1
 8015c96:	697b      	ldr	r3, [r7, #20]
 8015c98:	685b      	ldr	r3, [r3, #4]
 8015c9a:	085b      	lsrs	r3, r3, #1
 8015c9c:	441a      	add	r2, r3
 8015c9e:	697b      	ldr	r3, [r7, #20]
 8015ca0:	685b      	ldr	r3, [r3, #4]
 8015ca2:	fbb2 f3f3 	udiv	r3, r2, r3
 8015ca6:	63bb      	str	r3, [r7, #56]	; 0x38
 8015ca8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015caa:	2b0f      	cmp	r3, #15
 8015cac:	d916      	bls.n	8015cdc <UART_SetConfig+0x920>
 8015cae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015cb0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8015cb4:	d212      	bcs.n	8015cdc <UART_SetConfig+0x920>
 8015cb6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015cb8:	b29b      	uxth	r3, r3
 8015cba:	f023 030f 	bic.w	r3, r3, #15
 8015cbe:	86fb      	strh	r3, [r7, #54]	; 0x36
 8015cc0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015cc2:	085b      	lsrs	r3, r3, #1
 8015cc4:	b29b      	uxth	r3, r3
 8015cc6:	f003 0307 	and.w	r3, r3, #7
 8015cca:	b29a      	uxth	r2, r3
 8015ccc:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 8015cce:	4313      	orrs	r3, r2
 8015cd0:	86fb      	strh	r3, [r7, #54]	; 0x36
 8015cd2:	697b      	ldr	r3, [r7, #20]
 8015cd4:	681b      	ldr	r3, [r3, #0]
 8015cd6:	8efa      	ldrh	r2, [r7, #54]	; 0x36
 8015cd8:	60da      	str	r2, [r3, #12]
 8015cda:	e0b9      	b.n	8015e50 <UART_SetConfig+0xa94>
 8015cdc:	2301      	movs	r3, #1
 8015cde:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8015ce2:	e0b5      	b.n	8015e50 <UART_SetConfig+0xa94>
 8015ce4:	03d09000 	.word	0x03d09000
 8015ce8:	003d0900 	.word	0x003d0900
 8015cec:	0801b86c 	.word	0x0801b86c
 8015cf0:	58024400 	.word	0x58024400
 8015cf4:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8015cf8:	2b20      	cmp	r3, #32
 8015cfa:	dc49      	bgt.n	8015d90 <UART_SetConfig+0x9d4>
 8015cfc:	2b00      	cmp	r3, #0
 8015cfe:	db7c      	blt.n	8015dfa <UART_SetConfig+0xa3e>
 8015d00:	2b20      	cmp	r3, #32
 8015d02:	d87a      	bhi.n	8015dfa <UART_SetConfig+0xa3e>
 8015d04:	a201      	add	r2, pc, #4	; (adr r2, 8015d0c <UART_SetConfig+0x950>)
 8015d06:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015d0a:	bf00      	nop
 8015d0c:	08015d97 	.word	0x08015d97
 8015d10:	08015d9f 	.word	0x08015d9f
 8015d14:	08015dfb 	.word	0x08015dfb
 8015d18:	08015dfb 	.word	0x08015dfb
 8015d1c:	08015da7 	.word	0x08015da7
 8015d20:	08015dfb 	.word	0x08015dfb
 8015d24:	08015dfb 	.word	0x08015dfb
 8015d28:	08015dfb 	.word	0x08015dfb
 8015d2c:	08015db7 	.word	0x08015db7
 8015d30:	08015dfb 	.word	0x08015dfb
 8015d34:	08015dfb 	.word	0x08015dfb
 8015d38:	08015dfb 	.word	0x08015dfb
 8015d3c:	08015dfb 	.word	0x08015dfb
 8015d40:	08015dfb 	.word	0x08015dfb
 8015d44:	08015dfb 	.word	0x08015dfb
 8015d48:	08015dfb 	.word	0x08015dfb
 8015d4c:	08015dc7 	.word	0x08015dc7
 8015d50:	08015dfb 	.word	0x08015dfb
 8015d54:	08015dfb 	.word	0x08015dfb
 8015d58:	08015dfb 	.word	0x08015dfb
 8015d5c:	08015dfb 	.word	0x08015dfb
 8015d60:	08015dfb 	.word	0x08015dfb
 8015d64:	08015dfb 	.word	0x08015dfb
 8015d68:	08015dfb 	.word	0x08015dfb
 8015d6c:	08015dfb 	.word	0x08015dfb
 8015d70:	08015dfb 	.word	0x08015dfb
 8015d74:	08015dfb 	.word	0x08015dfb
 8015d78:	08015dfb 	.word	0x08015dfb
 8015d7c:	08015dfb 	.word	0x08015dfb
 8015d80:	08015dfb 	.word	0x08015dfb
 8015d84:	08015dfb 	.word	0x08015dfb
 8015d88:	08015dfb 	.word	0x08015dfb
 8015d8c:	08015ded 	.word	0x08015ded
 8015d90:	2b40      	cmp	r3, #64	; 0x40
 8015d92:	d02e      	beq.n	8015df2 <UART_SetConfig+0xa36>
 8015d94:	e031      	b.n	8015dfa <UART_SetConfig+0xa3e>
 8015d96:	f7f9 fa59 	bl	800f24c <HAL_RCC_GetPCLK1Freq>
 8015d9a:	63f8      	str	r0, [r7, #60]	; 0x3c
 8015d9c:	e033      	b.n	8015e06 <UART_SetConfig+0xa4a>
 8015d9e:	f7f9 fa6b 	bl	800f278 <HAL_RCC_GetPCLK2Freq>
 8015da2:	63f8      	str	r0, [r7, #60]	; 0x3c
 8015da4:	e02f      	b.n	8015e06 <UART_SetConfig+0xa4a>
 8015da6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8015daa:	4618      	mov	r0, r3
 8015dac:	f7fb fa5c 	bl	8011268 <HAL_RCCEx_GetPLL2ClockFreq>
 8015db0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8015db2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015db4:	e027      	b.n	8015e06 <UART_SetConfig+0xa4a>
 8015db6:	f107 0318 	add.w	r3, r7, #24
 8015dba:	4618      	mov	r0, r3
 8015dbc:	f7fb fba8 	bl	8011510 <HAL_RCCEx_GetPLL3ClockFreq>
 8015dc0:	69fb      	ldr	r3, [r7, #28]
 8015dc2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015dc4:	e01f      	b.n	8015e06 <UART_SetConfig+0xa4a>
 8015dc6:	4b2d      	ldr	r3, [pc, #180]	; (8015e7c <UART_SetConfig+0xac0>)
 8015dc8:	681b      	ldr	r3, [r3, #0]
 8015dca:	f003 0320 	and.w	r3, r3, #32
 8015dce:	2b00      	cmp	r3, #0
 8015dd0:	d009      	beq.n	8015de6 <UART_SetConfig+0xa2a>
 8015dd2:	4b2a      	ldr	r3, [pc, #168]	; (8015e7c <UART_SetConfig+0xac0>)
 8015dd4:	681b      	ldr	r3, [r3, #0]
 8015dd6:	08db      	lsrs	r3, r3, #3
 8015dd8:	f003 0303 	and.w	r3, r3, #3
 8015ddc:	4a28      	ldr	r2, [pc, #160]	; (8015e80 <UART_SetConfig+0xac4>)
 8015dde:	fa22 f303 	lsr.w	r3, r2, r3
 8015de2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015de4:	e00f      	b.n	8015e06 <UART_SetConfig+0xa4a>
 8015de6:	4b26      	ldr	r3, [pc, #152]	; (8015e80 <UART_SetConfig+0xac4>)
 8015de8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015dea:	e00c      	b.n	8015e06 <UART_SetConfig+0xa4a>
 8015dec:	4b25      	ldr	r3, [pc, #148]	; (8015e84 <UART_SetConfig+0xac8>)
 8015dee:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015df0:	e009      	b.n	8015e06 <UART_SetConfig+0xa4a>
 8015df2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015df6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015df8:	e005      	b.n	8015e06 <UART_SetConfig+0xa4a>
 8015dfa:	2300      	movs	r3, #0
 8015dfc:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015dfe:	2301      	movs	r3, #1
 8015e00:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8015e04:	bf00      	nop
 8015e06:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015e08:	2b00      	cmp	r3, #0
 8015e0a:	d021      	beq.n	8015e50 <UART_SetConfig+0xa94>
 8015e0c:	697b      	ldr	r3, [r7, #20]
 8015e0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015e10:	4a1d      	ldr	r2, [pc, #116]	; (8015e88 <UART_SetConfig+0xacc>)
 8015e12:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8015e16:	461a      	mov	r2, r3
 8015e18:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015e1a:	fbb3 f2f2 	udiv	r2, r3, r2
 8015e1e:	697b      	ldr	r3, [r7, #20]
 8015e20:	685b      	ldr	r3, [r3, #4]
 8015e22:	085b      	lsrs	r3, r3, #1
 8015e24:	441a      	add	r2, r3
 8015e26:	697b      	ldr	r3, [r7, #20]
 8015e28:	685b      	ldr	r3, [r3, #4]
 8015e2a:	fbb2 f3f3 	udiv	r3, r2, r3
 8015e2e:	63bb      	str	r3, [r7, #56]	; 0x38
 8015e30:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015e32:	2b0f      	cmp	r3, #15
 8015e34:	d909      	bls.n	8015e4a <UART_SetConfig+0xa8e>
 8015e36:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015e38:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8015e3c:	d205      	bcs.n	8015e4a <UART_SetConfig+0xa8e>
 8015e3e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015e40:	b29a      	uxth	r2, r3
 8015e42:	697b      	ldr	r3, [r7, #20]
 8015e44:	681b      	ldr	r3, [r3, #0]
 8015e46:	60da      	str	r2, [r3, #12]
 8015e48:	e002      	b.n	8015e50 <UART_SetConfig+0xa94>
 8015e4a:	2301      	movs	r3, #1
 8015e4c:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8015e50:	697b      	ldr	r3, [r7, #20]
 8015e52:	2201      	movs	r2, #1
 8015e54:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8015e58:	697b      	ldr	r3, [r7, #20]
 8015e5a:	2201      	movs	r2, #1
 8015e5c:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8015e60:	697b      	ldr	r3, [r7, #20]
 8015e62:	2200      	movs	r2, #0
 8015e64:	675a      	str	r2, [r3, #116]	; 0x74
 8015e66:	697b      	ldr	r3, [r7, #20]
 8015e68:	2200      	movs	r2, #0
 8015e6a:	679a      	str	r2, [r3, #120]	; 0x78
 8015e6c:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 8015e70:	4618      	mov	r0, r3
 8015e72:	3748      	adds	r7, #72	; 0x48
 8015e74:	46bd      	mov	sp, r7
 8015e76:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8015e7a:	bf00      	nop
 8015e7c:	58024400 	.word	0x58024400
 8015e80:	03d09000 	.word	0x03d09000
 8015e84:	003d0900 	.word	0x003d0900
 8015e88:	0801b86c 	.word	0x0801b86c

08015e8c <UART_AdvFeatureConfig>:
 8015e8c:	b480      	push	{r7}
 8015e8e:	b083      	sub	sp, #12
 8015e90:	af00      	add	r7, sp, #0
 8015e92:	6078      	str	r0, [r7, #4]
 8015e94:	687b      	ldr	r3, [r7, #4]
 8015e96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015e98:	f003 0308 	and.w	r3, r3, #8
 8015e9c:	2b00      	cmp	r3, #0
 8015e9e:	d00a      	beq.n	8015eb6 <UART_AdvFeatureConfig+0x2a>
 8015ea0:	687b      	ldr	r3, [r7, #4]
 8015ea2:	681b      	ldr	r3, [r3, #0]
 8015ea4:	685b      	ldr	r3, [r3, #4]
 8015ea6:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8015eaa:	687b      	ldr	r3, [r7, #4]
 8015eac:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8015eae:	687b      	ldr	r3, [r7, #4]
 8015eb0:	681b      	ldr	r3, [r3, #0]
 8015eb2:	430a      	orrs	r2, r1
 8015eb4:	605a      	str	r2, [r3, #4]
 8015eb6:	687b      	ldr	r3, [r7, #4]
 8015eb8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015eba:	f003 0301 	and.w	r3, r3, #1
 8015ebe:	2b00      	cmp	r3, #0
 8015ec0:	d00a      	beq.n	8015ed8 <UART_AdvFeatureConfig+0x4c>
 8015ec2:	687b      	ldr	r3, [r7, #4]
 8015ec4:	681b      	ldr	r3, [r3, #0]
 8015ec6:	685b      	ldr	r3, [r3, #4]
 8015ec8:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8015ecc:	687b      	ldr	r3, [r7, #4]
 8015ece:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8015ed0:	687b      	ldr	r3, [r7, #4]
 8015ed2:	681b      	ldr	r3, [r3, #0]
 8015ed4:	430a      	orrs	r2, r1
 8015ed6:	605a      	str	r2, [r3, #4]
 8015ed8:	687b      	ldr	r3, [r7, #4]
 8015eda:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015edc:	f003 0302 	and.w	r3, r3, #2
 8015ee0:	2b00      	cmp	r3, #0
 8015ee2:	d00a      	beq.n	8015efa <UART_AdvFeatureConfig+0x6e>
 8015ee4:	687b      	ldr	r3, [r7, #4]
 8015ee6:	681b      	ldr	r3, [r3, #0]
 8015ee8:	685b      	ldr	r3, [r3, #4]
 8015eea:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8015eee:	687b      	ldr	r3, [r7, #4]
 8015ef0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8015ef2:	687b      	ldr	r3, [r7, #4]
 8015ef4:	681b      	ldr	r3, [r3, #0]
 8015ef6:	430a      	orrs	r2, r1
 8015ef8:	605a      	str	r2, [r3, #4]
 8015efa:	687b      	ldr	r3, [r7, #4]
 8015efc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015efe:	f003 0304 	and.w	r3, r3, #4
 8015f02:	2b00      	cmp	r3, #0
 8015f04:	d00a      	beq.n	8015f1c <UART_AdvFeatureConfig+0x90>
 8015f06:	687b      	ldr	r3, [r7, #4]
 8015f08:	681b      	ldr	r3, [r3, #0]
 8015f0a:	685b      	ldr	r3, [r3, #4]
 8015f0c:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8015f10:	687b      	ldr	r3, [r7, #4]
 8015f12:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8015f14:	687b      	ldr	r3, [r7, #4]
 8015f16:	681b      	ldr	r3, [r3, #0]
 8015f18:	430a      	orrs	r2, r1
 8015f1a:	605a      	str	r2, [r3, #4]
 8015f1c:	687b      	ldr	r3, [r7, #4]
 8015f1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015f20:	f003 0310 	and.w	r3, r3, #16
 8015f24:	2b00      	cmp	r3, #0
 8015f26:	d00a      	beq.n	8015f3e <UART_AdvFeatureConfig+0xb2>
 8015f28:	687b      	ldr	r3, [r7, #4]
 8015f2a:	681b      	ldr	r3, [r3, #0]
 8015f2c:	689b      	ldr	r3, [r3, #8]
 8015f2e:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8015f32:	687b      	ldr	r3, [r7, #4]
 8015f34:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8015f36:	687b      	ldr	r3, [r7, #4]
 8015f38:	681b      	ldr	r3, [r3, #0]
 8015f3a:	430a      	orrs	r2, r1
 8015f3c:	609a      	str	r2, [r3, #8]
 8015f3e:	687b      	ldr	r3, [r7, #4]
 8015f40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015f42:	f003 0320 	and.w	r3, r3, #32
 8015f46:	2b00      	cmp	r3, #0
 8015f48:	d00a      	beq.n	8015f60 <UART_AdvFeatureConfig+0xd4>
 8015f4a:	687b      	ldr	r3, [r7, #4]
 8015f4c:	681b      	ldr	r3, [r3, #0]
 8015f4e:	689b      	ldr	r3, [r3, #8]
 8015f50:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8015f54:	687b      	ldr	r3, [r7, #4]
 8015f56:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8015f58:	687b      	ldr	r3, [r7, #4]
 8015f5a:	681b      	ldr	r3, [r3, #0]
 8015f5c:	430a      	orrs	r2, r1
 8015f5e:	609a      	str	r2, [r3, #8]
 8015f60:	687b      	ldr	r3, [r7, #4]
 8015f62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015f64:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8015f68:	2b00      	cmp	r3, #0
 8015f6a:	d01a      	beq.n	8015fa2 <UART_AdvFeatureConfig+0x116>
 8015f6c:	687b      	ldr	r3, [r7, #4]
 8015f6e:	681b      	ldr	r3, [r3, #0]
 8015f70:	685b      	ldr	r3, [r3, #4]
 8015f72:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8015f76:	687b      	ldr	r3, [r7, #4]
 8015f78:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8015f7a:	687b      	ldr	r3, [r7, #4]
 8015f7c:	681b      	ldr	r3, [r3, #0]
 8015f7e:	430a      	orrs	r2, r1
 8015f80:	605a      	str	r2, [r3, #4]
 8015f82:	687b      	ldr	r3, [r7, #4]
 8015f84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015f86:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8015f8a:	d10a      	bne.n	8015fa2 <UART_AdvFeatureConfig+0x116>
 8015f8c:	687b      	ldr	r3, [r7, #4]
 8015f8e:	681b      	ldr	r3, [r3, #0]
 8015f90:	685b      	ldr	r3, [r3, #4]
 8015f92:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8015f96:	687b      	ldr	r3, [r7, #4]
 8015f98:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8015f9a:	687b      	ldr	r3, [r7, #4]
 8015f9c:	681b      	ldr	r3, [r3, #0]
 8015f9e:	430a      	orrs	r2, r1
 8015fa0:	605a      	str	r2, [r3, #4]
 8015fa2:	687b      	ldr	r3, [r7, #4]
 8015fa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015fa6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8015faa:	2b00      	cmp	r3, #0
 8015fac:	d00a      	beq.n	8015fc4 <UART_AdvFeatureConfig+0x138>
 8015fae:	687b      	ldr	r3, [r7, #4]
 8015fb0:	681b      	ldr	r3, [r3, #0]
 8015fb2:	685b      	ldr	r3, [r3, #4]
 8015fb4:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8015fb8:	687b      	ldr	r3, [r7, #4]
 8015fba:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8015fbc:	687b      	ldr	r3, [r7, #4]
 8015fbe:	681b      	ldr	r3, [r3, #0]
 8015fc0:	430a      	orrs	r2, r1
 8015fc2:	605a      	str	r2, [r3, #4]
 8015fc4:	bf00      	nop
 8015fc6:	370c      	adds	r7, #12
 8015fc8:	46bd      	mov	sp, r7
 8015fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fce:	4770      	bx	lr

08015fd0 <UART_CheckIdleState>:
 8015fd0:	b580      	push	{r7, lr}
 8015fd2:	b098      	sub	sp, #96	; 0x60
 8015fd4:	af02      	add	r7, sp, #8
 8015fd6:	6078      	str	r0, [r7, #4]
 8015fd8:	687b      	ldr	r3, [r7, #4]
 8015fda:	2200      	movs	r2, #0
 8015fdc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8015fe0:	f7f0 f906 	bl	80061f0 <HAL_GetTick>
 8015fe4:	6578      	str	r0, [r7, #84]	; 0x54
 8015fe6:	687b      	ldr	r3, [r7, #4]
 8015fe8:	681b      	ldr	r3, [r3, #0]
 8015fea:	681b      	ldr	r3, [r3, #0]
 8015fec:	f003 0308 	and.w	r3, r3, #8
 8015ff0:	2b08      	cmp	r3, #8
 8015ff2:	d12f      	bne.n	8016054 <UART_CheckIdleState+0x84>
 8015ff4:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8015ff8:	9300      	str	r3, [sp, #0]
 8015ffa:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015ffc:	2200      	movs	r2, #0
 8015ffe:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8016002:	6878      	ldr	r0, [r7, #4]
 8016004:	f000 f88e 	bl	8016124 <UART_WaitOnFlagUntilTimeout>
 8016008:	4603      	mov	r3, r0
 801600a:	2b00      	cmp	r3, #0
 801600c:	d022      	beq.n	8016054 <UART_CheckIdleState+0x84>
 801600e:	687b      	ldr	r3, [r7, #4]
 8016010:	681b      	ldr	r3, [r3, #0]
 8016012:	63bb      	str	r3, [r7, #56]	; 0x38
 8016014:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8016016:	e853 3f00 	ldrex	r3, [r3]
 801601a:	637b      	str	r3, [r7, #52]	; 0x34
 801601c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801601e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016022:	653b      	str	r3, [r7, #80]	; 0x50
 8016024:	687b      	ldr	r3, [r7, #4]
 8016026:	681b      	ldr	r3, [r3, #0]
 8016028:	461a      	mov	r2, r3
 801602a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801602c:	647b      	str	r3, [r7, #68]	; 0x44
 801602e:	643a      	str	r2, [r7, #64]	; 0x40
 8016030:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8016032:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8016034:	e841 2300 	strex	r3, r2, [r1]
 8016038:	63fb      	str	r3, [r7, #60]	; 0x3c
 801603a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801603c:	2b00      	cmp	r3, #0
 801603e:	d1e6      	bne.n	801600e <UART_CheckIdleState+0x3e>
 8016040:	687b      	ldr	r3, [r7, #4]
 8016042:	2220      	movs	r2, #32
 8016044:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8016048:	687b      	ldr	r3, [r7, #4]
 801604a:	2200      	movs	r2, #0
 801604c:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8016050:	2303      	movs	r3, #3
 8016052:	e063      	b.n	801611c <UART_CheckIdleState+0x14c>
 8016054:	687b      	ldr	r3, [r7, #4]
 8016056:	681b      	ldr	r3, [r3, #0]
 8016058:	681b      	ldr	r3, [r3, #0]
 801605a:	f003 0304 	and.w	r3, r3, #4
 801605e:	2b04      	cmp	r3, #4
 8016060:	d149      	bne.n	80160f6 <UART_CheckIdleState+0x126>
 8016062:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8016066:	9300      	str	r3, [sp, #0]
 8016068:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801606a:	2200      	movs	r2, #0
 801606c:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8016070:	6878      	ldr	r0, [r7, #4]
 8016072:	f000 f857 	bl	8016124 <UART_WaitOnFlagUntilTimeout>
 8016076:	4603      	mov	r3, r0
 8016078:	2b00      	cmp	r3, #0
 801607a:	d03c      	beq.n	80160f6 <UART_CheckIdleState+0x126>
 801607c:	687b      	ldr	r3, [r7, #4]
 801607e:	681b      	ldr	r3, [r3, #0]
 8016080:	627b      	str	r3, [r7, #36]	; 0x24
 8016082:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8016084:	e853 3f00 	ldrex	r3, [r3]
 8016088:	623b      	str	r3, [r7, #32]
 801608a:	6a3b      	ldr	r3, [r7, #32]
 801608c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8016090:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016092:	687b      	ldr	r3, [r7, #4]
 8016094:	681b      	ldr	r3, [r3, #0]
 8016096:	461a      	mov	r2, r3
 8016098:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801609a:	633b      	str	r3, [r7, #48]	; 0x30
 801609c:	62fa      	str	r2, [r7, #44]	; 0x2c
 801609e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80160a0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80160a2:	e841 2300 	strex	r3, r2, [r1]
 80160a6:	62bb      	str	r3, [r7, #40]	; 0x28
 80160a8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80160aa:	2b00      	cmp	r3, #0
 80160ac:	d1e6      	bne.n	801607c <UART_CheckIdleState+0xac>
 80160ae:	687b      	ldr	r3, [r7, #4]
 80160b0:	681b      	ldr	r3, [r3, #0]
 80160b2:	3308      	adds	r3, #8
 80160b4:	613b      	str	r3, [r7, #16]
 80160b6:	693b      	ldr	r3, [r7, #16]
 80160b8:	e853 3f00 	ldrex	r3, [r3]
 80160bc:	60fb      	str	r3, [r7, #12]
 80160be:	68fb      	ldr	r3, [r7, #12]
 80160c0:	f023 0301 	bic.w	r3, r3, #1
 80160c4:	64bb      	str	r3, [r7, #72]	; 0x48
 80160c6:	687b      	ldr	r3, [r7, #4]
 80160c8:	681b      	ldr	r3, [r3, #0]
 80160ca:	3308      	adds	r3, #8
 80160cc:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80160ce:	61fa      	str	r2, [r7, #28]
 80160d0:	61bb      	str	r3, [r7, #24]
 80160d2:	69b9      	ldr	r1, [r7, #24]
 80160d4:	69fa      	ldr	r2, [r7, #28]
 80160d6:	e841 2300 	strex	r3, r2, [r1]
 80160da:	617b      	str	r3, [r7, #20]
 80160dc:	697b      	ldr	r3, [r7, #20]
 80160de:	2b00      	cmp	r3, #0
 80160e0:	d1e5      	bne.n	80160ae <UART_CheckIdleState+0xde>
 80160e2:	687b      	ldr	r3, [r7, #4]
 80160e4:	2220      	movs	r2, #32
 80160e6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80160ea:	687b      	ldr	r3, [r7, #4]
 80160ec:	2200      	movs	r2, #0
 80160ee:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 80160f2:	2303      	movs	r3, #3
 80160f4:	e012      	b.n	801611c <UART_CheckIdleState+0x14c>
 80160f6:	687b      	ldr	r3, [r7, #4]
 80160f8:	2220      	movs	r2, #32
 80160fa:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80160fe:	687b      	ldr	r3, [r7, #4]
 8016100:	2220      	movs	r2, #32
 8016102:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8016106:	687b      	ldr	r3, [r7, #4]
 8016108:	2200      	movs	r2, #0
 801610a:	66da      	str	r2, [r3, #108]	; 0x6c
 801610c:	687b      	ldr	r3, [r7, #4]
 801610e:	2200      	movs	r2, #0
 8016110:	671a      	str	r2, [r3, #112]	; 0x70
 8016112:	687b      	ldr	r3, [r7, #4]
 8016114:	2200      	movs	r2, #0
 8016116:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 801611a:	2300      	movs	r3, #0
 801611c:	4618      	mov	r0, r3
 801611e:	3758      	adds	r7, #88	; 0x58
 8016120:	46bd      	mov	sp, r7
 8016122:	bd80      	pop	{r7, pc}

08016124 <UART_WaitOnFlagUntilTimeout>:
 8016124:	b580      	push	{r7, lr}
 8016126:	b084      	sub	sp, #16
 8016128:	af00      	add	r7, sp, #0
 801612a:	60f8      	str	r0, [r7, #12]
 801612c:	60b9      	str	r1, [r7, #8]
 801612e:	603b      	str	r3, [r7, #0]
 8016130:	4613      	mov	r3, r2
 8016132:	71fb      	strb	r3, [r7, #7]
 8016134:	e04f      	b.n	80161d6 <UART_WaitOnFlagUntilTimeout+0xb2>
 8016136:	69bb      	ldr	r3, [r7, #24]
 8016138:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801613c:	d04b      	beq.n	80161d6 <UART_WaitOnFlagUntilTimeout+0xb2>
 801613e:	f7f0 f857 	bl	80061f0 <HAL_GetTick>
 8016142:	4602      	mov	r2, r0
 8016144:	683b      	ldr	r3, [r7, #0]
 8016146:	1ad3      	subs	r3, r2, r3
 8016148:	69ba      	ldr	r2, [r7, #24]
 801614a:	429a      	cmp	r2, r3
 801614c:	d302      	bcc.n	8016154 <UART_WaitOnFlagUntilTimeout+0x30>
 801614e:	69bb      	ldr	r3, [r7, #24]
 8016150:	2b00      	cmp	r3, #0
 8016152:	d101      	bne.n	8016158 <UART_WaitOnFlagUntilTimeout+0x34>
 8016154:	2303      	movs	r3, #3
 8016156:	e04e      	b.n	80161f6 <UART_WaitOnFlagUntilTimeout+0xd2>
 8016158:	68fb      	ldr	r3, [r7, #12]
 801615a:	681b      	ldr	r3, [r3, #0]
 801615c:	681b      	ldr	r3, [r3, #0]
 801615e:	f003 0304 	and.w	r3, r3, #4
 8016162:	2b00      	cmp	r3, #0
 8016164:	d037      	beq.n	80161d6 <UART_WaitOnFlagUntilTimeout+0xb2>
 8016166:	68bb      	ldr	r3, [r7, #8]
 8016168:	2b80      	cmp	r3, #128	; 0x80
 801616a:	d034      	beq.n	80161d6 <UART_WaitOnFlagUntilTimeout+0xb2>
 801616c:	68bb      	ldr	r3, [r7, #8]
 801616e:	2b40      	cmp	r3, #64	; 0x40
 8016170:	d031      	beq.n	80161d6 <UART_WaitOnFlagUntilTimeout+0xb2>
 8016172:	68fb      	ldr	r3, [r7, #12]
 8016174:	681b      	ldr	r3, [r3, #0]
 8016176:	69db      	ldr	r3, [r3, #28]
 8016178:	f003 0308 	and.w	r3, r3, #8
 801617c:	2b08      	cmp	r3, #8
 801617e:	d110      	bne.n	80161a2 <UART_WaitOnFlagUntilTimeout+0x7e>
 8016180:	68fb      	ldr	r3, [r7, #12]
 8016182:	681b      	ldr	r3, [r3, #0]
 8016184:	2208      	movs	r2, #8
 8016186:	621a      	str	r2, [r3, #32]
 8016188:	68f8      	ldr	r0, [r7, #12]
 801618a:	f000 f95b 	bl	8016444 <UART_EndRxTransfer>
 801618e:	68fb      	ldr	r3, [r7, #12]
 8016190:	2208      	movs	r2, #8
 8016192:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8016196:	68fb      	ldr	r3, [r7, #12]
 8016198:	2200      	movs	r2, #0
 801619a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 801619e:	2301      	movs	r3, #1
 80161a0:	e029      	b.n	80161f6 <UART_WaitOnFlagUntilTimeout+0xd2>
 80161a2:	68fb      	ldr	r3, [r7, #12]
 80161a4:	681b      	ldr	r3, [r3, #0]
 80161a6:	69db      	ldr	r3, [r3, #28]
 80161a8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80161ac:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80161b0:	d111      	bne.n	80161d6 <UART_WaitOnFlagUntilTimeout+0xb2>
 80161b2:	68fb      	ldr	r3, [r7, #12]
 80161b4:	681b      	ldr	r3, [r3, #0]
 80161b6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80161ba:	621a      	str	r2, [r3, #32]
 80161bc:	68f8      	ldr	r0, [r7, #12]
 80161be:	f000 f941 	bl	8016444 <UART_EndRxTransfer>
 80161c2:	68fb      	ldr	r3, [r7, #12]
 80161c4:	2220      	movs	r2, #32
 80161c6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80161ca:	68fb      	ldr	r3, [r7, #12]
 80161cc:	2200      	movs	r2, #0
 80161ce:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 80161d2:	2303      	movs	r3, #3
 80161d4:	e00f      	b.n	80161f6 <UART_WaitOnFlagUntilTimeout+0xd2>
 80161d6:	68fb      	ldr	r3, [r7, #12]
 80161d8:	681b      	ldr	r3, [r3, #0]
 80161da:	69da      	ldr	r2, [r3, #28]
 80161dc:	68bb      	ldr	r3, [r7, #8]
 80161de:	4013      	ands	r3, r2
 80161e0:	68ba      	ldr	r2, [r7, #8]
 80161e2:	429a      	cmp	r2, r3
 80161e4:	bf0c      	ite	eq
 80161e6:	2301      	moveq	r3, #1
 80161e8:	2300      	movne	r3, #0
 80161ea:	b2db      	uxtb	r3, r3
 80161ec:	461a      	mov	r2, r3
 80161ee:	79fb      	ldrb	r3, [r7, #7]
 80161f0:	429a      	cmp	r2, r3
 80161f2:	d0a0      	beq.n	8016136 <UART_WaitOnFlagUntilTimeout+0x12>
 80161f4:	2300      	movs	r3, #0
 80161f6:	4618      	mov	r0, r3
 80161f8:	3710      	adds	r7, #16
 80161fa:	46bd      	mov	sp, r7
 80161fc:	bd80      	pop	{r7, pc}
	...

08016200 <UART_Start_Receive_IT>:
 8016200:	b480      	push	{r7}
 8016202:	b0a3      	sub	sp, #140	; 0x8c
 8016204:	af00      	add	r7, sp, #0
 8016206:	60f8      	str	r0, [r7, #12]
 8016208:	60b9      	str	r1, [r7, #8]
 801620a:	4613      	mov	r3, r2
 801620c:	80fb      	strh	r3, [r7, #6]
 801620e:	68fb      	ldr	r3, [r7, #12]
 8016210:	68ba      	ldr	r2, [r7, #8]
 8016212:	659a      	str	r2, [r3, #88]	; 0x58
 8016214:	68fb      	ldr	r3, [r7, #12]
 8016216:	88fa      	ldrh	r2, [r7, #6]
 8016218:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 801621c:	68fb      	ldr	r3, [r7, #12]
 801621e:	88fa      	ldrh	r2, [r7, #6]
 8016220:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 8016224:	68fb      	ldr	r3, [r7, #12]
 8016226:	2200      	movs	r2, #0
 8016228:	675a      	str	r2, [r3, #116]	; 0x74
 801622a:	68fb      	ldr	r3, [r7, #12]
 801622c:	689b      	ldr	r3, [r3, #8]
 801622e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8016232:	d10e      	bne.n	8016252 <UART_Start_Receive_IT+0x52>
 8016234:	68fb      	ldr	r3, [r7, #12]
 8016236:	691b      	ldr	r3, [r3, #16]
 8016238:	2b00      	cmp	r3, #0
 801623a:	d105      	bne.n	8016248 <UART_Start_Receive_IT+0x48>
 801623c:	68fb      	ldr	r3, [r7, #12]
 801623e:	f240 12ff 	movw	r2, #511	; 0x1ff
 8016242:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8016246:	e02d      	b.n	80162a4 <UART_Start_Receive_IT+0xa4>
 8016248:	68fb      	ldr	r3, [r7, #12]
 801624a:	22ff      	movs	r2, #255	; 0xff
 801624c:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8016250:	e028      	b.n	80162a4 <UART_Start_Receive_IT+0xa4>
 8016252:	68fb      	ldr	r3, [r7, #12]
 8016254:	689b      	ldr	r3, [r3, #8]
 8016256:	2b00      	cmp	r3, #0
 8016258:	d10d      	bne.n	8016276 <UART_Start_Receive_IT+0x76>
 801625a:	68fb      	ldr	r3, [r7, #12]
 801625c:	691b      	ldr	r3, [r3, #16]
 801625e:	2b00      	cmp	r3, #0
 8016260:	d104      	bne.n	801626c <UART_Start_Receive_IT+0x6c>
 8016262:	68fb      	ldr	r3, [r7, #12]
 8016264:	22ff      	movs	r2, #255	; 0xff
 8016266:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 801626a:	e01b      	b.n	80162a4 <UART_Start_Receive_IT+0xa4>
 801626c:	68fb      	ldr	r3, [r7, #12]
 801626e:	227f      	movs	r2, #127	; 0x7f
 8016270:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8016274:	e016      	b.n	80162a4 <UART_Start_Receive_IT+0xa4>
 8016276:	68fb      	ldr	r3, [r7, #12]
 8016278:	689b      	ldr	r3, [r3, #8]
 801627a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 801627e:	d10d      	bne.n	801629c <UART_Start_Receive_IT+0x9c>
 8016280:	68fb      	ldr	r3, [r7, #12]
 8016282:	691b      	ldr	r3, [r3, #16]
 8016284:	2b00      	cmp	r3, #0
 8016286:	d104      	bne.n	8016292 <UART_Start_Receive_IT+0x92>
 8016288:	68fb      	ldr	r3, [r7, #12]
 801628a:	227f      	movs	r2, #127	; 0x7f
 801628c:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8016290:	e008      	b.n	80162a4 <UART_Start_Receive_IT+0xa4>
 8016292:	68fb      	ldr	r3, [r7, #12]
 8016294:	223f      	movs	r2, #63	; 0x3f
 8016296:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 801629a:	e003      	b.n	80162a4 <UART_Start_Receive_IT+0xa4>
 801629c:	68fb      	ldr	r3, [r7, #12]
 801629e:	2200      	movs	r2, #0
 80162a0:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 80162a4:	68fb      	ldr	r3, [r7, #12]
 80162a6:	2200      	movs	r2, #0
 80162a8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80162ac:	68fb      	ldr	r3, [r7, #12]
 80162ae:	2222      	movs	r2, #34	; 0x22
 80162b0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80162b4:	68fb      	ldr	r3, [r7, #12]
 80162b6:	681b      	ldr	r3, [r3, #0]
 80162b8:	3308      	adds	r3, #8
 80162ba:	667b      	str	r3, [r7, #100]	; 0x64
 80162bc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80162be:	e853 3f00 	ldrex	r3, [r3]
 80162c2:	663b      	str	r3, [r7, #96]	; 0x60
 80162c4:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80162c6:	f043 0301 	orr.w	r3, r3, #1
 80162ca:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80162ce:	68fb      	ldr	r3, [r7, #12]
 80162d0:	681b      	ldr	r3, [r3, #0]
 80162d2:	3308      	adds	r3, #8
 80162d4:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 80162d8:	673a      	str	r2, [r7, #112]	; 0x70
 80162da:	66fb      	str	r3, [r7, #108]	; 0x6c
 80162dc:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 80162de:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 80162e0:	e841 2300 	strex	r3, r2, [r1]
 80162e4:	66bb      	str	r3, [r7, #104]	; 0x68
 80162e6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80162e8:	2b00      	cmp	r3, #0
 80162ea:	d1e3      	bne.n	80162b4 <UART_Start_Receive_IT+0xb4>
 80162ec:	68fb      	ldr	r3, [r7, #12]
 80162ee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80162f0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80162f4:	d14f      	bne.n	8016396 <UART_Start_Receive_IT+0x196>
 80162f6:	68fb      	ldr	r3, [r7, #12]
 80162f8:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 80162fc:	88fa      	ldrh	r2, [r7, #6]
 80162fe:	429a      	cmp	r2, r3
 8016300:	d349      	bcc.n	8016396 <UART_Start_Receive_IT+0x196>
 8016302:	68fb      	ldr	r3, [r7, #12]
 8016304:	689b      	ldr	r3, [r3, #8]
 8016306:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801630a:	d107      	bne.n	801631c <UART_Start_Receive_IT+0x11c>
 801630c:	68fb      	ldr	r3, [r7, #12]
 801630e:	691b      	ldr	r3, [r3, #16]
 8016310:	2b00      	cmp	r3, #0
 8016312:	d103      	bne.n	801631c <UART_Start_Receive_IT+0x11c>
 8016314:	68fb      	ldr	r3, [r7, #12]
 8016316:	4a47      	ldr	r2, [pc, #284]	; (8016434 <UART_Start_Receive_IT+0x234>)
 8016318:	675a      	str	r2, [r3, #116]	; 0x74
 801631a:	e002      	b.n	8016322 <UART_Start_Receive_IT+0x122>
 801631c:	68fb      	ldr	r3, [r7, #12]
 801631e:	4a46      	ldr	r2, [pc, #280]	; (8016438 <UART_Start_Receive_IT+0x238>)
 8016320:	675a      	str	r2, [r3, #116]	; 0x74
 8016322:	68fb      	ldr	r3, [r7, #12]
 8016324:	691b      	ldr	r3, [r3, #16]
 8016326:	2b00      	cmp	r3, #0
 8016328:	d01a      	beq.n	8016360 <UART_Start_Receive_IT+0x160>
 801632a:	68fb      	ldr	r3, [r7, #12]
 801632c:	681b      	ldr	r3, [r3, #0]
 801632e:	653b      	str	r3, [r7, #80]	; 0x50
 8016330:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8016332:	e853 3f00 	ldrex	r3, [r3]
 8016336:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016338:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801633a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801633e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8016342:	68fb      	ldr	r3, [r7, #12]
 8016344:	681b      	ldr	r3, [r3, #0]
 8016346:	461a      	mov	r2, r3
 8016348:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 801634c:	65fb      	str	r3, [r7, #92]	; 0x5c
 801634e:	65ba      	str	r2, [r7, #88]	; 0x58
 8016350:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8016352:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8016354:	e841 2300 	strex	r3, r2, [r1]
 8016358:	657b      	str	r3, [r7, #84]	; 0x54
 801635a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801635c:	2b00      	cmp	r3, #0
 801635e:	d1e4      	bne.n	801632a <UART_Start_Receive_IT+0x12a>
 8016360:	68fb      	ldr	r3, [r7, #12]
 8016362:	681b      	ldr	r3, [r3, #0]
 8016364:	3308      	adds	r3, #8
 8016366:	63fb      	str	r3, [r7, #60]	; 0x3c
 8016368:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801636a:	e853 3f00 	ldrex	r3, [r3]
 801636e:	63bb      	str	r3, [r7, #56]	; 0x38
 8016370:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8016372:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8016376:	67fb      	str	r3, [r7, #124]	; 0x7c
 8016378:	68fb      	ldr	r3, [r7, #12]
 801637a:	681b      	ldr	r3, [r3, #0]
 801637c:	3308      	adds	r3, #8
 801637e:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8016380:	64ba      	str	r2, [r7, #72]	; 0x48
 8016382:	647b      	str	r3, [r7, #68]	; 0x44
 8016384:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8016386:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8016388:	e841 2300 	strex	r3, r2, [r1]
 801638c:	643b      	str	r3, [r7, #64]	; 0x40
 801638e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8016390:	2b00      	cmp	r3, #0
 8016392:	d1e5      	bne.n	8016360 <UART_Start_Receive_IT+0x160>
 8016394:	e046      	b.n	8016424 <UART_Start_Receive_IT+0x224>
 8016396:	68fb      	ldr	r3, [r7, #12]
 8016398:	689b      	ldr	r3, [r3, #8]
 801639a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801639e:	d107      	bne.n	80163b0 <UART_Start_Receive_IT+0x1b0>
 80163a0:	68fb      	ldr	r3, [r7, #12]
 80163a2:	691b      	ldr	r3, [r3, #16]
 80163a4:	2b00      	cmp	r3, #0
 80163a6:	d103      	bne.n	80163b0 <UART_Start_Receive_IT+0x1b0>
 80163a8:	68fb      	ldr	r3, [r7, #12]
 80163aa:	4a24      	ldr	r2, [pc, #144]	; (801643c <UART_Start_Receive_IT+0x23c>)
 80163ac:	675a      	str	r2, [r3, #116]	; 0x74
 80163ae:	e002      	b.n	80163b6 <UART_Start_Receive_IT+0x1b6>
 80163b0:	68fb      	ldr	r3, [r7, #12]
 80163b2:	4a23      	ldr	r2, [pc, #140]	; (8016440 <UART_Start_Receive_IT+0x240>)
 80163b4:	675a      	str	r2, [r3, #116]	; 0x74
 80163b6:	68fb      	ldr	r3, [r7, #12]
 80163b8:	691b      	ldr	r3, [r3, #16]
 80163ba:	2b00      	cmp	r3, #0
 80163bc:	d019      	beq.n	80163f2 <UART_Start_Receive_IT+0x1f2>
 80163be:	68fb      	ldr	r3, [r7, #12]
 80163c0:	681b      	ldr	r3, [r3, #0]
 80163c2:	62bb      	str	r3, [r7, #40]	; 0x28
 80163c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80163c6:	e853 3f00 	ldrex	r3, [r3]
 80163ca:	627b      	str	r3, [r7, #36]	; 0x24
 80163cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80163ce:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 80163d2:	677b      	str	r3, [r7, #116]	; 0x74
 80163d4:	68fb      	ldr	r3, [r7, #12]
 80163d6:	681b      	ldr	r3, [r3, #0]
 80163d8:	461a      	mov	r2, r3
 80163da:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80163dc:	637b      	str	r3, [r7, #52]	; 0x34
 80163de:	633a      	str	r2, [r7, #48]	; 0x30
 80163e0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80163e2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80163e4:	e841 2300 	strex	r3, r2, [r1]
 80163e8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80163ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80163ec:	2b00      	cmp	r3, #0
 80163ee:	d1e6      	bne.n	80163be <UART_Start_Receive_IT+0x1be>
 80163f0:	e018      	b.n	8016424 <UART_Start_Receive_IT+0x224>
 80163f2:	68fb      	ldr	r3, [r7, #12]
 80163f4:	681b      	ldr	r3, [r3, #0]
 80163f6:	617b      	str	r3, [r7, #20]
 80163f8:	697b      	ldr	r3, [r7, #20]
 80163fa:	e853 3f00 	ldrex	r3, [r3]
 80163fe:	613b      	str	r3, [r7, #16]
 8016400:	693b      	ldr	r3, [r7, #16]
 8016402:	f043 0320 	orr.w	r3, r3, #32
 8016406:	67bb      	str	r3, [r7, #120]	; 0x78
 8016408:	68fb      	ldr	r3, [r7, #12]
 801640a:	681b      	ldr	r3, [r3, #0]
 801640c:	461a      	mov	r2, r3
 801640e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8016410:	623b      	str	r3, [r7, #32]
 8016412:	61fa      	str	r2, [r7, #28]
 8016414:	69f9      	ldr	r1, [r7, #28]
 8016416:	6a3a      	ldr	r2, [r7, #32]
 8016418:	e841 2300 	strex	r3, r2, [r1]
 801641c:	61bb      	str	r3, [r7, #24]
 801641e:	69bb      	ldr	r3, [r7, #24]
 8016420:	2b00      	cmp	r3, #0
 8016422:	d1e6      	bne.n	80163f2 <UART_Start_Receive_IT+0x1f2>
 8016424:	2300      	movs	r3, #0
 8016426:	4618      	mov	r0, r3
 8016428:	378c      	adds	r7, #140	; 0x8c
 801642a:	46bd      	mov	sp, r7
 801642c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016430:	4770      	bx	lr
 8016432:	bf00      	nop
 8016434:	08016c65 	.word	0x08016c65
 8016438:	08016905 	.word	0x08016905
 801643c:	0801674d 	.word	0x0801674d
 8016440:	08016595 	.word	0x08016595

08016444 <UART_EndRxTransfer>:
 8016444:	b480      	push	{r7}
 8016446:	b095      	sub	sp, #84	; 0x54
 8016448:	af00      	add	r7, sp, #0
 801644a:	6078      	str	r0, [r7, #4]
 801644c:	687b      	ldr	r3, [r7, #4]
 801644e:	681b      	ldr	r3, [r3, #0]
 8016450:	637b      	str	r3, [r7, #52]	; 0x34
 8016452:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8016454:	e853 3f00 	ldrex	r3, [r3]
 8016458:	633b      	str	r3, [r7, #48]	; 0x30
 801645a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801645c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8016460:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016462:	687b      	ldr	r3, [r7, #4]
 8016464:	681b      	ldr	r3, [r3, #0]
 8016466:	461a      	mov	r2, r3
 8016468:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801646a:	643b      	str	r3, [r7, #64]	; 0x40
 801646c:	63fa      	str	r2, [r7, #60]	; 0x3c
 801646e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8016470:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8016472:	e841 2300 	strex	r3, r2, [r1]
 8016476:	63bb      	str	r3, [r7, #56]	; 0x38
 8016478:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801647a:	2b00      	cmp	r3, #0
 801647c:	d1e6      	bne.n	801644c <UART_EndRxTransfer+0x8>
 801647e:	687b      	ldr	r3, [r7, #4]
 8016480:	681b      	ldr	r3, [r3, #0]
 8016482:	3308      	adds	r3, #8
 8016484:	623b      	str	r3, [r7, #32]
 8016486:	6a3b      	ldr	r3, [r7, #32]
 8016488:	e853 3f00 	ldrex	r3, [r3]
 801648c:	61fb      	str	r3, [r7, #28]
 801648e:	69fa      	ldr	r2, [r7, #28]
 8016490:	4b1e      	ldr	r3, [pc, #120]	; (801650c <UART_EndRxTransfer+0xc8>)
 8016492:	4013      	ands	r3, r2
 8016494:	64bb      	str	r3, [r7, #72]	; 0x48
 8016496:	687b      	ldr	r3, [r7, #4]
 8016498:	681b      	ldr	r3, [r3, #0]
 801649a:	3308      	adds	r3, #8
 801649c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 801649e:	62fa      	str	r2, [r7, #44]	; 0x2c
 80164a0:	62bb      	str	r3, [r7, #40]	; 0x28
 80164a2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80164a4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80164a6:	e841 2300 	strex	r3, r2, [r1]
 80164aa:	627b      	str	r3, [r7, #36]	; 0x24
 80164ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80164ae:	2b00      	cmp	r3, #0
 80164b0:	d1e5      	bne.n	801647e <UART_EndRxTransfer+0x3a>
 80164b2:	687b      	ldr	r3, [r7, #4]
 80164b4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80164b6:	2b01      	cmp	r3, #1
 80164b8:	d118      	bne.n	80164ec <UART_EndRxTransfer+0xa8>
 80164ba:	687b      	ldr	r3, [r7, #4]
 80164bc:	681b      	ldr	r3, [r3, #0]
 80164be:	60fb      	str	r3, [r7, #12]
 80164c0:	68fb      	ldr	r3, [r7, #12]
 80164c2:	e853 3f00 	ldrex	r3, [r3]
 80164c6:	60bb      	str	r3, [r7, #8]
 80164c8:	68bb      	ldr	r3, [r7, #8]
 80164ca:	f023 0310 	bic.w	r3, r3, #16
 80164ce:	647b      	str	r3, [r7, #68]	; 0x44
 80164d0:	687b      	ldr	r3, [r7, #4]
 80164d2:	681b      	ldr	r3, [r3, #0]
 80164d4:	461a      	mov	r2, r3
 80164d6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80164d8:	61bb      	str	r3, [r7, #24]
 80164da:	617a      	str	r2, [r7, #20]
 80164dc:	6979      	ldr	r1, [r7, #20]
 80164de:	69ba      	ldr	r2, [r7, #24]
 80164e0:	e841 2300 	strex	r3, r2, [r1]
 80164e4:	613b      	str	r3, [r7, #16]
 80164e6:	693b      	ldr	r3, [r7, #16]
 80164e8:	2b00      	cmp	r3, #0
 80164ea:	d1e6      	bne.n	80164ba <UART_EndRxTransfer+0x76>
 80164ec:	687b      	ldr	r3, [r7, #4]
 80164ee:	2220      	movs	r2, #32
 80164f0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80164f4:	687b      	ldr	r3, [r7, #4]
 80164f6:	2200      	movs	r2, #0
 80164f8:	66da      	str	r2, [r3, #108]	; 0x6c
 80164fa:	687b      	ldr	r3, [r7, #4]
 80164fc:	2200      	movs	r2, #0
 80164fe:	675a      	str	r2, [r3, #116]	; 0x74
 8016500:	bf00      	nop
 8016502:	3754      	adds	r7, #84	; 0x54
 8016504:	46bd      	mov	sp, r7
 8016506:	f85d 7b04 	ldr.w	r7, [sp], #4
 801650a:	4770      	bx	lr
 801650c:	effffffe 	.word	0xeffffffe

08016510 <UART_DMAAbortOnError>:
 8016510:	b580      	push	{r7, lr}
 8016512:	b084      	sub	sp, #16
 8016514:	af00      	add	r7, sp, #0
 8016516:	6078      	str	r0, [r7, #4]
 8016518:	687b      	ldr	r3, [r7, #4]
 801651a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801651c:	60fb      	str	r3, [r7, #12]
 801651e:	68fb      	ldr	r3, [r7, #12]
 8016520:	2200      	movs	r2, #0
 8016522:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 8016526:	68fb      	ldr	r3, [r7, #12]
 8016528:	2200      	movs	r2, #0
 801652a:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 801652e:	68f8      	ldr	r0, [r7, #12]
 8016530:	f7fe ff2e 	bl	8015390 <HAL_UART_ErrorCallback>
 8016534:	bf00      	nop
 8016536:	3710      	adds	r7, #16
 8016538:	46bd      	mov	sp, r7
 801653a:	bd80      	pop	{r7, pc}

0801653c <UART_EndTransmit_IT>:
 801653c:	b580      	push	{r7, lr}
 801653e:	b088      	sub	sp, #32
 8016540:	af00      	add	r7, sp, #0
 8016542:	6078      	str	r0, [r7, #4]
 8016544:	687b      	ldr	r3, [r7, #4]
 8016546:	681b      	ldr	r3, [r3, #0]
 8016548:	60fb      	str	r3, [r7, #12]
 801654a:	68fb      	ldr	r3, [r7, #12]
 801654c:	e853 3f00 	ldrex	r3, [r3]
 8016550:	60bb      	str	r3, [r7, #8]
 8016552:	68bb      	ldr	r3, [r7, #8]
 8016554:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8016558:	61fb      	str	r3, [r7, #28]
 801655a:	687b      	ldr	r3, [r7, #4]
 801655c:	681b      	ldr	r3, [r3, #0]
 801655e:	461a      	mov	r2, r3
 8016560:	69fb      	ldr	r3, [r7, #28]
 8016562:	61bb      	str	r3, [r7, #24]
 8016564:	617a      	str	r2, [r7, #20]
 8016566:	6979      	ldr	r1, [r7, #20]
 8016568:	69ba      	ldr	r2, [r7, #24]
 801656a:	e841 2300 	strex	r3, r2, [r1]
 801656e:	613b      	str	r3, [r7, #16]
 8016570:	693b      	ldr	r3, [r7, #16]
 8016572:	2b00      	cmp	r3, #0
 8016574:	d1e6      	bne.n	8016544 <UART_EndTransmit_IT+0x8>
 8016576:	687b      	ldr	r3, [r7, #4]
 8016578:	2220      	movs	r2, #32
 801657a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 801657e:	687b      	ldr	r3, [r7, #4]
 8016580:	2200      	movs	r2, #0
 8016582:	679a      	str	r2, [r3, #120]	; 0x78
 8016584:	6878      	ldr	r0, [r7, #4]
 8016586:	f7fe fef9 	bl	801537c <HAL_UART_TxCpltCallback>
 801658a:	bf00      	nop
 801658c:	3720      	adds	r7, #32
 801658e:	46bd      	mov	sp, r7
 8016590:	bd80      	pop	{r7, pc}
	...

08016594 <UART_RxISR_8BIT>:
 8016594:	b580      	push	{r7, lr}
 8016596:	b09c      	sub	sp, #112	; 0x70
 8016598:	af00      	add	r7, sp, #0
 801659a:	6078      	str	r0, [r7, #4]
 801659c:	687b      	ldr	r3, [r7, #4]
 801659e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 80165a2:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
 80165a6:	687b      	ldr	r3, [r7, #4]
 80165a8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80165ac:	2b22      	cmp	r3, #34	; 0x22
 80165ae:	f040 80be 	bne.w	801672e <UART_RxISR_8BIT+0x19a>
 80165b2:	687b      	ldr	r3, [r7, #4]
 80165b4:	681b      	ldr	r3, [r3, #0]
 80165b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80165b8:	f8a7 306c 	strh.w	r3, [r7, #108]	; 0x6c
 80165bc:	f8b7 306c 	ldrh.w	r3, [r7, #108]	; 0x6c
 80165c0:	b2d9      	uxtb	r1, r3
 80165c2:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 80165c6:	b2da      	uxtb	r2, r3
 80165c8:	687b      	ldr	r3, [r7, #4]
 80165ca:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80165cc:	400a      	ands	r2, r1
 80165ce:	b2d2      	uxtb	r2, r2
 80165d0:	701a      	strb	r2, [r3, #0]
 80165d2:	687b      	ldr	r3, [r7, #4]
 80165d4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80165d6:	1c5a      	adds	r2, r3, #1
 80165d8:	687b      	ldr	r3, [r7, #4]
 80165da:	659a      	str	r2, [r3, #88]	; 0x58
 80165dc:	687b      	ldr	r3, [r7, #4]
 80165de:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80165e2:	b29b      	uxth	r3, r3
 80165e4:	3b01      	subs	r3, #1
 80165e6:	b29a      	uxth	r2, r3
 80165e8:	687b      	ldr	r3, [r7, #4]
 80165ea:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 80165ee:	687b      	ldr	r3, [r7, #4]
 80165f0:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80165f4:	b29b      	uxth	r3, r3
 80165f6:	2b00      	cmp	r3, #0
 80165f8:	f040 80a1 	bne.w	801673e <UART_RxISR_8BIT+0x1aa>
 80165fc:	687b      	ldr	r3, [r7, #4]
 80165fe:	681b      	ldr	r3, [r3, #0]
 8016600:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016602:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8016604:	e853 3f00 	ldrex	r3, [r3]
 8016608:	64bb      	str	r3, [r7, #72]	; 0x48
 801660a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801660c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8016610:	66bb      	str	r3, [r7, #104]	; 0x68
 8016612:	687b      	ldr	r3, [r7, #4]
 8016614:	681b      	ldr	r3, [r3, #0]
 8016616:	461a      	mov	r2, r3
 8016618:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 801661a:	65bb      	str	r3, [r7, #88]	; 0x58
 801661c:	657a      	str	r2, [r7, #84]	; 0x54
 801661e:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8016620:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8016622:	e841 2300 	strex	r3, r2, [r1]
 8016626:	653b      	str	r3, [r7, #80]	; 0x50
 8016628:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801662a:	2b00      	cmp	r3, #0
 801662c:	d1e6      	bne.n	80165fc <UART_RxISR_8BIT+0x68>
 801662e:	687b      	ldr	r3, [r7, #4]
 8016630:	681b      	ldr	r3, [r3, #0]
 8016632:	3308      	adds	r3, #8
 8016634:	63bb      	str	r3, [r7, #56]	; 0x38
 8016636:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8016638:	e853 3f00 	ldrex	r3, [r3]
 801663c:	637b      	str	r3, [r7, #52]	; 0x34
 801663e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8016640:	f023 0301 	bic.w	r3, r3, #1
 8016644:	667b      	str	r3, [r7, #100]	; 0x64
 8016646:	687b      	ldr	r3, [r7, #4]
 8016648:	681b      	ldr	r3, [r3, #0]
 801664a:	3308      	adds	r3, #8
 801664c:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 801664e:	647a      	str	r2, [r7, #68]	; 0x44
 8016650:	643b      	str	r3, [r7, #64]	; 0x40
 8016652:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8016654:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8016656:	e841 2300 	strex	r3, r2, [r1]
 801665a:	63fb      	str	r3, [r7, #60]	; 0x3c
 801665c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801665e:	2b00      	cmp	r3, #0
 8016660:	d1e5      	bne.n	801662e <UART_RxISR_8BIT+0x9a>
 8016662:	687b      	ldr	r3, [r7, #4]
 8016664:	2220      	movs	r2, #32
 8016666:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 801666a:	687b      	ldr	r3, [r7, #4]
 801666c:	2200      	movs	r2, #0
 801666e:	675a      	str	r2, [r3, #116]	; 0x74
 8016670:	687b      	ldr	r3, [r7, #4]
 8016672:	2200      	movs	r2, #0
 8016674:	671a      	str	r2, [r3, #112]	; 0x70
 8016676:	687b      	ldr	r3, [r7, #4]
 8016678:	681b      	ldr	r3, [r3, #0]
 801667a:	4a33      	ldr	r2, [pc, #204]	; (8016748 <UART_RxISR_8BIT+0x1b4>)
 801667c:	4293      	cmp	r3, r2
 801667e:	d01f      	beq.n	80166c0 <UART_RxISR_8BIT+0x12c>
 8016680:	687b      	ldr	r3, [r7, #4]
 8016682:	681b      	ldr	r3, [r3, #0]
 8016684:	685b      	ldr	r3, [r3, #4]
 8016686:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 801668a:	2b00      	cmp	r3, #0
 801668c:	d018      	beq.n	80166c0 <UART_RxISR_8BIT+0x12c>
 801668e:	687b      	ldr	r3, [r7, #4]
 8016690:	681b      	ldr	r3, [r3, #0]
 8016692:	627b      	str	r3, [r7, #36]	; 0x24
 8016694:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8016696:	e853 3f00 	ldrex	r3, [r3]
 801669a:	623b      	str	r3, [r7, #32]
 801669c:	6a3b      	ldr	r3, [r7, #32]
 801669e:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80166a2:	663b      	str	r3, [r7, #96]	; 0x60
 80166a4:	687b      	ldr	r3, [r7, #4]
 80166a6:	681b      	ldr	r3, [r3, #0]
 80166a8:	461a      	mov	r2, r3
 80166aa:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80166ac:	633b      	str	r3, [r7, #48]	; 0x30
 80166ae:	62fa      	str	r2, [r7, #44]	; 0x2c
 80166b0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80166b2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80166b4:	e841 2300 	strex	r3, r2, [r1]
 80166b8:	62bb      	str	r3, [r7, #40]	; 0x28
 80166ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80166bc:	2b00      	cmp	r3, #0
 80166be:	d1e6      	bne.n	801668e <UART_RxISR_8BIT+0xfa>
 80166c0:	687b      	ldr	r3, [r7, #4]
 80166c2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80166c4:	2b01      	cmp	r3, #1
 80166c6:	d12e      	bne.n	8016726 <UART_RxISR_8BIT+0x192>
 80166c8:	687b      	ldr	r3, [r7, #4]
 80166ca:	2200      	movs	r2, #0
 80166cc:	66da      	str	r2, [r3, #108]	; 0x6c
 80166ce:	687b      	ldr	r3, [r7, #4]
 80166d0:	681b      	ldr	r3, [r3, #0]
 80166d2:	613b      	str	r3, [r7, #16]
 80166d4:	693b      	ldr	r3, [r7, #16]
 80166d6:	e853 3f00 	ldrex	r3, [r3]
 80166da:	60fb      	str	r3, [r7, #12]
 80166dc:	68fb      	ldr	r3, [r7, #12]
 80166de:	f023 0310 	bic.w	r3, r3, #16
 80166e2:	65fb      	str	r3, [r7, #92]	; 0x5c
 80166e4:	687b      	ldr	r3, [r7, #4]
 80166e6:	681b      	ldr	r3, [r3, #0]
 80166e8:	461a      	mov	r2, r3
 80166ea:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80166ec:	61fb      	str	r3, [r7, #28]
 80166ee:	61ba      	str	r2, [r7, #24]
 80166f0:	69b9      	ldr	r1, [r7, #24]
 80166f2:	69fa      	ldr	r2, [r7, #28]
 80166f4:	e841 2300 	strex	r3, r2, [r1]
 80166f8:	617b      	str	r3, [r7, #20]
 80166fa:	697b      	ldr	r3, [r7, #20]
 80166fc:	2b00      	cmp	r3, #0
 80166fe:	d1e6      	bne.n	80166ce <UART_RxISR_8BIT+0x13a>
 8016700:	687b      	ldr	r3, [r7, #4]
 8016702:	681b      	ldr	r3, [r3, #0]
 8016704:	69db      	ldr	r3, [r3, #28]
 8016706:	f003 0310 	and.w	r3, r3, #16
 801670a:	2b10      	cmp	r3, #16
 801670c:	d103      	bne.n	8016716 <UART_RxISR_8BIT+0x182>
 801670e:	687b      	ldr	r3, [r7, #4]
 8016710:	681b      	ldr	r3, [r3, #0]
 8016712:	2210      	movs	r2, #16
 8016714:	621a      	str	r2, [r3, #32]
 8016716:	687b      	ldr	r3, [r7, #4]
 8016718:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 801671c:	4619      	mov	r1, r3
 801671e:	6878      	ldr	r0, [r7, #4]
 8016720:	f7fe fe40 	bl	80153a4 <HAL_UARTEx_RxEventCallback>
 8016724:	e00b      	b.n	801673e <UART_RxISR_8BIT+0x1aa>
 8016726:	6878      	ldr	r0, [r7, #4]
 8016728:	f7ec fb90 	bl	8002e4c <HAL_UART_RxCpltCallback>
 801672c:	e007      	b.n	801673e <UART_RxISR_8BIT+0x1aa>
 801672e:	687b      	ldr	r3, [r7, #4]
 8016730:	681b      	ldr	r3, [r3, #0]
 8016732:	699a      	ldr	r2, [r3, #24]
 8016734:	687b      	ldr	r3, [r7, #4]
 8016736:	681b      	ldr	r3, [r3, #0]
 8016738:	f042 0208 	orr.w	r2, r2, #8
 801673c:	619a      	str	r2, [r3, #24]
 801673e:	bf00      	nop
 8016740:	3770      	adds	r7, #112	; 0x70
 8016742:	46bd      	mov	sp, r7
 8016744:	bd80      	pop	{r7, pc}
 8016746:	bf00      	nop
 8016748:	58000c00 	.word	0x58000c00

0801674c <UART_RxISR_16BIT>:
 801674c:	b580      	push	{r7, lr}
 801674e:	b09c      	sub	sp, #112	; 0x70
 8016750:	af00      	add	r7, sp, #0
 8016752:	6078      	str	r0, [r7, #4]
 8016754:	687b      	ldr	r3, [r7, #4]
 8016756:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 801675a:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
 801675e:	687b      	ldr	r3, [r7, #4]
 8016760:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8016764:	2b22      	cmp	r3, #34	; 0x22
 8016766:	f040 80be 	bne.w	80168e6 <UART_RxISR_16BIT+0x19a>
 801676a:	687b      	ldr	r3, [r7, #4]
 801676c:	681b      	ldr	r3, [r3, #0]
 801676e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016770:	f8a7 306c 	strh.w	r3, [r7, #108]	; 0x6c
 8016774:	687b      	ldr	r3, [r7, #4]
 8016776:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8016778:	66bb      	str	r3, [r7, #104]	; 0x68
 801677a:	f8b7 206c 	ldrh.w	r2, [r7, #108]	; 0x6c
 801677e:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 8016782:	4013      	ands	r3, r2
 8016784:	b29a      	uxth	r2, r3
 8016786:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8016788:	801a      	strh	r2, [r3, #0]
 801678a:	687b      	ldr	r3, [r7, #4]
 801678c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801678e:	1c9a      	adds	r2, r3, #2
 8016790:	687b      	ldr	r3, [r7, #4]
 8016792:	659a      	str	r2, [r3, #88]	; 0x58
 8016794:	687b      	ldr	r3, [r7, #4]
 8016796:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 801679a:	b29b      	uxth	r3, r3
 801679c:	3b01      	subs	r3, #1
 801679e:	b29a      	uxth	r2, r3
 80167a0:	687b      	ldr	r3, [r7, #4]
 80167a2:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 80167a6:	687b      	ldr	r3, [r7, #4]
 80167a8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80167ac:	b29b      	uxth	r3, r3
 80167ae:	2b00      	cmp	r3, #0
 80167b0:	f040 80a1 	bne.w	80168f6 <UART_RxISR_16BIT+0x1aa>
 80167b4:	687b      	ldr	r3, [r7, #4]
 80167b6:	681b      	ldr	r3, [r3, #0]
 80167b8:	64bb      	str	r3, [r7, #72]	; 0x48
 80167ba:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80167bc:	e853 3f00 	ldrex	r3, [r3]
 80167c0:	647b      	str	r3, [r7, #68]	; 0x44
 80167c2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80167c4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80167c8:	667b      	str	r3, [r7, #100]	; 0x64
 80167ca:	687b      	ldr	r3, [r7, #4]
 80167cc:	681b      	ldr	r3, [r3, #0]
 80167ce:	461a      	mov	r2, r3
 80167d0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80167d2:	657b      	str	r3, [r7, #84]	; 0x54
 80167d4:	653a      	str	r2, [r7, #80]	; 0x50
 80167d6:	6d39      	ldr	r1, [r7, #80]	; 0x50
 80167d8:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80167da:	e841 2300 	strex	r3, r2, [r1]
 80167de:	64fb      	str	r3, [r7, #76]	; 0x4c
 80167e0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80167e2:	2b00      	cmp	r3, #0
 80167e4:	d1e6      	bne.n	80167b4 <UART_RxISR_16BIT+0x68>
 80167e6:	687b      	ldr	r3, [r7, #4]
 80167e8:	681b      	ldr	r3, [r3, #0]
 80167ea:	3308      	adds	r3, #8
 80167ec:	637b      	str	r3, [r7, #52]	; 0x34
 80167ee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80167f0:	e853 3f00 	ldrex	r3, [r3]
 80167f4:	633b      	str	r3, [r7, #48]	; 0x30
 80167f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80167f8:	f023 0301 	bic.w	r3, r3, #1
 80167fc:	663b      	str	r3, [r7, #96]	; 0x60
 80167fe:	687b      	ldr	r3, [r7, #4]
 8016800:	681b      	ldr	r3, [r3, #0]
 8016802:	3308      	adds	r3, #8
 8016804:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8016806:	643a      	str	r2, [r7, #64]	; 0x40
 8016808:	63fb      	str	r3, [r7, #60]	; 0x3c
 801680a:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 801680c:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 801680e:	e841 2300 	strex	r3, r2, [r1]
 8016812:	63bb      	str	r3, [r7, #56]	; 0x38
 8016814:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8016816:	2b00      	cmp	r3, #0
 8016818:	d1e5      	bne.n	80167e6 <UART_RxISR_16BIT+0x9a>
 801681a:	687b      	ldr	r3, [r7, #4]
 801681c:	2220      	movs	r2, #32
 801681e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8016822:	687b      	ldr	r3, [r7, #4]
 8016824:	2200      	movs	r2, #0
 8016826:	675a      	str	r2, [r3, #116]	; 0x74
 8016828:	687b      	ldr	r3, [r7, #4]
 801682a:	2200      	movs	r2, #0
 801682c:	671a      	str	r2, [r3, #112]	; 0x70
 801682e:	687b      	ldr	r3, [r7, #4]
 8016830:	681b      	ldr	r3, [r3, #0]
 8016832:	4a33      	ldr	r2, [pc, #204]	; (8016900 <UART_RxISR_16BIT+0x1b4>)
 8016834:	4293      	cmp	r3, r2
 8016836:	d01f      	beq.n	8016878 <UART_RxISR_16BIT+0x12c>
 8016838:	687b      	ldr	r3, [r7, #4]
 801683a:	681b      	ldr	r3, [r3, #0]
 801683c:	685b      	ldr	r3, [r3, #4]
 801683e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8016842:	2b00      	cmp	r3, #0
 8016844:	d018      	beq.n	8016878 <UART_RxISR_16BIT+0x12c>
 8016846:	687b      	ldr	r3, [r7, #4]
 8016848:	681b      	ldr	r3, [r3, #0]
 801684a:	623b      	str	r3, [r7, #32]
 801684c:	6a3b      	ldr	r3, [r7, #32]
 801684e:	e853 3f00 	ldrex	r3, [r3]
 8016852:	61fb      	str	r3, [r7, #28]
 8016854:	69fb      	ldr	r3, [r7, #28]
 8016856:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 801685a:	65fb      	str	r3, [r7, #92]	; 0x5c
 801685c:	687b      	ldr	r3, [r7, #4]
 801685e:	681b      	ldr	r3, [r3, #0]
 8016860:	461a      	mov	r2, r3
 8016862:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016864:	62fb      	str	r3, [r7, #44]	; 0x2c
 8016866:	62ba      	str	r2, [r7, #40]	; 0x28
 8016868:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801686a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801686c:	e841 2300 	strex	r3, r2, [r1]
 8016870:	627b      	str	r3, [r7, #36]	; 0x24
 8016872:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8016874:	2b00      	cmp	r3, #0
 8016876:	d1e6      	bne.n	8016846 <UART_RxISR_16BIT+0xfa>
 8016878:	687b      	ldr	r3, [r7, #4]
 801687a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801687c:	2b01      	cmp	r3, #1
 801687e:	d12e      	bne.n	80168de <UART_RxISR_16BIT+0x192>
 8016880:	687b      	ldr	r3, [r7, #4]
 8016882:	2200      	movs	r2, #0
 8016884:	66da      	str	r2, [r3, #108]	; 0x6c
 8016886:	687b      	ldr	r3, [r7, #4]
 8016888:	681b      	ldr	r3, [r3, #0]
 801688a:	60fb      	str	r3, [r7, #12]
 801688c:	68fb      	ldr	r3, [r7, #12]
 801688e:	e853 3f00 	ldrex	r3, [r3]
 8016892:	60bb      	str	r3, [r7, #8]
 8016894:	68bb      	ldr	r3, [r7, #8]
 8016896:	f023 0310 	bic.w	r3, r3, #16
 801689a:	65bb      	str	r3, [r7, #88]	; 0x58
 801689c:	687b      	ldr	r3, [r7, #4]
 801689e:	681b      	ldr	r3, [r3, #0]
 80168a0:	461a      	mov	r2, r3
 80168a2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80168a4:	61bb      	str	r3, [r7, #24]
 80168a6:	617a      	str	r2, [r7, #20]
 80168a8:	6979      	ldr	r1, [r7, #20]
 80168aa:	69ba      	ldr	r2, [r7, #24]
 80168ac:	e841 2300 	strex	r3, r2, [r1]
 80168b0:	613b      	str	r3, [r7, #16]
 80168b2:	693b      	ldr	r3, [r7, #16]
 80168b4:	2b00      	cmp	r3, #0
 80168b6:	d1e6      	bne.n	8016886 <UART_RxISR_16BIT+0x13a>
 80168b8:	687b      	ldr	r3, [r7, #4]
 80168ba:	681b      	ldr	r3, [r3, #0]
 80168bc:	69db      	ldr	r3, [r3, #28]
 80168be:	f003 0310 	and.w	r3, r3, #16
 80168c2:	2b10      	cmp	r3, #16
 80168c4:	d103      	bne.n	80168ce <UART_RxISR_16BIT+0x182>
 80168c6:	687b      	ldr	r3, [r7, #4]
 80168c8:	681b      	ldr	r3, [r3, #0]
 80168ca:	2210      	movs	r2, #16
 80168cc:	621a      	str	r2, [r3, #32]
 80168ce:	687b      	ldr	r3, [r7, #4]
 80168d0:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80168d4:	4619      	mov	r1, r3
 80168d6:	6878      	ldr	r0, [r7, #4]
 80168d8:	f7fe fd64 	bl	80153a4 <HAL_UARTEx_RxEventCallback>
 80168dc:	e00b      	b.n	80168f6 <UART_RxISR_16BIT+0x1aa>
 80168de:	6878      	ldr	r0, [r7, #4]
 80168e0:	f7ec fab4 	bl	8002e4c <HAL_UART_RxCpltCallback>
 80168e4:	e007      	b.n	80168f6 <UART_RxISR_16BIT+0x1aa>
 80168e6:	687b      	ldr	r3, [r7, #4]
 80168e8:	681b      	ldr	r3, [r3, #0]
 80168ea:	699a      	ldr	r2, [r3, #24]
 80168ec:	687b      	ldr	r3, [r7, #4]
 80168ee:	681b      	ldr	r3, [r3, #0]
 80168f0:	f042 0208 	orr.w	r2, r2, #8
 80168f4:	619a      	str	r2, [r3, #24]
 80168f6:	bf00      	nop
 80168f8:	3770      	adds	r7, #112	; 0x70
 80168fa:	46bd      	mov	sp, r7
 80168fc:	bd80      	pop	{r7, pc}
 80168fe:	bf00      	nop
 8016900:	58000c00 	.word	0x58000c00

08016904 <UART_RxISR_8BIT_FIFOEN>:
 8016904:	b580      	push	{r7, lr}
 8016906:	b0ac      	sub	sp, #176	; 0xb0
 8016908:	af00      	add	r7, sp, #0
 801690a:	6078      	str	r0, [r7, #4]
 801690c:	687b      	ldr	r3, [r7, #4]
 801690e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 8016912:	f8a7 30aa 	strh.w	r3, [r7, #170]	; 0xaa
 8016916:	687b      	ldr	r3, [r7, #4]
 8016918:	681b      	ldr	r3, [r3, #0]
 801691a:	69db      	ldr	r3, [r3, #28]
 801691c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8016920:	687b      	ldr	r3, [r7, #4]
 8016922:	681b      	ldr	r3, [r3, #0]
 8016924:	681b      	ldr	r3, [r3, #0]
 8016926:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 801692a:	687b      	ldr	r3, [r7, #4]
 801692c:	681b      	ldr	r3, [r3, #0]
 801692e:	689b      	ldr	r3, [r3, #8]
 8016930:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8016934:	687b      	ldr	r3, [r7, #4]
 8016936:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801693a:	2b22      	cmp	r3, #34	; 0x22
 801693c:	f040 8180 	bne.w	8016c40 <UART_RxISR_8BIT_FIFOEN+0x33c>
 8016940:	687b      	ldr	r3, [r7, #4]
 8016942:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8016946:	f8a7 309e 	strh.w	r3, [r7, #158]	; 0x9e
 801694a:	e123      	b.n	8016b94 <UART_RxISR_8BIT_FIFOEN+0x290>
 801694c:	687b      	ldr	r3, [r7, #4]
 801694e:	681b      	ldr	r3, [r3, #0]
 8016950:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016952:	f8a7 309c 	strh.w	r3, [r7, #156]	; 0x9c
 8016956:	f8b7 309c 	ldrh.w	r3, [r7, #156]	; 0x9c
 801695a:	b2d9      	uxtb	r1, r3
 801695c:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	; 0xaa
 8016960:	b2da      	uxtb	r2, r3
 8016962:	687b      	ldr	r3, [r7, #4]
 8016964:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8016966:	400a      	ands	r2, r1
 8016968:	b2d2      	uxtb	r2, r2
 801696a:	701a      	strb	r2, [r3, #0]
 801696c:	687b      	ldr	r3, [r7, #4]
 801696e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8016970:	1c5a      	adds	r2, r3, #1
 8016972:	687b      	ldr	r3, [r7, #4]
 8016974:	659a      	str	r2, [r3, #88]	; 0x58
 8016976:	687b      	ldr	r3, [r7, #4]
 8016978:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 801697c:	b29b      	uxth	r3, r3
 801697e:	3b01      	subs	r3, #1
 8016980:	b29a      	uxth	r2, r3
 8016982:	687b      	ldr	r3, [r7, #4]
 8016984:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 8016988:	687b      	ldr	r3, [r7, #4]
 801698a:	681b      	ldr	r3, [r3, #0]
 801698c:	69db      	ldr	r3, [r3, #28]
 801698e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8016992:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8016996:	f003 0307 	and.w	r3, r3, #7
 801699a:	2b00      	cmp	r3, #0
 801699c:	d053      	beq.n	8016a46 <UART_RxISR_8BIT_FIFOEN+0x142>
 801699e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80169a2:	f003 0301 	and.w	r3, r3, #1
 80169a6:	2b00      	cmp	r3, #0
 80169a8:	d011      	beq.n	80169ce <UART_RxISR_8BIT_FIFOEN+0xca>
 80169aa:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 80169ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80169b2:	2b00      	cmp	r3, #0
 80169b4:	d00b      	beq.n	80169ce <UART_RxISR_8BIT_FIFOEN+0xca>
 80169b6:	687b      	ldr	r3, [r7, #4]
 80169b8:	681b      	ldr	r3, [r3, #0]
 80169ba:	2201      	movs	r2, #1
 80169bc:	621a      	str	r2, [r3, #32]
 80169be:	687b      	ldr	r3, [r7, #4]
 80169c0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80169c4:	f043 0201 	orr.w	r2, r3, #1
 80169c8:	687b      	ldr	r3, [r7, #4]
 80169ca:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80169ce:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80169d2:	f003 0302 	and.w	r3, r3, #2
 80169d6:	2b00      	cmp	r3, #0
 80169d8:	d011      	beq.n	80169fe <UART_RxISR_8BIT_FIFOEN+0xfa>
 80169da:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80169de:	f003 0301 	and.w	r3, r3, #1
 80169e2:	2b00      	cmp	r3, #0
 80169e4:	d00b      	beq.n	80169fe <UART_RxISR_8BIT_FIFOEN+0xfa>
 80169e6:	687b      	ldr	r3, [r7, #4]
 80169e8:	681b      	ldr	r3, [r3, #0]
 80169ea:	2202      	movs	r2, #2
 80169ec:	621a      	str	r2, [r3, #32]
 80169ee:	687b      	ldr	r3, [r7, #4]
 80169f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80169f4:	f043 0204 	orr.w	r2, r3, #4
 80169f8:	687b      	ldr	r3, [r7, #4]
 80169fa:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80169fe:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8016a02:	f003 0304 	and.w	r3, r3, #4
 8016a06:	2b00      	cmp	r3, #0
 8016a08:	d011      	beq.n	8016a2e <UART_RxISR_8BIT_FIFOEN+0x12a>
 8016a0a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8016a0e:	f003 0301 	and.w	r3, r3, #1
 8016a12:	2b00      	cmp	r3, #0
 8016a14:	d00b      	beq.n	8016a2e <UART_RxISR_8BIT_FIFOEN+0x12a>
 8016a16:	687b      	ldr	r3, [r7, #4]
 8016a18:	681b      	ldr	r3, [r3, #0]
 8016a1a:	2204      	movs	r2, #4
 8016a1c:	621a      	str	r2, [r3, #32]
 8016a1e:	687b      	ldr	r3, [r7, #4]
 8016a20:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8016a24:	f043 0202 	orr.w	r2, r3, #2
 8016a28:	687b      	ldr	r3, [r7, #4]
 8016a2a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8016a2e:	687b      	ldr	r3, [r7, #4]
 8016a30:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8016a34:	2b00      	cmp	r3, #0
 8016a36:	d006      	beq.n	8016a46 <UART_RxISR_8BIT_FIFOEN+0x142>
 8016a38:	6878      	ldr	r0, [r7, #4]
 8016a3a:	f7fe fca9 	bl	8015390 <HAL_UART_ErrorCallback>
 8016a3e:	687b      	ldr	r3, [r7, #4]
 8016a40:	2200      	movs	r2, #0
 8016a42:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8016a46:	687b      	ldr	r3, [r7, #4]
 8016a48:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8016a4c:	b29b      	uxth	r3, r3
 8016a4e:	2b00      	cmp	r3, #0
 8016a50:	f040 80a0 	bne.w	8016b94 <UART_RxISR_8BIT_FIFOEN+0x290>
 8016a54:	687b      	ldr	r3, [r7, #4]
 8016a56:	681b      	ldr	r3, [r3, #0]
 8016a58:	673b      	str	r3, [r7, #112]	; 0x70
 8016a5a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8016a5c:	e853 3f00 	ldrex	r3, [r3]
 8016a60:	66fb      	str	r3, [r7, #108]	; 0x6c
 8016a62:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8016a64:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8016a68:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8016a6c:	687b      	ldr	r3, [r7, #4]
 8016a6e:	681b      	ldr	r3, [r3, #0]
 8016a70:	461a      	mov	r2, r3
 8016a72:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8016a76:	67fb      	str	r3, [r7, #124]	; 0x7c
 8016a78:	67ba      	str	r2, [r7, #120]	; 0x78
 8016a7a:	6fb9      	ldr	r1, [r7, #120]	; 0x78
 8016a7c:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8016a7e:	e841 2300 	strex	r3, r2, [r1]
 8016a82:	677b      	str	r3, [r7, #116]	; 0x74
 8016a84:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8016a86:	2b00      	cmp	r3, #0
 8016a88:	d1e4      	bne.n	8016a54 <UART_RxISR_8BIT_FIFOEN+0x150>
 8016a8a:	687b      	ldr	r3, [r7, #4]
 8016a8c:	681b      	ldr	r3, [r3, #0]
 8016a8e:	3308      	adds	r3, #8
 8016a90:	65fb      	str	r3, [r7, #92]	; 0x5c
 8016a92:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016a94:	e853 3f00 	ldrex	r3, [r3]
 8016a98:	65bb      	str	r3, [r7, #88]	; 0x58
 8016a9a:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8016a9c:	4b6e      	ldr	r3, [pc, #440]	; (8016c58 <UART_RxISR_8BIT_FIFOEN+0x354>)
 8016a9e:	4013      	ands	r3, r2
 8016aa0:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8016aa4:	687b      	ldr	r3, [r7, #4]
 8016aa6:	681b      	ldr	r3, [r3, #0]
 8016aa8:	3308      	adds	r3, #8
 8016aaa:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8016aae:	66ba      	str	r2, [r7, #104]	; 0x68
 8016ab0:	667b      	str	r3, [r7, #100]	; 0x64
 8016ab2:	6e79      	ldr	r1, [r7, #100]	; 0x64
 8016ab4:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8016ab6:	e841 2300 	strex	r3, r2, [r1]
 8016aba:	663b      	str	r3, [r7, #96]	; 0x60
 8016abc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8016abe:	2b00      	cmp	r3, #0
 8016ac0:	d1e3      	bne.n	8016a8a <UART_RxISR_8BIT_FIFOEN+0x186>
 8016ac2:	687b      	ldr	r3, [r7, #4]
 8016ac4:	2220      	movs	r2, #32
 8016ac6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8016aca:	687b      	ldr	r3, [r7, #4]
 8016acc:	2200      	movs	r2, #0
 8016ace:	675a      	str	r2, [r3, #116]	; 0x74
 8016ad0:	687b      	ldr	r3, [r7, #4]
 8016ad2:	2200      	movs	r2, #0
 8016ad4:	671a      	str	r2, [r3, #112]	; 0x70
 8016ad6:	687b      	ldr	r3, [r7, #4]
 8016ad8:	681b      	ldr	r3, [r3, #0]
 8016ada:	4a60      	ldr	r2, [pc, #384]	; (8016c5c <UART_RxISR_8BIT_FIFOEN+0x358>)
 8016adc:	4293      	cmp	r3, r2
 8016ade:	d021      	beq.n	8016b24 <UART_RxISR_8BIT_FIFOEN+0x220>
 8016ae0:	687b      	ldr	r3, [r7, #4]
 8016ae2:	681b      	ldr	r3, [r3, #0]
 8016ae4:	685b      	ldr	r3, [r3, #4]
 8016ae6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8016aea:	2b00      	cmp	r3, #0
 8016aec:	d01a      	beq.n	8016b24 <UART_RxISR_8BIT_FIFOEN+0x220>
 8016aee:	687b      	ldr	r3, [r7, #4]
 8016af0:	681b      	ldr	r3, [r3, #0]
 8016af2:	64bb      	str	r3, [r7, #72]	; 0x48
 8016af4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8016af6:	e853 3f00 	ldrex	r3, [r3]
 8016afa:	647b      	str	r3, [r7, #68]	; 0x44
 8016afc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8016afe:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8016b02:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8016b06:	687b      	ldr	r3, [r7, #4]
 8016b08:	681b      	ldr	r3, [r3, #0]
 8016b0a:	461a      	mov	r2, r3
 8016b0c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8016b10:	657b      	str	r3, [r7, #84]	; 0x54
 8016b12:	653a      	str	r2, [r7, #80]	; 0x50
 8016b14:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8016b16:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8016b18:	e841 2300 	strex	r3, r2, [r1]
 8016b1c:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016b1e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8016b20:	2b00      	cmp	r3, #0
 8016b22:	d1e4      	bne.n	8016aee <UART_RxISR_8BIT_FIFOEN+0x1ea>
 8016b24:	687b      	ldr	r3, [r7, #4]
 8016b26:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8016b28:	2b01      	cmp	r3, #1
 8016b2a:	d130      	bne.n	8016b8e <UART_RxISR_8BIT_FIFOEN+0x28a>
 8016b2c:	687b      	ldr	r3, [r7, #4]
 8016b2e:	2200      	movs	r2, #0
 8016b30:	66da      	str	r2, [r3, #108]	; 0x6c
 8016b32:	687b      	ldr	r3, [r7, #4]
 8016b34:	681b      	ldr	r3, [r3, #0]
 8016b36:	637b      	str	r3, [r7, #52]	; 0x34
 8016b38:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8016b3a:	e853 3f00 	ldrex	r3, [r3]
 8016b3e:	633b      	str	r3, [r7, #48]	; 0x30
 8016b40:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8016b42:	f023 0310 	bic.w	r3, r3, #16
 8016b46:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8016b4a:	687b      	ldr	r3, [r7, #4]
 8016b4c:	681b      	ldr	r3, [r3, #0]
 8016b4e:	461a      	mov	r2, r3
 8016b50:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8016b54:	643b      	str	r3, [r7, #64]	; 0x40
 8016b56:	63fa      	str	r2, [r7, #60]	; 0x3c
 8016b58:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8016b5a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8016b5c:	e841 2300 	strex	r3, r2, [r1]
 8016b60:	63bb      	str	r3, [r7, #56]	; 0x38
 8016b62:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8016b64:	2b00      	cmp	r3, #0
 8016b66:	d1e4      	bne.n	8016b32 <UART_RxISR_8BIT_FIFOEN+0x22e>
 8016b68:	687b      	ldr	r3, [r7, #4]
 8016b6a:	681b      	ldr	r3, [r3, #0]
 8016b6c:	69db      	ldr	r3, [r3, #28]
 8016b6e:	f003 0310 	and.w	r3, r3, #16
 8016b72:	2b10      	cmp	r3, #16
 8016b74:	d103      	bne.n	8016b7e <UART_RxISR_8BIT_FIFOEN+0x27a>
 8016b76:	687b      	ldr	r3, [r7, #4]
 8016b78:	681b      	ldr	r3, [r3, #0]
 8016b7a:	2210      	movs	r2, #16
 8016b7c:	621a      	str	r2, [r3, #32]
 8016b7e:	687b      	ldr	r3, [r7, #4]
 8016b80:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8016b84:	4619      	mov	r1, r3
 8016b86:	6878      	ldr	r0, [r7, #4]
 8016b88:	f7fe fc0c 	bl	80153a4 <HAL_UARTEx_RxEventCallback>
 8016b8c:	e002      	b.n	8016b94 <UART_RxISR_8BIT_FIFOEN+0x290>
 8016b8e:	6878      	ldr	r0, [r7, #4]
 8016b90:	f7ec f95c 	bl	8002e4c <HAL_UART_RxCpltCallback>
 8016b94:	f8b7 309e 	ldrh.w	r3, [r7, #158]	; 0x9e
 8016b98:	2b00      	cmp	r3, #0
 8016b9a:	d006      	beq.n	8016baa <UART_RxISR_8BIT_FIFOEN+0x2a6>
 8016b9c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8016ba0:	f003 0320 	and.w	r3, r3, #32
 8016ba4:	2b00      	cmp	r3, #0
 8016ba6:	f47f aed1 	bne.w	801694c <UART_RxISR_8BIT_FIFOEN+0x48>
 8016baa:	687b      	ldr	r3, [r7, #4]
 8016bac:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8016bb0:	f8a7 308a 	strh.w	r3, [r7, #138]	; 0x8a
 8016bb4:	f8b7 308a 	ldrh.w	r3, [r7, #138]	; 0x8a
 8016bb8:	2b00      	cmp	r3, #0
 8016bba:	d049      	beq.n	8016c50 <UART_RxISR_8BIT_FIFOEN+0x34c>
 8016bbc:	687b      	ldr	r3, [r7, #4]
 8016bbe:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8016bc2:	f8b7 208a 	ldrh.w	r2, [r7, #138]	; 0x8a
 8016bc6:	429a      	cmp	r2, r3
 8016bc8:	d242      	bcs.n	8016c50 <UART_RxISR_8BIT_FIFOEN+0x34c>
 8016bca:	687b      	ldr	r3, [r7, #4]
 8016bcc:	681b      	ldr	r3, [r3, #0]
 8016bce:	3308      	adds	r3, #8
 8016bd0:	623b      	str	r3, [r7, #32]
 8016bd2:	6a3b      	ldr	r3, [r7, #32]
 8016bd4:	e853 3f00 	ldrex	r3, [r3]
 8016bd8:	61fb      	str	r3, [r7, #28]
 8016bda:	69fb      	ldr	r3, [r7, #28]
 8016bdc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8016be0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8016be4:	687b      	ldr	r3, [r7, #4]
 8016be6:	681b      	ldr	r3, [r3, #0]
 8016be8:	3308      	adds	r3, #8
 8016bea:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8016bee:	62fa      	str	r2, [r7, #44]	; 0x2c
 8016bf0:	62bb      	str	r3, [r7, #40]	; 0x28
 8016bf2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8016bf4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8016bf6:	e841 2300 	strex	r3, r2, [r1]
 8016bfa:	627b      	str	r3, [r7, #36]	; 0x24
 8016bfc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8016bfe:	2b00      	cmp	r3, #0
 8016c00:	d1e3      	bne.n	8016bca <UART_RxISR_8BIT_FIFOEN+0x2c6>
 8016c02:	687b      	ldr	r3, [r7, #4]
 8016c04:	4a16      	ldr	r2, [pc, #88]	; (8016c60 <UART_RxISR_8BIT_FIFOEN+0x35c>)
 8016c06:	675a      	str	r2, [r3, #116]	; 0x74
 8016c08:	687b      	ldr	r3, [r7, #4]
 8016c0a:	681b      	ldr	r3, [r3, #0]
 8016c0c:	60fb      	str	r3, [r7, #12]
 8016c0e:	68fb      	ldr	r3, [r7, #12]
 8016c10:	e853 3f00 	ldrex	r3, [r3]
 8016c14:	60bb      	str	r3, [r7, #8]
 8016c16:	68bb      	ldr	r3, [r7, #8]
 8016c18:	f043 0320 	orr.w	r3, r3, #32
 8016c1c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8016c20:	687b      	ldr	r3, [r7, #4]
 8016c22:	681b      	ldr	r3, [r3, #0]
 8016c24:	461a      	mov	r2, r3
 8016c26:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8016c2a:	61bb      	str	r3, [r7, #24]
 8016c2c:	617a      	str	r2, [r7, #20]
 8016c2e:	6979      	ldr	r1, [r7, #20]
 8016c30:	69ba      	ldr	r2, [r7, #24]
 8016c32:	e841 2300 	strex	r3, r2, [r1]
 8016c36:	613b      	str	r3, [r7, #16]
 8016c38:	693b      	ldr	r3, [r7, #16]
 8016c3a:	2b00      	cmp	r3, #0
 8016c3c:	d1e4      	bne.n	8016c08 <UART_RxISR_8BIT_FIFOEN+0x304>
 8016c3e:	e007      	b.n	8016c50 <UART_RxISR_8BIT_FIFOEN+0x34c>
 8016c40:	687b      	ldr	r3, [r7, #4]
 8016c42:	681b      	ldr	r3, [r3, #0]
 8016c44:	699a      	ldr	r2, [r3, #24]
 8016c46:	687b      	ldr	r3, [r7, #4]
 8016c48:	681b      	ldr	r3, [r3, #0]
 8016c4a:	f042 0208 	orr.w	r2, r2, #8
 8016c4e:	619a      	str	r2, [r3, #24]
 8016c50:	bf00      	nop
 8016c52:	37b0      	adds	r7, #176	; 0xb0
 8016c54:	46bd      	mov	sp, r7
 8016c56:	bd80      	pop	{r7, pc}
 8016c58:	effffffe 	.word	0xeffffffe
 8016c5c:	58000c00 	.word	0x58000c00
 8016c60:	08016595 	.word	0x08016595

08016c64 <UART_RxISR_16BIT_FIFOEN>:
 8016c64:	b580      	push	{r7, lr}
 8016c66:	b0ae      	sub	sp, #184	; 0xb8
 8016c68:	af00      	add	r7, sp, #0
 8016c6a:	6078      	str	r0, [r7, #4]
 8016c6c:	687b      	ldr	r3, [r7, #4]
 8016c6e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 8016c72:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016c76:	687b      	ldr	r3, [r7, #4]
 8016c78:	681b      	ldr	r3, [r3, #0]
 8016c7a:	69db      	ldr	r3, [r3, #28]
 8016c7c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8016c80:	687b      	ldr	r3, [r7, #4]
 8016c82:	681b      	ldr	r3, [r3, #0]
 8016c84:	681b      	ldr	r3, [r3, #0]
 8016c86:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8016c8a:	687b      	ldr	r3, [r7, #4]
 8016c8c:	681b      	ldr	r3, [r3, #0]
 8016c8e:	689b      	ldr	r3, [r3, #8]
 8016c90:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8016c94:	687b      	ldr	r3, [r7, #4]
 8016c96:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8016c9a:	2b22      	cmp	r3, #34	; 0x22
 8016c9c:	f040 8184 	bne.w	8016fa8 <UART_RxISR_16BIT_FIFOEN+0x344>
 8016ca0:	687b      	ldr	r3, [r7, #4]
 8016ca2:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8016ca6:	f8a7 30a6 	strh.w	r3, [r7, #166]	; 0xa6
 8016caa:	e127      	b.n	8016efc <UART_RxISR_16BIT_FIFOEN+0x298>
 8016cac:	687b      	ldr	r3, [r7, #4]
 8016cae:	681b      	ldr	r3, [r3, #0]
 8016cb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016cb2:	f8a7 30a4 	strh.w	r3, [r7, #164]	; 0xa4
 8016cb6:	687b      	ldr	r3, [r7, #4]
 8016cb8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8016cba:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8016cbe:	f8b7 20a4 	ldrh.w	r2, [r7, #164]	; 0xa4
 8016cc2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016cc6:	4013      	ands	r3, r2
 8016cc8:	b29a      	uxth	r2, r3
 8016cca:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8016cce:	801a      	strh	r2, [r3, #0]
 8016cd0:	687b      	ldr	r3, [r7, #4]
 8016cd2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8016cd4:	1c9a      	adds	r2, r3, #2
 8016cd6:	687b      	ldr	r3, [r7, #4]
 8016cd8:	659a      	str	r2, [r3, #88]	; 0x58
 8016cda:	687b      	ldr	r3, [r7, #4]
 8016cdc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8016ce0:	b29b      	uxth	r3, r3
 8016ce2:	3b01      	subs	r3, #1
 8016ce4:	b29a      	uxth	r2, r3
 8016ce6:	687b      	ldr	r3, [r7, #4]
 8016ce8:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 8016cec:	687b      	ldr	r3, [r7, #4]
 8016cee:	681b      	ldr	r3, [r3, #0]
 8016cf0:	69db      	ldr	r3, [r3, #28]
 8016cf2:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8016cf6:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8016cfa:	f003 0307 	and.w	r3, r3, #7
 8016cfe:	2b00      	cmp	r3, #0
 8016d00:	d053      	beq.n	8016daa <UART_RxISR_16BIT_FIFOEN+0x146>
 8016d02:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8016d06:	f003 0301 	and.w	r3, r3, #1
 8016d0a:	2b00      	cmp	r3, #0
 8016d0c:	d011      	beq.n	8016d32 <UART_RxISR_16BIT_FIFOEN+0xce>
 8016d0e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8016d12:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016d16:	2b00      	cmp	r3, #0
 8016d18:	d00b      	beq.n	8016d32 <UART_RxISR_16BIT_FIFOEN+0xce>
 8016d1a:	687b      	ldr	r3, [r7, #4]
 8016d1c:	681b      	ldr	r3, [r3, #0]
 8016d1e:	2201      	movs	r2, #1
 8016d20:	621a      	str	r2, [r3, #32]
 8016d22:	687b      	ldr	r3, [r7, #4]
 8016d24:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8016d28:	f043 0201 	orr.w	r2, r3, #1
 8016d2c:	687b      	ldr	r3, [r7, #4]
 8016d2e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8016d32:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8016d36:	f003 0302 	and.w	r3, r3, #2
 8016d3a:	2b00      	cmp	r3, #0
 8016d3c:	d011      	beq.n	8016d62 <UART_RxISR_16BIT_FIFOEN+0xfe>
 8016d3e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8016d42:	f003 0301 	and.w	r3, r3, #1
 8016d46:	2b00      	cmp	r3, #0
 8016d48:	d00b      	beq.n	8016d62 <UART_RxISR_16BIT_FIFOEN+0xfe>
 8016d4a:	687b      	ldr	r3, [r7, #4]
 8016d4c:	681b      	ldr	r3, [r3, #0]
 8016d4e:	2202      	movs	r2, #2
 8016d50:	621a      	str	r2, [r3, #32]
 8016d52:	687b      	ldr	r3, [r7, #4]
 8016d54:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8016d58:	f043 0204 	orr.w	r2, r3, #4
 8016d5c:	687b      	ldr	r3, [r7, #4]
 8016d5e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8016d62:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8016d66:	f003 0304 	and.w	r3, r3, #4
 8016d6a:	2b00      	cmp	r3, #0
 8016d6c:	d011      	beq.n	8016d92 <UART_RxISR_16BIT_FIFOEN+0x12e>
 8016d6e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8016d72:	f003 0301 	and.w	r3, r3, #1
 8016d76:	2b00      	cmp	r3, #0
 8016d78:	d00b      	beq.n	8016d92 <UART_RxISR_16BIT_FIFOEN+0x12e>
 8016d7a:	687b      	ldr	r3, [r7, #4]
 8016d7c:	681b      	ldr	r3, [r3, #0]
 8016d7e:	2204      	movs	r2, #4
 8016d80:	621a      	str	r2, [r3, #32]
 8016d82:	687b      	ldr	r3, [r7, #4]
 8016d84:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8016d88:	f043 0202 	orr.w	r2, r3, #2
 8016d8c:	687b      	ldr	r3, [r7, #4]
 8016d8e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8016d92:	687b      	ldr	r3, [r7, #4]
 8016d94:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8016d98:	2b00      	cmp	r3, #0
 8016d9a:	d006      	beq.n	8016daa <UART_RxISR_16BIT_FIFOEN+0x146>
 8016d9c:	6878      	ldr	r0, [r7, #4]
 8016d9e:	f7fe faf7 	bl	8015390 <HAL_UART_ErrorCallback>
 8016da2:	687b      	ldr	r3, [r7, #4]
 8016da4:	2200      	movs	r2, #0
 8016da6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8016daa:	687b      	ldr	r3, [r7, #4]
 8016dac:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8016db0:	b29b      	uxth	r3, r3
 8016db2:	2b00      	cmp	r3, #0
 8016db4:	f040 80a2 	bne.w	8016efc <UART_RxISR_16BIT_FIFOEN+0x298>
 8016db8:	687b      	ldr	r3, [r7, #4]
 8016dba:	681b      	ldr	r3, [r3, #0]
 8016dbc:	677b      	str	r3, [r7, #116]	; 0x74
 8016dbe:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8016dc0:	e853 3f00 	ldrex	r3, [r3]
 8016dc4:	673b      	str	r3, [r7, #112]	; 0x70
 8016dc6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8016dc8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8016dcc:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8016dd0:	687b      	ldr	r3, [r7, #4]
 8016dd2:	681b      	ldr	r3, [r3, #0]
 8016dd4:	461a      	mov	r2, r3
 8016dd6:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8016dda:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8016dde:	67fa      	str	r2, [r7, #124]	; 0x7c
 8016de0:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8016de2:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8016de6:	e841 2300 	strex	r3, r2, [r1]
 8016dea:	67bb      	str	r3, [r7, #120]	; 0x78
 8016dec:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8016dee:	2b00      	cmp	r3, #0
 8016df0:	d1e2      	bne.n	8016db8 <UART_RxISR_16BIT_FIFOEN+0x154>
 8016df2:	687b      	ldr	r3, [r7, #4]
 8016df4:	681b      	ldr	r3, [r3, #0]
 8016df6:	3308      	adds	r3, #8
 8016df8:	663b      	str	r3, [r7, #96]	; 0x60
 8016dfa:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8016dfc:	e853 3f00 	ldrex	r3, [r3]
 8016e00:	65fb      	str	r3, [r7, #92]	; 0x5c
 8016e02:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8016e04:	4b6e      	ldr	r3, [pc, #440]	; (8016fc0 <UART_RxISR_16BIT_FIFOEN+0x35c>)
 8016e06:	4013      	ands	r3, r2
 8016e08:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8016e0c:	687b      	ldr	r3, [r7, #4]
 8016e0e:	681b      	ldr	r3, [r3, #0]
 8016e10:	3308      	adds	r3, #8
 8016e12:	f8d7 2098 	ldr.w	r2, [r7, #152]	; 0x98
 8016e16:	66fa      	str	r2, [r7, #108]	; 0x6c
 8016e18:	66bb      	str	r3, [r7, #104]	; 0x68
 8016e1a:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8016e1c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8016e1e:	e841 2300 	strex	r3, r2, [r1]
 8016e22:	667b      	str	r3, [r7, #100]	; 0x64
 8016e24:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8016e26:	2b00      	cmp	r3, #0
 8016e28:	d1e3      	bne.n	8016df2 <UART_RxISR_16BIT_FIFOEN+0x18e>
 8016e2a:	687b      	ldr	r3, [r7, #4]
 8016e2c:	2220      	movs	r2, #32
 8016e2e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8016e32:	687b      	ldr	r3, [r7, #4]
 8016e34:	2200      	movs	r2, #0
 8016e36:	675a      	str	r2, [r3, #116]	; 0x74
 8016e38:	687b      	ldr	r3, [r7, #4]
 8016e3a:	2200      	movs	r2, #0
 8016e3c:	671a      	str	r2, [r3, #112]	; 0x70
 8016e3e:	687b      	ldr	r3, [r7, #4]
 8016e40:	681b      	ldr	r3, [r3, #0]
 8016e42:	4a60      	ldr	r2, [pc, #384]	; (8016fc4 <UART_RxISR_16BIT_FIFOEN+0x360>)
 8016e44:	4293      	cmp	r3, r2
 8016e46:	d021      	beq.n	8016e8c <UART_RxISR_16BIT_FIFOEN+0x228>
 8016e48:	687b      	ldr	r3, [r7, #4]
 8016e4a:	681b      	ldr	r3, [r3, #0]
 8016e4c:	685b      	ldr	r3, [r3, #4]
 8016e4e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8016e52:	2b00      	cmp	r3, #0
 8016e54:	d01a      	beq.n	8016e8c <UART_RxISR_16BIT_FIFOEN+0x228>
 8016e56:	687b      	ldr	r3, [r7, #4]
 8016e58:	681b      	ldr	r3, [r3, #0]
 8016e5a:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016e5c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8016e5e:	e853 3f00 	ldrex	r3, [r3]
 8016e62:	64bb      	str	r3, [r7, #72]	; 0x48
 8016e64:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8016e66:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8016e6a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8016e6e:	687b      	ldr	r3, [r7, #4]
 8016e70:	681b      	ldr	r3, [r3, #0]
 8016e72:	461a      	mov	r2, r3
 8016e74:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8016e78:	65bb      	str	r3, [r7, #88]	; 0x58
 8016e7a:	657a      	str	r2, [r7, #84]	; 0x54
 8016e7c:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8016e7e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8016e80:	e841 2300 	strex	r3, r2, [r1]
 8016e84:	653b      	str	r3, [r7, #80]	; 0x50
 8016e86:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8016e88:	2b00      	cmp	r3, #0
 8016e8a:	d1e4      	bne.n	8016e56 <UART_RxISR_16BIT_FIFOEN+0x1f2>
 8016e8c:	687b      	ldr	r3, [r7, #4]
 8016e8e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8016e90:	2b01      	cmp	r3, #1
 8016e92:	d130      	bne.n	8016ef6 <UART_RxISR_16BIT_FIFOEN+0x292>
 8016e94:	687b      	ldr	r3, [r7, #4]
 8016e96:	2200      	movs	r2, #0
 8016e98:	66da      	str	r2, [r3, #108]	; 0x6c
 8016e9a:	687b      	ldr	r3, [r7, #4]
 8016e9c:	681b      	ldr	r3, [r3, #0]
 8016e9e:	63bb      	str	r3, [r7, #56]	; 0x38
 8016ea0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8016ea2:	e853 3f00 	ldrex	r3, [r3]
 8016ea6:	637b      	str	r3, [r7, #52]	; 0x34
 8016ea8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8016eaa:	f023 0310 	bic.w	r3, r3, #16
 8016eae:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8016eb2:	687b      	ldr	r3, [r7, #4]
 8016eb4:	681b      	ldr	r3, [r3, #0]
 8016eb6:	461a      	mov	r2, r3
 8016eb8:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8016ebc:	647b      	str	r3, [r7, #68]	; 0x44
 8016ebe:	643a      	str	r2, [r7, #64]	; 0x40
 8016ec0:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8016ec2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8016ec4:	e841 2300 	strex	r3, r2, [r1]
 8016ec8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8016eca:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8016ecc:	2b00      	cmp	r3, #0
 8016ece:	d1e4      	bne.n	8016e9a <UART_RxISR_16BIT_FIFOEN+0x236>
 8016ed0:	687b      	ldr	r3, [r7, #4]
 8016ed2:	681b      	ldr	r3, [r3, #0]
 8016ed4:	69db      	ldr	r3, [r3, #28]
 8016ed6:	f003 0310 	and.w	r3, r3, #16
 8016eda:	2b10      	cmp	r3, #16
 8016edc:	d103      	bne.n	8016ee6 <UART_RxISR_16BIT_FIFOEN+0x282>
 8016ede:	687b      	ldr	r3, [r7, #4]
 8016ee0:	681b      	ldr	r3, [r3, #0]
 8016ee2:	2210      	movs	r2, #16
 8016ee4:	621a      	str	r2, [r3, #32]
 8016ee6:	687b      	ldr	r3, [r7, #4]
 8016ee8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8016eec:	4619      	mov	r1, r3
 8016eee:	6878      	ldr	r0, [r7, #4]
 8016ef0:	f7fe fa58 	bl	80153a4 <HAL_UARTEx_RxEventCallback>
 8016ef4:	e002      	b.n	8016efc <UART_RxISR_16BIT_FIFOEN+0x298>
 8016ef6:	6878      	ldr	r0, [r7, #4]
 8016ef8:	f7eb ffa8 	bl	8002e4c <HAL_UART_RxCpltCallback>
 8016efc:	f8b7 30a6 	ldrh.w	r3, [r7, #166]	; 0xa6
 8016f00:	2b00      	cmp	r3, #0
 8016f02:	d006      	beq.n	8016f12 <UART_RxISR_16BIT_FIFOEN+0x2ae>
 8016f04:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8016f08:	f003 0320 	and.w	r3, r3, #32
 8016f0c:	2b00      	cmp	r3, #0
 8016f0e:	f47f aecd 	bne.w	8016cac <UART_RxISR_16BIT_FIFOEN+0x48>
 8016f12:	687b      	ldr	r3, [r7, #4]
 8016f14:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8016f18:	f8a7 308e 	strh.w	r3, [r7, #142]	; 0x8e
 8016f1c:	f8b7 308e 	ldrh.w	r3, [r7, #142]	; 0x8e
 8016f20:	2b00      	cmp	r3, #0
 8016f22:	d049      	beq.n	8016fb8 <UART_RxISR_16BIT_FIFOEN+0x354>
 8016f24:	687b      	ldr	r3, [r7, #4]
 8016f26:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8016f2a:	f8b7 208e 	ldrh.w	r2, [r7, #142]	; 0x8e
 8016f2e:	429a      	cmp	r2, r3
 8016f30:	d242      	bcs.n	8016fb8 <UART_RxISR_16BIT_FIFOEN+0x354>
 8016f32:	687b      	ldr	r3, [r7, #4]
 8016f34:	681b      	ldr	r3, [r3, #0]
 8016f36:	3308      	adds	r3, #8
 8016f38:	627b      	str	r3, [r7, #36]	; 0x24
 8016f3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8016f3c:	e853 3f00 	ldrex	r3, [r3]
 8016f40:	623b      	str	r3, [r7, #32]
 8016f42:	6a3b      	ldr	r3, [r7, #32]
 8016f44:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8016f48:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8016f4c:	687b      	ldr	r3, [r7, #4]
 8016f4e:	681b      	ldr	r3, [r3, #0]
 8016f50:	3308      	adds	r3, #8
 8016f52:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 8016f56:	633a      	str	r2, [r7, #48]	; 0x30
 8016f58:	62fb      	str	r3, [r7, #44]	; 0x2c
 8016f5a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8016f5c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8016f5e:	e841 2300 	strex	r3, r2, [r1]
 8016f62:	62bb      	str	r3, [r7, #40]	; 0x28
 8016f64:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8016f66:	2b00      	cmp	r3, #0
 8016f68:	d1e3      	bne.n	8016f32 <UART_RxISR_16BIT_FIFOEN+0x2ce>
 8016f6a:	687b      	ldr	r3, [r7, #4]
 8016f6c:	4a16      	ldr	r2, [pc, #88]	; (8016fc8 <UART_RxISR_16BIT_FIFOEN+0x364>)
 8016f6e:	675a      	str	r2, [r3, #116]	; 0x74
 8016f70:	687b      	ldr	r3, [r7, #4]
 8016f72:	681b      	ldr	r3, [r3, #0]
 8016f74:	613b      	str	r3, [r7, #16]
 8016f76:	693b      	ldr	r3, [r7, #16]
 8016f78:	e853 3f00 	ldrex	r3, [r3]
 8016f7c:	60fb      	str	r3, [r7, #12]
 8016f7e:	68fb      	ldr	r3, [r7, #12]
 8016f80:	f043 0320 	orr.w	r3, r3, #32
 8016f84:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8016f88:	687b      	ldr	r3, [r7, #4]
 8016f8a:	681b      	ldr	r3, [r3, #0]
 8016f8c:	461a      	mov	r2, r3
 8016f8e:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8016f92:	61fb      	str	r3, [r7, #28]
 8016f94:	61ba      	str	r2, [r7, #24]
 8016f96:	69b9      	ldr	r1, [r7, #24]
 8016f98:	69fa      	ldr	r2, [r7, #28]
 8016f9a:	e841 2300 	strex	r3, r2, [r1]
 8016f9e:	617b      	str	r3, [r7, #20]
 8016fa0:	697b      	ldr	r3, [r7, #20]
 8016fa2:	2b00      	cmp	r3, #0
 8016fa4:	d1e4      	bne.n	8016f70 <UART_RxISR_16BIT_FIFOEN+0x30c>
 8016fa6:	e007      	b.n	8016fb8 <UART_RxISR_16BIT_FIFOEN+0x354>
 8016fa8:	687b      	ldr	r3, [r7, #4]
 8016faa:	681b      	ldr	r3, [r3, #0]
 8016fac:	699a      	ldr	r2, [r3, #24]
 8016fae:	687b      	ldr	r3, [r7, #4]
 8016fb0:	681b      	ldr	r3, [r3, #0]
 8016fb2:	f042 0208 	orr.w	r2, r2, #8
 8016fb6:	619a      	str	r2, [r3, #24]
 8016fb8:	bf00      	nop
 8016fba:	37b8      	adds	r7, #184	; 0xb8
 8016fbc:	46bd      	mov	sp, r7
 8016fbe:	bd80      	pop	{r7, pc}
 8016fc0:	effffffe 	.word	0xeffffffe
 8016fc4:	58000c00 	.word	0x58000c00
 8016fc8:	0801674d 	.word	0x0801674d

08016fcc <HAL_UARTEx_WakeupCallback>:
 8016fcc:	b480      	push	{r7}
 8016fce:	b083      	sub	sp, #12
 8016fd0:	af00      	add	r7, sp, #0
 8016fd2:	6078      	str	r0, [r7, #4]
 8016fd4:	bf00      	nop
 8016fd6:	370c      	adds	r7, #12
 8016fd8:	46bd      	mov	sp, r7
 8016fda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016fde:	4770      	bx	lr

08016fe0 <HAL_UARTEx_RxFifoFullCallback>:
 8016fe0:	b480      	push	{r7}
 8016fe2:	b083      	sub	sp, #12
 8016fe4:	af00      	add	r7, sp, #0
 8016fe6:	6078      	str	r0, [r7, #4]
 8016fe8:	bf00      	nop
 8016fea:	370c      	adds	r7, #12
 8016fec:	46bd      	mov	sp, r7
 8016fee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016ff2:	4770      	bx	lr

08016ff4 <HAL_UARTEx_TxFifoEmptyCallback>:
 8016ff4:	b480      	push	{r7}
 8016ff6:	b083      	sub	sp, #12
 8016ff8:	af00      	add	r7, sp, #0
 8016ffa:	6078      	str	r0, [r7, #4]
 8016ffc:	bf00      	nop
 8016ffe:	370c      	adds	r7, #12
 8017000:	46bd      	mov	sp, r7
 8017002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017006:	4770      	bx	lr

08017008 <HAL_UARTEx_EnableStopMode>:
 8017008:	b480      	push	{r7}
 801700a:	b089      	sub	sp, #36	; 0x24
 801700c:	af00      	add	r7, sp, #0
 801700e:	6078      	str	r0, [r7, #4]
 8017010:	687b      	ldr	r3, [r7, #4]
 8017012:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 8017016:	2b01      	cmp	r3, #1
 8017018:	d101      	bne.n	801701e <HAL_UARTEx_EnableStopMode+0x16>
 801701a:	2302      	movs	r3, #2
 801701c:	e021      	b.n	8017062 <HAL_UARTEx_EnableStopMode+0x5a>
 801701e:	687b      	ldr	r3, [r7, #4]
 8017020:	2201      	movs	r2, #1
 8017022:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8017026:	687b      	ldr	r3, [r7, #4]
 8017028:	681b      	ldr	r3, [r3, #0]
 801702a:	60fb      	str	r3, [r7, #12]
 801702c:	68fb      	ldr	r3, [r7, #12]
 801702e:	e853 3f00 	ldrex	r3, [r3]
 8017032:	60bb      	str	r3, [r7, #8]
 8017034:	68bb      	ldr	r3, [r7, #8]
 8017036:	f043 0302 	orr.w	r3, r3, #2
 801703a:	61fb      	str	r3, [r7, #28]
 801703c:	687b      	ldr	r3, [r7, #4]
 801703e:	681b      	ldr	r3, [r3, #0]
 8017040:	461a      	mov	r2, r3
 8017042:	69fb      	ldr	r3, [r7, #28]
 8017044:	61bb      	str	r3, [r7, #24]
 8017046:	617a      	str	r2, [r7, #20]
 8017048:	6979      	ldr	r1, [r7, #20]
 801704a:	69ba      	ldr	r2, [r7, #24]
 801704c:	e841 2300 	strex	r3, r2, [r1]
 8017050:	613b      	str	r3, [r7, #16]
 8017052:	693b      	ldr	r3, [r7, #16]
 8017054:	2b00      	cmp	r3, #0
 8017056:	d1e6      	bne.n	8017026 <HAL_UARTEx_EnableStopMode+0x1e>
 8017058:	687b      	ldr	r3, [r7, #4]
 801705a:	2200      	movs	r2, #0
 801705c:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8017060:	2300      	movs	r3, #0
 8017062:	4618      	mov	r0, r3
 8017064:	3724      	adds	r7, #36	; 0x24
 8017066:	46bd      	mov	sp, r7
 8017068:	f85d 7b04 	ldr.w	r7, [sp], #4
 801706c:	4770      	bx	lr

0801706e <HAL_UARTEx_EnableFifoMode>:
 801706e:	b580      	push	{r7, lr}
 8017070:	b084      	sub	sp, #16
 8017072:	af00      	add	r7, sp, #0
 8017074:	6078      	str	r0, [r7, #4]
 8017076:	687b      	ldr	r3, [r7, #4]
 8017078:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 801707c:	2b01      	cmp	r3, #1
 801707e:	d101      	bne.n	8017084 <HAL_UARTEx_EnableFifoMode+0x16>
 8017080:	2302      	movs	r3, #2
 8017082:	e02b      	b.n	80170dc <HAL_UARTEx_EnableFifoMode+0x6e>
 8017084:	687b      	ldr	r3, [r7, #4]
 8017086:	2201      	movs	r2, #1
 8017088:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 801708c:	687b      	ldr	r3, [r7, #4]
 801708e:	2224      	movs	r2, #36	; 0x24
 8017090:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8017094:	687b      	ldr	r3, [r7, #4]
 8017096:	681b      	ldr	r3, [r3, #0]
 8017098:	681b      	ldr	r3, [r3, #0]
 801709a:	60fb      	str	r3, [r7, #12]
 801709c:	687b      	ldr	r3, [r7, #4]
 801709e:	681b      	ldr	r3, [r3, #0]
 80170a0:	681a      	ldr	r2, [r3, #0]
 80170a2:	687b      	ldr	r3, [r7, #4]
 80170a4:	681b      	ldr	r3, [r3, #0]
 80170a6:	f022 0201 	bic.w	r2, r2, #1
 80170aa:	601a      	str	r2, [r3, #0]
 80170ac:	68fb      	ldr	r3, [r7, #12]
 80170ae:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80170b2:	60fb      	str	r3, [r7, #12]
 80170b4:	687b      	ldr	r3, [r7, #4]
 80170b6:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 80170ba:	665a      	str	r2, [r3, #100]	; 0x64
 80170bc:	687b      	ldr	r3, [r7, #4]
 80170be:	681b      	ldr	r3, [r3, #0]
 80170c0:	68fa      	ldr	r2, [r7, #12]
 80170c2:	601a      	str	r2, [r3, #0]
 80170c4:	6878      	ldr	r0, [r7, #4]
 80170c6:	f000 f8c3 	bl	8017250 <UARTEx_SetNbDataToProcess>
 80170ca:	687b      	ldr	r3, [r7, #4]
 80170cc:	2220      	movs	r2, #32
 80170ce:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80170d2:	687b      	ldr	r3, [r7, #4]
 80170d4:	2200      	movs	r2, #0
 80170d6:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 80170da:	2300      	movs	r3, #0
 80170dc:	4618      	mov	r0, r3
 80170de:	3710      	adds	r7, #16
 80170e0:	46bd      	mov	sp, r7
 80170e2:	bd80      	pop	{r7, pc}

080170e4 <HAL_UARTEx_DisableFifoMode>:
 80170e4:	b480      	push	{r7}
 80170e6:	b085      	sub	sp, #20
 80170e8:	af00      	add	r7, sp, #0
 80170ea:	6078      	str	r0, [r7, #4]
 80170ec:	687b      	ldr	r3, [r7, #4]
 80170ee:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 80170f2:	2b01      	cmp	r3, #1
 80170f4:	d101      	bne.n	80170fa <HAL_UARTEx_DisableFifoMode+0x16>
 80170f6:	2302      	movs	r3, #2
 80170f8:	e027      	b.n	801714a <HAL_UARTEx_DisableFifoMode+0x66>
 80170fa:	687b      	ldr	r3, [r7, #4]
 80170fc:	2201      	movs	r2, #1
 80170fe:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8017102:	687b      	ldr	r3, [r7, #4]
 8017104:	2224      	movs	r2, #36	; 0x24
 8017106:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 801710a:	687b      	ldr	r3, [r7, #4]
 801710c:	681b      	ldr	r3, [r3, #0]
 801710e:	681b      	ldr	r3, [r3, #0]
 8017110:	60fb      	str	r3, [r7, #12]
 8017112:	687b      	ldr	r3, [r7, #4]
 8017114:	681b      	ldr	r3, [r3, #0]
 8017116:	681a      	ldr	r2, [r3, #0]
 8017118:	687b      	ldr	r3, [r7, #4]
 801711a:	681b      	ldr	r3, [r3, #0]
 801711c:	f022 0201 	bic.w	r2, r2, #1
 8017120:	601a      	str	r2, [r3, #0]
 8017122:	68fb      	ldr	r3, [r7, #12]
 8017124:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 8017128:	60fb      	str	r3, [r7, #12]
 801712a:	687b      	ldr	r3, [r7, #4]
 801712c:	2200      	movs	r2, #0
 801712e:	665a      	str	r2, [r3, #100]	; 0x64
 8017130:	687b      	ldr	r3, [r7, #4]
 8017132:	681b      	ldr	r3, [r3, #0]
 8017134:	68fa      	ldr	r2, [r7, #12]
 8017136:	601a      	str	r2, [r3, #0]
 8017138:	687b      	ldr	r3, [r7, #4]
 801713a:	2220      	movs	r2, #32
 801713c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8017140:	687b      	ldr	r3, [r7, #4]
 8017142:	2200      	movs	r2, #0
 8017144:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8017148:	2300      	movs	r3, #0
 801714a:	4618      	mov	r0, r3
 801714c:	3714      	adds	r7, #20
 801714e:	46bd      	mov	sp, r7
 8017150:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017154:	4770      	bx	lr

08017156 <HAL_UARTEx_SetTxFifoThreshold>:
 8017156:	b580      	push	{r7, lr}
 8017158:	b084      	sub	sp, #16
 801715a:	af00      	add	r7, sp, #0
 801715c:	6078      	str	r0, [r7, #4]
 801715e:	6039      	str	r1, [r7, #0]
 8017160:	687b      	ldr	r3, [r7, #4]
 8017162:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 8017166:	2b01      	cmp	r3, #1
 8017168:	d101      	bne.n	801716e <HAL_UARTEx_SetTxFifoThreshold+0x18>
 801716a:	2302      	movs	r3, #2
 801716c:	e02d      	b.n	80171ca <HAL_UARTEx_SetTxFifoThreshold+0x74>
 801716e:	687b      	ldr	r3, [r7, #4]
 8017170:	2201      	movs	r2, #1
 8017172:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8017176:	687b      	ldr	r3, [r7, #4]
 8017178:	2224      	movs	r2, #36	; 0x24
 801717a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 801717e:	687b      	ldr	r3, [r7, #4]
 8017180:	681b      	ldr	r3, [r3, #0]
 8017182:	681b      	ldr	r3, [r3, #0]
 8017184:	60fb      	str	r3, [r7, #12]
 8017186:	687b      	ldr	r3, [r7, #4]
 8017188:	681b      	ldr	r3, [r3, #0]
 801718a:	681a      	ldr	r2, [r3, #0]
 801718c:	687b      	ldr	r3, [r7, #4]
 801718e:	681b      	ldr	r3, [r3, #0]
 8017190:	f022 0201 	bic.w	r2, r2, #1
 8017194:	601a      	str	r2, [r3, #0]
 8017196:	687b      	ldr	r3, [r7, #4]
 8017198:	681b      	ldr	r3, [r3, #0]
 801719a:	689b      	ldr	r3, [r3, #8]
 801719c:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 80171a0:	687b      	ldr	r3, [r7, #4]
 80171a2:	681b      	ldr	r3, [r3, #0]
 80171a4:	683a      	ldr	r2, [r7, #0]
 80171a6:	430a      	orrs	r2, r1
 80171a8:	609a      	str	r2, [r3, #8]
 80171aa:	6878      	ldr	r0, [r7, #4]
 80171ac:	f000 f850 	bl	8017250 <UARTEx_SetNbDataToProcess>
 80171b0:	687b      	ldr	r3, [r7, #4]
 80171b2:	681b      	ldr	r3, [r3, #0]
 80171b4:	68fa      	ldr	r2, [r7, #12]
 80171b6:	601a      	str	r2, [r3, #0]
 80171b8:	687b      	ldr	r3, [r7, #4]
 80171ba:	2220      	movs	r2, #32
 80171bc:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80171c0:	687b      	ldr	r3, [r7, #4]
 80171c2:	2200      	movs	r2, #0
 80171c4:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 80171c8:	2300      	movs	r3, #0
 80171ca:	4618      	mov	r0, r3
 80171cc:	3710      	adds	r7, #16
 80171ce:	46bd      	mov	sp, r7
 80171d0:	bd80      	pop	{r7, pc}

080171d2 <HAL_UARTEx_SetRxFifoThreshold>:
 80171d2:	b580      	push	{r7, lr}
 80171d4:	b084      	sub	sp, #16
 80171d6:	af00      	add	r7, sp, #0
 80171d8:	6078      	str	r0, [r7, #4]
 80171da:	6039      	str	r1, [r7, #0]
 80171dc:	687b      	ldr	r3, [r7, #4]
 80171de:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 80171e2:	2b01      	cmp	r3, #1
 80171e4:	d101      	bne.n	80171ea <HAL_UARTEx_SetRxFifoThreshold+0x18>
 80171e6:	2302      	movs	r3, #2
 80171e8:	e02d      	b.n	8017246 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 80171ea:	687b      	ldr	r3, [r7, #4]
 80171ec:	2201      	movs	r2, #1
 80171ee:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 80171f2:	687b      	ldr	r3, [r7, #4]
 80171f4:	2224      	movs	r2, #36	; 0x24
 80171f6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80171fa:	687b      	ldr	r3, [r7, #4]
 80171fc:	681b      	ldr	r3, [r3, #0]
 80171fe:	681b      	ldr	r3, [r3, #0]
 8017200:	60fb      	str	r3, [r7, #12]
 8017202:	687b      	ldr	r3, [r7, #4]
 8017204:	681b      	ldr	r3, [r3, #0]
 8017206:	681a      	ldr	r2, [r3, #0]
 8017208:	687b      	ldr	r3, [r7, #4]
 801720a:	681b      	ldr	r3, [r3, #0]
 801720c:	f022 0201 	bic.w	r2, r2, #1
 8017210:	601a      	str	r2, [r3, #0]
 8017212:	687b      	ldr	r3, [r7, #4]
 8017214:	681b      	ldr	r3, [r3, #0]
 8017216:	689b      	ldr	r3, [r3, #8]
 8017218:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 801721c:	687b      	ldr	r3, [r7, #4]
 801721e:	681b      	ldr	r3, [r3, #0]
 8017220:	683a      	ldr	r2, [r7, #0]
 8017222:	430a      	orrs	r2, r1
 8017224:	609a      	str	r2, [r3, #8]
 8017226:	6878      	ldr	r0, [r7, #4]
 8017228:	f000 f812 	bl	8017250 <UARTEx_SetNbDataToProcess>
 801722c:	687b      	ldr	r3, [r7, #4]
 801722e:	681b      	ldr	r3, [r3, #0]
 8017230:	68fa      	ldr	r2, [r7, #12]
 8017232:	601a      	str	r2, [r3, #0]
 8017234:	687b      	ldr	r3, [r7, #4]
 8017236:	2220      	movs	r2, #32
 8017238:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 801723c:	687b      	ldr	r3, [r7, #4]
 801723e:	2200      	movs	r2, #0
 8017240:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8017244:	2300      	movs	r3, #0
 8017246:	4618      	mov	r0, r3
 8017248:	3710      	adds	r7, #16
 801724a:	46bd      	mov	sp, r7
 801724c:	bd80      	pop	{r7, pc}
	...

08017250 <UARTEx_SetNbDataToProcess>:
 8017250:	b480      	push	{r7}
 8017252:	b085      	sub	sp, #20
 8017254:	af00      	add	r7, sp, #0
 8017256:	6078      	str	r0, [r7, #4]
 8017258:	687b      	ldr	r3, [r7, #4]
 801725a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801725c:	2b00      	cmp	r3, #0
 801725e:	d108      	bne.n	8017272 <UARTEx_SetNbDataToProcess+0x22>
 8017260:	687b      	ldr	r3, [r7, #4]
 8017262:	2201      	movs	r2, #1
 8017264:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8017268:	687b      	ldr	r3, [r7, #4]
 801726a:	2201      	movs	r2, #1
 801726c:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8017270:	e031      	b.n	80172d6 <UARTEx_SetNbDataToProcess+0x86>
 8017272:	2310      	movs	r3, #16
 8017274:	73fb      	strb	r3, [r7, #15]
 8017276:	2310      	movs	r3, #16
 8017278:	73bb      	strb	r3, [r7, #14]
 801727a:	687b      	ldr	r3, [r7, #4]
 801727c:	681b      	ldr	r3, [r3, #0]
 801727e:	689b      	ldr	r3, [r3, #8]
 8017280:	0e5b      	lsrs	r3, r3, #25
 8017282:	b2db      	uxtb	r3, r3
 8017284:	f003 0307 	and.w	r3, r3, #7
 8017288:	737b      	strb	r3, [r7, #13]
 801728a:	687b      	ldr	r3, [r7, #4]
 801728c:	681b      	ldr	r3, [r3, #0]
 801728e:	689b      	ldr	r3, [r3, #8]
 8017290:	0f5b      	lsrs	r3, r3, #29
 8017292:	b2db      	uxtb	r3, r3
 8017294:	f003 0307 	and.w	r3, r3, #7
 8017298:	733b      	strb	r3, [r7, #12]
 801729a:	7bbb      	ldrb	r3, [r7, #14]
 801729c:	7b3a      	ldrb	r2, [r7, #12]
 801729e:	4911      	ldr	r1, [pc, #68]	; (80172e4 <UARTEx_SetNbDataToProcess+0x94>)
 80172a0:	5c8a      	ldrb	r2, [r1, r2]
 80172a2:	fb02 f303 	mul.w	r3, r2, r3
 80172a6:	7b3a      	ldrb	r2, [r7, #12]
 80172a8:	490f      	ldr	r1, [pc, #60]	; (80172e8 <UARTEx_SetNbDataToProcess+0x98>)
 80172aa:	5c8a      	ldrb	r2, [r1, r2]
 80172ac:	fb93 f3f2 	sdiv	r3, r3, r2
 80172b0:	b29a      	uxth	r2, r3
 80172b2:	687b      	ldr	r3, [r7, #4]
 80172b4:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 80172b8:	7bfb      	ldrb	r3, [r7, #15]
 80172ba:	7b7a      	ldrb	r2, [r7, #13]
 80172bc:	4909      	ldr	r1, [pc, #36]	; (80172e4 <UARTEx_SetNbDataToProcess+0x94>)
 80172be:	5c8a      	ldrb	r2, [r1, r2]
 80172c0:	fb02 f303 	mul.w	r3, r2, r3
 80172c4:	7b7a      	ldrb	r2, [r7, #13]
 80172c6:	4908      	ldr	r1, [pc, #32]	; (80172e8 <UARTEx_SetNbDataToProcess+0x98>)
 80172c8:	5c8a      	ldrb	r2, [r1, r2]
 80172ca:	fb93 f3f2 	sdiv	r3, r3, r2
 80172ce:	b29a      	uxth	r2, r3
 80172d0:	687b      	ldr	r3, [r7, #4]
 80172d2:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 80172d6:	bf00      	nop
 80172d8:	3714      	adds	r7, #20
 80172da:	46bd      	mov	sp, r7
 80172dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80172e0:	4770      	bx	lr
 80172e2:	bf00      	nop
 80172e4:	0801b884 	.word	0x0801b884
 80172e8:	0801b88c 	.word	0x0801b88c

080172ec <__NVIC_SetPriority>:
 80172ec:	b480      	push	{r7}
 80172ee:	b083      	sub	sp, #12
 80172f0:	af00      	add	r7, sp, #0
 80172f2:	4603      	mov	r3, r0
 80172f4:	6039      	str	r1, [r7, #0]
 80172f6:	80fb      	strh	r3, [r7, #6]
 80172f8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80172fc:	2b00      	cmp	r3, #0
 80172fe:	db0a      	blt.n	8017316 <__NVIC_SetPriority+0x2a>
 8017300:	683b      	ldr	r3, [r7, #0]
 8017302:	b2da      	uxtb	r2, r3
 8017304:	490c      	ldr	r1, [pc, #48]	; (8017338 <__NVIC_SetPriority+0x4c>)
 8017306:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 801730a:	0112      	lsls	r2, r2, #4
 801730c:	b2d2      	uxtb	r2, r2
 801730e:	440b      	add	r3, r1
 8017310:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8017314:	e00a      	b.n	801732c <__NVIC_SetPriority+0x40>
 8017316:	683b      	ldr	r3, [r7, #0]
 8017318:	b2da      	uxtb	r2, r3
 801731a:	4908      	ldr	r1, [pc, #32]	; (801733c <__NVIC_SetPriority+0x50>)
 801731c:	88fb      	ldrh	r3, [r7, #6]
 801731e:	f003 030f 	and.w	r3, r3, #15
 8017322:	3b04      	subs	r3, #4
 8017324:	0112      	lsls	r2, r2, #4
 8017326:	b2d2      	uxtb	r2, r2
 8017328:	440b      	add	r3, r1
 801732a:	761a      	strb	r2, [r3, #24]
 801732c:	bf00      	nop
 801732e:	370c      	adds	r7, #12
 8017330:	46bd      	mov	sp, r7
 8017332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017336:	4770      	bx	lr
 8017338:	e000e100 	.word	0xe000e100
 801733c:	e000ed00 	.word	0xe000ed00

08017340 <SysTick_Handler>:
 8017340:	b580      	push	{r7, lr}
 8017342:	af00      	add	r7, sp, #0
 8017344:	4b05      	ldr	r3, [pc, #20]	; (801735c <SysTick_Handler+0x1c>)
 8017346:	681b      	ldr	r3, [r3, #0]
 8017348:	f002 faa0 	bl	801988c <xTaskGetSchedulerState>
 801734c:	4603      	mov	r3, r0
 801734e:	2b01      	cmp	r3, #1
 8017350:	d001      	beq.n	8017356 <SysTick_Handler+0x16>
 8017352:	f003 f8c1 	bl	801a4d8 <xPortSysTickHandler>
 8017356:	bf00      	nop
 8017358:	bd80      	pop	{r7, pc}
 801735a:	bf00      	nop
 801735c:	e000e010 	.word	0xe000e010

08017360 <SVC_Setup>:
 8017360:	b580      	push	{r7, lr}
 8017362:	af00      	add	r7, sp, #0
 8017364:	2100      	movs	r1, #0
 8017366:	f06f 0004 	mvn.w	r0, #4
 801736a:	f7ff ffbf 	bl	80172ec <__NVIC_SetPriority>
 801736e:	bf00      	nop
 8017370:	bd80      	pop	{r7, pc}
	...

08017374 <osKernelInitialize>:
 8017374:	b480      	push	{r7}
 8017376:	b083      	sub	sp, #12
 8017378:	af00      	add	r7, sp, #0
 801737a:	f3ef 8305 	mrs	r3, IPSR
 801737e:	603b      	str	r3, [r7, #0]
 8017380:	683b      	ldr	r3, [r7, #0]
 8017382:	2b00      	cmp	r3, #0
 8017384:	d003      	beq.n	801738e <osKernelInitialize+0x1a>
 8017386:	f06f 0305 	mvn.w	r3, #5
 801738a:	607b      	str	r3, [r7, #4]
 801738c:	e00c      	b.n	80173a8 <osKernelInitialize+0x34>
 801738e:	4b0a      	ldr	r3, [pc, #40]	; (80173b8 <osKernelInitialize+0x44>)
 8017390:	681b      	ldr	r3, [r3, #0]
 8017392:	2b00      	cmp	r3, #0
 8017394:	d105      	bne.n	80173a2 <osKernelInitialize+0x2e>
 8017396:	4b08      	ldr	r3, [pc, #32]	; (80173b8 <osKernelInitialize+0x44>)
 8017398:	2201      	movs	r2, #1
 801739a:	601a      	str	r2, [r3, #0]
 801739c:	2300      	movs	r3, #0
 801739e:	607b      	str	r3, [r7, #4]
 80173a0:	e002      	b.n	80173a8 <osKernelInitialize+0x34>
 80173a2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80173a6:	607b      	str	r3, [r7, #4]
 80173a8:	687b      	ldr	r3, [r7, #4]
 80173aa:	4618      	mov	r0, r3
 80173ac:	370c      	adds	r7, #12
 80173ae:	46bd      	mov	sp, r7
 80173b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80173b4:	4770      	bx	lr
 80173b6:	bf00      	nop
 80173b8:	24002088 	.word	0x24002088

080173bc <osKernelStart>:
 80173bc:	b580      	push	{r7, lr}
 80173be:	b082      	sub	sp, #8
 80173c0:	af00      	add	r7, sp, #0
 80173c2:	f3ef 8305 	mrs	r3, IPSR
 80173c6:	603b      	str	r3, [r7, #0]
 80173c8:	683b      	ldr	r3, [r7, #0]
 80173ca:	2b00      	cmp	r3, #0
 80173cc:	d003      	beq.n	80173d6 <osKernelStart+0x1a>
 80173ce:	f06f 0305 	mvn.w	r3, #5
 80173d2:	607b      	str	r3, [r7, #4]
 80173d4:	e010      	b.n	80173f8 <osKernelStart+0x3c>
 80173d6:	4b0b      	ldr	r3, [pc, #44]	; (8017404 <osKernelStart+0x48>)
 80173d8:	681b      	ldr	r3, [r3, #0]
 80173da:	2b01      	cmp	r3, #1
 80173dc:	d109      	bne.n	80173f2 <osKernelStart+0x36>
 80173de:	f7ff ffbf 	bl	8017360 <SVC_Setup>
 80173e2:	4b08      	ldr	r3, [pc, #32]	; (8017404 <osKernelStart+0x48>)
 80173e4:	2202      	movs	r2, #2
 80173e6:	601a      	str	r2, [r3, #0]
 80173e8:	f001 fd54 	bl	8018e94 <vTaskStartScheduler>
 80173ec:	2300      	movs	r3, #0
 80173ee:	607b      	str	r3, [r7, #4]
 80173f0:	e002      	b.n	80173f8 <osKernelStart+0x3c>
 80173f2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80173f6:	607b      	str	r3, [r7, #4]
 80173f8:	687b      	ldr	r3, [r7, #4]
 80173fa:	4618      	mov	r0, r3
 80173fc:	3708      	adds	r7, #8
 80173fe:	46bd      	mov	sp, r7
 8017400:	bd80      	pop	{r7, pc}
 8017402:	bf00      	nop
 8017404:	24002088 	.word	0x24002088

08017408 <osThreadNew>:
 8017408:	b580      	push	{r7, lr}
 801740a:	b08e      	sub	sp, #56	; 0x38
 801740c:	af04      	add	r7, sp, #16
 801740e:	60f8      	str	r0, [r7, #12]
 8017410:	60b9      	str	r1, [r7, #8]
 8017412:	607a      	str	r2, [r7, #4]
 8017414:	2300      	movs	r3, #0
 8017416:	613b      	str	r3, [r7, #16]
 8017418:	f3ef 8305 	mrs	r3, IPSR
 801741c:	617b      	str	r3, [r7, #20]
 801741e:	697b      	ldr	r3, [r7, #20]
 8017420:	2b00      	cmp	r3, #0
 8017422:	d17e      	bne.n	8017522 <osThreadNew+0x11a>
 8017424:	68fb      	ldr	r3, [r7, #12]
 8017426:	2b00      	cmp	r3, #0
 8017428:	d07b      	beq.n	8017522 <osThreadNew+0x11a>
 801742a:	2380      	movs	r3, #128	; 0x80
 801742c:	623b      	str	r3, [r7, #32]
 801742e:	2318      	movs	r3, #24
 8017430:	61fb      	str	r3, [r7, #28]
 8017432:	2300      	movs	r3, #0
 8017434:	627b      	str	r3, [r7, #36]	; 0x24
 8017436:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801743a:	61bb      	str	r3, [r7, #24]
 801743c:	687b      	ldr	r3, [r7, #4]
 801743e:	2b00      	cmp	r3, #0
 8017440:	d045      	beq.n	80174ce <osThreadNew+0xc6>
 8017442:	687b      	ldr	r3, [r7, #4]
 8017444:	681b      	ldr	r3, [r3, #0]
 8017446:	2b00      	cmp	r3, #0
 8017448:	d002      	beq.n	8017450 <osThreadNew+0x48>
 801744a:	687b      	ldr	r3, [r7, #4]
 801744c:	681b      	ldr	r3, [r3, #0]
 801744e:	627b      	str	r3, [r7, #36]	; 0x24
 8017450:	687b      	ldr	r3, [r7, #4]
 8017452:	699b      	ldr	r3, [r3, #24]
 8017454:	2b00      	cmp	r3, #0
 8017456:	d002      	beq.n	801745e <osThreadNew+0x56>
 8017458:	687b      	ldr	r3, [r7, #4]
 801745a:	699b      	ldr	r3, [r3, #24]
 801745c:	61fb      	str	r3, [r7, #28]
 801745e:	69fb      	ldr	r3, [r7, #28]
 8017460:	2b00      	cmp	r3, #0
 8017462:	d008      	beq.n	8017476 <osThreadNew+0x6e>
 8017464:	69fb      	ldr	r3, [r7, #28]
 8017466:	2b38      	cmp	r3, #56	; 0x38
 8017468:	d805      	bhi.n	8017476 <osThreadNew+0x6e>
 801746a:	687b      	ldr	r3, [r7, #4]
 801746c:	685b      	ldr	r3, [r3, #4]
 801746e:	f003 0301 	and.w	r3, r3, #1
 8017472:	2b00      	cmp	r3, #0
 8017474:	d001      	beq.n	801747a <osThreadNew+0x72>
 8017476:	2300      	movs	r3, #0
 8017478:	e054      	b.n	8017524 <osThreadNew+0x11c>
 801747a:	687b      	ldr	r3, [r7, #4]
 801747c:	695b      	ldr	r3, [r3, #20]
 801747e:	2b00      	cmp	r3, #0
 8017480:	d003      	beq.n	801748a <osThreadNew+0x82>
 8017482:	687b      	ldr	r3, [r7, #4]
 8017484:	695b      	ldr	r3, [r3, #20]
 8017486:	089b      	lsrs	r3, r3, #2
 8017488:	623b      	str	r3, [r7, #32]
 801748a:	687b      	ldr	r3, [r7, #4]
 801748c:	689b      	ldr	r3, [r3, #8]
 801748e:	2b00      	cmp	r3, #0
 8017490:	d00e      	beq.n	80174b0 <osThreadNew+0xa8>
 8017492:	687b      	ldr	r3, [r7, #4]
 8017494:	68db      	ldr	r3, [r3, #12]
 8017496:	2b5b      	cmp	r3, #91	; 0x5b
 8017498:	d90a      	bls.n	80174b0 <osThreadNew+0xa8>
 801749a:	687b      	ldr	r3, [r7, #4]
 801749c:	691b      	ldr	r3, [r3, #16]
 801749e:	2b00      	cmp	r3, #0
 80174a0:	d006      	beq.n	80174b0 <osThreadNew+0xa8>
 80174a2:	687b      	ldr	r3, [r7, #4]
 80174a4:	695b      	ldr	r3, [r3, #20]
 80174a6:	2b00      	cmp	r3, #0
 80174a8:	d002      	beq.n	80174b0 <osThreadNew+0xa8>
 80174aa:	2301      	movs	r3, #1
 80174ac:	61bb      	str	r3, [r7, #24]
 80174ae:	e010      	b.n	80174d2 <osThreadNew+0xca>
 80174b0:	687b      	ldr	r3, [r7, #4]
 80174b2:	689b      	ldr	r3, [r3, #8]
 80174b4:	2b00      	cmp	r3, #0
 80174b6:	d10c      	bne.n	80174d2 <osThreadNew+0xca>
 80174b8:	687b      	ldr	r3, [r7, #4]
 80174ba:	68db      	ldr	r3, [r3, #12]
 80174bc:	2b00      	cmp	r3, #0
 80174be:	d108      	bne.n	80174d2 <osThreadNew+0xca>
 80174c0:	687b      	ldr	r3, [r7, #4]
 80174c2:	691b      	ldr	r3, [r3, #16]
 80174c4:	2b00      	cmp	r3, #0
 80174c6:	d104      	bne.n	80174d2 <osThreadNew+0xca>
 80174c8:	2300      	movs	r3, #0
 80174ca:	61bb      	str	r3, [r7, #24]
 80174cc:	e001      	b.n	80174d2 <osThreadNew+0xca>
 80174ce:	2300      	movs	r3, #0
 80174d0:	61bb      	str	r3, [r7, #24]
 80174d2:	69bb      	ldr	r3, [r7, #24]
 80174d4:	2b01      	cmp	r3, #1
 80174d6:	d110      	bne.n	80174fa <osThreadNew+0xf2>
 80174d8:	687b      	ldr	r3, [r7, #4]
 80174da:	691b      	ldr	r3, [r3, #16]
 80174dc:	687a      	ldr	r2, [r7, #4]
 80174de:	6892      	ldr	r2, [r2, #8]
 80174e0:	9202      	str	r2, [sp, #8]
 80174e2:	9301      	str	r3, [sp, #4]
 80174e4:	69fb      	ldr	r3, [r7, #28]
 80174e6:	9300      	str	r3, [sp, #0]
 80174e8:	68bb      	ldr	r3, [r7, #8]
 80174ea:	6a3a      	ldr	r2, [r7, #32]
 80174ec:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80174ee:	68f8      	ldr	r0, [r7, #12]
 80174f0:	f001 f9f4 	bl	80188dc <xTaskCreateStatic>
 80174f4:	4603      	mov	r3, r0
 80174f6:	613b      	str	r3, [r7, #16]
 80174f8:	e013      	b.n	8017522 <osThreadNew+0x11a>
 80174fa:	69bb      	ldr	r3, [r7, #24]
 80174fc:	2b00      	cmp	r3, #0
 80174fe:	d110      	bne.n	8017522 <osThreadNew+0x11a>
 8017500:	6a3b      	ldr	r3, [r7, #32]
 8017502:	b29a      	uxth	r2, r3
 8017504:	f107 0310 	add.w	r3, r7, #16
 8017508:	9301      	str	r3, [sp, #4]
 801750a:	69fb      	ldr	r3, [r7, #28]
 801750c:	9300      	str	r3, [sp, #0]
 801750e:	68bb      	ldr	r3, [r7, #8]
 8017510:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8017512:	68f8      	ldr	r0, [r7, #12]
 8017514:	f001 fa3f 	bl	8018996 <xTaskCreate>
 8017518:	4603      	mov	r3, r0
 801751a:	2b01      	cmp	r3, #1
 801751c:	d001      	beq.n	8017522 <osThreadNew+0x11a>
 801751e:	2300      	movs	r3, #0
 8017520:	613b      	str	r3, [r7, #16]
 8017522:	693b      	ldr	r3, [r7, #16]
 8017524:	4618      	mov	r0, r3
 8017526:	3728      	adds	r7, #40	; 0x28
 8017528:	46bd      	mov	sp, r7
 801752a:	bd80      	pop	{r7, pc}

0801752c <osThreadYield>:
 801752c:	b480      	push	{r7}
 801752e:	b083      	sub	sp, #12
 8017530:	af00      	add	r7, sp, #0
 8017532:	f3ef 8305 	mrs	r3, IPSR
 8017536:	603b      	str	r3, [r7, #0]
 8017538:	683b      	ldr	r3, [r7, #0]
 801753a:	2b00      	cmp	r3, #0
 801753c:	d003      	beq.n	8017546 <osThreadYield+0x1a>
 801753e:	f06f 0305 	mvn.w	r3, #5
 8017542:	607b      	str	r3, [r7, #4]
 8017544:	e009      	b.n	801755a <osThreadYield+0x2e>
 8017546:	2300      	movs	r3, #0
 8017548:	607b      	str	r3, [r7, #4]
 801754a:	4b07      	ldr	r3, [pc, #28]	; (8017568 <osThreadYield+0x3c>)
 801754c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8017550:	601a      	str	r2, [r3, #0]
 8017552:	f3bf 8f4f 	dsb	sy
 8017556:	f3bf 8f6f 	isb	sy
 801755a:	687b      	ldr	r3, [r7, #4]
 801755c:	4618      	mov	r0, r3
 801755e:	370c      	adds	r7, #12
 8017560:	46bd      	mov	sp, r7
 8017562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017566:	4770      	bx	lr
 8017568:	e000ed04 	.word	0xe000ed04

0801756c <osThreadSuspend>:
 801756c:	b580      	push	{r7, lr}
 801756e:	b086      	sub	sp, #24
 8017570:	af00      	add	r7, sp, #0
 8017572:	6078      	str	r0, [r7, #4]
 8017574:	687b      	ldr	r3, [r7, #4]
 8017576:	613b      	str	r3, [r7, #16]
 8017578:	f3ef 8305 	mrs	r3, IPSR
 801757c:	60fb      	str	r3, [r7, #12]
 801757e:	68fb      	ldr	r3, [r7, #12]
 8017580:	2b00      	cmp	r3, #0
 8017582:	d003      	beq.n	801758c <osThreadSuspend+0x20>
 8017584:	f06f 0305 	mvn.w	r3, #5
 8017588:	617b      	str	r3, [r7, #20]
 801758a:	e00b      	b.n	80175a4 <osThreadSuspend+0x38>
 801758c:	693b      	ldr	r3, [r7, #16]
 801758e:	2b00      	cmp	r3, #0
 8017590:	d103      	bne.n	801759a <osThreadSuspend+0x2e>
 8017592:	f06f 0303 	mvn.w	r3, #3
 8017596:	617b      	str	r3, [r7, #20]
 8017598:	e004      	b.n	80175a4 <osThreadSuspend+0x38>
 801759a:	2300      	movs	r3, #0
 801759c:	617b      	str	r3, [r7, #20]
 801759e:	6938      	ldr	r0, [r7, #16]
 80175a0:	f001 fb72 	bl	8018c88 <vTaskSuspend>
 80175a4:	697b      	ldr	r3, [r7, #20]
 80175a6:	4618      	mov	r0, r3
 80175a8:	3718      	adds	r7, #24
 80175aa:	46bd      	mov	sp, r7
 80175ac:	bd80      	pop	{r7, pc}

080175ae <osThreadResume>:
 80175ae:	b580      	push	{r7, lr}
 80175b0:	b086      	sub	sp, #24
 80175b2:	af00      	add	r7, sp, #0
 80175b4:	6078      	str	r0, [r7, #4]
 80175b6:	687b      	ldr	r3, [r7, #4]
 80175b8:	613b      	str	r3, [r7, #16]
 80175ba:	f3ef 8305 	mrs	r3, IPSR
 80175be:	60fb      	str	r3, [r7, #12]
 80175c0:	68fb      	ldr	r3, [r7, #12]
 80175c2:	2b00      	cmp	r3, #0
 80175c4:	d003      	beq.n	80175ce <osThreadResume+0x20>
 80175c6:	f06f 0305 	mvn.w	r3, #5
 80175ca:	617b      	str	r3, [r7, #20]
 80175cc:	e00b      	b.n	80175e6 <osThreadResume+0x38>
 80175ce:	693b      	ldr	r3, [r7, #16]
 80175d0:	2b00      	cmp	r3, #0
 80175d2:	d103      	bne.n	80175dc <osThreadResume+0x2e>
 80175d4:	f06f 0303 	mvn.w	r3, #3
 80175d8:	617b      	str	r3, [r7, #20]
 80175da:	e004      	b.n	80175e6 <osThreadResume+0x38>
 80175dc:	2300      	movs	r3, #0
 80175de:	617b      	str	r3, [r7, #20]
 80175e0:	6938      	ldr	r0, [r7, #16]
 80175e2:	f001 fbf9 	bl	8018dd8 <vTaskResume>
 80175e6:	697b      	ldr	r3, [r7, #20]
 80175e8:	4618      	mov	r0, r3
 80175ea:	3718      	adds	r7, #24
 80175ec:	46bd      	mov	sp, r7
 80175ee:	bd80      	pop	{r7, pc}

080175f0 <osDelay>:
 80175f0:	b580      	push	{r7, lr}
 80175f2:	b084      	sub	sp, #16
 80175f4:	af00      	add	r7, sp, #0
 80175f6:	6078      	str	r0, [r7, #4]
 80175f8:	f3ef 8305 	mrs	r3, IPSR
 80175fc:	60bb      	str	r3, [r7, #8]
 80175fe:	68bb      	ldr	r3, [r7, #8]
 8017600:	2b00      	cmp	r3, #0
 8017602:	d003      	beq.n	801760c <osDelay+0x1c>
 8017604:	f06f 0305 	mvn.w	r3, #5
 8017608:	60fb      	str	r3, [r7, #12]
 801760a:	e007      	b.n	801761c <osDelay+0x2c>
 801760c:	2300      	movs	r3, #0
 801760e:	60fb      	str	r3, [r7, #12]
 8017610:	687b      	ldr	r3, [r7, #4]
 8017612:	2b00      	cmp	r3, #0
 8017614:	d002      	beq.n	801761c <osDelay+0x2c>
 8017616:	6878      	ldr	r0, [r7, #4]
 8017618:	f001 fb02 	bl	8018c20 <vTaskDelay>
 801761c:	68fb      	ldr	r3, [r7, #12]
 801761e:	4618      	mov	r0, r3
 8017620:	3710      	adds	r7, #16
 8017622:	46bd      	mov	sp, r7
 8017624:	bd80      	pop	{r7, pc}

08017626 <osEventFlagsNew>:
 8017626:	b580      	push	{r7, lr}
 8017628:	b086      	sub	sp, #24
 801762a:	af00      	add	r7, sp, #0
 801762c:	6078      	str	r0, [r7, #4]
 801762e:	2300      	movs	r3, #0
 8017630:	617b      	str	r3, [r7, #20]
 8017632:	f3ef 8305 	mrs	r3, IPSR
 8017636:	60fb      	str	r3, [r7, #12]
 8017638:	68fb      	ldr	r3, [r7, #12]
 801763a:	2b00      	cmp	r3, #0
 801763c:	d12d      	bne.n	801769a <osEventFlagsNew+0x74>
 801763e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8017642:	613b      	str	r3, [r7, #16]
 8017644:	687b      	ldr	r3, [r7, #4]
 8017646:	2b00      	cmp	r3, #0
 8017648:	d015      	beq.n	8017676 <osEventFlagsNew+0x50>
 801764a:	687b      	ldr	r3, [r7, #4]
 801764c:	689b      	ldr	r3, [r3, #8]
 801764e:	2b00      	cmp	r3, #0
 8017650:	d006      	beq.n	8017660 <osEventFlagsNew+0x3a>
 8017652:	687b      	ldr	r3, [r7, #4]
 8017654:	68db      	ldr	r3, [r3, #12]
 8017656:	2b1f      	cmp	r3, #31
 8017658:	d902      	bls.n	8017660 <osEventFlagsNew+0x3a>
 801765a:	2301      	movs	r3, #1
 801765c:	613b      	str	r3, [r7, #16]
 801765e:	e00c      	b.n	801767a <osEventFlagsNew+0x54>
 8017660:	687b      	ldr	r3, [r7, #4]
 8017662:	689b      	ldr	r3, [r3, #8]
 8017664:	2b00      	cmp	r3, #0
 8017666:	d108      	bne.n	801767a <osEventFlagsNew+0x54>
 8017668:	687b      	ldr	r3, [r7, #4]
 801766a:	68db      	ldr	r3, [r3, #12]
 801766c:	2b00      	cmp	r3, #0
 801766e:	d104      	bne.n	801767a <osEventFlagsNew+0x54>
 8017670:	2300      	movs	r3, #0
 8017672:	613b      	str	r3, [r7, #16]
 8017674:	e001      	b.n	801767a <osEventFlagsNew+0x54>
 8017676:	2300      	movs	r3, #0
 8017678:	613b      	str	r3, [r7, #16]
 801767a:	693b      	ldr	r3, [r7, #16]
 801767c:	2b01      	cmp	r3, #1
 801767e:	d106      	bne.n	801768e <osEventFlagsNew+0x68>
 8017680:	687b      	ldr	r3, [r7, #4]
 8017682:	689b      	ldr	r3, [r3, #8]
 8017684:	4618      	mov	r0, r3
 8017686:	f000 f91d 	bl	80178c4 <xEventGroupCreateStatic>
 801768a:	6178      	str	r0, [r7, #20]
 801768c:	e005      	b.n	801769a <osEventFlagsNew+0x74>
 801768e:	693b      	ldr	r3, [r7, #16]
 8017690:	2b00      	cmp	r3, #0
 8017692:	d102      	bne.n	801769a <osEventFlagsNew+0x74>
 8017694:	f000 f94d 	bl	8017932 <xEventGroupCreate>
 8017698:	6178      	str	r0, [r7, #20]
 801769a:	697b      	ldr	r3, [r7, #20]
 801769c:	4618      	mov	r0, r3
 801769e:	3718      	adds	r7, #24
 80176a0:	46bd      	mov	sp, r7
 80176a2:	bd80      	pop	{r7, pc}

080176a4 <osEventFlagsSet>:
 80176a4:	b580      	push	{r7, lr}
 80176a6:	b086      	sub	sp, #24
 80176a8:	af00      	add	r7, sp, #0
 80176aa:	6078      	str	r0, [r7, #4]
 80176ac:	6039      	str	r1, [r7, #0]
 80176ae:	687b      	ldr	r3, [r7, #4]
 80176b0:	613b      	str	r3, [r7, #16]
 80176b2:	693b      	ldr	r3, [r7, #16]
 80176b4:	2b00      	cmp	r3, #0
 80176b6:	d004      	beq.n	80176c2 <osEventFlagsSet+0x1e>
 80176b8:	683b      	ldr	r3, [r7, #0]
 80176ba:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80176be:	2b00      	cmp	r3, #0
 80176c0:	d003      	beq.n	80176ca <osEventFlagsSet+0x26>
 80176c2:	f06f 0303 	mvn.w	r3, #3
 80176c6:	617b      	str	r3, [r7, #20]
 80176c8:	e028      	b.n	801771c <osEventFlagsSet+0x78>
 80176ca:	f3ef 8305 	mrs	r3, IPSR
 80176ce:	60fb      	str	r3, [r7, #12]
 80176d0:	68fb      	ldr	r3, [r7, #12]
 80176d2:	2b00      	cmp	r3, #0
 80176d4:	d01d      	beq.n	8017712 <osEventFlagsSet+0x6e>
 80176d6:	2300      	movs	r3, #0
 80176d8:	60bb      	str	r3, [r7, #8]
 80176da:	f107 0308 	add.w	r3, r7, #8
 80176de:	461a      	mov	r2, r3
 80176e0:	6839      	ldr	r1, [r7, #0]
 80176e2:	6938      	ldr	r0, [r7, #16]
 80176e4:	f000 fb46 	bl	8017d74 <xEventGroupSetBitsFromISR>
 80176e8:	4603      	mov	r3, r0
 80176ea:	2b00      	cmp	r3, #0
 80176ec:	d103      	bne.n	80176f6 <osEventFlagsSet+0x52>
 80176ee:	f06f 0302 	mvn.w	r3, #2
 80176f2:	617b      	str	r3, [r7, #20]
 80176f4:	e012      	b.n	801771c <osEventFlagsSet+0x78>
 80176f6:	683b      	ldr	r3, [r7, #0]
 80176f8:	617b      	str	r3, [r7, #20]
 80176fa:	68bb      	ldr	r3, [r7, #8]
 80176fc:	2b00      	cmp	r3, #0
 80176fe:	d00d      	beq.n	801771c <osEventFlagsSet+0x78>
 8017700:	4b09      	ldr	r3, [pc, #36]	; (8017728 <osEventFlagsSet+0x84>)
 8017702:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8017706:	601a      	str	r2, [r3, #0]
 8017708:	f3bf 8f4f 	dsb	sy
 801770c:	f3bf 8f6f 	isb	sy
 8017710:	e004      	b.n	801771c <osEventFlagsSet+0x78>
 8017712:	6839      	ldr	r1, [r7, #0]
 8017714:	6938      	ldr	r0, [r7, #16]
 8017716:	f000 fa65 	bl	8017be4 <xEventGroupSetBits>
 801771a:	6178      	str	r0, [r7, #20]
 801771c:	697b      	ldr	r3, [r7, #20]
 801771e:	4618      	mov	r0, r3
 8017720:	3718      	adds	r7, #24
 8017722:	46bd      	mov	sp, r7
 8017724:	bd80      	pop	{r7, pc}
 8017726:	bf00      	nop
 8017728:	e000ed04 	.word	0xe000ed04

0801772c <osEventFlagsClear>:
 801772c:	b580      	push	{r7, lr}
 801772e:	b086      	sub	sp, #24
 8017730:	af00      	add	r7, sp, #0
 8017732:	6078      	str	r0, [r7, #4]
 8017734:	6039      	str	r1, [r7, #0]
 8017736:	687b      	ldr	r3, [r7, #4]
 8017738:	613b      	str	r3, [r7, #16]
 801773a:	693b      	ldr	r3, [r7, #16]
 801773c:	2b00      	cmp	r3, #0
 801773e:	d004      	beq.n	801774a <osEventFlagsClear+0x1e>
 8017740:	683b      	ldr	r3, [r7, #0]
 8017742:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8017746:	2b00      	cmp	r3, #0
 8017748:	d003      	beq.n	8017752 <osEventFlagsClear+0x26>
 801774a:	f06f 0303 	mvn.w	r3, #3
 801774e:	617b      	str	r3, [r7, #20]
 8017750:	e019      	b.n	8017786 <osEventFlagsClear+0x5a>
 8017752:	f3ef 8305 	mrs	r3, IPSR
 8017756:	60fb      	str	r3, [r7, #12]
 8017758:	68fb      	ldr	r3, [r7, #12]
 801775a:	2b00      	cmp	r3, #0
 801775c:	d00e      	beq.n	801777c <osEventFlagsClear+0x50>
 801775e:	6938      	ldr	r0, [r7, #16]
 8017760:	f000 fa1c 	bl	8017b9c <xEventGroupGetBitsFromISR>
 8017764:	6178      	str	r0, [r7, #20]
 8017766:	6839      	ldr	r1, [r7, #0]
 8017768:	6938      	ldr	r0, [r7, #16]
 801776a:	f000 fa03 	bl	8017b74 <xEventGroupClearBitsFromISR>
 801776e:	4603      	mov	r3, r0
 8017770:	2b00      	cmp	r3, #0
 8017772:	d108      	bne.n	8017786 <osEventFlagsClear+0x5a>
 8017774:	f06f 0302 	mvn.w	r3, #2
 8017778:	617b      	str	r3, [r7, #20]
 801777a:	e004      	b.n	8017786 <osEventFlagsClear+0x5a>
 801777c:	6839      	ldr	r1, [r7, #0]
 801777e:	6938      	ldr	r0, [r7, #16]
 8017780:	f000 f9c0 	bl	8017b04 <xEventGroupClearBits>
 8017784:	6178      	str	r0, [r7, #20]
 8017786:	697b      	ldr	r3, [r7, #20]
 8017788:	4618      	mov	r0, r3
 801778a:	3718      	adds	r7, #24
 801778c:	46bd      	mov	sp, r7
 801778e:	bd80      	pop	{r7, pc}

08017790 <osEventFlagsWait>:
 8017790:	b580      	push	{r7, lr}
 8017792:	b08c      	sub	sp, #48	; 0x30
 8017794:	af02      	add	r7, sp, #8
 8017796:	60f8      	str	r0, [r7, #12]
 8017798:	60b9      	str	r1, [r7, #8]
 801779a:	607a      	str	r2, [r7, #4]
 801779c:	603b      	str	r3, [r7, #0]
 801779e:	68fb      	ldr	r3, [r7, #12]
 80177a0:	61bb      	str	r3, [r7, #24]
 80177a2:	69bb      	ldr	r3, [r7, #24]
 80177a4:	2b00      	cmp	r3, #0
 80177a6:	d004      	beq.n	80177b2 <osEventFlagsWait+0x22>
 80177a8:	68bb      	ldr	r3, [r7, #8]
 80177aa:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80177ae:	2b00      	cmp	r3, #0
 80177b0:	d003      	beq.n	80177ba <osEventFlagsWait+0x2a>
 80177b2:	f06f 0303 	mvn.w	r3, #3
 80177b6:	61fb      	str	r3, [r7, #28]
 80177b8:	e04b      	b.n	8017852 <osEventFlagsWait+0xc2>
 80177ba:	f3ef 8305 	mrs	r3, IPSR
 80177be:	617b      	str	r3, [r7, #20]
 80177c0:	697b      	ldr	r3, [r7, #20]
 80177c2:	2b00      	cmp	r3, #0
 80177c4:	d003      	beq.n	80177ce <osEventFlagsWait+0x3e>
 80177c6:	f06f 0305 	mvn.w	r3, #5
 80177ca:	61fb      	str	r3, [r7, #28]
 80177cc:	e041      	b.n	8017852 <osEventFlagsWait+0xc2>
 80177ce:	687b      	ldr	r3, [r7, #4]
 80177d0:	f003 0301 	and.w	r3, r3, #1
 80177d4:	2b00      	cmp	r3, #0
 80177d6:	d002      	beq.n	80177de <osEventFlagsWait+0x4e>
 80177d8:	2301      	movs	r3, #1
 80177da:	627b      	str	r3, [r7, #36]	; 0x24
 80177dc:	e001      	b.n	80177e2 <osEventFlagsWait+0x52>
 80177de:	2300      	movs	r3, #0
 80177e0:	627b      	str	r3, [r7, #36]	; 0x24
 80177e2:	687b      	ldr	r3, [r7, #4]
 80177e4:	f003 0302 	and.w	r3, r3, #2
 80177e8:	2b00      	cmp	r3, #0
 80177ea:	d002      	beq.n	80177f2 <osEventFlagsWait+0x62>
 80177ec:	2300      	movs	r3, #0
 80177ee:	623b      	str	r3, [r7, #32]
 80177f0:	e001      	b.n	80177f6 <osEventFlagsWait+0x66>
 80177f2:	2301      	movs	r3, #1
 80177f4:	623b      	str	r3, [r7, #32]
 80177f6:	683b      	ldr	r3, [r7, #0]
 80177f8:	9300      	str	r3, [sp, #0]
 80177fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80177fc:	6a3a      	ldr	r2, [r7, #32]
 80177fe:	68b9      	ldr	r1, [r7, #8]
 8017800:	69b8      	ldr	r0, [r7, #24]
 8017802:	f000 f8b1 	bl	8017968 <xEventGroupWaitBits>
 8017806:	61f8      	str	r0, [r7, #28]
 8017808:	687b      	ldr	r3, [r7, #4]
 801780a:	f003 0301 	and.w	r3, r3, #1
 801780e:	2b00      	cmp	r3, #0
 8017810:	d010      	beq.n	8017834 <osEventFlagsWait+0xa4>
 8017812:	68ba      	ldr	r2, [r7, #8]
 8017814:	69fb      	ldr	r3, [r7, #28]
 8017816:	4013      	ands	r3, r2
 8017818:	68ba      	ldr	r2, [r7, #8]
 801781a:	429a      	cmp	r2, r3
 801781c:	d019      	beq.n	8017852 <osEventFlagsWait+0xc2>
 801781e:	683b      	ldr	r3, [r7, #0]
 8017820:	2b00      	cmp	r3, #0
 8017822:	d003      	beq.n	801782c <osEventFlagsWait+0x9c>
 8017824:	f06f 0301 	mvn.w	r3, #1
 8017828:	61fb      	str	r3, [r7, #28]
 801782a:	e012      	b.n	8017852 <osEventFlagsWait+0xc2>
 801782c:	f06f 0302 	mvn.w	r3, #2
 8017830:	61fb      	str	r3, [r7, #28]
 8017832:	e00e      	b.n	8017852 <osEventFlagsWait+0xc2>
 8017834:	68ba      	ldr	r2, [r7, #8]
 8017836:	69fb      	ldr	r3, [r7, #28]
 8017838:	4013      	ands	r3, r2
 801783a:	2b00      	cmp	r3, #0
 801783c:	d109      	bne.n	8017852 <osEventFlagsWait+0xc2>
 801783e:	683b      	ldr	r3, [r7, #0]
 8017840:	2b00      	cmp	r3, #0
 8017842:	d003      	beq.n	801784c <osEventFlagsWait+0xbc>
 8017844:	f06f 0301 	mvn.w	r3, #1
 8017848:	61fb      	str	r3, [r7, #28]
 801784a:	e002      	b.n	8017852 <osEventFlagsWait+0xc2>
 801784c:	f06f 0302 	mvn.w	r3, #2
 8017850:	61fb      	str	r3, [r7, #28]
 8017852:	69fb      	ldr	r3, [r7, #28]
 8017854:	4618      	mov	r0, r3
 8017856:	3728      	adds	r7, #40	; 0x28
 8017858:	46bd      	mov	sp, r7
 801785a:	bd80      	pop	{r7, pc}

0801785c <vApplicationGetIdleTaskMemory>:
 801785c:	b480      	push	{r7}
 801785e:	b085      	sub	sp, #20
 8017860:	af00      	add	r7, sp, #0
 8017862:	60f8      	str	r0, [r7, #12]
 8017864:	60b9      	str	r1, [r7, #8]
 8017866:	607a      	str	r2, [r7, #4]
 8017868:	68fb      	ldr	r3, [r7, #12]
 801786a:	4a07      	ldr	r2, [pc, #28]	; (8017888 <vApplicationGetIdleTaskMemory+0x2c>)
 801786c:	601a      	str	r2, [r3, #0]
 801786e:	68bb      	ldr	r3, [r7, #8]
 8017870:	4a06      	ldr	r2, [pc, #24]	; (801788c <vApplicationGetIdleTaskMemory+0x30>)
 8017872:	601a      	str	r2, [r3, #0]
 8017874:	687b      	ldr	r3, [r7, #4]
 8017876:	2280      	movs	r2, #128	; 0x80
 8017878:	601a      	str	r2, [r3, #0]
 801787a:	bf00      	nop
 801787c:	3714      	adds	r7, #20
 801787e:	46bd      	mov	sp, r7
 8017880:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017884:	4770      	bx	lr
 8017886:	bf00      	nop
 8017888:	2400208c 	.word	0x2400208c
 801788c:	240020e8 	.word	0x240020e8

08017890 <vApplicationGetTimerTaskMemory>:
 8017890:	b480      	push	{r7}
 8017892:	b085      	sub	sp, #20
 8017894:	af00      	add	r7, sp, #0
 8017896:	60f8      	str	r0, [r7, #12]
 8017898:	60b9      	str	r1, [r7, #8]
 801789a:	607a      	str	r2, [r7, #4]
 801789c:	68fb      	ldr	r3, [r7, #12]
 801789e:	4a07      	ldr	r2, [pc, #28]	; (80178bc <vApplicationGetTimerTaskMemory+0x2c>)
 80178a0:	601a      	str	r2, [r3, #0]
 80178a2:	68bb      	ldr	r3, [r7, #8]
 80178a4:	4a06      	ldr	r2, [pc, #24]	; (80178c0 <vApplicationGetTimerTaskMemory+0x30>)
 80178a6:	601a      	str	r2, [r3, #0]
 80178a8:	687b      	ldr	r3, [r7, #4]
 80178aa:	f44f 7280 	mov.w	r2, #256	; 0x100
 80178ae:	601a      	str	r2, [r3, #0]
 80178b0:	bf00      	nop
 80178b2:	3714      	adds	r7, #20
 80178b4:	46bd      	mov	sp, r7
 80178b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80178ba:	4770      	bx	lr
 80178bc:	240022e8 	.word	0x240022e8
 80178c0:	24002344 	.word	0x24002344

080178c4 <xEventGroupCreateStatic>:
 80178c4:	b580      	push	{r7, lr}
 80178c6:	b086      	sub	sp, #24
 80178c8:	af00      	add	r7, sp, #0
 80178ca:	6078      	str	r0, [r7, #4]
 80178cc:	687b      	ldr	r3, [r7, #4]
 80178ce:	2b00      	cmp	r3, #0
 80178d0:	d10a      	bne.n	80178e8 <xEventGroupCreateStatic+0x24>
 80178d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80178d6:	f383 8811 	msr	BASEPRI, r3
 80178da:	f3bf 8f6f 	isb	sy
 80178de:	f3bf 8f4f 	dsb	sy
 80178e2:	613b      	str	r3, [r7, #16]
 80178e4:	bf00      	nop
 80178e6:	e7fe      	b.n	80178e6 <xEventGroupCreateStatic+0x22>
 80178e8:	2320      	movs	r3, #32
 80178ea:	60bb      	str	r3, [r7, #8]
 80178ec:	68bb      	ldr	r3, [r7, #8]
 80178ee:	2b20      	cmp	r3, #32
 80178f0:	d00a      	beq.n	8017908 <xEventGroupCreateStatic+0x44>
 80178f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80178f6:	f383 8811 	msr	BASEPRI, r3
 80178fa:	f3bf 8f6f 	isb	sy
 80178fe:	f3bf 8f4f 	dsb	sy
 8017902:	60fb      	str	r3, [r7, #12]
 8017904:	bf00      	nop
 8017906:	e7fe      	b.n	8017906 <xEventGroupCreateStatic+0x42>
 8017908:	687b      	ldr	r3, [r7, #4]
 801790a:	617b      	str	r3, [r7, #20]
 801790c:	697b      	ldr	r3, [r7, #20]
 801790e:	2b00      	cmp	r3, #0
 8017910:	d00a      	beq.n	8017928 <xEventGroupCreateStatic+0x64>
 8017912:	697b      	ldr	r3, [r7, #20]
 8017914:	2200      	movs	r2, #0
 8017916:	601a      	str	r2, [r3, #0]
 8017918:	697b      	ldr	r3, [r7, #20]
 801791a:	3304      	adds	r3, #4
 801791c:	4618      	mov	r0, r3
 801791e:	f000 fa3d 	bl	8017d9c <vListInitialise>
 8017922:	697b      	ldr	r3, [r7, #20]
 8017924:	2201      	movs	r2, #1
 8017926:	771a      	strb	r2, [r3, #28]
 8017928:	697b      	ldr	r3, [r7, #20]
 801792a:	4618      	mov	r0, r3
 801792c:	3718      	adds	r7, #24
 801792e:	46bd      	mov	sp, r7
 8017930:	bd80      	pop	{r7, pc}

08017932 <xEventGroupCreate>:
 8017932:	b580      	push	{r7, lr}
 8017934:	b082      	sub	sp, #8
 8017936:	af00      	add	r7, sp, #0
 8017938:	2020      	movs	r0, #32
 801793a:	f002 fe5d 	bl	801a5f8 <pvPortMalloc>
 801793e:	6078      	str	r0, [r7, #4]
 8017940:	687b      	ldr	r3, [r7, #4]
 8017942:	2b00      	cmp	r3, #0
 8017944:	d00a      	beq.n	801795c <xEventGroupCreate+0x2a>
 8017946:	687b      	ldr	r3, [r7, #4]
 8017948:	2200      	movs	r2, #0
 801794a:	601a      	str	r2, [r3, #0]
 801794c:	687b      	ldr	r3, [r7, #4]
 801794e:	3304      	adds	r3, #4
 8017950:	4618      	mov	r0, r3
 8017952:	f000 fa23 	bl	8017d9c <vListInitialise>
 8017956:	687b      	ldr	r3, [r7, #4]
 8017958:	2200      	movs	r2, #0
 801795a:	771a      	strb	r2, [r3, #28]
 801795c:	687b      	ldr	r3, [r7, #4]
 801795e:	4618      	mov	r0, r3
 8017960:	3708      	adds	r7, #8
 8017962:	46bd      	mov	sp, r7
 8017964:	bd80      	pop	{r7, pc}
	...

08017968 <xEventGroupWaitBits>:
 8017968:	b580      	push	{r7, lr}
 801796a:	b090      	sub	sp, #64	; 0x40
 801796c:	af00      	add	r7, sp, #0
 801796e:	60f8      	str	r0, [r7, #12]
 8017970:	60b9      	str	r1, [r7, #8]
 8017972:	607a      	str	r2, [r7, #4]
 8017974:	603b      	str	r3, [r7, #0]
 8017976:	68fb      	ldr	r3, [r7, #12]
 8017978:	637b      	str	r3, [r7, #52]	; 0x34
 801797a:	2300      	movs	r3, #0
 801797c:	63bb      	str	r3, [r7, #56]	; 0x38
 801797e:	2300      	movs	r3, #0
 8017980:	633b      	str	r3, [r7, #48]	; 0x30
 8017982:	68fb      	ldr	r3, [r7, #12]
 8017984:	2b00      	cmp	r3, #0
 8017986:	d10a      	bne.n	801799e <xEventGroupWaitBits+0x36>
 8017988:	f04f 0350 	mov.w	r3, #80	; 0x50
 801798c:	f383 8811 	msr	BASEPRI, r3
 8017990:	f3bf 8f6f 	isb	sy
 8017994:	f3bf 8f4f 	dsb	sy
 8017998:	623b      	str	r3, [r7, #32]
 801799a:	bf00      	nop
 801799c:	e7fe      	b.n	801799c <xEventGroupWaitBits+0x34>
 801799e:	68bb      	ldr	r3, [r7, #8]
 80179a0:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80179a4:	2b00      	cmp	r3, #0
 80179a6:	d00a      	beq.n	80179be <xEventGroupWaitBits+0x56>
 80179a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80179ac:	f383 8811 	msr	BASEPRI, r3
 80179b0:	f3bf 8f6f 	isb	sy
 80179b4:	f3bf 8f4f 	dsb	sy
 80179b8:	61fb      	str	r3, [r7, #28]
 80179ba:	bf00      	nop
 80179bc:	e7fe      	b.n	80179bc <xEventGroupWaitBits+0x54>
 80179be:	68bb      	ldr	r3, [r7, #8]
 80179c0:	2b00      	cmp	r3, #0
 80179c2:	d10a      	bne.n	80179da <xEventGroupWaitBits+0x72>
 80179c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80179c8:	f383 8811 	msr	BASEPRI, r3
 80179cc:	f3bf 8f6f 	isb	sy
 80179d0:	f3bf 8f4f 	dsb	sy
 80179d4:	61bb      	str	r3, [r7, #24]
 80179d6:	bf00      	nop
 80179d8:	e7fe      	b.n	80179d8 <xEventGroupWaitBits+0x70>
 80179da:	f001 ff57 	bl	801988c <xTaskGetSchedulerState>
 80179de:	4603      	mov	r3, r0
 80179e0:	2b00      	cmp	r3, #0
 80179e2:	d102      	bne.n	80179ea <xEventGroupWaitBits+0x82>
 80179e4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80179e6:	2b00      	cmp	r3, #0
 80179e8:	d101      	bne.n	80179ee <xEventGroupWaitBits+0x86>
 80179ea:	2301      	movs	r3, #1
 80179ec:	e000      	b.n	80179f0 <xEventGroupWaitBits+0x88>
 80179ee:	2300      	movs	r3, #0
 80179f0:	2b00      	cmp	r3, #0
 80179f2:	d10a      	bne.n	8017a0a <xEventGroupWaitBits+0xa2>
 80179f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80179f8:	f383 8811 	msr	BASEPRI, r3
 80179fc:	f3bf 8f6f 	isb	sy
 8017a00:	f3bf 8f4f 	dsb	sy
 8017a04:	617b      	str	r3, [r7, #20]
 8017a06:	bf00      	nop
 8017a08:	e7fe      	b.n	8017a08 <xEventGroupWaitBits+0xa0>
 8017a0a:	f001 faa9 	bl	8018f60 <vTaskSuspendAll>
 8017a0e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017a10:	681b      	ldr	r3, [r3, #0]
 8017a12:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017a14:	683a      	ldr	r2, [r7, #0]
 8017a16:	68b9      	ldr	r1, [r7, #8]
 8017a18:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8017a1a:	f000 f988 	bl	8017d2e <prvTestWaitCondition>
 8017a1e:	62b8      	str	r0, [r7, #40]	; 0x28
 8017a20:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017a22:	2b00      	cmp	r3, #0
 8017a24:	d00e      	beq.n	8017a44 <xEventGroupWaitBits+0xdc>
 8017a26:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017a28:	63fb      	str	r3, [r7, #60]	; 0x3c
 8017a2a:	2300      	movs	r3, #0
 8017a2c:	64bb      	str	r3, [r7, #72]	; 0x48
 8017a2e:	687b      	ldr	r3, [r7, #4]
 8017a30:	2b00      	cmp	r3, #0
 8017a32:	d028      	beq.n	8017a86 <xEventGroupWaitBits+0x11e>
 8017a34:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017a36:	681a      	ldr	r2, [r3, #0]
 8017a38:	68bb      	ldr	r3, [r7, #8]
 8017a3a:	43db      	mvns	r3, r3
 8017a3c:	401a      	ands	r2, r3
 8017a3e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017a40:	601a      	str	r2, [r3, #0]
 8017a42:	e020      	b.n	8017a86 <xEventGroupWaitBits+0x11e>
 8017a44:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8017a46:	2b00      	cmp	r3, #0
 8017a48:	d104      	bne.n	8017a54 <xEventGroupWaitBits+0xec>
 8017a4a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017a4c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8017a4e:	2301      	movs	r3, #1
 8017a50:	633b      	str	r3, [r7, #48]	; 0x30
 8017a52:	e018      	b.n	8017a86 <xEventGroupWaitBits+0x11e>
 8017a54:	687b      	ldr	r3, [r7, #4]
 8017a56:	2b00      	cmp	r3, #0
 8017a58:	d003      	beq.n	8017a62 <xEventGroupWaitBits+0xfa>
 8017a5a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8017a5c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8017a60:	63bb      	str	r3, [r7, #56]	; 0x38
 8017a62:	683b      	ldr	r3, [r7, #0]
 8017a64:	2b00      	cmp	r3, #0
 8017a66:	d003      	beq.n	8017a70 <xEventGroupWaitBits+0x108>
 8017a68:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8017a6a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8017a6e:	63bb      	str	r3, [r7, #56]	; 0x38
 8017a70:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017a72:	1d18      	adds	r0, r3, #4
 8017a74:	68ba      	ldr	r2, [r7, #8]
 8017a76:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8017a78:	4313      	orrs	r3, r2
 8017a7a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8017a7c:	4619      	mov	r1, r3
 8017a7e:	f001 fc7d 	bl	801937c <vTaskPlaceOnUnorderedEventList>
 8017a82:	2300      	movs	r3, #0
 8017a84:	63fb      	str	r3, [r7, #60]	; 0x3c
 8017a86:	f001 fa79 	bl	8018f7c <xTaskResumeAll>
 8017a8a:	6278      	str	r0, [r7, #36]	; 0x24
 8017a8c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8017a8e:	2b00      	cmp	r3, #0
 8017a90:	d031      	beq.n	8017af6 <xEventGroupWaitBits+0x18e>
 8017a92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8017a94:	2b00      	cmp	r3, #0
 8017a96:	d107      	bne.n	8017aa8 <xEventGroupWaitBits+0x140>
 8017a98:	4b19      	ldr	r3, [pc, #100]	; (8017b00 <xEventGroupWaitBits+0x198>)
 8017a9a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8017a9e:	601a      	str	r2, [r3, #0]
 8017aa0:	f3bf 8f4f 	dsb	sy
 8017aa4:	f3bf 8f6f 	isb	sy
 8017aa8:	f001 ff7c 	bl	80199a4 <uxTaskResetEventItemValue>
 8017aac:	63f8      	str	r0, [r7, #60]	; 0x3c
 8017aae:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8017ab0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8017ab4:	2b00      	cmp	r3, #0
 8017ab6:	d11a      	bne.n	8017aee <xEventGroupWaitBits+0x186>
 8017ab8:	f002 fc7c 	bl	801a3b4 <vPortEnterCritical>
 8017abc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017abe:	681b      	ldr	r3, [r3, #0]
 8017ac0:	63fb      	str	r3, [r7, #60]	; 0x3c
 8017ac2:	683a      	ldr	r2, [r7, #0]
 8017ac4:	68b9      	ldr	r1, [r7, #8]
 8017ac6:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8017ac8:	f000 f931 	bl	8017d2e <prvTestWaitCondition>
 8017acc:	4603      	mov	r3, r0
 8017ace:	2b00      	cmp	r3, #0
 8017ad0:	d009      	beq.n	8017ae6 <xEventGroupWaitBits+0x17e>
 8017ad2:	687b      	ldr	r3, [r7, #4]
 8017ad4:	2b00      	cmp	r3, #0
 8017ad6:	d006      	beq.n	8017ae6 <xEventGroupWaitBits+0x17e>
 8017ad8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017ada:	681a      	ldr	r2, [r3, #0]
 8017adc:	68bb      	ldr	r3, [r7, #8]
 8017ade:	43db      	mvns	r3, r3
 8017ae0:	401a      	ands	r2, r3
 8017ae2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017ae4:	601a      	str	r2, [r3, #0]
 8017ae6:	2301      	movs	r3, #1
 8017ae8:	633b      	str	r3, [r7, #48]	; 0x30
 8017aea:	f002 fc93 	bl	801a414 <vPortExitCritical>
 8017aee:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8017af0:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8017af4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8017af6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8017af8:	4618      	mov	r0, r3
 8017afa:	3740      	adds	r7, #64	; 0x40
 8017afc:	46bd      	mov	sp, r7
 8017afe:	bd80      	pop	{r7, pc}
 8017b00:	e000ed04 	.word	0xe000ed04

08017b04 <xEventGroupClearBits>:
 8017b04:	b580      	push	{r7, lr}
 8017b06:	b086      	sub	sp, #24
 8017b08:	af00      	add	r7, sp, #0
 8017b0a:	6078      	str	r0, [r7, #4]
 8017b0c:	6039      	str	r1, [r7, #0]
 8017b0e:	687b      	ldr	r3, [r7, #4]
 8017b10:	617b      	str	r3, [r7, #20]
 8017b12:	687b      	ldr	r3, [r7, #4]
 8017b14:	2b00      	cmp	r3, #0
 8017b16:	d10a      	bne.n	8017b2e <xEventGroupClearBits+0x2a>
 8017b18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017b1c:	f383 8811 	msr	BASEPRI, r3
 8017b20:	f3bf 8f6f 	isb	sy
 8017b24:	f3bf 8f4f 	dsb	sy
 8017b28:	60fb      	str	r3, [r7, #12]
 8017b2a:	bf00      	nop
 8017b2c:	e7fe      	b.n	8017b2c <xEventGroupClearBits+0x28>
 8017b2e:	683b      	ldr	r3, [r7, #0]
 8017b30:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8017b34:	2b00      	cmp	r3, #0
 8017b36:	d00a      	beq.n	8017b4e <xEventGroupClearBits+0x4a>
 8017b38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017b3c:	f383 8811 	msr	BASEPRI, r3
 8017b40:	f3bf 8f6f 	isb	sy
 8017b44:	f3bf 8f4f 	dsb	sy
 8017b48:	60bb      	str	r3, [r7, #8]
 8017b4a:	bf00      	nop
 8017b4c:	e7fe      	b.n	8017b4c <xEventGroupClearBits+0x48>
 8017b4e:	f002 fc31 	bl	801a3b4 <vPortEnterCritical>
 8017b52:	697b      	ldr	r3, [r7, #20]
 8017b54:	681b      	ldr	r3, [r3, #0]
 8017b56:	613b      	str	r3, [r7, #16]
 8017b58:	697b      	ldr	r3, [r7, #20]
 8017b5a:	681a      	ldr	r2, [r3, #0]
 8017b5c:	683b      	ldr	r3, [r7, #0]
 8017b5e:	43db      	mvns	r3, r3
 8017b60:	401a      	ands	r2, r3
 8017b62:	697b      	ldr	r3, [r7, #20]
 8017b64:	601a      	str	r2, [r3, #0]
 8017b66:	f002 fc55 	bl	801a414 <vPortExitCritical>
 8017b6a:	693b      	ldr	r3, [r7, #16]
 8017b6c:	4618      	mov	r0, r3
 8017b6e:	3718      	adds	r7, #24
 8017b70:	46bd      	mov	sp, r7
 8017b72:	bd80      	pop	{r7, pc}

08017b74 <xEventGroupClearBitsFromISR>:
 8017b74:	b580      	push	{r7, lr}
 8017b76:	b084      	sub	sp, #16
 8017b78:	af00      	add	r7, sp, #0
 8017b7a:	6078      	str	r0, [r7, #4]
 8017b7c:	6039      	str	r1, [r7, #0]
 8017b7e:	2300      	movs	r3, #0
 8017b80:	683a      	ldr	r2, [r7, #0]
 8017b82:	6879      	ldr	r1, [r7, #4]
 8017b84:	4804      	ldr	r0, [pc, #16]	; (8017b98 <xEventGroupClearBitsFromISR+0x24>)
 8017b86:	f002 fac7 	bl	801a118 <xTimerPendFunctionCallFromISR>
 8017b8a:	60f8      	str	r0, [r7, #12]
 8017b8c:	68fb      	ldr	r3, [r7, #12]
 8017b8e:	4618      	mov	r0, r3
 8017b90:	3710      	adds	r7, #16
 8017b92:	46bd      	mov	sp, r7
 8017b94:	bd80      	pop	{r7, pc}
 8017b96:	bf00      	nop
 8017b98:	08017d15 	.word	0x08017d15

08017b9c <xEventGroupGetBitsFromISR>:
 8017b9c:	b480      	push	{r7}
 8017b9e:	b089      	sub	sp, #36	; 0x24
 8017ba0:	af00      	add	r7, sp, #0
 8017ba2:	6078      	str	r0, [r7, #4]
 8017ba4:	687b      	ldr	r3, [r7, #4]
 8017ba6:	61fb      	str	r3, [r7, #28]
 8017ba8:	f3ef 8211 	mrs	r2, BASEPRI
 8017bac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017bb0:	f383 8811 	msr	BASEPRI, r3
 8017bb4:	f3bf 8f6f 	isb	sy
 8017bb8:	f3bf 8f4f 	dsb	sy
 8017bbc:	60fa      	str	r2, [r7, #12]
 8017bbe:	60bb      	str	r3, [r7, #8]
 8017bc0:	68fb      	ldr	r3, [r7, #12]
 8017bc2:	61bb      	str	r3, [r7, #24]
 8017bc4:	69fb      	ldr	r3, [r7, #28]
 8017bc6:	681b      	ldr	r3, [r3, #0]
 8017bc8:	617b      	str	r3, [r7, #20]
 8017bca:	69bb      	ldr	r3, [r7, #24]
 8017bcc:	613b      	str	r3, [r7, #16]
 8017bce:	693b      	ldr	r3, [r7, #16]
 8017bd0:	f383 8811 	msr	BASEPRI, r3
 8017bd4:	bf00      	nop
 8017bd6:	697b      	ldr	r3, [r7, #20]
 8017bd8:	4618      	mov	r0, r3
 8017bda:	3724      	adds	r7, #36	; 0x24
 8017bdc:	46bd      	mov	sp, r7
 8017bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017be2:	4770      	bx	lr

08017be4 <xEventGroupSetBits>:
 8017be4:	b580      	push	{r7, lr}
 8017be6:	b08e      	sub	sp, #56	; 0x38
 8017be8:	af00      	add	r7, sp, #0
 8017bea:	6078      	str	r0, [r7, #4]
 8017bec:	6039      	str	r1, [r7, #0]
 8017bee:	2300      	movs	r3, #0
 8017bf0:	633b      	str	r3, [r7, #48]	; 0x30
 8017bf2:	687b      	ldr	r3, [r7, #4]
 8017bf4:	62bb      	str	r3, [r7, #40]	; 0x28
 8017bf6:	2300      	movs	r3, #0
 8017bf8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017bfa:	687b      	ldr	r3, [r7, #4]
 8017bfc:	2b00      	cmp	r3, #0
 8017bfe:	d10a      	bne.n	8017c16 <xEventGroupSetBits+0x32>
 8017c00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017c04:	f383 8811 	msr	BASEPRI, r3
 8017c08:	f3bf 8f6f 	isb	sy
 8017c0c:	f3bf 8f4f 	dsb	sy
 8017c10:	613b      	str	r3, [r7, #16]
 8017c12:	bf00      	nop
 8017c14:	e7fe      	b.n	8017c14 <xEventGroupSetBits+0x30>
 8017c16:	683b      	ldr	r3, [r7, #0]
 8017c18:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8017c1c:	2b00      	cmp	r3, #0
 8017c1e:	d00a      	beq.n	8017c36 <xEventGroupSetBits+0x52>
 8017c20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017c24:	f383 8811 	msr	BASEPRI, r3
 8017c28:	f3bf 8f6f 	isb	sy
 8017c2c:	f3bf 8f4f 	dsb	sy
 8017c30:	60fb      	str	r3, [r7, #12]
 8017c32:	bf00      	nop
 8017c34:	e7fe      	b.n	8017c34 <xEventGroupSetBits+0x50>
 8017c36:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017c38:	3304      	adds	r3, #4
 8017c3a:	627b      	str	r3, [r7, #36]	; 0x24
 8017c3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8017c3e:	3308      	adds	r3, #8
 8017c40:	623b      	str	r3, [r7, #32]
 8017c42:	f001 f98d 	bl	8018f60 <vTaskSuspendAll>
 8017c46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8017c48:	68db      	ldr	r3, [r3, #12]
 8017c4a:	637b      	str	r3, [r7, #52]	; 0x34
 8017c4c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017c4e:	681a      	ldr	r2, [r3, #0]
 8017c50:	683b      	ldr	r3, [r7, #0]
 8017c52:	431a      	orrs	r2, r3
 8017c54:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017c56:	601a      	str	r2, [r3, #0]
 8017c58:	e03c      	b.n	8017cd4 <xEventGroupSetBits+0xf0>
 8017c5a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017c5c:	685b      	ldr	r3, [r3, #4]
 8017c5e:	61fb      	str	r3, [r7, #28]
 8017c60:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017c62:	681b      	ldr	r3, [r3, #0]
 8017c64:	61bb      	str	r3, [r7, #24]
 8017c66:	2300      	movs	r3, #0
 8017c68:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017c6a:	69bb      	ldr	r3, [r7, #24]
 8017c6c:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8017c70:	617b      	str	r3, [r7, #20]
 8017c72:	69bb      	ldr	r3, [r7, #24]
 8017c74:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8017c78:	61bb      	str	r3, [r7, #24]
 8017c7a:	697b      	ldr	r3, [r7, #20]
 8017c7c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8017c80:	2b00      	cmp	r3, #0
 8017c82:	d108      	bne.n	8017c96 <xEventGroupSetBits+0xb2>
 8017c84:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017c86:	681a      	ldr	r2, [r3, #0]
 8017c88:	69bb      	ldr	r3, [r7, #24]
 8017c8a:	4013      	ands	r3, r2
 8017c8c:	2b00      	cmp	r3, #0
 8017c8e:	d00b      	beq.n	8017ca8 <xEventGroupSetBits+0xc4>
 8017c90:	2301      	movs	r3, #1
 8017c92:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017c94:	e008      	b.n	8017ca8 <xEventGroupSetBits+0xc4>
 8017c96:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017c98:	681a      	ldr	r2, [r3, #0]
 8017c9a:	69bb      	ldr	r3, [r7, #24]
 8017c9c:	4013      	ands	r3, r2
 8017c9e:	69ba      	ldr	r2, [r7, #24]
 8017ca0:	429a      	cmp	r2, r3
 8017ca2:	d101      	bne.n	8017ca8 <xEventGroupSetBits+0xc4>
 8017ca4:	2301      	movs	r3, #1
 8017ca6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017ca8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017caa:	2b00      	cmp	r3, #0
 8017cac:	d010      	beq.n	8017cd0 <xEventGroupSetBits+0xec>
 8017cae:	697b      	ldr	r3, [r7, #20]
 8017cb0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8017cb4:	2b00      	cmp	r3, #0
 8017cb6:	d003      	beq.n	8017cc0 <xEventGroupSetBits+0xdc>
 8017cb8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8017cba:	69bb      	ldr	r3, [r7, #24]
 8017cbc:	4313      	orrs	r3, r2
 8017cbe:	633b      	str	r3, [r7, #48]	; 0x30
 8017cc0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017cc2:	681b      	ldr	r3, [r3, #0]
 8017cc4:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8017cc8:	4619      	mov	r1, r3
 8017cca:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8017ccc:	f001 fc22 	bl	8019514 <vTaskRemoveFromUnorderedEventList>
 8017cd0:	69fb      	ldr	r3, [r7, #28]
 8017cd2:	637b      	str	r3, [r7, #52]	; 0x34
 8017cd4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8017cd6:	6a3b      	ldr	r3, [r7, #32]
 8017cd8:	429a      	cmp	r2, r3
 8017cda:	d1be      	bne.n	8017c5a <xEventGroupSetBits+0x76>
 8017cdc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017cde:	681a      	ldr	r2, [r3, #0]
 8017ce0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017ce2:	43db      	mvns	r3, r3
 8017ce4:	401a      	ands	r2, r3
 8017ce6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017ce8:	601a      	str	r2, [r3, #0]
 8017cea:	f001 f947 	bl	8018f7c <xTaskResumeAll>
 8017cee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017cf0:	681b      	ldr	r3, [r3, #0]
 8017cf2:	4618      	mov	r0, r3
 8017cf4:	3738      	adds	r7, #56	; 0x38
 8017cf6:	46bd      	mov	sp, r7
 8017cf8:	bd80      	pop	{r7, pc}

08017cfa <vEventGroupSetBitsCallback>:
 8017cfa:	b580      	push	{r7, lr}
 8017cfc:	b082      	sub	sp, #8
 8017cfe:	af00      	add	r7, sp, #0
 8017d00:	6078      	str	r0, [r7, #4]
 8017d02:	6039      	str	r1, [r7, #0]
 8017d04:	6839      	ldr	r1, [r7, #0]
 8017d06:	6878      	ldr	r0, [r7, #4]
 8017d08:	f7ff ff6c 	bl	8017be4 <xEventGroupSetBits>
 8017d0c:	bf00      	nop
 8017d0e:	3708      	adds	r7, #8
 8017d10:	46bd      	mov	sp, r7
 8017d12:	bd80      	pop	{r7, pc}

08017d14 <vEventGroupClearBitsCallback>:
 8017d14:	b580      	push	{r7, lr}
 8017d16:	b082      	sub	sp, #8
 8017d18:	af00      	add	r7, sp, #0
 8017d1a:	6078      	str	r0, [r7, #4]
 8017d1c:	6039      	str	r1, [r7, #0]
 8017d1e:	6839      	ldr	r1, [r7, #0]
 8017d20:	6878      	ldr	r0, [r7, #4]
 8017d22:	f7ff feef 	bl	8017b04 <xEventGroupClearBits>
 8017d26:	bf00      	nop
 8017d28:	3708      	adds	r7, #8
 8017d2a:	46bd      	mov	sp, r7
 8017d2c:	bd80      	pop	{r7, pc}

08017d2e <prvTestWaitCondition>:
 8017d2e:	b480      	push	{r7}
 8017d30:	b087      	sub	sp, #28
 8017d32:	af00      	add	r7, sp, #0
 8017d34:	60f8      	str	r0, [r7, #12]
 8017d36:	60b9      	str	r1, [r7, #8]
 8017d38:	607a      	str	r2, [r7, #4]
 8017d3a:	2300      	movs	r3, #0
 8017d3c:	617b      	str	r3, [r7, #20]
 8017d3e:	687b      	ldr	r3, [r7, #4]
 8017d40:	2b00      	cmp	r3, #0
 8017d42:	d107      	bne.n	8017d54 <prvTestWaitCondition+0x26>
 8017d44:	68fa      	ldr	r2, [r7, #12]
 8017d46:	68bb      	ldr	r3, [r7, #8]
 8017d48:	4013      	ands	r3, r2
 8017d4a:	2b00      	cmp	r3, #0
 8017d4c:	d00a      	beq.n	8017d64 <prvTestWaitCondition+0x36>
 8017d4e:	2301      	movs	r3, #1
 8017d50:	617b      	str	r3, [r7, #20]
 8017d52:	e007      	b.n	8017d64 <prvTestWaitCondition+0x36>
 8017d54:	68fa      	ldr	r2, [r7, #12]
 8017d56:	68bb      	ldr	r3, [r7, #8]
 8017d58:	4013      	ands	r3, r2
 8017d5a:	68ba      	ldr	r2, [r7, #8]
 8017d5c:	429a      	cmp	r2, r3
 8017d5e:	d101      	bne.n	8017d64 <prvTestWaitCondition+0x36>
 8017d60:	2301      	movs	r3, #1
 8017d62:	617b      	str	r3, [r7, #20]
 8017d64:	697b      	ldr	r3, [r7, #20]
 8017d66:	4618      	mov	r0, r3
 8017d68:	371c      	adds	r7, #28
 8017d6a:	46bd      	mov	sp, r7
 8017d6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017d70:	4770      	bx	lr
	...

08017d74 <xEventGroupSetBitsFromISR>:
 8017d74:	b580      	push	{r7, lr}
 8017d76:	b086      	sub	sp, #24
 8017d78:	af00      	add	r7, sp, #0
 8017d7a:	60f8      	str	r0, [r7, #12]
 8017d7c:	60b9      	str	r1, [r7, #8]
 8017d7e:	607a      	str	r2, [r7, #4]
 8017d80:	687b      	ldr	r3, [r7, #4]
 8017d82:	68ba      	ldr	r2, [r7, #8]
 8017d84:	68f9      	ldr	r1, [r7, #12]
 8017d86:	4804      	ldr	r0, [pc, #16]	; (8017d98 <xEventGroupSetBitsFromISR+0x24>)
 8017d88:	f002 f9c6 	bl	801a118 <xTimerPendFunctionCallFromISR>
 8017d8c:	6178      	str	r0, [r7, #20]
 8017d8e:	697b      	ldr	r3, [r7, #20]
 8017d90:	4618      	mov	r0, r3
 8017d92:	3718      	adds	r7, #24
 8017d94:	46bd      	mov	sp, r7
 8017d96:	bd80      	pop	{r7, pc}
 8017d98:	08017cfb 	.word	0x08017cfb

08017d9c <vListInitialise>:
 8017d9c:	b480      	push	{r7}
 8017d9e:	b083      	sub	sp, #12
 8017da0:	af00      	add	r7, sp, #0
 8017da2:	6078      	str	r0, [r7, #4]
 8017da4:	687b      	ldr	r3, [r7, #4]
 8017da6:	f103 0208 	add.w	r2, r3, #8
 8017daa:	687b      	ldr	r3, [r7, #4]
 8017dac:	605a      	str	r2, [r3, #4]
 8017dae:	687b      	ldr	r3, [r7, #4]
 8017db0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8017db4:	609a      	str	r2, [r3, #8]
 8017db6:	687b      	ldr	r3, [r7, #4]
 8017db8:	f103 0208 	add.w	r2, r3, #8
 8017dbc:	687b      	ldr	r3, [r7, #4]
 8017dbe:	60da      	str	r2, [r3, #12]
 8017dc0:	687b      	ldr	r3, [r7, #4]
 8017dc2:	f103 0208 	add.w	r2, r3, #8
 8017dc6:	687b      	ldr	r3, [r7, #4]
 8017dc8:	611a      	str	r2, [r3, #16]
 8017dca:	687b      	ldr	r3, [r7, #4]
 8017dcc:	2200      	movs	r2, #0
 8017dce:	601a      	str	r2, [r3, #0]
 8017dd0:	bf00      	nop
 8017dd2:	370c      	adds	r7, #12
 8017dd4:	46bd      	mov	sp, r7
 8017dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017dda:	4770      	bx	lr

08017ddc <vListInitialiseItem>:
 8017ddc:	b480      	push	{r7}
 8017dde:	b083      	sub	sp, #12
 8017de0:	af00      	add	r7, sp, #0
 8017de2:	6078      	str	r0, [r7, #4]
 8017de4:	687b      	ldr	r3, [r7, #4]
 8017de6:	2200      	movs	r2, #0
 8017de8:	611a      	str	r2, [r3, #16]
 8017dea:	bf00      	nop
 8017dec:	370c      	adds	r7, #12
 8017dee:	46bd      	mov	sp, r7
 8017df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017df4:	4770      	bx	lr

08017df6 <vListInsertEnd>:
 8017df6:	b480      	push	{r7}
 8017df8:	b085      	sub	sp, #20
 8017dfa:	af00      	add	r7, sp, #0
 8017dfc:	6078      	str	r0, [r7, #4]
 8017dfe:	6039      	str	r1, [r7, #0]
 8017e00:	687b      	ldr	r3, [r7, #4]
 8017e02:	685b      	ldr	r3, [r3, #4]
 8017e04:	60fb      	str	r3, [r7, #12]
 8017e06:	683b      	ldr	r3, [r7, #0]
 8017e08:	68fa      	ldr	r2, [r7, #12]
 8017e0a:	605a      	str	r2, [r3, #4]
 8017e0c:	68fb      	ldr	r3, [r7, #12]
 8017e0e:	689a      	ldr	r2, [r3, #8]
 8017e10:	683b      	ldr	r3, [r7, #0]
 8017e12:	609a      	str	r2, [r3, #8]
 8017e14:	68fb      	ldr	r3, [r7, #12]
 8017e16:	689b      	ldr	r3, [r3, #8]
 8017e18:	683a      	ldr	r2, [r7, #0]
 8017e1a:	605a      	str	r2, [r3, #4]
 8017e1c:	68fb      	ldr	r3, [r7, #12]
 8017e1e:	683a      	ldr	r2, [r7, #0]
 8017e20:	609a      	str	r2, [r3, #8]
 8017e22:	683b      	ldr	r3, [r7, #0]
 8017e24:	687a      	ldr	r2, [r7, #4]
 8017e26:	611a      	str	r2, [r3, #16]
 8017e28:	687b      	ldr	r3, [r7, #4]
 8017e2a:	681b      	ldr	r3, [r3, #0]
 8017e2c:	1c5a      	adds	r2, r3, #1
 8017e2e:	687b      	ldr	r3, [r7, #4]
 8017e30:	601a      	str	r2, [r3, #0]
 8017e32:	bf00      	nop
 8017e34:	3714      	adds	r7, #20
 8017e36:	46bd      	mov	sp, r7
 8017e38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017e3c:	4770      	bx	lr

08017e3e <vListInsert>:
 8017e3e:	b480      	push	{r7}
 8017e40:	b085      	sub	sp, #20
 8017e42:	af00      	add	r7, sp, #0
 8017e44:	6078      	str	r0, [r7, #4]
 8017e46:	6039      	str	r1, [r7, #0]
 8017e48:	683b      	ldr	r3, [r7, #0]
 8017e4a:	681b      	ldr	r3, [r3, #0]
 8017e4c:	60bb      	str	r3, [r7, #8]
 8017e4e:	68bb      	ldr	r3, [r7, #8]
 8017e50:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8017e54:	d103      	bne.n	8017e5e <vListInsert+0x20>
 8017e56:	687b      	ldr	r3, [r7, #4]
 8017e58:	691b      	ldr	r3, [r3, #16]
 8017e5a:	60fb      	str	r3, [r7, #12]
 8017e5c:	e00c      	b.n	8017e78 <vListInsert+0x3a>
 8017e5e:	687b      	ldr	r3, [r7, #4]
 8017e60:	3308      	adds	r3, #8
 8017e62:	60fb      	str	r3, [r7, #12]
 8017e64:	e002      	b.n	8017e6c <vListInsert+0x2e>
 8017e66:	68fb      	ldr	r3, [r7, #12]
 8017e68:	685b      	ldr	r3, [r3, #4]
 8017e6a:	60fb      	str	r3, [r7, #12]
 8017e6c:	68fb      	ldr	r3, [r7, #12]
 8017e6e:	685b      	ldr	r3, [r3, #4]
 8017e70:	681b      	ldr	r3, [r3, #0]
 8017e72:	68ba      	ldr	r2, [r7, #8]
 8017e74:	429a      	cmp	r2, r3
 8017e76:	d2f6      	bcs.n	8017e66 <vListInsert+0x28>
 8017e78:	68fb      	ldr	r3, [r7, #12]
 8017e7a:	685a      	ldr	r2, [r3, #4]
 8017e7c:	683b      	ldr	r3, [r7, #0]
 8017e7e:	605a      	str	r2, [r3, #4]
 8017e80:	683b      	ldr	r3, [r7, #0]
 8017e82:	685b      	ldr	r3, [r3, #4]
 8017e84:	683a      	ldr	r2, [r7, #0]
 8017e86:	609a      	str	r2, [r3, #8]
 8017e88:	683b      	ldr	r3, [r7, #0]
 8017e8a:	68fa      	ldr	r2, [r7, #12]
 8017e8c:	609a      	str	r2, [r3, #8]
 8017e8e:	68fb      	ldr	r3, [r7, #12]
 8017e90:	683a      	ldr	r2, [r7, #0]
 8017e92:	605a      	str	r2, [r3, #4]
 8017e94:	683b      	ldr	r3, [r7, #0]
 8017e96:	687a      	ldr	r2, [r7, #4]
 8017e98:	611a      	str	r2, [r3, #16]
 8017e9a:	687b      	ldr	r3, [r7, #4]
 8017e9c:	681b      	ldr	r3, [r3, #0]
 8017e9e:	1c5a      	adds	r2, r3, #1
 8017ea0:	687b      	ldr	r3, [r7, #4]
 8017ea2:	601a      	str	r2, [r3, #0]
 8017ea4:	bf00      	nop
 8017ea6:	3714      	adds	r7, #20
 8017ea8:	46bd      	mov	sp, r7
 8017eaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017eae:	4770      	bx	lr

08017eb0 <uxListRemove>:
 8017eb0:	b480      	push	{r7}
 8017eb2:	b085      	sub	sp, #20
 8017eb4:	af00      	add	r7, sp, #0
 8017eb6:	6078      	str	r0, [r7, #4]
 8017eb8:	687b      	ldr	r3, [r7, #4]
 8017eba:	691b      	ldr	r3, [r3, #16]
 8017ebc:	60fb      	str	r3, [r7, #12]
 8017ebe:	687b      	ldr	r3, [r7, #4]
 8017ec0:	685b      	ldr	r3, [r3, #4]
 8017ec2:	687a      	ldr	r2, [r7, #4]
 8017ec4:	6892      	ldr	r2, [r2, #8]
 8017ec6:	609a      	str	r2, [r3, #8]
 8017ec8:	687b      	ldr	r3, [r7, #4]
 8017eca:	689b      	ldr	r3, [r3, #8]
 8017ecc:	687a      	ldr	r2, [r7, #4]
 8017ece:	6852      	ldr	r2, [r2, #4]
 8017ed0:	605a      	str	r2, [r3, #4]
 8017ed2:	68fb      	ldr	r3, [r7, #12]
 8017ed4:	685b      	ldr	r3, [r3, #4]
 8017ed6:	687a      	ldr	r2, [r7, #4]
 8017ed8:	429a      	cmp	r2, r3
 8017eda:	d103      	bne.n	8017ee4 <uxListRemove+0x34>
 8017edc:	687b      	ldr	r3, [r7, #4]
 8017ede:	689a      	ldr	r2, [r3, #8]
 8017ee0:	68fb      	ldr	r3, [r7, #12]
 8017ee2:	605a      	str	r2, [r3, #4]
 8017ee4:	687b      	ldr	r3, [r7, #4]
 8017ee6:	2200      	movs	r2, #0
 8017ee8:	611a      	str	r2, [r3, #16]
 8017eea:	68fb      	ldr	r3, [r7, #12]
 8017eec:	681b      	ldr	r3, [r3, #0]
 8017eee:	1e5a      	subs	r2, r3, #1
 8017ef0:	68fb      	ldr	r3, [r7, #12]
 8017ef2:	601a      	str	r2, [r3, #0]
 8017ef4:	68fb      	ldr	r3, [r7, #12]
 8017ef6:	681b      	ldr	r3, [r3, #0]
 8017ef8:	4618      	mov	r0, r3
 8017efa:	3714      	adds	r7, #20
 8017efc:	46bd      	mov	sp, r7
 8017efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017f02:	4770      	bx	lr

08017f04 <xQueueGenericReset>:
 8017f04:	b580      	push	{r7, lr}
 8017f06:	b084      	sub	sp, #16
 8017f08:	af00      	add	r7, sp, #0
 8017f0a:	6078      	str	r0, [r7, #4]
 8017f0c:	6039      	str	r1, [r7, #0]
 8017f0e:	687b      	ldr	r3, [r7, #4]
 8017f10:	60fb      	str	r3, [r7, #12]
 8017f12:	68fb      	ldr	r3, [r7, #12]
 8017f14:	2b00      	cmp	r3, #0
 8017f16:	d10a      	bne.n	8017f2e <xQueueGenericReset+0x2a>
 8017f18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017f1c:	f383 8811 	msr	BASEPRI, r3
 8017f20:	f3bf 8f6f 	isb	sy
 8017f24:	f3bf 8f4f 	dsb	sy
 8017f28:	60bb      	str	r3, [r7, #8]
 8017f2a:	bf00      	nop
 8017f2c:	e7fe      	b.n	8017f2c <xQueueGenericReset+0x28>
 8017f2e:	f002 fa41 	bl	801a3b4 <vPortEnterCritical>
 8017f32:	68fb      	ldr	r3, [r7, #12]
 8017f34:	681a      	ldr	r2, [r3, #0]
 8017f36:	68fb      	ldr	r3, [r7, #12]
 8017f38:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017f3a:	68f9      	ldr	r1, [r7, #12]
 8017f3c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017f3e:	fb01 f303 	mul.w	r3, r1, r3
 8017f42:	441a      	add	r2, r3
 8017f44:	68fb      	ldr	r3, [r7, #12]
 8017f46:	609a      	str	r2, [r3, #8]
 8017f48:	68fb      	ldr	r3, [r7, #12]
 8017f4a:	2200      	movs	r2, #0
 8017f4c:	639a      	str	r2, [r3, #56]	; 0x38
 8017f4e:	68fb      	ldr	r3, [r7, #12]
 8017f50:	681a      	ldr	r2, [r3, #0]
 8017f52:	68fb      	ldr	r3, [r7, #12]
 8017f54:	605a      	str	r2, [r3, #4]
 8017f56:	68fb      	ldr	r3, [r7, #12]
 8017f58:	681a      	ldr	r2, [r3, #0]
 8017f5a:	68fb      	ldr	r3, [r7, #12]
 8017f5c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017f5e:	3b01      	subs	r3, #1
 8017f60:	68f9      	ldr	r1, [r7, #12]
 8017f62:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017f64:	fb01 f303 	mul.w	r3, r1, r3
 8017f68:	441a      	add	r2, r3
 8017f6a:	68fb      	ldr	r3, [r7, #12]
 8017f6c:	60da      	str	r2, [r3, #12]
 8017f6e:	68fb      	ldr	r3, [r7, #12]
 8017f70:	22ff      	movs	r2, #255	; 0xff
 8017f72:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8017f76:	68fb      	ldr	r3, [r7, #12]
 8017f78:	22ff      	movs	r2, #255	; 0xff
 8017f7a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8017f7e:	683b      	ldr	r3, [r7, #0]
 8017f80:	2b00      	cmp	r3, #0
 8017f82:	d114      	bne.n	8017fae <xQueueGenericReset+0xaa>
 8017f84:	68fb      	ldr	r3, [r7, #12]
 8017f86:	691b      	ldr	r3, [r3, #16]
 8017f88:	2b00      	cmp	r3, #0
 8017f8a:	d01a      	beq.n	8017fc2 <xQueueGenericReset+0xbe>
 8017f8c:	68fb      	ldr	r3, [r7, #12]
 8017f8e:	3310      	adds	r3, #16
 8017f90:	4618      	mov	r0, r3
 8017f92:	f001 fa5b 	bl	801944c <xTaskRemoveFromEventList>
 8017f96:	4603      	mov	r3, r0
 8017f98:	2b00      	cmp	r3, #0
 8017f9a:	d012      	beq.n	8017fc2 <xQueueGenericReset+0xbe>
 8017f9c:	4b0c      	ldr	r3, [pc, #48]	; (8017fd0 <xQueueGenericReset+0xcc>)
 8017f9e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8017fa2:	601a      	str	r2, [r3, #0]
 8017fa4:	f3bf 8f4f 	dsb	sy
 8017fa8:	f3bf 8f6f 	isb	sy
 8017fac:	e009      	b.n	8017fc2 <xQueueGenericReset+0xbe>
 8017fae:	68fb      	ldr	r3, [r7, #12]
 8017fb0:	3310      	adds	r3, #16
 8017fb2:	4618      	mov	r0, r3
 8017fb4:	f7ff fef2 	bl	8017d9c <vListInitialise>
 8017fb8:	68fb      	ldr	r3, [r7, #12]
 8017fba:	3324      	adds	r3, #36	; 0x24
 8017fbc:	4618      	mov	r0, r3
 8017fbe:	f7ff feed 	bl	8017d9c <vListInitialise>
 8017fc2:	f002 fa27 	bl	801a414 <vPortExitCritical>
 8017fc6:	2301      	movs	r3, #1
 8017fc8:	4618      	mov	r0, r3
 8017fca:	3710      	adds	r7, #16
 8017fcc:	46bd      	mov	sp, r7
 8017fce:	bd80      	pop	{r7, pc}
 8017fd0:	e000ed04 	.word	0xe000ed04

08017fd4 <xQueueGenericCreateStatic>:
 8017fd4:	b580      	push	{r7, lr}
 8017fd6:	b08e      	sub	sp, #56	; 0x38
 8017fd8:	af02      	add	r7, sp, #8
 8017fda:	60f8      	str	r0, [r7, #12]
 8017fdc:	60b9      	str	r1, [r7, #8]
 8017fde:	607a      	str	r2, [r7, #4]
 8017fe0:	603b      	str	r3, [r7, #0]
 8017fe2:	68fb      	ldr	r3, [r7, #12]
 8017fe4:	2b00      	cmp	r3, #0
 8017fe6:	d10a      	bne.n	8017ffe <xQueueGenericCreateStatic+0x2a>
 8017fe8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017fec:	f383 8811 	msr	BASEPRI, r3
 8017ff0:	f3bf 8f6f 	isb	sy
 8017ff4:	f3bf 8f4f 	dsb	sy
 8017ff8:	62bb      	str	r3, [r7, #40]	; 0x28
 8017ffa:	bf00      	nop
 8017ffc:	e7fe      	b.n	8017ffc <xQueueGenericCreateStatic+0x28>
 8017ffe:	683b      	ldr	r3, [r7, #0]
 8018000:	2b00      	cmp	r3, #0
 8018002:	d10a      	bne.n	801801a <xQueueGenericCreateStatic+0x46>
 8018004:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018008:	f383 8811 	msr	BASEPRI, r3
 801800c:	f3bf 8f6f 	isb	sy
 8018010:	f3bf 8f4f 	dsb	sy
 8018014:	627b      	str	r3, [r7, #36]	; 0x24
 8018016:	bf00      	nop
 8018018:	e7fe      	b.n	8018018 <xQueueGenericCreateStatic+0x44>
 801801a:	687b      	ldr	r3, [r7, #4]
 801801c:	2b00      	cmp	r3, #0
 801801e:	d002      	beq.n	8018026 <xQueueGenericCreateStatic+0x52>
 8018020:	68bb      	ldr	r3, [r7, #8]
 8018022:	2b00      	cmp	r3, #0
 8018024:	d001      	beq.n	801802a <xQueueGenericCreateStatic+0x56>
 8018026:	2301      	movs	r3, #1
 8018028:	e000      	b.n	801802c <xQueueGenericCreateStatic+0x58>
 801802a:	2300      	movs	r3, #0
 801802c:	2b00      	cmp	r3, #0
 801802e:	d10a      	bne.n	8018046 <xQueueGenericCreateStatic+0x72>
 8018030:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018034:	f383 8811 	msr	BASEPRI, r3
 8018038:	f3bf 8f6f 	isb	sy
 801803c:	f3bf 8f4f 	dsb	sy
 8018040:	623b      	str	r3, [r7, #32]
 8018042:	bf00      	nop
 8018044:	e7fe      	b.n	8018044 <xQueueGenericCreateStatic+0x70>
 8018046:	687b      	ldr	r3, [r7, #4]
 8018048:	2b00      	cmp	r3, #0
 801804a:	d102      	bne.n	8018052 <xQueueGenericCreateStatic+0x7e>
 801804c:	68bb      	ldr	r3, [r7, #8]
 801804e:	2b00      	cmp	r3, #0
 8018050:	d101      	bne.n	8018056 <xQueueGenericCreateStatic+0x82>
 8018052:	2301      	movs	r3, #1
 8018054:	e000      	b.n	8018058 <xQueueGenericCreateStatic+0x84>
 8018056:	2300      	movs	r3, #0
 8018058:	2b00      	cmp	r3, #0
 801805a:	d10a      	bne.n	8018072 <xQueueGenericCreateStatic+0x9e>
 801805c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018060:	f383 8811 	msr	BASEPRI, r3
 8018064:	f3bf 8f6f 	isb	sy
 8018068:	f3bf 8f4f 	dsb	sy
 801806c:	61fb      	str	r3, [r7, #28]
 801806e:	bf00      	nop
 8018070:	e7fe      	b.n	8018070 <xQueueGenericCreateStatic+0x9c>
 8018072:	2350      	movs	r3, #80	; 0x50
 8018074:	617b      	str	r3, [r7, #20]
 8018076:	697b      	ldr	r3, [r7, #20]
 8018078:	2b50      	cmp	r3, #80	; 0x50
 801807a:	d00a      	beq.n	8018092 <xQueueGenericCreateStatic+0xbe>
 801807c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018080:	f383 8811 	msr	BASEPRI, r3
 8018084:	f3bf 8f6f 	isb	sy
 8018088:	f3bf 8f4f 	dsb	sy
 801808c:	61bb      	str	r3, [r7, #24]
 801808e:	bf00      	nop
 8018090:	e7fe      	b.n	8018090 <xQueueGenericCreateStatic+0xbc>
 8018092:	697b      	ldr	r3, [r7, #20]
 8018094:	683b      	ldr	r3, [r7, #0]
 8018096:	62fb      	str	r3, [r7, #44]	; 0x2c
 8018098:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801809a:	2b00      	cmp	r3, #0
 801809c:	d00d      	beq.n	80180ba <xQueueGenericCreateStatic+0xe6>
 801809e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80180a0:	2201      	movs	r2, #1
 80180a2:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80180a6:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 80180aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80180ac:	9300      	str	r3, [sp, #0]
 80180ae:	4613      	mov	r3, r2
 80180b0:	687a      	ldr	r2, [r7, #4]
 80180b2:	68b9      	ldr	r1, [r7, #8]
 80180b4:	68f8      	ldr	r0, [r7, #12]
 80180b6:	f000 f805 	bl	80180c4 <prvInitialiseNewQueue>
 80180ba:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80180bc:	4618      	mov	r0, r3
 80180be:	3730      	adds	r7, #48	; 0x30
 80180c0:	46bd      	mov	sp, r7
 80180c2:	bd80      	pop	{r7, pc}

080180c4 <prvInitialiseNewQueue>:
 80180c4:	b580      	push	{r7, lr}
 80180c6:	b084      	sub	sp, #16
 80180c8:	af00      	add	r7, sp, #0
 80180ca:	60f8      	str	r0, [r7, #12]
 80180cc:	60b9      	str	r1, [r7, #8]
 80180ce:	607a      	str	r2, [r7, #4]
 80180d0:	70fb      	strb	r3, [r7, #3]
 80180d2:	68bb      	ldr	r3, [r7, #8]
 80180d4:	2b00      	cmp	r3, #0
 80180d6:	d103      	bne.n	80180e0 <prvInitialiseNewQueue+0x1c>
 80180d8:	69bb      	ldr	r3, [r7, #24]
 80180da:	69ba      	ldr	r2, [r7, #24]
 80180dc:	601a      	str	r2, [r3, #0]
 80180de:	e002      	b.n	80180e6 <prvInitialiseNewQueue+0x22>
 80180e0:	69bb      	ldr	r3, [r7, #24]
 80180e2:	687a      	ldr	r2, [r7, #4]
 80180e4:	601a      	str	r2, [r3, #0]
 80180e6:	69bb      	ldr	r3, [r7, #24]
 80180e8:	68fa      	ldr	r2, [r7, #12]
 80180ea:	63da      	str	r2, [r3, #60]	; 0x3c
 80180ec:	69bb      	ldr	r3, [r7, #24]
 80180ee:	68ba      	ldr	r2, [r7, #8]
 80180f0:	641a      	str	r2, [r3, #64]	; 0x40
 80180f2:	2101      	movs	r1, #1
 80180f4:	69b8      	ldr	r0, [r7, #24]
 80180f6:	f7ff ff05 	bl	8017f04 <xQueueGenericReset>
 80180fa:	69bb      	ldr	r3, [r7, #24]
 80180fc:	78fa      	ldrb	r2, [r7, #3]
 80180fe:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8018102:	bf00      	nop
 8018104:	3710      	adds	r7, #16
 8018106:	46bd      	mov	sp, r7
 8018108:	bd80      	pop	{r7, pc}
	...

0801810c <xQueueGenericSend>:
 801810c:	b580      	push	{r7, lr}
 801810e:	b08e      	sub	sp, #56	; 0x38
 8018110:	af00      	add	r7, sp, #0
 8018112:	60f8      	str	r0, [r7, #12]
 8018114:	60b9      	str	r1, [r7, #8]
 8018116:	607a      	str	r2, [r7, #4]
 8018118:	603b      	str	r3, [r7, #0]
 801811a:	2300      	movs	r3, #0
 801811c:	637b      	str	r3, [r7, #52]	; 0x34
 801811e:	68fb      	ldr	r3, [r7, #12]
 8018120:	633b      	str	r3, [r7, #48]	; 0x30
 8018122:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018124:	2b00      	cmp	r3, #0
 8018126:	d10a      	bne.n	801813e <xQueueGenericSend+0x32>
 8018128:	f04f 0350 	mov.w	r3, #80	; 0x50
 801812c:	f383 8811 	msr	BASEPRI, r3
 8018130:	f3bf 8f6f 	isb	sy
 8018134:	f3bf 8f4f 	dsb	sy
 8018138:	62bb      	str	r3, [r7, #40]	; 0x28
 801813a:	bf00      	nop
 801813c:	e7fe      	b.n	801813c <xQueueGenericSend+0x30>
 801813e:	68bb      	ldr	r3, [r7, #8]
 8018140:	2b00      	cmp	r3, #0
 8018142:	d103      	bne.n	801814c <xQueueGenericSend+0x40>
 8018144:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018146:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018148:	2b00      	cmp	r3, #0
 801814a:	d101      	bne.n	8018150 <xQueueGenericSend+0x44>
 801814c:	2301      	movs	r3, #1
 801814e:	e000      	b.n	8018152 <xQueueGenericSend+0x46>
 8018150:	2300      	movs	r3, #0
 8018152:	2b00      	cmp	r3, #0
 8018154:	d10a      	bne.n	801816c <xQueueGenericSend+0x60>
 8018156:	f04f 0350 	mov.w	r3, #80	; 0x50
 801815a:	f383 8811 	msr	BASEPRI, r3
 801815e:	f3bf 8f6f 	isb	sy
 8018162:	f3bf 8f4f 	dsb	sy
 8018166:	627b      	str	r3, [r7, #36]	; 0x24
 8018168:	bf00      	nop
 801816a:	e7fe      	b.n	801816a <xQueueGenericSend+0x5e>
 801816c:	683b      	ldr	r3, [r7, #0]
 801816e:	2b02      	cmp	r3, #2
 8018170:	d103      	bne.n	801817a <xQueueGenericSend+0x6e>
 8018172:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018174:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018176:	2b01      	cmp	r3, #1
 8018178:	d101      	bne.n	801817e <xQueueGenericSend+0x72>
 801817a:	2301      	movs	r3, #1
 801817c:	e000      	b.n	8018180 <xQueueGenericSend+0x74>
 801817e:	2300      	movs	r3, #0
 8018180:	2b00      	cmp	r3, #0
 8018182:	d10a      	bne.n	801819a <xQueueGenericSend+0x8e>
 8018184:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018188:	f383 8811 	msr	BASEPRI, r3
 801818c:	f3bf 8f6f 	isb	sy
 8018190:	f3bf 8f4f 	dsb	sy
 8018194:	623b      	str	r3, [r7, #32]
 8018196:	bf00      	nop
 8018198:	e7fe      	b.n	8018198 <xQueueGenericSend+0x8c>
 801819a:	f001 fb77 	bl	801988c <xTaskGetSchedulerState>
 801819e:	4603      	mov	r3, r0
 80181a0:	2b00      	cmp	r3, #0
 80181a2:	d102      	bne.n	80181aa <xQueueGenericSend+0x9e>
 80181a4:	687b      	ldr	r3, [r7, #4]
 80181a6:	2b00      	cmp	r3, #0
 80181a8:	d101      	bne.n	80181ae <xQueueGenericSend+0xa2>
 80181aa:	2301      	movs	r3, #1
 80181ac:	e000      	b.n	80181b0 <xQueueGenericSend+0xa4>
 80181ae:	2300      	movs	r3, #0
 80181b0:	2b00      	cmp	r3, #0
 80181b2:	d10a      	bne.n	80181ca <xQueueGenericSend+0xbe>
 80181b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80181b8:	f383 8811 	msr	BASEPRI, r3
 80181bc:	f3bf 8f6f 	isb	sy
 80181c0:	f3bf 8f4f 	dsb	sy
 80181c4:	61fb      	str	r3, [r7, #28]
 80181c6:	bf00      	nop
 80181c8:	e7fe      	b.n	80181c8 <xQueueGenericSend+0xbc>
 80181ca:	f002 f8f3 	bl	801a3b4 <vPortEnterCritical>
 80181ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80181d0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80181d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80181d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80181d6:	429a      	cmp	r2, r3
 80181d8:	d302      	bcc.n	80181e0 <xQueueGenericSend+0xd4>
 80181da:	683b      	ldr	r3, [r7, #0]
 80181dc:	2b02      	cmp	r3, #2
 80181de:	d129      	bne.n	8018234 <xQueueGenericSend+0x128>
 80181e0:	683a      	ldr	r2, [r7, #0]
 80181e2:	68b9      	ldr	r1, [r7, #8]
 80181e4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80181e6:	f000 fa0b 	bl	8018600 <prvCopyDataToQueue>
 80181ea:	62f8      	str	r0, [r7, #44]	; 0x2c
 80181ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80181ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80181f0:	2b00      	cmp	r3, #0
 80181f2:	d010      	beq.n	8018216 <xQueueGenericSend+0x10a>
 80181f4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80181f6:	3324      	adds	r3, #36	; 0x24
 80181f8:	4618      	mov	r0, r3
 80181fa:	f001 f927 	bl	801944c <xTaskRemoveFromEventList>
 80181fe:	4603      	mov	r3, r0
 8018200:	2b00      	cmp	r3, #0
 8018202:	d013      	beq.n	801822c <xQueueGenericSend+0x120>
 8018204:	4b3f      	ldr	r3, [pc, #252]	; (8018304 <xQueueGenericSend+0x1f8>)
 8018206:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801820a:	601a      	str	r2, [r3, #0]
 801820c:	f3bf 8f4f 	dsb	sy
 8018210:	f3bf 8f6f 	isb	sy
 8018214:	e00a      	b.n	801822c <xQueueGenericSend+0x120>
 8018216:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8018218:	2b00      	cmp	r3, #0
 801821a:	d007      	beq.n	801822c <xQueueGenericSend+0x120>
 801821c:	4b39      	ldr	r3, [pc, #228]	; (8018304 <xQueueGenericSend+0x1f8>)
 801821e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8018222:	601a      	str	r2, [r3, #0]
 8018224:	f3bf 8f4f 	dsb	sy
 8018228:	f3bf 8f6f 	isb	sy
 801822c:	f002 f8f2 	bl	801a414 <vPortExitCritical>
 8018230:	2301      	movs	r3, #1
 8018232:	e063      	b.n	80182fc <xQueueGenericSend+0x1f0>
 8018234:	687b      	ldr	r3, [r7, #4]
 8018236:	2b00      	cmp	r3, #0
 8018238:	d103      	bne.n	8018242 <xQueueGenericSend+0x136>
 801823a:	f002 f8eb 	bl	801a414 <vPortExitCritical>
 801823e:	2300      	movs	r3, #0
 8018240:	e05c      	b.n	80182fc <xQueueGenericSend+0x1f0>
 8018242:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8018244:	2b00      	cmp	r3, #0
 8018246:	d106      	bne.n	8018256 <xQueueGenericSend+0x14a>
 8018248:	f107 0314 	add.w	r3, r7, #20
 801824c:	4618      	mov	r0, r3
 801824e:	f001 f9c3 	bl	80195d8 <vTaskInternalSetTimeOutState>
 8018252:	2301      	movs	r3, #1
 8018254:	637b      	str	r3, [r7, #52]	; 0x34
 8018256:	f002 f8dd 	bl	801a414 <vPortExitCritical>
 801825a:	f000 fe81 	bl	8018f60 <vTaskSuspendAll>
 801825e:	f002 f8a9 	bl	801a3b4 <vPortEnterCritical>
 8018262:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018264:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8018268:	b25b      	sxtb	r3, r3
 801826a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801826e:	d103      	bne.n	8018278 <xQueueGenericSend+0x16c>
 8018270:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018272:	2200      	movs	r2, #0
 8018274:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8018278:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801827a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801827e:	b25b      	sxtb	r3, r3
 8018280:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8018284:	d103      	bne.n	801828e <xQueueGenericSend+0x182>
 8018286:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018288:	2200      	movs	r2, #0
 801828a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801828e:	f002 f8c1 	bl	801a414 <vPortExitCritical>
 8018292:	1d3a      	adds	r2, r7, #4
 8018294:	f107 0314 	add.w	r3, r7, #20
 8018298:	4611      	mov	r1, r2
 801829a:	4618      	mov	r0, r3
 801829c:	f001 f9b2 	bl	8019604 <xTaskCheckForTimeOut>
 80182a0:	4603      	mov	r3, r0
 80182a2:	2b00      	cmp	r3, #0
 80182a4:	d124      	bne.n	80182f0 <xQueueGenericSend+0x1e4>
 80182a6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80182a8:	f000 faa2 	bl	80187f0 <prvIsQueueFull>
 80182ac:	4603      	mov	r3, r0
 80182ae:	2b00      	cmp	r3, #0
 80182b0:	d018      	beq.n	80182e4 <xQueueGenericSend+0x1d8>
 80182b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80182b4:	3310      	adds	r3, #16
 80182b6:	687a      	ldr	r2, [r7, #4]
 80182b8:	4611      	mov	r1, r2
 80182ba:	4618      	mov	r0, r3
 80182bc:	f001 f83a 	bl	8019334 <vTaskPlaceOnEventList>
 80182c0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80182c2:	f000 fa2d 	bl	8018720 <prvUnlockQueue>
 80182c6:	f000 fe59 	bl	8018f7c <xTaskResumeAll>
 80182ca:	4603      	mov	r3, r0
 80182cc:	2b00      	cmp	r3, #0
 80182ce:	f47f af7c 	bne.w	80181ca <xQueueGenericSend+0xbe>
 80182d2:	4b0c      	ldr	r3, [pc, #48]	; (8018304 <xQueueGenericSend+0x1f8>)
 80182d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80182d8:	601a      	str	r2, [r3, #0]
 80182da:	f3bf 8f4f 	dsb	sy
 80182de:	f3bf 8f6f 	isb	sy
 80182e2:	e772      	b.n	80181ca <xQueueGenericSend+0xbe>
 80182e4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80182e6:	f000 fa1b 	bl	8018720 <prvUnlockQueue>
 80182ea:	f000 fe47 	bl	8018f7c <xTaskResumeAll>
 80182ee:	e76c      	b.n	80181ca <xQueueGenericSend+0xbe>
 80182f0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80182f2:	f000 fa15 	bl	8018720 <prvUnlockQueue>
 80182f6:	f000 fe41 	bl	8018f7c <xTaskResumeAll>
 80182fa:	2300      	movs	r3, #0
 80182fc:	4618      	mov	r0, r3
 80182fe:	3738      	adds	r7, #56	; 0x38
 8018300:	46bd      	mov	sp, r7
 8018302:	bd80      	pop	{r7, pc}
 8018304:	e000ed04 	.word	0xe000ed04

08018308 <xQueueGenericSendFromISR>:
 8018308:	b580      	push	{r7, lr}
 801830a:	b090      	sub	sp, #64	; 0x40
 801830c:	af00      	add	r7, sp, #0
 801830e:	60f8      	str	r0, [r7, #12]
 8018310:	60b9      	str	r1, [r7, #8]
 8018312:	607a      	str	r2, [r7, #4]
 8018314:	603b      	str	r3, [r7, #0]
 8018316:	68fb      	ldr	r3, [r7, #12]
 8018318:	63bb      	str	r3, [r7, #56]	; 0x38
 801831a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801831c:	2b00      	cmp	r3, #0
 801831e:	d10a      	bne.n	8018336 <xQueueGenericSendFromISR+0x2e>
 8018320:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018324:	f383 8811 	msr	BASEPRI, r3
 8018328:	f3bf 8f6f 	isb	sy
 801832c:	f3bf 8f4f 	dsb	sy
 8018330:	62bb      	str	r3, [r7, #40]	; 0x28
 8018332:	bf00      	nop
 8018334:	e7fe      	b.n	8018334 <xQueueGenericSendFromISR+0x2c>
 8018336:	68bb      	ldr	r3, [r7, #8]
 8018338:	2b00      	cmp	r3, #0
 801833a:	d103      	bne.n	8018344 <xQueueGenericSendFromISR+0x3c>
 801833c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801833e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018340:	2b00      	cmp	r3, #0
 8018342:	d101      	bne.n	8018348 <xQueueGenericSendFromISR+0x40>
 8018344:	2301      	movs	r3, #1
 8018346:	e000      	b.n	801834a <xQueueGenericSendFromISR+0x42>
 8018348:	2300      	movs	r3, #0
 801834a:	2b00      	cmp	r3, #0
 801834c:	d10a      	bne.n	8018364 <xQueueGenericSendFromISR+0x5c>
 801834e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018352:	f383 8811 	msr	BASEPRI, r3
 8018356:	f3bf 8f6f 	isb	sy
 801835a:	f3bf 8f4f 	dsb	sy
 801835e:	627b      	str	r3, [r7, #36]	; 0x24
 8018360:	bf00      	nop
 8018362:	e7fe      	b.n	8018362 <xQueueGenericSendFromISR+0x5a>
 8018364:	683b      	ldr	r3, [r7, #0]
 8018366:	2b02      	cmp	r3, #2
 8018368:	d103      	bne.n	8018372 <xQueueGenericSendFromISR+0x6a>
 801836a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801836c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801836e:	2b01      	cmp	r3, #1
 8018370:	d101      	bne.n	8018376 <xQueueGenericSendFromISR+0x6e>
 8018372:	2301      	movs	r3, #1
 8018374:	e000      	b.n	8018378 <xQueueGenericSendFromISR+0x70>
 8018376:	2300      	movs	r3, #0
 8018378:	2b00      	cmp	r3, #0
 801837a:	d10a      	bne.n	8018392 <xQueueGenericSendFromISR+0x8a>
 801837c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018380:	f383 8811 	msr	BASEPRI, r3
 8018384:	f3bf 8f6f 	isb	sy
 8018388:	f3bf 8f4f 	dsb	sy
 801838c:	623b      	str	r3, [r7, #32]
 801838e:	bf00      	nop
 8018390:	e7fe      	b.n	8018390 <xQueueGenericSendFromISR+0x88>
 8018392:	f002 f8f1 	bl	801a578 <vPortValidateInterruptPriority>
 8018396:	f3ef 8211 	mrs	r2, BASEPRI
 801839a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801839e:	f383 8811 	msr	BASEPRI, r3
 80183a2:	f3bf 8f6f 	isb	sy
 80183a6:	f3bf 8f4f 	dsb	sy
 80183aa:	61fa      	str	r2, [r7, #28]
 80183ac:	61bb      	str	r3, [r7, #24]
 80183ae:	69fb      	ldr	r3, [r7, #28]
 80183b0:	637b      	str	r3, [r7, #52]	; 0x34
 80183b2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80183b4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80183b6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80183b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80183ba:	429a      	cmp	r2, r3
 80183bc:	d302      	bcc.n	80183c4 <xQueueGenericSendFromISR+0xbc>
 80183be:	683b      	ldr	r3, [r7, #0]
 80183c0:	2b02      	cmp	r3, #2
 80183c2:	d12f      	bne.n	8018424 <xQueueGenericSendFromISR+0x11c>
 80183c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80183c6:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80183ca:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80183ce:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80183d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80183d2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80183d4:	683a      	ldr	r2, [r7, #0]
 80183d6:	68b9      	ldr	r1, [r7, #8]
 80183d8:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80183da:	f000 f911 	bl	8018600 <prvCopyDataToQueue>
 80183de:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 80183e2:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80183e6:	d112      	bne.n	801840e <xQueueGenericSendFromISR+0x106>
 80183e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80183ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80183ec:	2b00      	cmp	r3, #0
 80183ee:	d016      	beq.n	801841e <xQueueGenericSendFromISR+0x116>
 80183f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80183f2:	3324      	adds	r3, #36	; 0x24
 80183f4:	4618      	mov	r0, r3
 80183f6:	f001 f829 	bl	801944c <xTaskRemoveFromEventList>
 80183fa:	4603      	mov	r3, r0
 80183fc:	2b00      	cmp	r3, #0
 80183fe:	d00e      	beq.n	801841e <xQueueGenericSendFromISR+0x116>
 8018400:	687b      	ldr	r3, [r7, #4]
 8018402:	2b00      	cmp	r3, #0
 8018404:	d00b      	beq.n	801841e <xQueueGenericSendFromISR+0x116>
 8018406:	687b      	ldr	r3, [r7, #4]
 8018408:	2201      	movs	r2, #1
 801840a:	601a      	str	r2, [r3, #0]
 801840c:	e007      	b.n	801841e <xQueueGenericSendFromISR+0x116>
 801840e:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8018412:	3301      	adds	r3, #1
 8018414:	b2db      	uxtb	r3, r3
 8018416:	b25a      	sxtb	r2, r3
 8018418:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801841a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801841e:	2301      	movs	r3, #1
 8018420:	63fb      	str	r3, [r7, #60]	; 0x3c
 8018422:	e001      	b.n	8018428 <xQueueGenericSendFromISR+0x120>
 8018424:	2300      	movs	r3, #0
 8018426:	63fb      	str	r3, [r7, #60]	; 0x3c
 8018428:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801842a:	617b      	str	r3, [r7, #20]
 801842c:	697b      	ldr	r3, [r7, #20]
 801842e:	f383 8811 	msr	BASEPRI, r3
 8018432:	bf00      	nop
 8018434:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8018436:	4618      	mov	r0, r3
 8018438:	3740      	adds	r7, #64	; 0x40
 801843a:	46bd      	mov	sp, r7
 801843c:	bd80      	pop	{r7, pc}
	...

08018440 <xQueueReceive>:
 8018440:	b580      	push	{r7, lr}
 8018442:	b08c      	sub	sp, #48	; 0x30
 8018444:	af00      	add	r7, sp, #0
 8018446:	60f8      	str	r0, [r7, #12]
 8018448:	60b9      	str	r1, [r7, #8]
 801844a:	607a      	str	r2, [r7, #4]
 801844c:	2300      	movs	r3, #0
 801844e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8018450:	68fb      	ldr	r3, [r7, #12]
 8018452:	62bb      	str	r3, [r7, #40]	; 0x28
 8018454:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8018456:	2b00      	cmp	r3, #0
 8018458:	d10a      	bne.n	8018470 <xQueueReceive+0x30>
 801845a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801845e:	f383 8811 	msr	BASEPRI, r3
 8018462:	f3bf 8f6f 	isb	sy
 8018466:	f3bf 8f4f 	dsb	sy
 801846a:	623b      	str	r3, [r7, #32]
 801846c:	bf00      	nop
 801846e:	e7fe      	b.n	801846e <xQueueReceive+0x2e>
 8018470:	68bb      	ldr	r3, [r7, #8]
 8018472:	2b00      	cmp	r3, #0
 8018474:	d103      	bne.n	801847e <xQueueReceive+0x3e>
 8018476:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8018478:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801847a:	2b00      	cmp	r3, #0
 801847c:	d101      	bne.n	8018482 <xQueueReceive+0x42>
 801847e:	2301      	movs	r3, #1
 8018480:	e000      	b.n	8018484 <xQueueReceive+0x44>
 8018482:	2300      	movs	r3, #0
 8018484:	2b00      	cmp	r3, #0
 8018486:	d10a      	bne.n	801849e <xQueueReceive+0x5e>
 8018488:	f04f 0350 	mov.w	r3, #80	; 0x50
 801848c:	f383 8811 	msr	BASEPRI, r3
 8018490:	f3bf 8f6f 	isb	sy
 8018494:	f3bf 8f4f 	dsb	sy
 8018498:	61fb      	str	r3, [r7, #28]
 801849a:	bf00      	nop
 801849c:	e7fe      	b.n	801849c <xQueueReceive+0x5c>
 801849e:	f001 f9f5 	bl	801988c <xTaskGetSchedulerState>
 80184a2:	4603      	mov	r3, r0
 80184a4:	2b00      	cmp	r3, #0
 80184a6:	d102      	bne.n	80184ae <xQueueReceive+0x6e>
 80184a8:	687b      	ldr	r3, [r7, #4]
 80184aa:	2b00      	cmp	r3, #0
 80184ac:	d101      	bne.n	80184b2 <xQueueReceive+0x72>
 80184ae:	2301      	movs	r3, #1
 80184b0:	e000      	b.n	80184b4 <xQueueReceive+0x74>
 80184b2:	2300      	movs	r3, #0
 80184b4:	2b00      	cmp	r3, #0
 80184b6:	d10a      	bne.n	80184ce <xQueueReceive+0x8e>
 80184b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80184bc:	f383 8811 	msr	BASEPRI, r3
 80184c0:	f3bf 8f6f 	isb	sy
 80184c4:	f3bf 8f4f 	dsb	sy
 80184c8:	61bb      	str	r3, [r7, #24]
 80184ca:	bf00      	nop
 80184cc:	e7fe      	b.n	80184cc <xQueueReceive+0x8c>
 80184ce:	f001 ff71 	bl	801a3b4 <vPortEnterCritical>
 80184d2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80184d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80184d6:	627b      	str	r3, [r7, #36]	; 0x24
 80184d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80184da:	2b00      	cmp	r3, #0
 80184dc:	d01f      	beq.n	801851e <xQueueReceive+0xde>
 80184de:	68b9      	ldr	r1, [r7, #8]
 80184e0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80184e2:	f000 f8f7 	bl	80186d4 <prvCopyDataFromQueue>
 80184e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80184e8:	1e5a      	subs	r2, r3, #1
 80184ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80184ec:	639a      	str	r2, [r3, #56]	; 0x38
 80184ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80184f0:	691b      	ldr	r3, [r3, #16]
 80184f2:	2b00      	cmp	r3, #0
 80184f4:	d00f      	beq.n	8018516 <xQueueReceive+0xd6>
 80184f6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80184f8:	3310      	adds	r3, #16
 80184fa:	4618      	mov	r0, r3
 80184fc:	f000 ffa6 	bl	801944c <xTaskRemoveFromEventList>
 8018500:	4603      	mov	r3, r0
 8018502:	2b00      	cmp	r3, #0
 8018504:	d007      	beq.n	8018516 <xQueueReceive+0xd6>
 8018506:	4b3d      	ldr	r3, [pc, #244]	; (80185fc <xQueueReceive+0x1bc>)
 8018508:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801850c:	601a      	str	r2, [r3, #0]
 801850e:	f3bf 8f4f 	dsb	sy
 8018512:	f3bf 8f6f 	isb	sy
 8018516:	f001 ff7d 	bl	801a414 <vPortExitCritical>
 801851a:	2301      	movs	r3, #1
 801851c:	e069      	b.n	80185f2 <xQueueReceive+0x1b2>
 801851e:	687b      	ldr	r3, [r7, #4]
 8018520:	2b00      	cmp	r3, #0
 8018522:	d103      	bne.n	801852c <xQueueReceive+0xec>
 8018524:	f001 ff76 	bl	801a414 <vPortExitCritical>
 8018528:	2300      	movs	r3, #0
 801852a:	e062      	b.n	80185f2 <xQueueReceive+0x1b2>
 801852c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801852e:	2b00      	cmp	r3, #0
 8018530:	d106      	bne.n	8018540 <xQueueReceive+0x100>
 8018532:	f107 0310 	add.w	r3, r7, #16
 8018536:	4618      	mov	r0, r3
 8018538:	f001 f84e 	bl	80195d8 <vTaskInternalSetTimeOutState>
 801853c:	2301      	movs	r3, #1
 801853e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8018540:	f001 ff68 	bl	801a414 <vPortExitCritical>
 8018544:	f000 fd0c 	bl	8018f60 <vTaskSuspendAll>
 8018548:	f001 ff34 	bl	801a3b4 <vPortEnterCritical>
 801854c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801854e:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8018552:	b25b      	sxtb	r3, r3
 8018554:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8018558:	d103      	bne.n	8018562 <xQueueReceive+0x122>
 801855a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801855c:	2200      	movs	r2, #0
 801855e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8018562:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8018564:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8018568:	b25b      	sxtb	r3, r3
 801856a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801856e:	d103      	bne.n	8018578 <xQueueReceive+0x138>
 8018570:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8018572:	2200      	movs	r2, #0
 8018574:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8018578:	f001 ff4c 	bl	801a414 <vPortExitCritical>
 801857c:	1d3a      	adds	r2, r7, #4
 801857e:	f107 0310 	add.w	r3, r7, #16
 8018582:	4611      	mov	r1, r2
 8018584:	4618      	mov	r0, r3
 8018586:	f001 f83d 	bl	8019604 <xTaskCheckForTimeOut>
 801858a:	4603      	mov	r3, r0
 801858c:	2b00      	cmp	r3, #0
 801858e:	d123      	bne.n	80185d8 <xQueueReceive+0x198>
 8018590:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8018592:	f000 f917 	bl	80187c4 <prvIsQueueEmpty>
 8018596:	4603      	mov	r3, r0
 8018598:	2b00      	cmp	r3, #0
 801859a:	d017      	beq.n	80185cc <xQueueReceive+0x18c>
 801859c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801859e:	3324      	adds	r3, #36	; 0x24
 80185a0:	687a      	ldr	r2, [r7, #4]
 80185a2:	4611      	mov	r1, r2
 80185a4:	4618      	mov	r0, r3
 80185a6:	f000 fec5 	bl	8019334 <vTaskPlaceOnEventList>
 80185aa:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80185ac:	f000 f8b8 	bl	8018720 <prvUnlockQueue>
 80185b0:	f000 fce4 	bl	8018f7c <xTaskResumeAll>
 80185b4:	4603      	mov	r3, r0
 80185b6:	2b00      	cmp	r3, #0
 80185b8:	d189      	bne.n	80184ce <xQueueReceive+0x8e>
 80185ba:	4b10      	ldr	r3, [pc, #64]	; (80185fc <xQueueReceive+0x1bc>)
 80185bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80185c0:	601a      	str	r2, [r3, #0]
 80185c2:	f3bf 8f4f 	dsb	sy
 80185c6:	f3bf 8f6f 	isb	sy
 80185ca:	e780      	b.n	80184ce <xQueueReceive+0x8e>
 80185cc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80185ce:	f000 f8a7 	bl	8018720 <prvUnlockQueue>
 80185d2:	f000 fcd3 	bl	8018f7c <xTaskResumeAll>
 80185d6:	e77a      	b.n	80184ce <xQueueReceive+0x8e>
 80185d8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80185da:	f000 f8a1 	bl	8018720 <prvUnlockQueue>
 80185de:	f000 fccd 	bl	8018f7c <xTaskResumeAll>
 80185e2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80185e4:	f000 f8ee 	bl	80187c4 <prvIsQueueEmpty>
 80185e8:	4603      	mov	r3, r0
 80185ea:	2b00      	cmp	r3, #0
 80185ec:	f43f af6f 	beq.w	80184ce <xQueueReceive+0x8e>
 80185f0:	2300      	movs	r3, #0
 80185f2:	4618      	mov	r0, r3
 80185f4:	3730      	adds	r7, #48	; 0x30
 80185f6:	46bd      	mov	sp, r7
 80185f8:	bd80      	pop	{r7, pc}
 80185fa:	bf00      	nop
 80185fc:	e000ed04 	.word	0xe000ed04

08018600 <prvCopyDataToQueue>:
 8018600:	b580      	push	{r7, lr}
 8018602:	b086      	sub	sp, #24
 8018604:	af00      	add	r7, sp, #0
 8018606:	60f8      	str	r0, [r7, #12]
 8018608:	60b9      	str	r1, [r7, #8]
 801860a:	607a      	str	r2, [r7, #4]
 801860c:	2300      	movs	r3, #0
 801860e:	617b      	str	r3, [r7, #20]
 8018610:	68fb      	ldr	r3, [r7, #12]
 8018612:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018614:	613b      	str	r3, [r7, #16]
 8018616:	68fb      	ldr	r3, [r7, #12]
 8018618:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801861a:	2b00      	cmp	r3, #0
 801861c:	d10d      	bne.n	801863a <prvCopyDataToQueue+0x3a>
 801861e:	68fb      	ldr	r3, [r7, #12]
 8018620:	681b      	ldr	r3, [r3, #0]
 8018622:	2b00      	cmp	r3, #0
 8018624:	d14d      	bne.n	80186c2 <prvCopyDataToQueue+0xc2>
 8018626:	68fb      	ldr	r3, [r7, #12]
 8018628:	689b      	ldr	r3, [r3, #8]
 801862a:	4618      	mov	r0, r3
 801862c:	f001 f94c 	bl	80198c8 <xTaskPriorityDisinherit>
 8018630:	6178      	str	r0, [r7, #20]
 8018632:	68fb      	ldr	r3, [r7, #12]
 8018634:	2200      	movs	r2, #0
 8018636:	609a      	str	r2, [r3, #8]
 8018638:	e043      	b.n	80186c2 <prvCopyDataToQueue+0xc2>
 801863a:	687b      	ldr	r3, [r7, #4]
 801863c:	2b00      	cmp	r3, #0
 801863e:	d119      	bne.n	8018674 <prvCopyDataToQueue+0x74>
 8018640:	68fb      	ldr	r3, [r7, #12]
 8018642:	6858      	ldr	r0, [r3, #4]
 8018644:	68fb      	ldr	r3, [r7, #12]
 8018646:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018648:	461a      	mov	r2, r3
 801864a:	68b9      	ldr	r1, [r7, #8]
 801864c:	f002 f9e8 	bl	801aa20 <memcpy>
 8018650:	68fb      	ldr	r3, [r7, #12]
 8018652:	685a      	ldr	r2, [r3, #4]
 8018654:	68fb      	ldr	r3, [r7, #12]
 8018656:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018658:	441a      	add	r2, r3
 801865a:	68fb      	ldr	r3, [r7, #12]
 801865c:	605a      	str	r2, [r3, #4]
 801865e:	68fb      	ldr	r3, [r7, #12]
 8018660:	685a      	ldr	r2, [r3, #4]
 8018662:	68fb      	ldr	r3, [r7, #12]
 8018664:	689b      	ldr	r3, [r3, #8]
 8018666:	429a      	cmp	r2, r3
 8018668:	d32b      	bcc.n	80186c2 <prvCopyDataToQueue+0xc2>
 801866a:	68fb      	ldr	r3, [r7, #12]
 801866c:	681a      	ldr	r2, [r3, #0]
 801866e:	68fb      	ldr	r3, [r7, #12]
 8018670:	605a      	str	r2, [r3, #4]
 8018672:	e026      	b.n	80186c2 <prvCopyDataToQueue+0xc2>
 8018674:	68fb      	ldr	r3, [r7, #12]
 8018676:	68d8      	ldr	r0, [r3, #12]
 8018678:	68fb      	ldr	r3, [r7, #12]
 801867a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801867c:	461a      	mov	r2, r3
 801867e:	68b9      	ldr	r1, [r7, #8]
 8018680:	f002 f9ce 	bl	801aa20 <memcpy>
 8018684:	68fb      	ldr	r3, [r7, #12]
 8018686:	68da      	ldr	r2, [r3, #12]
 8018688:	68fb      	ldr	r3, [r7, #12]
 801868a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801868c:	425b      	negs	r3, r3
 801868e:	441a      	add	r2, r3
 8018690:	68fb      	ldr	r3, [r7, #12]
 8018692:	60da      	str	r2, [r3, #12]
 8018694:	68fb      	ldr	r3, [r7, #12]
 8018696:	68da      	ldr	r2, [r3, #12]
 8018698:	68fb      	ldr	r3, [r7, #12]
 801869a:	681b      	ldr	r3, [r3, #0]
 801869c:	429a      	cmp	r2, r3
 801869e:	d207      	bcs.n	80186b0 <prvCopyDataToQueue+0xb0>
 80186a0:	68fb      	ldr	r3, [r7, #12]
 80186a2:	689a      	ldr	r2, [r3, #8]
 80186a4:	68fb      	ldr	r3, [r7, #12]
 80186a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80186a8:	425b      	negs	r3, r3
 80186aa:	441a      	add	r2, r3
 80186ac:	68fb      	ldr	r3, [r7, #12]
 80186ae:	60da      	str	r2, [r3, #12]
 80186b0:	687b      	ldr	r3, [r7, #4]
 80186b2:	2b02      	cmp	r3, #2
 80186b4:	d105      	bne.n	80186c2 <prvCopyDataToQueue+0xc2>
 80186b6:	693b      	ldr	r3, [r7, #16]
 80186b8:	2b00      	cmp	r3, #0
 80186ba:	d002      	beq.n	80186c2 <prvCopyDataToQueue+0xc2>
 80186bc:	693b      	ldr	r3, [r7, #16]
 80186be:	3b01      	subs	r3, #1
 80186c0:	613b      	str	r3, [r7, #16]
 80186c2:	693b      	ldr	r3, [r7, #16]
 80186c4:	1c5a      	adds	r2, r3, #1
 80186c6:	68fb      	ldr	r3, [r7, #12]
 80186c8:	639a      	str	r2, [r3, #56]	; 0x38
 80186ca:	697b      	ldr	r3, [r7, #20]
 80186cc:	4618      	mov	r0, r3
 80186ce:	3718      	adds	r7, #24
 80186d0:	46bd      	mov	sp, r7
 80186d2:	bd80      	pop	{r7, pc}

080186d4 <prvCopyDataFromQueue>:
 80186d4:	b580      	push	{r7, lr}
 80186d6:	b082      	sub	sp, #8
 80186d8:	af00      	add	r7, sp, #0
 80186da:	6078      	str	r0, [r7, #4]
 80186dc:	6039      	str	r1, [r7, #0]
 80186de:	687b      	ldr	r3, [r7, #4]
 80186e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80186e2:	2b00      	cmp	r3, #0
 80186e4:	d018      	beq.n	8018718 <prvCopyDataFromQueue+0x44>
 80186e6:	687b      	ldr	r3, [r7, #4]
 80186e8:	68da      	ldr	r2, [r3, #12]
 80186ea:	687b      	ldr	r3, [r7, #4]
 80186ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80186ee:	441a      	add	r2, r3
 80186f0:	687b      	ldr	r3, [r7, #4]
 80186f2:	60da      	str	r2, [r3, #12]
 80186f4:	687b      	ldr	r3, [r7, #4]
 80186f6:	68da      	ldr	r2, [r3, #12]
 80186f8:	687b      	ldr	r3, [r7, #4]
 80186fa:	689b      	ldr	r3, [r3, #8]
 80186fc:	429a      	cmp	r2, r3
 80186fe:	d303      	bcc.n	8018708 <prvCopyDataFromQueue+0x34>
 8018700:	687b      	ldr	r3, [r7, #4]
 8018702:	681a      	ldr	r2, [r3, #0]
 8018704:	687b      	ldr	r3, [r7, #4]
 8018706:	60da      	str	r2, [r3, #12]
 8018708:	687b      	ldr	r3, [r7, #4]
 801870a:	68d9      	ldr	r1, [r3, #12]
 801870c:	687b      	ldr	r3, [r7, #4]
 801870e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018710:	461a      	mov	r2, r3
 8018712:	6838      	ldr	r0, [r7, #0]
 8018714:	f002 f984 	bl	801aa20 <memcpy>
 8018718:	bf00      	nop
 801871a:	3708      	adds	r7, #8
 801871c:	46bd      	mov	sp, r7
 801871e:	bd80      	pop	{r7, pc}

08018720 <prvUnlockQueue>:
 8018720:	b580      	push	{r7, lr}
 8018722:	b084      	sub	sp, #16
 8018724:	af00      	add	r7, sp, #0
 8018726:	6078      	str	r0, [r7, #4]
 8018728:	f001 fe44 	bl	801a3b4 <vPortEnterCritical>
 801872c:	687b      	ldr	r3, [r7, #4]
 801872e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8018732:	73fb      	strb	r3, [r7, #15]
 8018734:	e011      	b.n	801875a <prvUnlockQueue+0x3a>
 8018736:	687b      	ldr	r3, [r7, #4]
 8018738:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801873a:	2b00      	cmp	r3, #0
 801873c:	d012      	beq.n	8018764 <prvUnlockQueue+0x44>
 801873e:	687b      	ldr	r3, [r7, #4]
 8018740:	3324      	adds	r3, #36	; 0x24
 8018742:	4618      	mov	r0, r3
 8018744:	f000 fe82 	bl	801944c <xTaskRemoveFromEventList>
 8018748:	4603      	mov	r3, r0
 801874a:	2b00      	cmp	r3, #0
 801874c:	d001      	beq.n	8018752 <prvUnlockQueue+0x32>
 801874e:	f000 ffbb 	bl	80196c8 <vTaskMissedYield>
 8018752:	7bfb      	ldrb	r3, [r7, #15]
 8018754:	3b01      	subs	r3, #1
 8018756:	b2db      	uxtb	r3, r3
 8018758:	73fb      	strb	r3, [r7, #15]
 801875a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801875e:	2b00      	cmp	r3, #0
 8018760:	dce9      	bgt.n	8018736 <prvUnlockQueue+0x16>
 8018762:	e000      	b.n	8018766 <prvUnlockQueue+0x46>
 8018764:	bf00      	nop
 8018766:	687b      	ldr	r3, [r7, #4]
 8018768:	22ff      	movs	r2, #255	; 0xff
 801876a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801876e:	f001 fe51 	bl	801a414 <vPortExitCritical>
 8018772:	f001 fe1f 	bl	801a3b4 <vPortEnterCritical>
 8018776:	687b      	ldr	r3, [r7, #4]
 8018778:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801877c:	73bb      	strb	r3, [r7, #14]
 801877e:	e011      	b.n	80187a4 <prvUnlockQueue+0x84>
 8018780:	687b      	ldr	r3, [r7, #4]
 8018782:	691b      	ldr	r3, [r3, #16]
 8018784:	2b00      	cmp	r3, #0
 8018786:	d012      	beq.n	80187ae <prvUnlockQueue+0x8e>
 8018788:	687b      	ldr	r3, [r7, #4]
 801878a:	3310      	adds	r3, #16
 801878c:	4618      	mov	r0, r3
 801878e:	f000 fe5d 	bl	801944c <xTaskRemoveFromEventList>
 8018792:	4603      	mov	r3, r0
 8018794:	2b00      	cmp	r3, #0
 8018796:	d001      	beq.n	801879c <prvUnlockQueue+0x7c>
 8018798:	f000 ff96 	bl	80196c8 <vTaskMissedYield>
 801879c:	7bbb      	ldrb	r3, [r7, #14]
 801879e:	3b01      	subs	r3, #1
 80187a0:	b2db      	uxtb	r3, r3
 80187a2:	73bb      	strb	r3, [r7, #14]
 80187a4:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80187a8:	2b00      	cmp	r3, #0
 80187aa:	dce9      	bgt.n	8018780 <prvUnlockQueue+0x60>
 80187ac:	e000      	b.n	80187b0 <prvUnlockQueue+0x90>
 80187ae:	bf00      	nop
 80187b0:	687b      	ldr	r3, [r7, #4]
 80187b2:	22ff      	movs	r2, #255	; 0xff
 80187b4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80187b8:	f001 fe2c 	bl	801a414 <vPortExitCritical>
 80187bc:	bf00      	nop
 80187be:	3710      	adds	r7, #16
 80187c0:	46bd      	mov	sp, r7
 80187c2:	bd80      	pop	{r7, pc}

080187c4 <prvIsQueueEmpty>:
 80187c4:	b580      	push	{r7, lr}
 80187c6:	b084      	sub	sp, #16
 80187c8:	af00      	add	r7, sp, #0
 80187ca:	6078      	str	r0, [r7, #4]
 80187cc:	f001 fdf2 	bl	801a3b4 <vPortEnterCritical>
 80187d0:	687b      	ldr	r3, [r7, #4]
 80187d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80187d4:	2b00      	cmp	r3, #0
 80187d6:	d102      	bne.n	80187de <prvIsQueueEmpty+0x1a>
 80187d8:	2301      	movs	r3, #1
 80187da:	60fb      	str	r3, [r7, #12]
 80187dc:	e001      	b.n	80187e2 <prvIsQueueEmpty+0x1e>
 80187de:	2300      	movs	r3, #0
 80187e0:	60fb      	str	r3, [r7, #12]
 80187e2:	f001 fe17 	bl	801a414 <vPortExitCritical>
 80187e6:	68fb      	ldr	r3, [r7, #12]
 80187e8:	4618      	mov	r0, r3
 80187ea:	3710      	adds	r7, #16
 80187ec:	46bd      	mov	sp, r7
 80187ee:	bd80      	pop	{r7, pc}

080187f0 <prvIsQueueFull>:
 80187f0:	b580      	push	{r7, lr}
 80187f2:	b084      	sub	sp, #16
 80187f4:	af00      	add	r7, sp, #0
 80187f6:	6078      	str	r0, [r7, #4]
 80187f8:	f001 fddc 	bl	801a3b4 <vPortEnterCritical>
 80187fc:	687b      	ldr	r3, [r7, #4]
 80187fe:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8018800:	687b      	ldr	r3, [r7, #4]
 8018802:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018804:	429a      	cmp	r2, r3
 8018806:	d102      	bne.n	801880e <prvIsQueueFull+0x1e>
 8018808:	2301      	movs	r3, #1
 801880a:	60fb      	str	r3, [r7, #12]
 801880c:	e001      	b.n	8018812 <prvIsQueueFull+0x22>
 801880e:	2300      	movs	r3, #0
 8018810:	60fb      	str	r3, [r7, #12]
 8018812:	f001 fdff 	bl	801a414 <vPortExitCritical>
 8018816:	68fb      	ldr	r3, [r7, #12]
 8018818:	4618      	mov	r0, r3
 801881a:	3710      	adds	r7, #16
 801881c:	46bd      	mov	sp, r7
 801881e:	bd80      	pop	{r7, pc}

08018820 <vQueueAddToRegistry>:
 8018820:	b480      	push	{r7}
 8018822:	b085      	sub	sp, #20
 8018824:	af00      	add	r7, sp, #0
 8018826:	6078      	str	r0, [r7, #4]
 8018828:	6039      	str	r1, [r7, #0]
 801882a:	2300      	movs	r3, #0
 801882c:	60fb      	str	r3, [r7, #12]
 801882e:	e014      	b.n	801885a <vQueueAddToRegistry+0x3a>
 8018830:	4a0f      	ldr	r2, [pc, #60]	; (8018870 <vQueueAddToRegistry+0x50>)
 8018832:	68fb      	ldr	r3, [r7, #12]
 8018834:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8018838:	2b00      	cmp	r3, #0
 801883a:	d10b      	bne.n	8018854 <vQueueAddToRegistry+0x34>
 801883c:	490c      	ldr	r1, [pc, #48]	; (8018870 <vQueueAddToRegistry+0x50>)
 801883e:	68fb      	ldr	r3, [r7, #12]
 8018840:	683a      	ldr	r2, [r7, #0]
 8018842:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8018846:	4a0a      	ldr	r2, [pc, #40]	; (8018870 <vQueueAddToRegistry+0x50>)
 8018848:	68fb      	ldr	r3, [r7, #12]
 801884a:	00db      	lsls	r3, r3, #3
 801884c:	4413      	add	r3, r2
 801884e:	687a      	ldr	r2, [r7, #4]
 8018850:	605a      	str	r2, [r3, #4]
 8018852:	e006      	b.n	8018862 <vQueueAddToRegistry+0x42>
 8018854:	68fb      	ldr	r3, [r7, #12]
 8018856:	3301      	adds	r3, #1
 8018858:	60fb      	str	r3, [r7, #12]
 801885a:	68fb      	ldr	r3, [r7, #12]
 801885c:	2b07      	cmp	r3, #7
 801885e:	d9e7      	bls.n	8018830 <vQueueAddToRegistry+0x10>
 8018860:	bf00      	nop
 8018862:	bf00      	nop
 8018864:	3714      	adds	r7, #20
 8018866:	46bd      	mov	sp, r7
 8018868:	f85d 7b04 	ldr.w	r7, [sp], #4
 801886c:	4770      	bx	lr
 801886e:	bf00      	nop
 8018870:	24002744 	.word	0x24002744

08018874 <vQueueWaitForMessageRestricted>:
 8018874:	b580      	push	{r7, lr}
 8018876:	b086      	sub	sp, #24
 8018878:	af00      	add	r7, sp, #0
 801887a:	60f8      	str	r0, [r7, #12]
 801887c:	60b9      	str	r1, [r7, #8]
 801887e:	607a      	str	r2, [r7, #4]
 8018880:	68fb      	ldr	r3, [r7, #12]
 8018882:	617b      	str	r3, [r7, #20]
 8018884:	f001 fd96 	bl	801a3b4 <vPortEnterCritical>
 8018888:	697b      	ldr	r3, [r7, #20]
 801888a:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801888e:	b25b      	sxtb	r3, r3
 8018890:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8018894:	d103      	bne.n	801889e <vQueueWaitForMessageRestricted+0x2a>
 8018896:	697b      	ldr	r3, [r7, #20]
 8018898:	2200      	movs	r2, #0
 801889a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801889e:	697b      	ldr	r3, [r7, #20]
 80188a0:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80188a4:	b25b      	sxtb	r3, r3
 80188a6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80188aa:	d103      	bne.n	80188b4 <vQueueWaitForMessageRestricted+0x40>
 80188ac:	697b      	ldr	r3, [r7, #20]
 80188ae:	2200      	movs	r2, #0
 80188b0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80188b4:	f001 fdae 	bl	801a414 <vPortExitCritical>
 80188b8:	697b      	ldr	r3, [r7, #20]
 80188ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80188bc:	2b00      	cmp	r3, #0
 80188be:	d106      	bne.n	80188ce <vQueueWaitForMessageRestricted+0x5a>
 80188c0:	697b      	ldr	r3, [r7, #20]
 80188c2:	3324      	adds	r3, #36	; 0x24
 80188c4:	687a      	ldr	r2, [r7, #4]
 80188c6:	68b9      	ldr	r1, [r7, #8]
 80188c8:	4618      	mov	r0, r3
 80188ca:	f000 fd93 	bl	80193f4 <vTaskPlaceOnEventListRestricted>
 80188ce:	6978      	ldr	r0, [r7, #20]
 80188d0:	f7ff ff26 	bl	8018720 <prvUnlockQueue>
 80188d4:	bf00      	nop
 80188d6:	3718      	adds	r7, #24
 80188d8:	46bd      	mov	sp, r7
 80188da:	bd80      	pop	{r7, pc}

080188dc <xTaskCreateStatic>:
 80188dc:	b580      	push	{r7, lr}
 80188de:	b08e      	sub	sp, #56	; 0x38
 80188e0:	af04      	add	r7, sp, #16
 80188e2:	60f8      	str	r0, [r7, #12]
 80188e4:	60b9      	str	r1, [r7, #8]
 80188e6:	607a      	str	r2, [r7, #4]
 80188e8:	603b      	str	r3, [r7, #0]
 80188ea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80188ec:	2b00      	cmp	r3, #0
 80188ee:	d10a      	bne.n	8018906 <xTaskCreateStatic+0x2a>
 80188f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80188f4:	f383 8811 	msr	BASEPRI, r3
 80188f8:	f3bf 8f6f 	isb	sy
 80188fc:	f3bf 8f4f 	dsb	sy
 8018900:	623b      	str	r3, [r7, #32]
 8018902:	bf00      	nop
 8018904:	e7fe      	b.n	8018904 <xTaskCreateStatic+0x28>
 8018906:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8018908:	2b00      	cmp	r3, #0
 801890a:	d10a      	bne.n	8018922 <xTaskCreateStatic+0x46>
 801890c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018910:	f383 8811 	msr	BASEPRI, r3
 8018914:	f3bf 8f6f 	isb	sy
 8018918:	f3bf 8f4f 	dsb	sy
 801891c:	61fb      	str	r3, [r7, #28]
 801891e:	bf00      	nop
 8018920:	e7fe      	b.n	8018920 <xTaskCreateStatic+0x44>
 8018922:	235c      	movs	r3, #92	; 0x5c
 8018924:	613b      	str	r3, [r7, #16]
 8018926:	693b      	ldr	r3, [r7, #16]
 8018928:	2b5c      	cmp	r3, #92	; 0x5c
 801892a:	d00a      	beq.n	8018942 <xTaskCreateStatic+0x66>
 801892c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018930:	f383 8811 	msr	BASEPRI, r3
 8018934:	f3bf 8f6f 	isb	sy
 8018938:	f3bf 8f4f 	dsb	sy
 801893c:	61bb      	str	r3, [r7, #24]
 801893e:	bf00      	nop
 8018940:	e7fe      	b.n	8018940 <xTaskCreateStatic+0x64>
 8018942:	693b      	ldr	r3, [r7, #16]
 8018944:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8018946:	2b00      	cmp	r3, #0
 8018948:	d01e      	beq.n	8018988 <xTaskCreateStatic+0xac>
 801894a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801894c:	2b00      	cmp	r3, #0
 801894e:	d01b      	beq.n	8018988 <xTaskCreateStatic+0xac>
 8018950:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8018952:	627b      	str	r3, [r7, #36]	; 0x24
 8018954:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8018956:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8018958:	631a      	str	r2, [r3, #48]	; 0x30
 801895a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801895c:	2202      	movs	r2, #2
 801895e:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 8018962:	2300      	movs	r3, #0
 8018964:	9303      	str	r3, [sp, #12]
 8018966:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8018968:	9302      	str	r3, [sp, #8]
 801896a:	f107 0314 	add.w	r3, r7, #20
 801896e:	9301      	str	r3, [sp, #4]
 8018970:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018972:	9300      	str	r3, [sp, #0]
 8018974:	683b      	ldr	r3, [r7, #0]
 8018976:	687a      	ldr	r2, [r7, #4]
 8018978:	68b9      	ldr	r1, [r7, #8]
 801897a:	68f8      	ldr	r0, [r7, #12]
 801897c:	f000 f850 	bl	8018a20 <prvInitialiseNewTask>
 8018980:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8018982:	f000 f8dd 	bl	8018b40 <prvAddNewTaskToReadyList>
 8018986:	e001      	b.n	801898c <xTaskCreateStatic+0xb0>
 8018988:	2300      	movs	r3, #0
 801898a:	617b      	str	r3, [r7, #20]
 801898c:	697b      	ldr	r3, [r7, #20]
 801898e:	4618      	mov	r0, r3
 8018990:	3728      	adds	r7, #40	; 0x28
 8018992:	46bd      	mov	sp, r7
 8018994:	bd80      	pop	{r7, pc}

08018996 <xTaskCreate>:
 8018996:	b580      	push	{r7, lr}
 8018998:	b08c      	sub	sp, #48	; 0x30
 801899a:	af04      	add	r7, sp, #16
 801899c:	60f8      	str	r0, [r7, #12]
 801899e:	60b9      	str	r1, [r7, #8]
 80189a0:	603b      	str	r3, [r7, #0]
 80189a2:	4613      	mov	r3, r2
 80189a4:	80fb      	strh	r3, [r7, #6]
 80189a6:	88fb      	ldrh	r3, [r7, #6]
 80189a8:	009b      	lsls	r3, r3, #2
 80189aa:	4618      	mov	r0, r3
 80189ac:	f001 fe24 	bl	801a5f8 <pvPortMalloc>
 80189b0:	6178      	str	r0, [r7, #20]
 80189b2:	697b      	ldr	r3, [r7, #20]
 80189b4:	2b00      	cmp	r3, #0
 80189b6:	d00e      	beq.n	80189d6 <xTaskCreate+0x40>
 80189b8:	205c      	movs	r0, #92	; 0x5c
 80189ba:	f001 fe1d 	bl	801a5f8 <pvPortMalloc>
 80189be:	61f8      	str	r0, [r7, #28]
 80189c0:	69fb      	ldr	r3, [r7, #28]
 80189c2:	2b00      	cmp	r3, #0
 80189c4:	d003      	beq.n	80189ce <xTaskCreate+0x38>
 80189c6:	69fb      	ldr	r3, [r7, #28]
 80189c8:	697a      	ldr	r2, [r7, #20]
 80189ca:	631a      	str	r2, [r3, #48]	; 0x30
 80189cc:	e005      	b.n	80189da <xTaskCreate+0x44>
 80189ce:	6978      	ldr	r0, [r7, #20]
 80189d0:	f001 fede 	bl	801a790 <vPortFree>
 80189d4:	e001      	b.n	80189da <xTaskCreate+0x44>
 80189d6:	2300      	movs	r3, #0
 80189d8:	61fb      	str	r3, [r7, #28]
 80189da:	69fb      	ldr	r3, [r7, #28]
 80189dc:	2b00      	cmp	r3, #0
 80189de:	d017      	beq.n	8018a10 <xTaskCreate+0x7a>
 80189e0:	69fb      	ldr	r3, [r7, #28]
 80189e2:	2200      	movs	r2, #0
 80189e4:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 80189e8:	88fa      	ldrh	r2, [r7, #6]
 80189ea:	2300      	movs	r3, #0
 80189ec:	9303      	str	r3, [sp, #12]
 80189ee:	69fb      	ldr	r3, [r7, #28]
 80189f0:	9302      	str	r3, [sp, #8]
 80189f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80189f4:	9301      	str	r3, [sp, #4]
 80189f6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80189f8:	9300      	str	r3, [sp, #0]
 80189fa:	683b      	ldr	r3, [r7, #0]
 80189fc:	68b9      	ldr	r1, [r7, #8]
 80189fe:	68f8      	ldr	r0, [r7, #12]
 8018a00:	f000 f80e 	bl	8018a20 <prvInitialiseNewTask>
 8018a04:	69f8      	ldr	r0, [r7, #28]
 8018a06:	f000 f89b 	bl	8018b40 <prvAddNewTaskToReadyList>
 8018a0a:	2301      	movs	r3, #1
 8018a0c:	61bb      	str	r3, [r7, #24]
 8018a0e:	e002      	b.n	8018a16 <xTaskCreate+0x80>
 8018a10:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8018a14:	61bb      	str	r3, [r7, #24]
 8018a16:	69bb      	ldr	r3, [r7, #24]
 8018a18:	4618      	mov	r0, r3
 8018a1a:	3720      	adds	r7, #32
 8018a1c:	46bd      	mov	sp, r7
 8018a1e:	bd80      	pop	{r7, pc}

08018a20 <prvInitialiseNewTask>:
 8018a20:	b580      	push	{r7, lr}
 8018a22:	b088      	sub	sp, #32
 8018a24:	af00      	add	r7, sp, #0
 8018a26:	60f8      	str	r0, [r7, #12]
 8018a28:	60b9      	str	r1, [r7, #8]
 8018a2a:	607a      	str	r2, [r7, #4]
 8018a2c:	603b      	str	r3, [r7, #0]
 8018a2e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018a30:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8018a32:	687b      	ldr	r3, [r7, #4]
 8018a34:	009b      	lsls	r3, r3, #2
 8018a36:	461a      	mov	r2, r3
 8018a38:	21a5      	movs	r1, #165	; 0xa5
 8018a3a:	f001 ffff 	bl	801aa3c <memset>
 8018a3e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018a40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8018a42:	6879      	ldr	r1, [r7, #4]
 8018a44:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
 8018a48:	440b      	add	r3, r1
 8018a4a:	009b      	lsls	r3, r3, #2
 8018a4c:	4413      	add	r3, r2
 8018a4e:	61bb      	str	r3, [r7, #24]
 8018a50:	69bb      	ldr	r3, [r7, #24]
 8018a52:	f023 0307 	bic.w	r3, r3, #7
 8018a56:	61bb      	str	r3, [r7, #24]
 8018a58:	69bb      	ldr	r3, [r7, #24]
 8018a5a:	f003 0307 	and.w	r3, r3, #7
 8018a5e:	2b00      	cmp	r3, #0
 8018a60:	d00a      	beq.n	8018a78 <prvInitialiseNewTask+0x58>
 8018a62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018a66:	f383 8811 	msr	BASEPRI, r3
 8018a6a:	f3bf 8f6f 	isb	sy
 8018a6e:	f3bf 8f4f 	dsb	sy
 8018a72:	617b      	str	r3, [r7, #20]
 8018a74:	bf00      	nop
 8018a76:	e7fe      	b.n	8018a76 <prvInitialiseNewTask+0x56>
 8018a78:	68bb      	ldr	r3, [r7, #8]
 8018a7a:	2b00      	cmp	r3, #0
 8018a7c:	d01f      	beq.n	8018abe <prvInitialiseNewTask+0x9e>
 8018a7e:	2300      	movs	r3, #0
 8018a80:	61fb      	str	r3, [r7, #28]
 8018a82:	e012      	b.n	8018aaa <prvInitialiseNewTask+0x8a>
 8018a84:	68ba      	ldr	r2, [r7, #8]
 8018a86:	69fb      	ldr	r3, [r7, #28]
 8018a88:	4413      	add	r3, r2
 8018a8a:	7819      	ldrb	r1, [r3, #0]
 8018a8c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8018a8e:	69fb      	ldr	r3, [r7, #28]
 8018a90:	4413      	add	r3, r2
 8018a92:	3334      	adds	r3, #52	; 0x34
 8018a94:	460a      	mov	r2, r1
 8018a96:	701a      	strb	r2, [r3, #0]
 8018a98:	68ba      	ldr	r2, [r7, #8]
 8018a9a:	69fb      	ldr	r3, [r7, #28]
 8018a9c:	4413      	add	r3, r2
 8018a9e:	781b      	ldrb	r3, [r3, #0]
 8018aa0:	2b00      	cmp	r3, #0
 8018aa2:	d006      	beq.n	8018ab2 <prvInitialiseNewTask+0x92>
 8018aa4:	69fb      	ldr	r3, [r7, #28]
 8018aa6:	3301      	adds	r3, #1
 8018aa8:	61fb      	str	r3, [r7, #28]
 8018aaa:	69fb      	ldr	r3, [r7, #28]
 8018aac:	2b0f      	cmp	r3, #15
 8018aae:	d9e9      	bls.n	8018a84 <prvInitialiseNewTask+0x64>
 8018ab0:	e000      	b.n	8018ab4 <prvInitialiseNewTask+0x94>
 8018ab2:	bf00      	nop
 8018ab4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018ab6:	2200      	movs	r2, #0
 8018ab8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8018abc:	e003      	b.n	8018ac6 <prvInitialiseNewTask+0xa6>
 8018abe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018ac0:	2200      	movs	r2, #0
 8018ac2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8018ac6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8018ac8:	2b37      	cmp	r3, #55	; 0x37
 8018aca:	d901      	bls.n	8018ad0 <prvInitialiseNewTask+0xb0>
 8018acc:	2337      	movs	r3, #55	; 0x37
 8018ace:	62bb      	str	r3, [r7, #40]	; 0x28
 8018ad0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018ad2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8018ad4:	62da      	str	r2, [r3, #44]	; 0x2c
 8018ad6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018ad8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8018ada:	64da      	str	r2, [r3, #76]	; 0x4c
 8018adc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018ade:	2200      	movs	r2, #0
 8018ae0:	651a      	str	r2, [r3, #80]	; 0x50
 8018ae2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018ae4:	3304      	adds	r3, #4
 8018ae6:	4618      	mov	r0, r3
 8018ae8:	f7ff f978 	bl	8017ddc <vListInitialiseItem>
 8018aec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018aee:	3318      	adds	r3, #24
 8018af0:	4618      	mov	r0, r3
 8018af2:	f7ff f973 	bl	8017ddc <vListInitialiseItem>
 8018af6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018af8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8018afa:	611a      	str	r2, [r3, #16]
 8018afc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8018afe:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8018b02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018b04:	619a      	str	r2, [r3, #24]
 8018b06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018b08:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8018b0a:	625a      	str	r2, [r3, #36]	; 0x24
 8018b0c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018b0e:	2200      	movs	r2, #0
 8018b10:	655a      	str	r2, [r3, #84]	; 0x54
 8018b12:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018b14:	2200      	movs	r2, #0
 8018b16:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 8018b1a:	683a      	ldr	r2, [r7, #0]
 8018b1c:	68f9      	ldr	r1, [r7, #12]
 8018b1e:	69b8      	ldr	r0, [r7, #24]
 8018b20:	f001 fb1a 	bl	801a158 <pxPortInitialiseStack>
 8018b24:	4602      	mov	r2, r0
 8018b26:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018b28:	601a      	str	r2, [r3, #0]
 8018b2a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8018b2c:	2b00      	cmp	r3, #0
 8018b2e:	d002      	beq.n	8018b36 <prvInitialiseNewTask+0x116>
 8018b30:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8018b32:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8018b34:	601a      	str	r2, [r3, #0]
 8018b36:	bf00      	nop
 8018b38:	3720      	adds	r7, #32
 8018b3a:	46bd      	mov	sp, r7
 8018b3c:	bd80      	pop	{r7, pc}
	...

08018b40 <prvAddNewTaskToReadyList>:
 8018b40:	b580      	push	{r7, lr}
 8018b42:	b082      	sub	sp, #8
 8018b44:	af00      	add	r7, sp, #0
 8018b46:	6078      	str	r0, [r7, #4]
 8018b48:	f001 fc34 	bl	801a3b4 <vPortEnterCritical>
 8018b4c:	4b2d      	ldr	r3, [pc, #180]	; (8018c04 <prvAddNewTaskToReadyList+0xc4>)
 8018b4e:	681b      	ldr	r3, [r3, #0]
 8018b50:	3301      	adds	r3, #1
 8018b52:	4a2c      	ldr	r2, [pc, #176]	; (8018c04 <prvAddNewTaskToReadyList+0xc4>)
 8018b54:	6013      	str	r3, [r2, #0]
 8018b56:	4b2c      	ldr	r3, [pc, #176]	; (8018c08 <prvAddNewTaskToReadyList+0xc8>)
 8018b58:	681b      	ldr	r3, [r3, #0]
 8018b5a:	2b00      	cmp	r3, #0
 8018b5c:	d109      	bne.n	8018b72 <prvAddNewTaskToReadyList+0x32>
 8018b5e:	4a2a      	ldr	r2, [pc, #168]	; (8018c08 <prvAddNewTaskToReadyList+0xc8>)
 8018b60:	687b      	ldr	r3, [r7, #4]
 8018b62:	6013      	str	r3, [r2, #0]
 8018b64:	4b27      	ldr	r3, [pc, #156]	; (8018c04 <prvAddNewTaskToReadyList+0xc4>)
 8018b66:	681b      	ldr	r3, [r3, #0]
 8018b68:	2b01      	cmp	r3, #1
 8018b6a:	d110      	bne.n	8018b8e <prvAddNewTaskToReadyList+0x4e>
 8018b6c:	f000 fdd0 	bl	8019710 <prvInitialiseTaskLists>
 8018b70:	e00d      	b.n	8018b8e <prvAddNewTaskToReadyList+0x4e>
 8018b72:	4b26      	ldr	r3, [pc, #152]	; (8018c0c <prvAddNewTaskToReadyList+0xcc>)
 8018b74:	681b      	ldr	r3, [r3, #0]
 8018b76:	2b00      	cmp	r3, #0
 8018b78:	d109      	bne.n	8018b8e <prvAddNewTaskToReadyList+0x4e>
 8018b7a:	4b23      	ldr	r3, [pc, #140]	; (8018c08 <prvAddNewTaskToReadyList+0xc8>)
 8018b7c:	681b      	ldr	r3, [r3, #0]
 8018b7e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018b80:	687b      	ldr	r3, [r7, #4]
 8018b82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018b84:	429a      	cmp	r2, r3
 8018b86:	d802      	bhi.n	8018b8e <prvAddNewTaskToReadyList+0x4e>
 8018b88:	4a1f      	ldr	r2, [pc, #124]	; (8018c08 <prvAddNewTaskToReadyList+0xc8>)
 8018b8a:	687b      	ldr	r3, [r7, #4]
 8018b8c:	6013      	str	r3, [r2, #0]
 8018b8e:	4b20      	ldr	r3, [pc, #128]	; (8018c10 <prvAddNewTaskToReadyList+0xd0>)
 8018b90:	681b      	ldr	r3, [r3, #0]
 8018b92:	3301      	adds	r3, #1
 8018b94:	4a1e      	ldr	r2, [pc, #120]	; (8018c10 <prvAddNewTaskToReadyList+0xd0>)
 8018b96:	6013      	str	r3, [r2, #0]
 8018b98:	4b1d      	ldr	r3, [pc, #116]	; (8018c10 <prvAddNewTaskToReadyList+0xd0>)
 8018b9a:	681a      	ldr	r2, [r3, #0]
 8018b9c:	687b      	ldr	r3, [r7, #4]
 8018b9e:	645a      	str	r2, [r3, #68]	; 0x44
 8018ba0:	687b      	ldr	r3, [r7, #4]
 8018ba2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018ba4:	4b1b      	ldr	r3, [pc, #108]	; (8018c14 <prvAddNewTaskToReadyList+0xd4>)
 8018ba6:	681b      	ldr	r3, [r3, #0]
 8018ba8:	429a      	cmp	r2, r3
 8018baa:	d903      	bls.n	8018bb4 <prvAddNewTaskToReadyList+0x74>
 8018bac:	687b      	ldr	r3, [r7, #4]
 8018bae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018bb0:	4a18      	ldr	r2, [pc, #96]	; (8018c14 <prvAddNewTaskToReadyList+0xd4>)
 8018bb2:	6013      	str	r3, [r2, #0]
 8018bb4:	687b      	ldr	r3, [r7, #4]
 8018bb6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018bb8:	4613      	mov	r3, r2
 8018bba:	009b      	lsls	r3, r3, #2
 8018bbc:	4413      	add	r3, r2
 8018bbe:	009b      	lsls	r3, r3, #2
 8018bc0:	4a15      	ldr	r2, [pc, #84]	; (8018c18 <prvAddNewTaskToReadyList+0xd8>)
 8018bc2:	441a      	add	r2, r3
 8018bc4:	687b      	ldr	r3, [r7, #4]
 8018bc6:	3304      	adds	r3, #4
 8018bc8:	4619      	mov	r1, r3
 8018bca:	4610      	mov	r0, r2
 8018bcc:	f7ff f913 	bl	8017df6 <vListInsertEnd>
 8018bd0:	f001 fc20 	bl	801a414 <vPortExitCritical>
 8018bd4:	4b0d      	ldr	r3, [pc, #52]	; (8018c0c <prvAddNewTaskToReadyList+0xcc>)
 8018bd6:	681b      	ldr	r3, [r3, #0]
 8018bd8:	2b00      	cmp	r3, #0
 8018bda:	d00e      	beq.n	8018bfa <prvAddNewTaskToReadyList+0xba>
 8018bdc:	4b0a      	ldr	r3, [pc, #40]	; (8018c08 <prvAddNewTaskToReadyList+0xc8>)
 8018bde:	681b      	ldr	r3, [r3, #0]
 8018be0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018be2:	687b      	ldr	r3, [r7, #4]
 8018be4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018be6:	429a      	cmp	r2, r3
 8018be8:	d207      	bcs.n	8018bfa <prvAddNewTaskToReadyList+0xba>
 8018bea:	4b0c      	ldr	r3, [pc, #48]	; (8018c1c <prvAddNewTaskToReadyList+0xdc>)
 8018bec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8018bf0:	601a      	str	r2, [r3, #0]
 8018bf2:	f3bf 8f4f 	dsb	sy
 8018bf6:	f3bf 8f6f 	isb	sy
 8018bfa:	bf00      	nop
 8018bfc:	3708      	adds	r7, #8
 8018bfe:	46bd      	mov	sp, r7
 8018c00:	bd80      	pop	{r7, pc}
 8018c02:	bf00      	nop
 8018c04:	24002c58 	.word	0x24002c58
 8018c08:	24002784 	.word	0x24002784
 8018c0c:	24002c64 	.word	0x24002c64
 8018c10:	24002c74 	.word	0x24002c74
 8018c14:	24002c60 	.word	0x24002c60
 8018c18:	24002788 	.word	0x24002788
 8018c1c:	e000ed04 	.word	0xe000ed04

08018c20 <vTaskDelay>:
 8018c20:	b580      	push	{r7, lr}
 8018c22:	b084      	sub	sp, #16
 8018c24:	af00      	add	r7, sp, #0
 8018c26:	6078      	str	r0, [r7, #4]
 8018c28:	2300      	movs	r3, #0
 8018c2a:	60fb      	str	r3, [r7, #12]
 8018c2c:	687b      	ldr	r3, [r7, #4]
 8018c2e:	2b00      	cmp	r3, #0
 8018c30:	d017      	beq.n	8018c62 <vTaskDelay+0x42>
 8018c32:	4b13      	ldr	r3, [pc, #76]	; (8018c80 <vTaskDelay+0x60>)
 8018c34:	681b      	ldr	r3, [r3, #0]
 8018c36:	2b00      	cmp	r3, #0
 8018c38:	d00a      	beq.n	8018c50 <vTaskDelay+0x30>
 8018c3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018c3e:	f383 8811 	msr	BASEPRI, r3
 8018c42:	f3bf 8f6f 	isb	sy
 8018c46:	f3bf 8f4f 	dsb	sy
 8018c4a:	60bb      	str	r3, [r7, #8]
 8018c4c:	bf00      	nop
 8018c4e:	e7fe      	b.n	8018c4e <vTaskDelay+0x2e>
 8018c50:	f000 f986 	bl	8018f60 <vTaskSuspendAll>
 8018c54:	2100      	movs	r1, #0
 8018c56:	6878      	ldr	r0, [r7, #4]
 8018c58:	f000 febc 	bl	80199d4 <prvAddCurrentTaskToDelayedList>
 8018c5c:	f000 f98e 	bl	8018f7c <xTaskResumeAll>
 8018c60:	60f8      	str	r0, [r7, #12]
 8018c62:	68fb      	ldr	r3, [r7, #12]
 8018c64:	2b00      	cmp	r3, #0
 8018c66:	d107      	bne.n	8018c78 <vTaskDelay+0x58>
 8018c68:	4b06      	ldr	r3, [pc, #24]	; (8018c84 <vTaskDelay+0x64>)
 8018c6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8018c6e:	601a      	str	r2, [r3, #0]
 8018c70:	f3bf 8f4f 	dsb	sy
 8018c74:	f3bf 8f6f 	isb	sy
 8018c78:	bf00      	nop
 8018c7a:	3710      	adds	r7, #16
 8018c7c:	46bd      	mov	sp, r7
 8018c7e:	bd80      	pop	{r7, pc}
 8018c80:	24002c80 	.word	0x24002c80
 8018c84:	e000ed04 	.word	0xe000ed04

08018c88 <vTaskSuspend>:
 8018c88:	b580      	push	{r7, lr}
 8018c8a:	b084      	sub	sp, #16
 8018c8c:	af00      	add	r7, sp, #0
 8018c8e:	6078      	str	r0, [r7, #4]
 8018c90:	f001 fb90 	bl	801a3b4 <vPortEnterCritical>
 8018c94:	687b      	ldr	r3, [r7, #4]
 8018c96:	2b00      	cmp	r3, #0
 8018c98:	d102      	bne.n	8018ca0 <vTaskSuspend+0x18>
 8018c9a:	4b30      	ldr	r3, [pc, #192]	; (8018d5c <vTaskSuspend+0xd4>)
 8018c9c:	681b      	ldr	r3, [r3, #0]
 8018c9e:	e000      	b.n	8018ca2 <vTaskSuspend+0x1a>
 8018ca0:	687b      	ldr	r3, [r7, #4]
 8018ca2:	60fb      	str	r3, [r7, #12]
 8018ca4:	68fb      	ldr	r3, [r7, #12]
 8018ca6:	3304      	adds	r3, #4
 8018ca8:	4618      	mov	r0, r3
 8018caa:	f7ff f901 	bl	8017eb0 <uxListRemove>
 8018cae:	68fb      	ldr	r3, [r7, #12]
 8018cb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018cb2:	2b00      	cmp	r3, #0
 8018cb4:	d004      	beq.n	8018cc0 <vTaskSuspend+0x38>
 8018cb6:	68fb      	ldr	r3, [r7, #12]
 8018cb8:	3318      	adds	r3, #24
 8018cba:	4618      	mov	r0, r3
 8018cbc:	f7ff f8f8 	bl	8017eb0 <uxListRemove>
 8018cc0:	68fb      	ldr	r3, [r7, #12]
 8018cc2:	3304      	adds	r3, #4
 8018cc4:	4619      	mov	r1, r3
 8018cc6:	4826      	ldr	r0, [pc, #152]	; (8018d60 <vTaskSuspend+0xd8>)
 8018cc8:	f7ff f895 	bl	8017df6 <vListInsertEnd>
 8018ccc:	68fb      	ldr	r3, [r7, #12]
 8018cce:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 8018cd2:	b2db      	uxtb	r3, r3
 8018cd4:	2b01      	cmp	r3, #1
 8018cd6:	d103      	bne.n	8018ce0 <vTaskSuspend+0x58>
 8018cd8:	68fb      	ldr	r3, [r7, #12]
 8018cda:	2200      	movs	r2, #0
 8018cdc:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 8018ce0:	f001 fb98 	bl	801a414 <vPortExitCritical>
 8018ce4:	4b1f      	ldr	r3, [pc, #124]	; (8018d64 <vTaskSuspend+0xdc>)
 8018ce6:	681b      	ldr	r3, [r3, #0]
 8018ce8:	2b00      	cmp	r3, #0
 8018cea:	d005      	beq.n	8018cf8 <vTaskSuspend+0x70>
 8018cec:	f001 fb62 	bl	801a3b4 <vPortEnterCritical>
 8018cf0:	f000 fdac 	bl	801984c <prvResetNextTaskUnblockTime>
 8018cf4:	f001 fb8e 	bl	801a414 <vPortExitCritical>
 8018cf8:	4b18      	ldr	r3, [pc, #96]	; (8018d5c <vTaskSuspend+0xd4>)
 8018cfa:	681b      	ldr	r3, [r3, #0]
 8018cfc:	68fa      	ldr	r2, [r7, #12]
 8018cfe:	429a      	cmp	r2, r3
 8018d00:	d127      	bne.n	8018d52 <vTaskSuspend+0xca>
 8018d02:	4b18      	ldr	r3, [pc, #96]	; (8018d64 <vTaskSuspend+0xdc>)
 8018d04:	681b      	ldr	r3, [r3, #0]
 8018d06:	2b00      	cmp	r3, #0
 8018d08:	d017      	beq.n	8018d3a <vTaskSuspend+0xb2>
 8018d0a:	4b17      	ldr	r3, [pc, #92]	; (8018d68 <vTaskSuspend+0xe0>)
 8018d0c:	681b      	ldr	r3, [r3, #0]
 8018d0e:	2b00      	cmp	r3, #0
 8018d10:	d00a      	beq.n	8018d28 <vTaskSuspend+0xa0>
 8018d12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018d16:	f383 8811 	msr	BASEPRI, r3
 8018d1a:	f3bf 8f6f 	isb	sy
 8018d1e:	f3bf 8f4f 	dsb	sy
 8018d22:	60bb      	str	r3, [r7, #8]
 8018d24:	bf00      	nop
 8018d26:	e7fe      	b.n	8018d26 <vTaskSuspend+0x9e>
 8018d28:	4b10      	ldr	r3, [pc, #64]	; (8018d6c <vTaskSuspend+0xe4>)
 8018d2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8018d2e:	601a      	str	r2, [r3, #0]
 8018d30:	f3bf 8f4f 	dsb	sy
 8018d34:	f3bf 8f6f 	isb	sy
 8018d38:	e00b      	b.n	8018d52 <vTaskSuspend+0xca>
 8018d3a:	4b09      	ldr	r3, [pc, #36]	; (8018d60 <vTaskSuspend+0xd8>)
 8018d3c:	681a      	ldr	r2, [r3, #0]
 8018d3e:	4b0c      	ldr	r3, [pc, #48]	; (8018d70 <vTaskSuspend+0xe8>)
 8018d40:	681b      	ldr	r3, [r3, #0]
 8018d42:	429a      	cmp	r2, r3
 8018d44:	d103      	bne.n	8018d4e <vTaskSuspend+0xc6>
 8018d46:	4b05      	ldr	r3, [pc, #20]	; (8018d5c <vTaskSuspend+0xd4>)
 8018d48:	2200      	movs	r2, #0
 8018d4a:	601a      	str	r2, [r3, #0]
 8018d4c:	e001      	b.n	8018d52 <vTaskSuspend+0xca>
 8018d4e:	f000 fa85 	bl	801925c <vTaskSwitchContext>
 8018d52:	bf00      	nop
 8018d54:	3710      	adds	r7, #16
 8018d56:	46bd      	mov	sp, r7
 8018d58:	bd80      	pop	{r7, pc}
 8018d5a:	bf00      	nop
 8018d5c:	24002784 	.word	0x24002784
 8018d60:	24002c44 	.word	0x24002c44
 8018d64:	24002c64 	.word	0x24002c64
 8018d68:	24002c80 	.word	0x24002c80
 8018d6c:	e000ed04 	.word	0xe000ed04
 8018d70:	24002c58 	.word	0x24002c58

08018d74 <prvTaskIsTaskSuspended>:
 8018d74:	b480      	push	{r7}
 8018d76:	b087      	sub	sp, #28
 8018d78:	af00      	add	r7, sp, #0
 8018d7a:	6078      	str	r0, [r7, #4]
 8018d7c:	2300      	movs	r3, #0
 8018d7e:	617b      	str	r3, [r7, #20]
 8018d80:	687b      	ldr	r3, [r7, #4]
 8018d82:	613b      	str	r3, [r7, #16]
 8018d84:	687b      	ldr	r3, [r7, #4]
 8018d86:	2b00      	cmp	r3, #0
 8018d88:	d10a      	bne.n	8018da0 <prvTaskIsTaskSuspended+0x2c>
 8018d8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018d8e:	f383 8811 	msr	BASEPRI, r3
 8018d92:	f3bf 8f6f 	isb	sy
 8018d96:	f3bf 8f4f 	dsb	sy
 8018d9a:	60fb      	str	r3, [r7, #12]
 8018d9c:	bf00      	nop
 8018d9e:	e7fe      	b.n	8018d9e <prvTaskIsTaskSuspended+0x2a>
 8018da0:	693b      	ldr	r3, [r7, #16]
 8018da2:	695b      	ldr	r3, [r3, #20]
 8018da4:	4a0a      	ldr	r2, [pc, #40]	; (8018dd0 <prvTaskIsTaskSuspended+0x5c>)
 8018da6:	4293      	cmp	r3, r2
 8018da8:	d10a      	bne.n	8018dc0 <prvTaskIsTaskSuspended+0x4c>
 8018daa:	693b      	ldr	r3, [r7, #16]
 8018dac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018dae:	4a09      	ldr	r2, [pc, #36]	; (8018dd4 <prvTaskIsTaskSuspended+0x60>)
 8018db0:	4293      	cmp	r3, r2
 8018db2:	d005      	beq.n	8018dc0 <prvTaskIsTaskSuspended+0x4c>
 8018db4:	693b      	ldr	r3, [r7, #16]
 8018db6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018db8:	2b00      	cmp	r3, #0
 8018dba:	d101      	bne.n	8018dc0 <prvTaskIsTaskSuspended+0x4c>
 8018dbc:	2301      	movs	r3, #1
 8018dbe:	617b      	str	r3, [r7, #20]
 8018dc0:	697b      	ldr	r3, [r7, #20]
 8018dc2:	4618      	mov	r0, r3
 8018dc4:	371c      	adds	r7, #28
 8018dc6:	46bd      	mov	sp, r7
 8018dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018dcc:	4770      	bx	lr
 8018dce:	bf00      	nop
 8018dd0:	24002c44 	.word	0x24002c44
 8018dd4:	24002c18 	.word	0x24002c18

08018dd8 <vTaskResume>:
 8018dd8:	b580      	push	{r7, lr}
 8018dda:	b084      	sub	sp, #16
 8018ddc:	af00      	add	r7, sp, #0
 8018dde:	6078      	str	r0, [r7, #4]
 8018de0:	687b      	ldr	r3, [r7, #4]
 8018de2:	60fb      	str	r3, [r7, #12]
 8018de4:	687b      	ldr	r3, [r7, #4]
 8018de6:	2b00      	cmp	r3, #0
 8018de8:	d10a      	bne.n	8018e00 <vTaskResume+0x28>
 8018dea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018dee:	f383 8811 	msr	BASEPRI, r3
 8018df2:	f3bf 8f6f 	isb	sy
 8018df6:	f3bf 8f4f 	dsb	sy
 8018dfa:	60bb      	str	r3, [r7, #8]
 8018dfc:	bf00      	nop
 8018dfe:	e7fe      	b.n	8018dfe <vTaskResume+0x26>
 8018e00:	4b20      	ldr	r3, [pc, #128]	; (8018e84 <vTaskResume+0xac>)
 8018e02:	681b      	ldr	r3, [r3, #0]
 8018e04:	68fa      	ldr	r2, [r7, #12]
 8018e06:	429a      	cmp	r2, r3
 8018e08:	d038      	beq.n	8018e7c <vTaskResume+0xa4>
 8018e0a:	68fb      	ldr	r3, [r7, #12]
 8018e0c:	2b00      	cmp	r3, #0
 8018e0e:	d035      	beq.n	8018e7c <vTaskResume+0xa4>
 8018e10:	f001 fad0 	bl	801a3b4 <vPortEnterCritical>
 8018e14:	68f8      	ldr	r0, [r7, #12]
 8018e16:	f7ff ffad 	bl	8018d74 <prvTaskIsTaskSuspended>
 8018e1a:	4603      	mov	r3, r0
 8018e1c:	2b00      	cmp	r3, #0
 8018e1e:	d02b      	beq.n	8018e78 <vTaskResume+0xa0>
 8018e20:	68fb      	ldr	r3, [r7, #12]
 8018e22:	3304      	adds	r3, #4
 8018e24:	4618      	mov	r0, r3
 8018e26:	f7ff f843 	bl	8017eb0 <uxListRemove>
 8018e2a:	68fb      	ldr	r3, [r7, #12]
 8018e2c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018e2e:	4b16      	ldr	r3, [pc, #88]	; (8018e88 <vTaskResume+0xb0>)
 8018e30:	681b      	ldr	r3, [r3, #0]
 8018e32:	429a      	cmp	r2, r3
 8018e34:	d903      	bls.n	8018e3e <vTaskResume+0x66>
 8018e36:	68fb      	ldr	r3, [r7, #12]
 8018e38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018e3a:	4a13      	ldr	r2, [pc, #76]	; (8018e88 <vTaskResume+0xb0>)
 8018e3c:	6013      	str	r3, [r2, #0]
 8018e3e:	68fb      	ldr	r3, [r7, #12]
 8018e40:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018e42:	4613      	mov	r3, r2
 8018e44:	009b      	lsls	r3, r3, #2
 8018e46:	4413      	add	r3, r2
 8018e48:	009b      	lsls	r3, r3, #2
 8018e4a:	4a10      	ldr	r2, [pc, #64]	; (8018e8c <vTaskResume+0xb4>)
 8018e4c:	441a      	add	r2, r3
 8018e4e:	68fb      	ldr	r3, [r7, #12]
 8018e50:	3304      	adds	r3, #4
 8018e52:	4619      	mov	r1, r3
 8018e54:	4610      	mov	r0, r2
 8018e56:	f7fe ffce 	bl	8017df6 <vListInsertEnd>
 8018e5a:	68fb      	ldr	r3, [r7, #12]
 8018e5c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018e5e:	4b09      	ldr	r3, [pc, #36]	; (8018e84 <vTaskResume+0xac>)
 8018e60:	681b      	ldr	r3, [r3, #0]
 8018e62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018e64:	429a      	cmp	r2, r3
 8018e66:	d307      	bcc.n	8018e78 <vTaskResume+0xa0>
 8018e68:	4b09      	ldr	r3, [pc, #36]	; (8018e90 <vTaskResume+0xb8>)
 8018e6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8018e6e:	601a      	str	r2, [r3, #0]
 8018e70:	f3bf 8f4f 	dsb	sy
 8018e74:	f3bf 8f6f 	isb	sy
 8018e78:	f001 facc 	bl	801a414 <vPortExitCritical>
 8018e7c:	bf00      	nop
 8018e7e:	3710      	adds	r7, #16
 8018e80:	46bd      	mov	sp, r7
 8018e82:	bd80      	pop	{r7, pc}
 8018e84:	24002784 	.word	0x24002784
 8018e88:	24002c60 	.word	0x24002c60
 8018e8c:	24002788 	.word	0x24002788
 8018e90:	e000ed04 	.word	0xe000ed04

08018e94 <vTaskStartScheduler>:
 8018e94:	b580      	push	{r7, lr}
 8018e96:	b08a      	sub	sp, #40	; 0x28
 8018e98:	af04      	add	r7, sp, #16
 8018e9a:	2300      	movs	r3, #0
 8018e9c:	60bb      	str	r3, [r7, #8]
 8018e9e:	2300      	movs	r3, #0
 8018ea0:	607b      	str	r3, [r7, #4]
 8018ea2:	463a      	mov	r2, r7
 8018ea4:	1d39      	adds	r1, r7, #4
 8018ea6:	f107 0308 	add.w	r3, r7, #8
 8018eaa:	4618      	mov	r0, r3
 8018eac:	f7fe fcd6 	bl	801785c <vApplicationGetIdleTaskMemory>
 8018eb0:	6839      	ldr	r1, [r7, #0]
 8018eb2:	687b      	ldr	r3, [r7, #4]
 8018eb4:	68ba      	ldr	r2, [r7, #8]
 8018eb6:	9202      	str	r2, [sp, #8]
 8018eb8:	9301      	str	r3, [sp, #4]
 8018eba:	2300      	movs	r3, #0
 8018ebc:	9300      	str	r3, [sp, #0]
 8018ebe:	2300      	movs	r3, #0
 8018ec0:	460a      	mov	r2, r1
 8018ec2:	4921      	ldr	r1, [pc, #132]	; (8018f48 <vTaskStartScheduler+0xb4>)
 8018ec4:	4821      	ldr	r0, [pc, #132]	; (8018f4c <vTaskStartScheduler+0xb8>)
 8018ec6:	f7ff fd09 	bl	80188dc <xTaskCreateStatic>
 8018eca:	4603      	mov	r3, r0
 8018ecc:	4a20      	ldr	r2, [pc, #128]	; (8018f50 <vTaskStartScheduler+0xbc>)
 8018ece:	6013      	str	r3, [r2, #0]
 8018ed0:	4b1f      	ldr	r3, [pc, #124]	; (8018f50 <vTaskStartScheduler+0xbc>)
 8018ed2:	681b      	ldr	r3, [r3, #0]
 8018ed4:	2b00      	cmp	r3, #0
 8018ed6:	d002      	beq.n	8018ede <vTaskStartScheduler+0x4a>
 8018ed8:	2301      	movs	r3, #1
 8018eda:	617b      	str	r3, [r7, #20]
 8018edc:	e001      	b.n	8018ee2 <vTaskStartScheduler+0x4e>
 8018ede:	2300      	movs	r3, #0
 8018ee0:	617b      	str	r3, [r7, #20]
 8018ee2:	697b      	ldr	r3, [r7, #20]
 8018ee4:	2b01      	cmp	r3, #1
 8018ee6:	d102      	bne.n	8018eee <vTaskStartScheduler+0x5a>
 8018ee8:	f000 fdc8 	bl	8019a7c <xTimerCreateTimerTask>
 8018eec:	6178      	str	r0, [r7, #20]
 8018eee:	697b      	ldr	r3, [r7, #20]
 8018ef0:	2b01      	cmp	r3, #1
 8018ef2:	d116      	bne.n	8018f22 <vTaskStartScheduler+0x8e>
 8018ef4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018ef8:	f383 8811 	msr	BASEPRI, r3
 8018efc:	f3bf 8f6f 	isb	sy
 8018f00:	f3bf 8f4f 	dsb	sy
 8018f04:	613b      	str	r3, [r7, #16]
 8018f06:	bf00      	nop
 8018f08:	4b12      	ldr	r3, [pc, #72]	; (8018f54 <vTaskStartScheduler+0xc0>)
 8018f0a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8018f0e:	601a      	str	r2, [r3, #0]
 8018f10:	4b11      	ldr	r3, [pc, #68]	; (8018f58 <vTaskStartScheduler+0xc4>)
 8018f12:	2201      	movs	r2, #1
 8018f14:	601a      	str	r2, [r3, #0]
 8018f16:	4b11      	ldr	r3, [pc, #68]	; (8018f5c <vTaskStartScheduler+0xc8>)
 8018f18:	2200      	movs	r2, #0
 8018f1a:	601a      	str	r2, [r3, #0]
 8018f1c:	f001 f9a8 	bl	801a270 <xPortStartScheduler>
 8018f20:	e00e      	b.n	8018f40 <vTaskStartScheduler+0xac>
 8018f22:	697b      	ldr	r3, [r7, #20]
 8018f24:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8018f28:	d10a      	bne.n	8018f40 <vTaskStartScheduler+0xac>
 8018f2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018f2e:	f383 8811 	msr	BASEPRI, r3
 8018f32:	f3bf 8f6f 	isb	sy
 8018f36:	f3bf 8f4f 	dsb	sy
 8018f3a:	60fb      	str	r3, [r7, #12]
 8018f3c:	bf00      	nop
 8018f3e:	e7fe      	b.n	8018f3e <vTaskStartScheduler+0xaa>
 8018f40:	bf00      	nop
 8018f42:	3718      	adds	r7, #24
 8018f44:	46bd      	mov	sp, r7
 8018f46:	bd80      	pop	{r7, pc}
 8018f48:	0801b6b0 	.word	0x0801b6b0
 8018f4c:	080196e1 	.word	0x080196e1
 8018f50:	24002c7c 	.word	0x24002c7c
 8018f54:	24002c78 	.word	0x24002c78
 8018f58:	24002c64 	.word	0x24002c64
 8018f5c:	24002c5c 	.word	0x24002c5c

08018f60 <vTaskSuspendAll>:
 8018f60:	b480      	push	{r7}
 8018f62:	af00      	add	r7, sp, #0
 8018f64:	4b04      	ldr	r3, [pc, #16]	; (8018f78 <vTaskSuspendAll+0x18>)
 8018f66:	681b      	ldr	r3, [r3, #0]
 8018f68:	3301      	adds	r3, #1
 8018f6a:	4a03      	ldr	r2, [pc, #12]	; (8018f78 <vTaskSuspendAll+0x18>)
 8018f6c:	6013      	str	r3, [r2, #0]
 8018f6e:	bf00      	nop
 8018f70:	46bd      	mov	sp, r7
 8018f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018f76:	4770      	bx	lr
 8018f78:	24002c80 	.word	0x24002c80

08018f7c <xTaskResumeAll>:
 8018f7c:	b580      	push	{r7, lr}
 8018f7e:	b084      	sub	sp, #16
 8018f80:	af00      	add	r7, sp, #0
 8018f82:	2300      	movs	r3, #0
 8018f84:	60fb      	str	r3, [r7, #12]
 8018f86:	2300      	movs	r3, #0
 8018f88:	60bb      	str	r3, [r7, #8]
 8018f8a:	4b42      	ldr	r3, [pc, #264]	; (8019094 <xTaskResumeAll+0x118>)
 8018f8c:	681b      	ldr	r3, [r3, #0]
 8018f8e:	2b00      	cmp	r3, #0
 8018f90:	d10a      	bne.n	8018fa8 <xTaskResumeAll+0x2c>
 8018f92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8018f96:	f383 8811 	msr	BASEPRI, r3
 8018f9a:	f3bf 8f6f 	isb	sy
 8018f9e:	f3bf 8f4f 	dsb	sy
 8018fa2:	603b      	str	r3, [r7, #0]
 8018fa4:	bf00      	nop
 8018fa6:	e7fe      	b.n	8018fa6 <xTaskResumeAll+0x2a>
 8018fa8:	f001 fa04 	bl	801a3b4 <vPortEnterCritical>
 8018fac:	4b39      	ldr	r3, [pc, #228]	; (8019094 <xTaskResumeAll+0x118>)
 8018fae:	681b      	ldr	r3, [r3, #0]
 8018fb0:	3b01      	subs	r3, #1
 8018fb2:	4a38      	ldr	r2, [pc, #224]	; (8019094 <xTaskResumeAll+0x118>)
 8018fb4:	6013      	str	r3, [r2, #0]
 8018fb6:	4b37      	ldr	r3, [pc, #220]	; (8019094 <xTaskResumeAll+0x118>)
 8018fb8:	681b      	ldr	r3, [r3, #0]
 8018fba:	2b00      	cmp	r3, #0
 8018fbc:	d162      	bne.n	8019084 <xTaskResumeAll+0x108>
 8018fbe:	4b36      	ldr	r3, [pc, #216]	; (8019098 <xTaskResumeAll+0x11c>)
 8018fc0:	681b      	ldr	r3, [r3, #0]
 8018fc2:	2b00      	cmp	r3, #0
 8018fc4:	d05e      	beq.n	8019084 <xTaskResumeAll+0x108>
 8018fc6:	e02f      	b.n	8019028 <xTaskResumeAll+0xac>
 8018fc8:	4b34      	ldr	r3, [pc, #208]	; (801909c <xTaskResumeAll+0x120>)
 8018fca:	68db      	ldr	r3, [r3, #12]
 8018fcc:	68db      	ldr	r3, [r3, #12]
 8018fce:	60fb      	str	r3, [r7, #12]
 8018fd0:	68fb      	ldr	r3, [r7, #12]
 8018fd2:	3318      	adds	r3, #24
 8018fd4:	4618      	mov	r0, r3
 8018fd6:	f7fe ff6b 	bl	8017eb0 <uxListRemove>
 8018fda:	68fb      	ldr	r3, [r7, #12]
 8018fdc:	3304      	adds	r3, #4
 8018fde:	4618      	mov	r0, r3
 8018fe0:	f7fe ff66 	bl	8017eb0 <uxListRemove>
 8018fe4:	68fb      	ldr	r3, [r7, #12]
 8018fe6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018fe8:	4b2d      	ldr	r3, [pc, #180]	; (80190a0 <xTaskResumeAll+0x124>)
 8018fea:	681b      	ldr	r3, [r3, #0]
 8018fec:	429a      	cmp	r2, r3
 8018fee:	d903      	bls.n	8018ff8 <xTaskResumeAll+0x7c>
 8018ff0:	68fb      	ldr	r3, [r7, #12]
 8018ff2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018ff4:	4a2a      	ldr	r2, [pc, #168]	; (80190a0 <xTaskResumeAll+0x124>)
 8018ff6:	6013      	str	r3, [r2, #0]
 8018ff8:	68fb      	ldr	r3, [r7, #12]
 8018ffa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018ffc:	4613      	mov	r3, r2
 8018ffe:	009b      	lsls	r3, r3, #2
 8019000:	4413      	add	r3, r2
 8019002:	009b      	lsls	r3, r3, #2
 8019004:	4a27      	ldr	r2, [pc, #156]	; (80190a4 <xTaskResumeAll+0x128>)
 8019006:	441a      	add	r2, r3
 8019008:	68fb      	ldr	r3, [r7, #12]
 801900a:	3304      	adds	r3, #4
 801900c:	4619      	mov	r1, r3
 801900e:	4610      	mov	r0, r2
 8019010:	f7fe fef1 	bl	8017df6 <vListInsertEnd>
 8019014:	68fb      	ldr	r3, [r7, #12]
 8019016:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8019018:	4b23      	ldr	r3, [pc, #140]	; (80190a8 <xTaskResumeAll+0x12c>)
 801901a:	681b      	ldr	r3, [r3, #0]
 801901c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801901e:	429a      	cmp	r2, r3
 8019020:	d302      	bcc.n	8019028 <xTaskResumeAll+0xac>
 8019022:	4b22      	ldr	r3, [pc, #136]	; (80190ac <xTaskResumeAll+0x130>)
 8019024:	2201      	movs	r2, #1
 8019026:	601a      	str	r2, [r3, #0]
 8019028:	4b1c      	ldr	r3, [pc, #112]	; (801909c <xTaskResumeAll+0x120>)
 801902a:	681b      	ldr	r3, [r3, #0]
 801902c:	2b00      	cmp	r3, #0
 801902e:	d1cb      	bne.n	8018fc8 <xTaskResumeAll+0x4c>
 8019030:	68fb      	ldr	r3, [r7, #12]
 8019032:	2b00      	cmp	r3, #0
 8019034:	d001      	beq.n	801903a <xTaskResumeAll+0xbe>
 8019036:	f000 fc09 	bl	801984c <prvResetNextTaskUnblockTime>
 801903a:	4b1d      	ldr	r3, [pc, #116]	; (80190b0 <xTaskResumeAll+0x134>)
 801903c:	681b      	ldr	r3, [r3, #0]
 801903e:	607b      	str	r3, [r7, #4]
 8019040:	687b      	ldr	r3, [r7, #4]
 8019042:	2b00      	cmp	r3, #0
 8019044:	d010      	beq.n	8019068 <xTaskResumeAll+0xec>
 8019046:	f000 f847 	bl	80190d8 <xTaskIncrementTick>
 801904a:	4603      	mov	r3, r0
 801904c:	2b00      	cmp	r3, #0
 801904e:	d002      	beq.n	8019056 <xTaskResumeAll+0xda>
 8019050:	4b16      	ldr	r3, [pc, #88]	; (80190ac <xTaskResumeAll+0x130>)
 8019052:	2201      	movs	r2, #1
 8019054:	601a      	str	r2, [r3, #0]
 8019056:	687b      	ldr	r3, [r7, #4]
 8019058:	3b01      	subs	r3, #1
 801905a:	607b      	str	r3, [r7, #4]
 801905c:	687b      	ldr	r3, [r7, #4]
 801905e:	2b00      	cmp	r3, #0
 8019060:	d1f1      	bne.n	8019046 <xTaskResumeAll+0xca>
 8019062:	4b13      	ldr	r3, [pc, #76]	; (80190b0 <xTaskResumeAll+0x134>)
 8019064:	2200      	movs	r2, #0
 8019066:	601a      	str	r2, [r3, #0]
 8019068:	4b10      	ldr	r3, [pc, #64]	; (80190ac <xTaskResumeAll+0x130>)
 801906a:	681b      	ldr	r3, [r3, #0]
 801906c:	2b00      	cmp	r3, #0
 801906e:	d009      	beq.n	8019084 <xTaskResumeAll+0x108>
 8019070:	2301      	movs	r3, #1
 8019072:	60bb      	str	r3, [r7, #8]
 8019074:	4b0f      	ldr	r3, [pc, #60]	; (80190b4 <xTaskResumeAll+0x138>)
 8019076:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801907a:	601a      	str	r2, [r3, #0]
 801907c:	f3bf 8f4f 	dsb	sy
 8019080:	f3bf 8f6f 	isb	sy
 8019084:	f001 f9c6 	bl	801a414 <vPortExitCritical>
 8019088:	68bb      	ldr	r3, [r7, #8]
 801908a:	4618      	mov	r0, r3
 801908c:	3710      	adds	r7, #16
 801908e:	46bd      	mov	sp, r7
 8019090:	bd80      	pop	{r7, pc}
 8019092:	bf00      	nop
 8019094:	24002c80 	.word	0x24002c80
 8019098:	24002c58 	.word	0x24002c58
 801909c:	24002c18 	.word	0x24002c18
 80190a0:	24002c60 	.word	0x24002c60
 80190a4:	24002788 	.word	0x24002788
 80190a8:	24002784 	.word	0x24002784
 80190ac:	24002c6c 	.word	0x24002c6c
 80190b0:	24002c68 	.word	0x24002c68
 80190b4:	e000ed04 	.word	0xe000ed04

080190b8 <xTaskGetTickCount>:
 80190b8:	b480      	push	{r7}
 80190ba:	b083      	sub	sp, #12
 80190bc:	af00      	add	r7, sp, #0
 80190be:	4b05      	ldr	r3, [pc, #20]	; (80190d4 <xTaskGetTickCount+0x1c>)
 80190c0:	681b      	ldr	r3, [r3, #0]
 80190c2:	607b      	str	r3, [r7, #4]
 80190c4:	687b      	ldr	r3, [r7, #4]
 80190c6:	4618      	mov	r0, r3
 80190c8:	370c      	adds	r7, #12
 80190ca:	46bd      	mov	sp, r7
 80190cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80190d0:	4770      	bx	lr
 80190d2:	bf00      	nop
 80190d4:	24002c5c 	.word	0x24002c5c

080190d8 <xTaskIncrementTick>:
 80190d8:	b580      	push	{r7, lr}
 80190da:	b086      	sub	sp, #24
 80190dc:	af00      	add	r7, sp, #0
 80190de:	2300      	movs	r3, #0
 80190e0:	617b      	str	r3, [r7, #20]
 80190e2:	4b53      	ldr	r3, [pc, #332]	; (8019230 <xTaskIncrementTick+0x158>)
 80190e4:	681b      	ldr	r3, [r3, #0]
 80190e6:	2b00      	cmp	r3, #0
 80190e8:	f040 8095 	bne.w	8019216 <xTaskIncrementTick+0x13e>
 80190ec:	4b51      	ldr	r3, [pc, #324]	; (8019234 <xTaskIncrementTick+0x15c>)
 80190ee:	681b      	ldr	r3, [r3, #0]
 80190f0:	3301      	adds	r3, #1
 80190f2:	613b      	str	r3, [r7, #16]
 80190f4:	4a4f      	ldr	r2, [pc, #316]	; (8019234 <xTaskIncrementTick+0x15c>)
 80190f6:	693b      	ldr	r3, [r7, #16]
 80190f8:	6013      	str	r3, [r2, #0]
 80190fa:	693b      	ldr	r3, [r7, #16]
 80190fc:	2b00      	cmp	r3, #0
 80190fe:	d120      	bne.n	8019142 <xTaskIncrementTick+0x6a>
 8019100:	4b4d      	ldr	r3, [pc, #308]	; (8019238 <xTaskIncrementTick+0x160>)
 8019102:	681b      	ldr	r3, [r3, #0]
 8019104:	681b      	ldr	r3, [r3, #0]
 8019106:	2b00      	cmp	r3, #0
 8019108:	d00a      	beq.n	8019120 <xTaskIncrementTick+0x48>
 801910a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801910e:	f383 8811 	msr	BASEPRI, r3
 8019112:	f3bf 8f6f 	isb	sy
 8019116:	f3bf 8f4f 	dsb	sy
 801911a:	603b      	str	r3, [r7, #0]
 801911c:	bf00      	nop
 801911e:	e7fe      	b.n	801911e <xTaskIncrementTick+0x46>
 8019120:	4b45      	ldr	r3, [pc, #276]	; (8019238 <xTaskIncrementTick+0x160>)
 8019122:	681b      	ldr	r3, [r3, #0]
 8019124:	60fb      	str	r3, [r7, #12]
 8019126:	4b45      	ldr	r3, [pc, #276]	; (801923c <xTaskIncrementTick+0x164>)
 8019128:	681b      	ldr	r3, [r3, #0]
 801912a:	4a43      	ldr	r2, [pc, #268]	; (8019238 <xTaskIncrementTick+0x160>)
 801912c:	6013      	str	r3, [r2, #0]
 801912e:	4a43      	ldr	r2, [pc, #268]	; (801923c <xTaskIncrementTick+0x164>)
 8019130:	68fb      	ldr	r3, [r7, #12]
 8019132:	6013      	str	r3, [r2, #0]
 8019134:	4b42      	ldr	r3, [pc, #264]	; (8019240 <xTaskIncrementTick+0x168>)
 8019136:	681b      	ldr	r3, [r3, #0]
 8019138:	3301      	adds	r3, #1
 801913a:	4a41      	ldr	r2, [pc, #260]	; (8019240 <xTaskIncrementTick+0x168>)
 801913c:	6013      	str	r3, [r2, #0]
 801913e:	f000 fb85 	bl	801984c <prvResetNextTaskUnblockTime>
 8019142:	4b40      	ldr	r3, [pc, #256]	; (8019244 <xTaskIncrementTick+0x16c>)
 8019144:	681b      	ldr	r3, [r3, #0]
 8019146:	693a      	ldr	r2, [r7, #16]
 8019148:	429a      	cmp	r2, r3
 801914a:	d349      	bcc.n	80191e0 <xTaskIncrementTick+0x108>
 801914c:	4b3a      	ldr	r3, [pc, #232]	; (8019238 <xTaskIncrementTick+0x160>)
 801914e:	681b      	ldr	r3, [r3, #0]
 8019150:	681b      	ldr	r3, [r3, #0]
 8019152:	2b00      	cmp	r3, #0
 8019154:	d104      	bne.n	8019160 <xTaskIncrementTick+0x88>
 8019156:	4b3b      	ldr	r3, [pc, #236]	; (8019244 <xTaskIncrementTick+0x16c>)
 8019158:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801915c:	601a      	str	r2, [r3, #0]
 801915e:	e03f      	b.n	80191e0 <xTaskIncrementTick+0x108>
 8019160:	4b35      	ldr	r3, [pc, #212]	; (8019238 <xTaskIncrementTick+0x160>)
 8019162:	681b      	ldr	r3, [r3, #0]
 8019164:	68db      	ldr	r3, [r3, #12]
 8019166:	68db      	ldr	r3, [r3, #12]
 8019168:	60bb      	str	r3, [r7, #8]
 801916a:	68bb      	ldr	r3, [r7, #8]
 801916c:	685b      	ldr	r3, [r3, #4]
 801916e:	607b      	str	r3, [r7, #4]
 8019170:	693a      	ldr	r2, [r7, #16]
 8019172:	687b      	ldr	r3, [r7, #4]
 8019174:	429a      	cmp	r2, r3
 8019176:	d203      	bcs.n	8019180 <xTaskIncrementTick+0xa8>
 8019178:	4a32      	ldr	r2, [pc, #200]	; (8019244 <xTaskIncrementTick+0x16c>)
 801917a:	687b      	ldr	r3, [r7, #4]
 801917c:	6013      	str	r3, [r2, #0]
 801917e:	e02f      	b.n	80191e0 <xTaskIncrementTick+0x108>
 8019180:	68bb      	ldr	r3, [r7, #8]
 8019182:	3304      	adds	r3, #4
 8019184:	4618      	mov	r0, r3
 8019186:	f7fe fe93 	bl	8017eb0 <uxListRemove>
 801918a:	68bb      	ldr	r3, [r7, #8]
 801918c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801918e:	2b00      	cmp	r3, #0
 8019190:	d004      	beq.n	801919c <xTaskIncrementTick+0xc4>
 8019192:	68bb      	ldr	r3, [r7, #8]
 8019194:	3318      	adds	r3, #24
 8019196:	4618      	mov	r0, r3
 8019198:	f7fe fe8a 	bl	8017eb0 <uxListRemove>
 801919c:	68bb      	ldr	r3, [r7, #8]
 801919e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80191a0:	4b29      	ldr	r3, [pc, #164]	; (8019248 <xTaskIncrementTick+0x170>)
 80191a2:	681b      	ldr	r3, [r3, #0]
 80191a4:	429a      	cmp	r2, r3
 80191a6:	d903      	bls.n	80191b0 <xTaskIncrementTick+0xd8>
 80191a8:	68bb      	ldr	r3, [r7, #8]
 80191aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80191ac:	4a26      	ldr	r2, [pc, #152]	; (8019248 <xTaskIncrementTick+0x170>)
 80191ae:	6013      	str	r3, [r2, #0]
 80191b0:	68bb      	ldr	r3, [r7, #8]
 80191b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80191b4:	4613      	mov	r3, r2
 80191b6:	009b      	lsls	r3, r3, #2
 80191b8:	4413      	add	r3, r2
 80191ba:	009b      	lsls	r3, r3, #2
 80191bc:	4a23      	ldr	r2, [pc, #140]	; (801924c <xTaskIncrementTick+0x174>)
 80191be:	441a      	add	r2, r3
 80191c0:	68bb      	ldr	r3, [r7, #8]
 80191c2:	3304      	adds	r3, #4
 80191c4:	4619      	mov	r1, r3
 80191c6:	4610      	mov	r0, r2
 80191c8:	f7fe fe15 	bl	8017df6 <vListInsertEnd>
 80191cc:	68bb      	ldr	r3, [r7, #8]
 80191ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80191d0:	4b1f      	ldr	r3, [pc, #124]	; (8019250 <xTaskIncrementTick+0x178>)
 80191d2:	681b      	ldr	r3, [r3, #0]
 80191d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80191d6:	429a      	cmp	r2, r3
 80191d8:	d3b8      	bcc.n	801914c <xTaskIncrementTick+0x74>
 80191da:	2301      	movs	r3, #1
 80191dc:	617b      	str	r3, [r7, #20]
 80191de:	e7b5      	b.n	801914c <xTaskIncrementTick+0x74>
 80191e0:	4b1b      	ldr	r3, [pc, #108]	; (8019250 <xTaskIncrementTick+0x178>)
 80191e2:	681b      	ldr	r3, [r3, #0]
 80191e4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80191e6:	4919      	ldr	r1, [pc, #100]	; (801924c <xTaskIncrementTick+0x174>)
 80191e8:	4613      	mov	r3, r2
 80191ea:	009b      	lsls	r3, r3, #2
 80191ec:	4413      	add	r3, r2
 80191ee:	009b      	lsls	r3, r3, #2
 80191f0:	440b      	add	r3, r1
 80191f2:	681b      	ldr	r3, [r3, #0]
 80191f4:	2b01      	cmp	r3, #1
 80191f6:	d901      	bls.n	80191fc <xTaskIncrementTick+0x124>
 80191f8:	2301      	movs	r3, #1
 80191fa:	617b      	str	r3, [r7, #20]
 80191fc:	4b15      	ldr	r3, [pc, #84]	; (8019254 <xTaskIncrementTick+0x17c>)
 80191fe:	681b      	ldr	r3, [r3, #0]
 8019200:	2b00      	cmp	r3, #0
 8019202:	d101      	bne.n	8019208 <xTaskIncrementTick+0x130>
 8019204:	f7e9 f992 	bl	800252c <vApplicationTickHook>
 8019208:	4b13      	ldr	r3, [pc, #76]	; (8019258 <xTaskIncrementTick+0x180>)
 801920a:	681b      	ldr	r3, [r3, #0]
 801920c:	2b00      	cmp	r3, #0
 801920e:	d009      	beq.n	8019224 <xTaskIncrementTick+0x14c>
 8019210:	2301      	movs	r3, #1
 8019212:	617b      	str	r3, [r7, #20]
 8019214:	e006      	b.n	8019224 <xTaskIncrementTick+0x14c>
 8019216:	4b0f      	ldr	r3, [pc, #60]	; (8019254 <xTaskIncrementTick+0x17c>)
 8019218:	681b      	ldr	r3, [r3, #0]
 801921a:	3301      	adds	r3, #1
 801921c:	4a0d      	ldr	r2, [pc, #52]	; (8019254 <xTaskIncrementTick+0x17c>)
 801921e:	6013      	str	r3, [r2, #0]
 8019220:	f7e9 f984 	bl	800252c <vApplicationTickHook>
 8019224:	697b      	ldr	r3, [r7, #20]
 8019226:	4618      	mov	r0, r3
 8019228:	3718      	adds	r7, #24
 801922a:	46bd      	mov	sp, r7
 801922c:	bd80      	pop	{r7, pc}
 801922e:	bf00      	nop
 8019230:	24002c80 	.word	0x24002c80
 8019234:	24002c5c 	.word	0x24002c5c
 8019238:	24002c10 	.word	0x24002c10
 801923c:	24002c14 	.word	0x24002c14
 8019240:	24002c70 	.word	0x24002c70
 8019244:	24002c78 	.word	0x24002c78
 8019248:	24002c60 	.word	0x24002c60
 801924c:	24002788 	.word	0x24002788
 8019250:	24002784 	.word	0x24002784
 8019254:	24002c68 	.word	0x24002c68
 8019258:	24002c6c 	.word	0x24002c6c

0801925c <vTaskSwitchContext>:
 801925c:	b580      	push	{r7, lr}
 801925e:	b084      	sub	sp, #16
 8019260:	af00      	add	r7, sp, #0
 8019262:	4b2f      	ldr	r3, [pc, #188]	; (8019320 <vTaskSwitchContext+0xc4>)
 8019264:	681b      	ldr	r3, [r3, #0]
 8019266:	2b00      	cmp	r3, #0
 8019268:	d003      	beq.n	8019272 <vTaskSwitchContext+0x16>
 801926a:	4b2e      	ldr	r3, [pc, #184]	; (8019324 <vTaskSwitchContext+0xc8>)
 801926c:	2201      	movs	r2, #1
 801926e:	601a      	str	r2, [r3, #0]
 8019270:	e052      	b.n	8019318 <vTaskSwitchContext+0xbc>
 8019272:	4b2c      	ldr	r3, [pc, #176]	; (8019324 <vTaskSwitchContext+0xc8>)
 8019274:	2200      	movs	r2, #0
 8019276:	601a      	str	r2, [r3, #0]
 8019278:	4b2b      	ldr	r3, [pc, #172]	; (8019328 <vTaskSwitchContext+0xcc>)
 801927a:	681b      	ldr	r3, [r3, #0]
 801927c:	681a      	ldr	r2, [r3, #0]
 801927e:	4b2a      	ldr	r3, [pc, #168]	; (8019328 <vTaskSwitchContext+0xcc>)
 8019280:	681b      	ldr	r3, [r3, #0]
 8019282:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019284:	429a      	cmp	r2, r3
 8019286:	d808      	bhi.n	801929a <vTaskSwitchContext+0x3e>
 8019288:	4b27      	ldr	r3, [pc, #156]	; (8019328 <vTaskSwitchContext+0xcc>)
 801928a:	681a      	ldr	r2, [r3, #0]
 801928c:	4b26      	ldr	r3, [pc, #152]	; (8019328 <vTaskSwitchContext+0xcc>)
 801928e:	681b      	ldr	r3, [r3, #0]
 8019290:	3334      	adds	r3, #52	; 0x34
 8019292:	4619      	mov	r1, r3
 8019294:	4610      	mov	r0, r2
 8019296:	f7e9 f957 	bl	8002548 <vApplicationStackOverflowHook>
 801929a:	4b24      	ldr	r3, [pc, #144]	; (801932c <vTaskSwitchContext+0xd0>)
 801929c:	681b      	ldr	r3, [r3, #0]
 801929e:	60fb      	str	r3, [r7, #12]
 80192a0:	e010      	b.n	80192c4 <vTaskSwitchContext+0x68>
 80192a2:	68fb      	ldr	r3, [r7, #12]
 80192a4:	2b00      	cmp	r3, #0
 80192a6:	d10a      	bne.n	80192be <vTaskSwitchContext+0x62>
 80192a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80192ac:	f383 8811 	msr	BASEPRI, r3
 80192b0:	f3bf 8f6f 	isb	sy
 80192b4:	f3bf 8f4f 	dsb	sy
 80192b8:	607b      	str	r3, [r7, #4]
 80192ba:	bf00      	nop
 80192bc:	e7fe      	b.n	80192bc <vTaskSwitchContext+0x60>
 80192be:	68fb      	ldr	r3, [r7, #12]
 80192c0:	3b01      	subs	r3, #1
 80192c2:	60fb      	str	r3, [r7, #12]
 80192c4:	491a      	ldr	r1, [pc, #104]	; (8019330 <vTaskSwitchContext+0xd4>)
 80192c6:	68fa      	ldr	r2, [r7, #12]
 80192c8:	4613      	mov	r3, r2
 80192ca:	009b      	lsls	r3, r3, #2
 80192cc:	4413      	add	r3, r2
 80192ce:	009b      	lsls	r3, r3, #2
 80192d0:	440b      	add	r3, r1
 80192d2:	681b      	ldr	r3, [r3, #0]
 80192d4:	2b00      	cmp	r3, #0
 80192d6:	d0e4      	beq.n	80192a2 <vTaskSwitchContext+0x46>
 80192d8:	68fa      	ldr	r2, [r7, #12]
 80192da:	4613      	mov	r3, r2
 80192dc:	009b      	lsls	r3, r3, #2
 80192de:	4413      	add	r3, r2
 80192e0:	009b      	lsls	r3, r3, #2
 80192e2:	4a13      	ldr	r2, [pc, #76]	; (8019330 <vTaskSwitchContext+0xd4>)
 80192e4:	4413      	add	r3, r2
 80192e6:	60bb      	str	r3, [r7, #8]
 80192e8:	68bb      	ldr	r3, [r7, #8]
 80192ea:	685b      	ldr	r3, [r3, #4]
 80192ec:	685a      	ldr	r2, [r3, #4]
 80192ee:	68bb      	ldr	r3, [r7, #8]
 80192f0:	605a      	str	r2, [r3, #4]
 80192f2:	68bb      	ldr	r3, [r7, #8]
 80192f4:	685a      	ldr	r2, [r3, #4]
 80192f6:	68bb      	ldr	r3, [r7, #8]
 80192f8:	3308      	adds	r3, #8
 80192fa:	429a      	cmp	r2, r3
 80192fc:	d104      	bne.n	8019308 <vTaskSwitchContext+0xac>
 80192fe:	68bb      	ldr	r3, [r7, #8]
 8019300:	685b      	ldr	r3, [r3, #4]
 8019302:	685a      	ldr	r2, [r3, #4]
 8019304:	68bb      	ldr	r3, [r7, #8]
 8019306:	605a      	str	r2, [r3, #4]
 8019308:	68bb      	ldr	r3, [r7, #8]
 801930a:	685b      	ldr	r3, [r3, #4]
 801930c:	68db      	ldr	r3, [r3, #12]
 801930e:	4a06      	ldr	r2, [pc, #24]	; (8019328 <vTaskSwitchContext+0xcc>)
 8019310:	6013      	str	r3, [r2, #0]
 8019312:	4a06      	ldr	r2, [pc, #24]	; (801932c <vTaskSwitchContext+0xd0>)
 8019314:	68fb      	ldr	r3, [r7, #12]
 8019316:	6013      	str	r3, [r2, #0]
 8019318:	bf00      	nop
 801931a:	3710      	adds	r7, #16
 801931c:	46bd      	mov	sp, r7
 801931e:	bd80      	pop	{r7, pc}
 8019320:	24002c80 	.word	0x24002c80
 8019324:	24002c6c 	.word	0x24002c6c
 8019328:	24002784 	.word	0x24002784
 801932c:	24002c60 	.word	0x24002c60
 8019330:	24002788 	.word	0x24002788

08019334 <vTaskPlaceOnEventList>:
 8019334:	b580      	push	{r7, lr}
 8019336:	b084      	sub	sp, #16
 8019338:	af00      	add	r7, sp, #0
 801933a:	6078      	str	r0, [r7, #4]
 801933c:	6039      	str	r1, [r7, #0]
 801933e:	687b      	ldr	r3, [r7, #4]
 8019340:	2b00      	cmp	r3, #0
 8019342:	d10a      	bne.n	801935a <vTaskPlaceOnEventList+0x26>
 8019344:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019348:	f383 8811 	msr	BASEPRI, r3
 801934c:	f3bf 8f6f 	isb	sy
 8019350:	f3bf 8f4f 	dsb	sy
 8019354:	60fb      	str	r3, [r7, #12]
 8019356:	bf00      	nop
 8019358:	e7fe      	b.n	8019358 <vTaskPlaceOnEventList+0x24>
 801935a:	4b07      	ldr	r3, [pc, #28]	; (8019378 <vTaskPlaceOnEventList+0x44>)
 801935c:	681b      	ldr	r3, [r3, #0]
 801935e:	3318      	adds	r3, #24
 8019360:	4619      	mov	r1, r3
 8019362:	6878      	ldr	r0, [r7, #4]
 8019364:	f7fe fd6b 	bl	8017e3e <vListInsert>
 8019368:	2101      	movs	r1, #1
 801936a:	6838      	ldr	r0, [r7, #0]
 801936c:	f000 fb32 	bl	80199d4 <prvAddCurrentTaskToDelayedList>
 8019370:	bf00      	nop
 8019372:	3710      	adds	r7, #16
 8019374:	46bd      	mov	sp, r7
 8019376:	bd80      	pop	{r7, pc}
 8019378:	24002784 	.word	0x24002784

0801937c <vTaskPlaceOnUnorderedEventList>:
 801937c:	b580      	push	{r7, lr}
 801937e:	b086      	sub	sp, #24
 8019380:	af00      	add	r7, sp, #0
 8019382:	60f8      	str	r0, [r7, #12]
 8019384:	60b9      	str	r1, [r7, #8]
 8019386:	607a      	str	r2, [r7, #4]
 8019388:	68fb      	ldr	r3, [r7, #12]
 801938a:	2b00      	cmp	r3, #0
 801938c:	d10a      	bne.n	80193a4 <vTaskPlaceOnUnorderedEventList+0x28>
 801938e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019392:	f383 8811 	msr	BASEPRI, r3
 8019396:	f3bf 8f6f 	isb	sy
 801939a:	f3bf 8f4f 	dsb	sy
 801939e:	617b      	str	r3, [r7, #20]
 80193a0:	bf00      	nop
 80193a2:	e7fe      	b.n	80193a2 <vTaskPlaceOnUnorderedEventList+0x26>
 80193a4:	4b11      	ldr	r3, [pc, #68]	; (80193ec <vTaskPlaceOnUnorderedEventList+0x70>)
 80193a6:	681b      	ldr	r3, [r3, #0]
 80193a8:	2b00      	cmp	r3, #0
 80193aa:	d10a      	bne.n	80193c2 <vTaskPlaceOnUnorderedEventList+0x46>
 80193ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80193b0:	f383 8811 	msr	BASEPRI, r3
 80193b4:	f3bf 8f6f 	isb	sy
 80193b8:	f3bf 8f4f 	dsb	sy
 80193bc:	613b      	str	r3, [r7, #16]
 80193be:	bf00      	nop
 80193c0:	e7fe      	b.n	80193c0 <vTaskPlaceOnUnorderedEventList+0x44>
 80193c2:	4b0b      	ldr	r3, [pc, #44]	; (80193f0 <vTaskPlaceOnUnorderedEventList+0x74>)
 80193c4:	681b      	ldr	r3, [r3, #0]
 80193c6:	68ba      	ldr	r2, [r7, #8]
 80193c8:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80193cc:	619a      	str	r2, [r3, #24]
 80193ce:	4b08      	ldr	r3, [pc, #32]	; (80193f0 <vTaskPlaceOnUnorderedEventList+0x74>)
 80193d0:	681b      	ldr	r3, [r3, #0]
 80193d2:	3318      	adds	r3, #24
 80193d4:	4619      	mov	r1, r3
 80193d6:	68f8      	ldr	r0, [r7, #12]
 80193d8:	f7fe fd0d 	bl	8017df6 <vListInsertEnd>
 80193dc:	2101      	movs	r1, #1
 80193de:	6878      	ldr	r0, [r7, #4]
 80193e0:	f000 faf8 	bl	80199d4 <prvAddCurrentTaskToDelayedList>
 80193e4:	bf00      	nop
 80193e6:	3718      	adds	r7, #24
 80193e8:	46bd      	mov	sp, r7
 80193ea:	bd80      	pop	{r7, pc}
 80193ec:	24002c80 	.word	0x24002c80
 80193f0:	24002784 	.word	0x24002784

080193f4 <vTaskPlaceOnEventListRestricted>:
 80193f4:	b580      	push	{r7, lr}
 80193f6:	b086      	sub	sp, #24
 80193f8:	af00      	add	r7, sp, #0
 80193fa:	60f8      	str	r0, [r7, #12]
 80193fc:	60b9      	str	r1, [r7, #8]
 80193fe:	607a      	str	r2, [r7, #4]
 8019400:	68fb      	ldr	r3, [r7, #12]
 8019402:	2b00      	cmp	r3, #0
 8019404:	d10a      	bne.n	801941c <vTaskPlaceOnEventListRestricted+0x28>
 8019406:	f04f 0350 	mov.w	r3, #80	; 0x50
 801940a:	f383 8811 	msr	BASEPRI, r3
 801940e:	f3bf 8f6f 	isb	sy
 8019412:	f3bf 8f4f 	dsb	sy
 8019416:	617b      	str	r3, [r7, #20]
 8019418:	bf00      	nop
 801941a:	e7fe      	b.n	801941a <vTaskPlaceOnEventListRestricted+0x26>
 801941c:	4b0a      	ldr	r3, [pc, #40]	; (8019448 <vTaskPlaceOnEventListRestricted+0x54>)
 801941e:	681b      	ldr	r3, [r3, #0]
 8019420:	3318      	adds	r3, #24
 8019422:	4619      	mov	r1, r3
 8019424:	68f8      	ldr	r0, [r7, #12]
 8019426:	f7fe fce6 	bl	8017df6 <vListInsertEnd>
 801942a:	687b      	ldr	r3, [r7, #4]
 801942c:	2b00      	cmp	r3, #0
 801942e:	d002      	beq.n	8019436 <vTaskPlaceOnEventListRestricted+0x42>
 8019430:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8019434:	60bb      	str	r3, [r7, #8]
 8019436:	6879      	ldr	r1, [r7, #4]
 8019438:	68b8      	ldr	r0, [r7, #8]
 801943a:	f000 facb 	bl	80199d4 <prvAddCurrentTaskToDelayedList>
 801943e:	bf00      	nop
 8019440:	3718      	adds	r7, #24
 8019442:	46bd      	mov	sp, r7
 8019444:	bd80      	pop	{r7, pc}
 8019446:	bf00      	nop
 8019448:	24002784 	.word	0x24002784

0801944c <xTaskRemoveFromEventList>:
 801944c:	b580      	push	{r7, lr}
 801944e:	b086      	sub	sp, #24
 8019450:	af00      	add	r7, sp, #0
 8019452:	6078      	str	r0, [r7, #4]
 8019454:	687b      	ldr	r3, [r7, #4]
 8019456:	68db      	ldr	r3, [r3, #12]
 8019458:	68db      	ldr	r3, [r3, #12]
 801945a:	613b      	str	r3, [r7, #16]
 801945c:	693b      	ldr	r3, [r7, #16]
 801945e:	2b00      	cmp	r3, #0
 8019460:	d10a      	bne.n	8019478 <xTaskRemoveFromEventList+0x2c>
 8019462:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019466:	f383 8811 	msr	BASEPRI, r3
 801946a:	f3bf 8f6f 	isb	sy
 801946e:	f3bf 8f4f 	dsb	sy
 8019472:	60fb      	str	r3, [r7, #12]
 8019474:	bf00      	nop
 8019476:	e7fe      	b.n	8019476 <xTaskRemoveFromEventList+0x2a>
 8019478:	693b      	ldr	r3, [r7, #16]
 801947a:	3318      	adds	r3, #24
 801947c:	4618      	mov	r0, r3
 801947e:	f7fe fd17 	bl	8017eb0 <uxListRemove>
 8019482:	4b1e      	ldr	r3, [pc, #120]	; (80194fc <xTaskRemoveFromEventList+0xb0>)
 8019484:	681b      	ldr	r3, [r3, #0]
 8019486:	2b00      	cmp	r3, #0
 8019488:	d11d      	bne.n	80194c6 <xTaskRemoveFromEventList+0x7a>
 801948a:	693b      	ldr	r3, [r7, #16]
 801948c:	3304      	adds	r3, #4
 801948e:	4618      	mov	r0, r3
 8019490:	f7fe fd0e 	bl	8017eb0 <uxListRemove>
 8019494:	693b      	ldr	r3, [r7, #16]
 8019496:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8019498:	4b19      	ldr	r3, [pc, #100]	; (8019500 <xTaskRemoveFromEventList+0xb4>)
 801949a:	681b      	ldr	r3, [r3, #0]
 801949c:	429a      	cmp	r2, r3
 801949e:	d903      	bls.n	80194a8 <xTaskRemoveFromEventList+0x5c>
 80194a0:	693b      	ldr	r3, [r7, #16]
 80194a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80194a4:	4a16      	ldr	r2, [pc, #88]	; (8019500 <xTaskRemoveFromEventList+0xb4>)
 80194a6:	6013      	str	r3, [r2, #0]
 80194a8:	693b      	ldr	r3, [r7, #16]
 80194aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80194ac:	4613      	mov	r3, r2
 80194ae:	009b      	lsls	r3, r3, #2
 80194b0:	4413      	add	r3, r2
 80194b2:	009b      	lsls	r3, r3, #2
 80194b4:	4a13      	ldr	r2, [pc, #76]	; (8019504 <xTaskRemoveFromEventList+0xb8>)
 80194b6:	441a      	add	r2, r3
 80194b8:	693b      	ldr	r3, [r7, #16]
 80194ba:	3304      	adds	r3, #4
 80194bc:	4619      	mov	r1, r3
 80194be:	4610      	mov	r0, r2
 80194c0:	f7fe fc99 	bl	8017df6 <vListInsertEnd>
 80194c4:	e005      	b.n	80194d2 <xTaskRemoveFromEventList+0x86>
 80194c6:	693b      	ldr	r3, [r7, #16]
 80194c8:	3318      	adds	r3, #24
 80194ca:	4619      	mov	r1, r3
 80194cc:	480e      	ldr	r0, [pc, #56]	; (8019508 <xTaskRemoveFromEventList+0xbc>)
 80194ce:	f7fe fc92 	bl	8017df6 <vListInsertEnd>
 80194d2:	693b      	ldr	r3, [r7, #16]
 80194d4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80194d6:	4b0d      	ldr	r3, [pc, #52]	; (801950c <xTaskRemoveFromEventList+0xc0>)
 80194d8:	681b      	ldr	r3, [r3, #0]
 80194da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80194dc:	429a      	cmp	r2, r3
 80194de:	d905      	bls.n	80194ec <xTaskRemoveFromEventList+0xa0>
 80194e0:	2301      	movs	r3, #1
 80194e2:	617b      	str	r3, [r7, #20]
 80194e4:	4b0a      	ldr	r3, [pc, #40]	; (8019510 <xTaskRemoveFromEventList+0xc4>)
 80194e6:	2201      	movs	r2, #1
 80194e8:	601a      	str	r2, [r3, #0]
 80194ea:	e001      	b.n	80194f0 <xTaskRemoveFromEventList+0xa4>
 80194ec:	2300      	movs	r3, #0
 80194ee:	617b      	str	r3, [r7, #20]
 80194f0:	697b      	ldr	r3, [r7, #20]
 80194f2:	4618      	mov	r0, r3
 80194f4:	3718      	adds	r7, #24
 80194f6:	46bd      	mov	sp, r7
 80194f8:	bd80      	pop	{r7, pc}
 80194fa:	bf00      	nop
 80194fc:	24002c80 	.word	0x24002c80
 8019500:	24002c60 	.word	0x24002c60
 8019504:	24002788 	.word	0x24002788
 8019508:	24002c18 	.word	0x24002c18
 801950c:	24002784 	.word	0x24002784
 8019510:	24002c6c 	.word	0x24002c6c

08019514 <vTaskRemoveFromUnorderedEventList>:
 8019514:	b580      	push	{r7, lr}
 8019516:	b086      	sub	sp, #24
 8019518:	af00      	add	r7, sp, #0
 801951a:	6078      	str	r0, [r7, #4]
 801951c:	6039      	str	r1, [r7, #0]
 801951e:	4b29      	ldr	r3, [pc, #164]	; (80195c4 <vTaskRemoveFromUnorderedEventList+0xb0>)
 8019520:	681b      	ldr	r3, [r3, #0]
 8019522:	2b00      	cmp	r3, #0
 8019524:	d10a      	bne.n	801953c <vTaskRemoveFromUnorderedEventList+0x28>
 8019526:	f04f 0350 	mov.w	r3, #80	; 0x50
 801952a:	f383 8811 	msr	BASEPRI, r3
 801952e:	f3bf 8f6f 	isb	sy
 8019532:	f3bf 8f4f 	dsb	sy
 8019536:	613b      	str	r3, [r7, #16]
 8019538:	bf00      	nop
 801953a:	e7fe      	b.n	801953a <vTaskRemoveFromUnorderedEventList+0x26>
 801953c:	683b      	ldr	r3, [r7, #0]
 801953e:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8019542:	687b      	ldr	r3, [r7, #4]
 8019544:	601a      	str	r2, [r3, #0]
 8019546:	687b      	ldr	r3, [r7, #4]
 8019548:	68db      	ldr	r3, [r3, #12]
 801954a:	617b      	str	r3, [r7, #20]
 801954c:	697b      	ldr	r3, [r7, #20]
 801954e:	2b00      	cmp	r3, #0
 8019550:	d10a      	bne.n	8019568 <vTaskRemoveFromUnorderedEventList+0x54>
 8019552:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019556:	f383 8811 	msr	BASEPRI, r3
 801955a:	f3bf 8f6f 	isb	sy
 801955e:	f3bf 8f4f 	dsb	sy
 8019562:	60fb      	str	r3, [r7, #12]
 8019564:	bf00      	nop
 8019566:	e7fe      	b.n	8019566 <vTaskRemoveFromUnorderedEventList+0x52>
 8019568:	6878      	ldr	r0, [r7, #4]
 801956a:	f7fe fca1 	bl	8017eb0 <uxListRemove>
 801956e:	697b      	ldr	r3, [r7, #20]
 8019570:	3304      	adds	r3, #4
 8019572:	4618      	mov	r0, r3
 8019574:	f7fe fc9c 	bl	8017eb0 <uxListRemove>
 8019578:	697b      	ldr	r3, [r7, #20]
 801957a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801957c:	4b12      	ldr	r3, [pc, #72]	; (80195c8 <vTaskRemoveFromUnorderedEventList+0xb4>)
 801957e:	681b      	ldr	r3, [r3, #0]
 8019580:	429a      	cmp	r2, r3
 8019582:	d903      	bls.n	801958c <vTaskRemoveFromUnorderedEventList+0x78>
 8019584:	697b      	ldr	r3, [r7, #20]
 8019586:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019588:	4a0f      	ldr	r2, [pc, #60]	; (80195c8 <vTaskRemoveFromUnorderedEventList+0xb4>)
 801958a:	6013      	str	r3, [r2, #0]
 801958c:	697b      	ldr	r3, [r7, #20]
 801958e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8019590:	4613      	mov	r3, r2
 8019592:	009b      	lsls	r3, r3, #2
 8019594:	4413      	add	r3, r2
 8019596:	009b      	lsls	r3, r3, #2
 8019598:	4a0c      	ldr	r2, [pc, #48]	; (80195cc <vTaskRemoveFromUnorderedEventList+0xb8>)
 801959a:	441a      	add	r2, r3
 801959c:	697b      	ldr	r3, [r7, #20]
 801959e:	3304      	adds	r3, #4
 80195a0:	4619      	mov	r1, r3
 80195a2:	4610      	mov	r0, r2
 80195a4:	f7fe fc27 	bl	8017df6 <vListInsertEnd>
 80195a8:	697b      	ldr	r3, [r7, #20]
 80195aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80195ac:	4b08      	ldr	r3, [pc, #32]	; (80195d0 <vTaskRemoveFromUnorderedEventList+0xbc>)
 80195ae:	681b      	ldr	r3, [r3, #0]
 80195b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80195b2:	429a      	cmp	r2, r3
 80195b4:	d902      	bls.n	80195bc <vTaskRemoveFromUnorderedEventList+0xa8>
 80195b6:	4b07      	ldr	r3, [pc, #28]	; (80195d4 <vTaskRemoveFromUnorderedEventList+0xc0>)
 80195b8:	2201      	movs	r2, #1
 80195ba:	601a      	str	r2, [r3, #0]
 80195bc:	bf00      	nop
 80195be:	3718      	adds	r7, #24
 80195c0:	46bd      	mov	sp, r7
 80195c2:	bd80      	pop	{r7, pc}
 80195c4:	24002c80 	.word	0x24002c80
 80195c8:	24002c60 	.word	0x24002c60
 80195cc:	24002788 	.word	0x24002788
 80195d0:	24002784 	.word	0x24002784
 80195d4:	24002c6c 	.word	0x24002c6c

080195d8 <vTaskInternalSetTimeOutState>:
 80195d8:	b480      	push	{r7}
 80195da:	b083      	sub	sp, #12
 80195dc:	af00      	add	r7, sp, #0
 80195de:	6078      	str	r0, [r7, #4]
 80195e0:	4b06      	ldr	r3, [pc, #24]	; (80195fc <vTaskInternalSetTimeOutState+0x24>)
 80195e2:	681a      	ldr	r2, [r3, #0]
 80195e4:	687b      	ldr	r3, [r7, #4]
 80195e6:	601a      	str	r2, [r3, #0]
 80195e8:	4b05      	ldr	r3, [pc, #20]	; (8019600 <vTaskInternalSetTimeOutState+0x28>)
 80195ea:	681a      	ldr	r2, [r3, #0]
 80195ec:	687b      	ldr	r3, [r7, #4]
 80195ee:	605a      	str	r2, [r3, #4]
 80195f0:	bf00      	nop
 80195f2:	370c      	adds	r7, #12
 80195f4:	46bd      	mov	sp, r7
 80195f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80195fa:	4770      	bx	lr
 80195fc:	24002c70 	.word	0x24002c70
 8019600:	24002c5c 	.word	0x24002c5c

08019604 <xTaskCheckForTimeOut>:
 8019604:	b580      	push	{r7, lr}
 8019606:	b088      	sub	sp, #32
 8019608:	af00      	add	r7, sp, #0
 801960a:	6078      	str	r0, [r7, #4]
 801960c:	6039      	str	r1, [r7, #0]
 801960e:	687b      	ldr	r3, [r7, #4]
 8019610:	2b00      	cmp	r3, #0
 8019612:	d10a      	bne.n	801962a <xTaskCheckForTimeOut+0x26>
 8019614:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019618:	f383 8811 	msr	BASEPRI, r3
 801961c:	f3bf 8f6f 	isb	sy
 8019620:	f3bf 8f4f 	dsb	sy
 8019624:	613b      	str	r3, [r7, #16]
 8019626:	bf00      	nop
 8019628:	e7fe      	b.n	8019628 <xTaskCheckForTimeOut+0x24>
 801962a:	683b      	ldr	r3, [r7, #0]
 801962c:	2b00      	cmp	r3, #0
 801962e:	d10a      	bne.n	8019646 <xTaskCheckForTimeOut+0x42>
 8019630:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019634:	f383 8811 	msr	BASEPRI, r3
 8019638:	f3bf 8f6f 	isb	sy
 801963c:	f3bf 8f4f 	dsb	sy
 8019640:	60fb      	str	r3, [r7, #12]
 8019642:	bf00      	nop
 8019644:	e7fe      	b.n	8019644 <xTaskCheckForTimeOut+0x40>
 8019646:	f000 feb5 	bl	801a3b4 <vPortEnterCritical>
 801964a:	4b1d      	ldr	r3, [pc, #116]	; (80196c0 <xTaskCheckForTimeOut+0xbc>)
 801964c:	681b      	ldr	r3, [r3, #0]
 801964e:	61bb      	str	r3, [r7, #24]
 8019650:	687b      	ldr	r3, [r7, #4]
 8019652:	685b      	ldr	r3, [r3, #4]
 8019654:	69ba      	ldr	r2, [r7, #24]
 8019656:	1ad3      	subs	r3, r2, r3
 8019658:	617b      	str	r3, [r7, #20]
 801965a:	683b      	ldr	r3, [r7, #0]
 801965c:	681b      	ldr	r3, [r3, #0]
 801965e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8019662:	d102      	bne.n	801966a <xTaskCheckForTimeOut+0x66>
 8019664:	2300      	movs	r3, #0
 8019666:	61fb      	str	r3, [r7, #28]
 8019668:	e023      	b.n	80196b2 <xTaskCheckForTimeOut+0xae>
 801966a:	687b      	ldr	r3, [r7, #4]
 801966c:	681a      	ldr	r2, [r3, #0]
 801966e:	4b15      	ldr	r3, [pc, #84]	; (80196c4 <xTaskCheckForTimeOut+0xc0>)
 8019670:	681b      	ldr	r3, [r3, #0]
 8019672:	429a      	cmp	r2, r3
 8019674:	d007      	beq.n	8019686 <xTaskCheckForTimeOut+0x82>
 8019676:	687b      	ldr	r3, [r7, #4]
 8019678:	685b      	ldr	r3, [r3, #4]
 801967a:	69ba      	ldr	r2, [r7, #24]
 801967c:	429a      	cmp	r2, r3
 801967e:	d302      	bcc.n	8019686 <xTaskCheckForTimeOut+0x82>
 8019680:	2301      	movs	r3, #1
 8019682:	61fb      	str	r3, [r7, #28]
 8019684:	e015      	b.n	80196b2 <xTaskCheckForTimeOut+0xae>
 8019686:	683b      	ldr	r3, [r7, #0]
 8019688:	681b      	ldr	r3, [r3, #0]
 801968a:	697a      	ldr	r2, [r7, #20]
 801968c:	429a      	cmp	r2, r3
 801968e:	d20b      	bcs.n	80196a8 <xTaskCheckForTimeOut+0xa4>
 8019690:	683b      	ldr	r3, [r7, #0]
 8019692:	681a      	ldr	r2, [r3, #0]
 8019694:	697b      	ldr	r3, [r7, #20]
 8019696:	1ad2      	subs	r2, r2, r3
 8019698:	683b      	ldr	r3, [r7, #0]
 801969a:	601a      	str	r2, [r3, #0]
 801969c:	6878      	ldr	r0, [r7, #4]
 801969e:	f7ff ff9b 	bl	80195d8 <vTaskInternalSetTimeOutState>
 80196a2:	2300      	movs	r3, #0
 80196a4:	61fb      	str	r3, [r7, #28]
 80196a6:	e004      	b.n	80196b2 <xTaskCheckForTimeOut+0xae>
 80196a8:	683b      	ldr	r3, [r7, #0]
 80196aa:	2200      	movs	r2, #0
 80196ac:	601a      	str	r2, [r3, #0]
 80196ae:	2301      	movs	r3, #1
 80196b0:	61fb      	str	r3, [r7, #28]
 80196b2:	f000 feaf 	bl	801a414 <vPortExitCritical>
 80196b6:	69fb      	ldr	r3, [r7, #28]
 80196b8:	4618      	mov	r0, r3
 80196ba:	3720      	adds	r7, #32
 80196bc:	46bd      	mov	sp, r7
 80196be:	bd80      	pop	{r7, pc}
 80196c0:	24002c5c 	.word	0x24002c5c
 80196c4:	24002c70 	.word	0x24002c70

080196c8 <vTaskMissedYield>:
 80196c8:	b480      	push	{r7}
 80196ca:	af00      	add	r7, sp, #0
 80196cc:	4b03      	ldr	r3, [pc, #12]	; (80196dc <vTaskMissedYield+0x14>)
 80196ce:	2201      	movs	r2, #1
 80196d0:	601a      	str	r2, [r3, #0]
 80196d2:	bf00      	nop
 80196d4:	46bd      	mov	sp, r7
 80196d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80196da:	4770      	bx	lr
 80196dc:	24002c6c 	.word	0x24002c6c

080196e0 <prvIdleTask>:
 80196e0:	b580      	push	{r7, lr}
 80196e2:	b082      	sub	sp, #8
 80196e4:	af00      	add	r7, sp, #0
 80196e6:	6078      	str	r0, [r7, #4]
 80196e8:	f000 f852 	bl	8019790 <prvCheckTasksWaitingTermination>
 80196ec:	4b06      	ldr	r3, [pc, #24]	; (8019708 <prvIdleTask+0x28>)
 80196ee:	681b      	ldr	r3, [r3, #0]
 80196f0:	2b01      	cmp	r3, #1
 80196f2:	d9f9      	bls.n	80196e8 <prvIdleTask+0x8>
 80196f4:	4b05      	ldr	r3, [pc, #20]	; (801970c <prvIdleTask+0x2c>)
 80196f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80196fa:	601a      	str	r2, [r3, #0]
 80196fc:	f3bf 8f4f 	dsb	sy
 8019700:	f3bf 8f6f 	isb	sy
 8019704:	e7f0      	b.n	80196e8 <prvIdleTask+0x8>
 8019706:	bf00      	nop
 8019708:	24002788 	.word	0x24002788
 801970c:	e000ed04 	.word	0xe000ed04

08019710 <prvInitialiseTaskLists>:
 8019710:	b580      	push	{r7, lr}
 8019712:	b082      	sub	sp, #8
 8019714:	af00      	add	r7, sp, #0
 8019716:	2300      	movs	r3, #0
 8019718:	607b      	str	r3, [r7, #4]
 801971a:	e00c      	b.n	8019736 <prvInitialiseTaskLists+0x26>
 801971c:	687a      	ldr	r2, [r7, #4]
 801971e:	4613      	mov	r3, r2
 8019720:	009b      	lsls	r3, r3, #2
 8019722:	4413      	add	r3, r2
 8019724:	009b      	lsls	r3, r3, #2
 8019726:	4a12      	ldr	r2, [pc, #72]	; (8019770 <prvInitialiseTaskLists+0x60>)
 8019728:	4413      	add	r3, r2
 801972a:	4618      	mov	r0, r3
 801972c:	f7fe fb36 	bl	8017d9c <vListInitialise>
 8019730:	687b      	ldr	r3, [r7, #4]
 8019732:	3301      	adds	r3, #1
 8019734:	607b      	str	r3, [r7, #4]
 8019736:	687b      	ldr	r3, [r7, #4]
 8019738:	2b37      	cmp	r3, #55	; 0x37
 801973a:	d9ef      	bls.n	801971c <prvInitialiseTaskLists+0xc>
 801973c:	480d      	ldr	r0, [pc, #52]	; (8019774 <prvInitialiseTaskLists+0x64>)
 801973e:	f7fe fb2d 	bl	8017d9c <vListInitialise>
 8019742:	480d      	ldr	r0, [pc, #52]	; (8019778 <prvInitialiseTaskLists+0x68>)
 8019744:	f7fe fb2a 	bl	8017d9c <vListInitialise>
 8019748:	480c      	ldr	r0, [pc, #48]	; (801977c <prvInitialiseTaskLists+0x6c>)
 801974a:	f7fe fb27 	bl	8017d9c <vListInitialise>
 801974e:	480c      	ldr	r0, [pc, #48]	; (8019780 <prvInitialiseTaskLists+0x70>)
 8019750:	f7fe fb24 	bl	8017d9c <vListInitialise>
 8019754:	480b      	ldr	r0, [pc, #44]	; (8019784 <prvInitialiseTaskLists+0x74>)
 8019756:	f7fe fb21 	bl	8017d9c <vListInitialise>
 801975a:	4b0b      	ldr	r3, [pc, #44]	; (8019788 <prvInitialiseTaskLists+0x78>)
 801975c:	4a05      	ldr	r2, [pc, #20]	; (8019774 <prvInitialiseTaskLists+0x64>)
 801975e:	601a      	str	r2, [r3, #0]
 8019760:	4b0a      	ldr	r3, [pc, #40]	; (801978c <prvInitialiseTaskLists+0x7c>)
 8019762:	4a05      	ldr	r2, [pc, #20]	; (8019778 <prvInitialiseTaskLists+0x68>)
 8019764:	601a      	str	r2, [r3, #0]
 8019766:	bf00      	nop
 8019768:	3708      	adds	r7, #8
 801976a:	46bd      	mov	sp, r7
 801976c:	bd80      	pop	{r7, pc}
 801976e:	bf00      	nop
 8019770:	24002788 	.word	0x24002788
 8019774:	24002be8 	.word	0x24002be8
 8019778:	24002bfc 	.word	0x24002bfc
 801977c:	24002c18 	.word	0x24002c18
 8019780:	24002c2c 	.word	0x24002c2c
 8019784:	24002c44 	.word	0x24002c44
 8019788:	24002c10 	.word	0x24002c10
 801978c:	24002c14 	.word	0x24002c14

08019790 <prvCheckTasksWaitingTermination>:
 8019790:	b580      	push	{r7, lr}
 8019792:	b082      	sub	sp, #8
 8019794:	af00      	add	r7, sp, #0
 8019796:	e019      	b.n	80197cc <prvCheckTasksWaitingTermination+0x3c>
 8019798:	f000 fe0c 	bl	801a3b4 <vPortEnterCritical>
 801979c:	4b10      	ldr	r3, [pc, #64]	; (80197e0 <prvCheckTasksWaitingTermination+0x50>)
 801979e:	68db      	ldr	r3, [r3, #12]
 80197a0:	68db      	ldr	r3, [r3, #12]
 80197a2:	607b      	str	r3, [r7, #4]
 80197a4:	687b      	ldr	r3, [r7, #4]
 80197a6:	3304      	adds	r3, #4
 80197a8:	4618      	mov	r0, r3
 80197aa:	f7fe fb81 	bl	8017eb0 <uxListRemove>
 80197ae:	4b0d      	ldr	r3, [pc, #52]	; (80197e4 <prvCheckTasksWaitingTermination+0x54>)
 80197b0:	681b      	ldr	r3, [r3, #0]
 80197b2:	3b01      	subs	r3, #1
 80197b4:	4a0b      	ldr	r2, [pc, #44]	; (80197e4 <prvCheckTasksWaitingTermination+0x54>)
 80197b6:	6013      	str	r3, [r2, #0]
 80197b8:	4b0b      	ldr	r3, [pc, #44]	; (80197e8 <prvCheckTasksWaitingTermination+0x58>)
 80197ba:	681b      	ldr	r3, [r3, #0]
 80197bc:	3b01      	subs	r3, #1
 80197be:	4a0a      	ldr	r2, [pc, #40]	; (80197e8 <prvCheckTasksWaitingTermination+0x58>)
 80197c0:	6013      	str	r3, [r2, #0]
 80197c2:	f000 fe27 	bl	801a414 <vPortExitCritical>
 80197c6:	6878      	ldr	r0, [r7, #4]
 80197c8:	f000 f810 	bl	80197ec <prvDeleteTCB>
 80197cc:	4b06      	ldr	r3, [pc, #24]	; (80197e8 <prvCheckTasksWaitingTermination+0x58>)
 80197ce:	681b      	ldr	r3, [r3, #0]
 80197d0:	2b00      	cmp	r3, #0
 80197d2:	d1e1      	bne.n	8019798 <prvCheckTasksWaitingTermination+0x8>
 80197d4:	bf00      	nop
 80197d6:	bf00      	nop
 80197d8:	3708      	adds	r7, #8
 80197da:	46bd      	mov	sp, r7
 80197dc:	bd80      	pop	{r7, pc}
 80197de:	bf00      	nop
 80197e0:	24002c2c 	.word	0x24002c2c
 80197e4:	24002c58 	.word	0x24002c58
 80197e8:	24002c40 	.word	0x24002c40

080197ec <prvDeleteTCB>:
 80197ec:	b580      	push	{r7, lr}
 80197ee:	b084      	sub	sp, #16
 80197f0:	af00      	add	r7, sp, #0
 80197f2:	6078      	str	r0, [r7, #4]
 80197f4:	687b      	ldr	r3, [r7, #4]
 80197f6:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 80197fa:	2b00      	cmp	r3, #0
 80197fc:	d108      	bne.n	8019810 <prvDeleteTCB+0x24>
 80197fe:	687b      	ldr	r3, [r7, #4]
 8019800:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019802:	4618      	mov	r0, r3
 8019804:	f000 ffc4 	bl	801a790 <vPortFree>
 8019808:	6878      	ldr	r0, [r7, #4]
 801980a:	f000 ffc1 	bl	801a790 <vPortFree>
 801980e:	e018      	b.n	8019842 <prvDeleteTCB+0x56>
 8019810:	687b      	ldr	r3, [r7, #4]
 8019812:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 8019816:	2b01      	cmp	r3, #1
 8019818:	d103      	bne.n	8019822 <prvDeleteTCB+0x36>
 801981a:	6878      	ldr	r0, [r7, #4]
 801981c:	f000 ffb8 	bl	801a790 <vPortFree>
 8019820:	e00f      	b.n	8019842 <prvDeleteTCB+0x56>
 8019822:	687b      	ldr	r3, [r7, #4]
 8019824:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 8019828:	2b02      	cmp	r3, #2
 801982a:	d00a      	beq.n	8019842 <prvDeleteTCB+0x56>
 801982c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019830:	f383 8811 	msr	BASEPRI, r3
 8019834:	f3bf 8f6f 	isb	sy
 8019838:	f3bf 8f4f 	dsb	sy
 801983c:	60fb      	str	r3, [r7, #12]
 801983e:	bf00      	nop
 8019840:	e7fe      	b.n	8019840 <prvDeleteTCB+0x54>
 8019842:	bf00      	nop
 8019844:	3710      	adds	r7, #16
 8019846:	46bd      	mov	sp, r7
 8019848:	bd80      	pop	{r7, pc}
	...

0801984c <prvResetNextTaskUnblockTime>:
 801984c:	b480      	push	{r7}
 801984e:	b083      	sub	sp, #12
 8019850:	af00      	add	r7, sp, #0
 8019852:	4b0c      	ldr	r3, [pc, #48]	; (8019884 <prvResetNextTaskUnblockTime+0x38>)
 8019854:	681b      	ldr	r3, [r3, #0]
 8019856:	681b      	ldr	r3, [r3, #0]
 8019858:	2b00      	cmp	r3, #0
 801985a:	d104      	bne.n	8019866 <prvResetNextTaskUnblockTime+0x1a>
 801985c:	4b0a      	ldr	r3, [pc, #40]	; (8019888 <prvResetNextTaskUnblockTime+0x3c>)
 801985e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8019862:	601a      	str	r2, [r3, #0]
 8019864:	e008      	b.n	8019878 <prvResetNextTaskUnblockTime+0x2c>
 8019866:	4b07      	ldr	r3, [pc, #28]	; (8019884 <prvResetNextTaskUnblockTime+0x38>)
 8019868:	681b      	ldr	r3, [r3, #0]
 801986a:	68db      	ldr	r3, [r3, #12]
 801986c:	68db      	ldr	r3, [r3, #12]
 801986e:	607b      	str	r3, [r7, #4]
 8019870:	687b      	ldr	r3, [r7, #4]
 8019872:	685b      	ldr	r3, [r3, #4]
 8019874:	4a04      	ldr	r2, [pc, #16]	; (8019888 <prvResetNextTaskUnblockTime+0x3c>)
 8019876:	6013      	str	r3, [r2, #0]
 8019878:	bf00      	nop
 801987a:	370c      	adds	r7, #12
 801987c:	46bd      	mov	sp, r7
 801987e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019882:	4770      	bx	lr
 8019884:	24002c10 	.word	0x24002c10
 8019888:	24002c78 	.word	0x24002c78

0801988c <xTaskGetSchedulerState>:
 801988c:	b480      	push	{r7}
 801988e:	b083      	sub	sp, #12
 8019890:	af00      	add	r7, sp, #0
 8019892:	4b0b      	ldr	r3, [pc, #44]	; (80198c0 <xTaskGetSchedulerState+0x34>)
 8019894:	681b      	ldr	r3, [r3, #0]
 8019896:	2b00      	cmp	r3, #0
 8019898:	d102      	bne.n	80198a0 <xTaskGetSchedulerState+0x14>
 801989a:	2301      	movs	r3, #1
 801989c:	607b      	str	r3, [r7, #4]
 801989e:	e008      	b.n	80198b2 <xTaskGetSchedulerState+0x26>
 80198a0:	4b08      	ldr	r3, [pc, #32]	; (80198c4 <xTaskGetSchedulerState+0x38>)
 80198a2:	681b      	ldr	r3, [r3, #0]
 80198a4:	2b00      	cmp	r3, #0
 80198a6:	d102      	bne.n	80198ae <xTaskGetSchedulerState+0x22>
 80198a8:	2302      	movs	r3, #2
 80198aa:	607b      	str	r3, [r7, #4]
 80198ac:	e001      	b.n	80198b2 <xTaskGetSchedulerState+0x26>
 80198ae:	2300      	movs	r3, #0
 80198b0:	607b      	str	r3, [r7, #4]
 80198b2:	687b      	ldr	r3, [r7, #4]
 80198b4:	4618      	mov	r0, r3
 80198b6:	370c      	adds	r7, #12
 80198b8:	46bd      	mov	sp, r7
 80198ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80198be:	4770      	bx	lr
 80198c0:	24002c64 	.word	0x24002c64
 80198c4:	24002c80 	.word	0x24002c80

080198c8 <xTaskPriorityDisinherit>:
 80198c8:	b580      	push	{r7, lr}
 80198ca:	b086      	sub	sp, #24
 80198cc:	af00      	add	r7, sp, #0
 80198ce:	6078      	str	r0, [r7, #4]
 80198d0:	687b      	ldr	r3, [r7, #4]
 80198d2:	613b      	str	r3, [r7, #16]
 80198d4:	2300      	movs	r3, #0
 80198d6:	617b      	str	r3, [r7, #20]
 80198d8:	687b      	ldr	r3, [r7, #4]
 80198da:	2b00      	cmp	r3, #0
 80198dc:	d056      	beq.n	801998c <xTaskPriorityDisinherit+0xc4>
 80198de:	4b2e      	ldr	r3, [pc, #184]	; (8019998 <xTaskPriorityDisinherit+0xd0>)
 80198e0:	681b      	ldr	r3, [r3, #0]
 80198e2:	693a      	ldr	r2, [r7, #16]
 80198e4:	429a      	cmp	r2, r3
 80198e6:	d00a      	beq.n	80198fe <xTaskPriorityDisinherit+0x36>
 80198e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80198ec:	f383 8811 	msr	BASEPRI, r3
 80198f0:	f3bf 8f6f 	isb	sy
 80198f4:	f3bf 8f4f 	dsb	sy
 80198f8:	60fb      	str	r3, [r7, #12]
 80198fa:	bf00      	nop
 80198fc:	e7fe      	b.n	80198fc <xTaskPriorityDisinherit+0x34>
 80198fe:	693b      	ldr	r3, [r7, #16]
 8019900:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019902:	2b00      	cmp	r3, #0
 8019904:	d10a      	bne.n	801991c <xTaskPriorityDisinherit+0x54>
 8019906:	f04f 0350 	mov.w	r3, #80	; 0x50
 801990a:	f383 8811 	msr	BASEPRI, r3
 801990e:	f3bf 8f6f 	isb	sy
 8019912:	f3bf 8f4f 	dsb	sy
 8019916:	60bb      	str	r3, [r7, #8]
 8019918:	bf00      	nop
 801991a:	e7fe      	b.n	801991a <xTaskPriorityDisinherit+0x52>
 801991c:	693b      	ldr	r3, [r7, #16]
 801991e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019920:	1e5a      	subs	r2, r3, #1
 8019922:	693b      	ldr	r3, [r7, #16]
 8019924:	651a      	str	r2, [r3, #80]	; 0x50
 8019926:	693b      	ldr	r3, [r7, #16]
 8019928:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801992a:	693b      	ldr	r3, [r7, #16]
 801992c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801992e:	429a      	cmp	r2, r3
 8019930:	d02c      	beq.n	801998c <xTaskPriorityDisinherit+0xc4>
 8019932:	693b      	ldr	r3, [r7, #16]
 8019934:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019936:	2b00      	cmp	r3, #0
 8019938:	d128      	bne.n	801998c <xTaskPriorityDisinherit+0xc4>
 801993a:	693b      	ldr	r3, [r7, #16]
 801993c:	3304      	adds	r3, #4
 801993e:	4618      	mov	r0, r3
 8019940:	f7fe fab6 	bl	8017eb0 <uxListRemove>
 8019944:	693b      	ldr	r3, [r7, #16]
 8019946:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8019948:	693b      	ldr	r3, [r7, #16]
 801994a:	62da      	str	r2, [r3, #44]	; 0x2c
 801994c:	693b      	ldr	r3, [r7, #16]
 801994e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019950:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8019954:	693b      	ldr	r3, [r7, #16]
 8019956:	619a      	str	r2, [r3, #24]
 8019958:	693b      	ldr	r3, [r7, #16]
 801995a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801995c:	4b0f      	ldr	r3, [pc, #60]	; (801999c <xTaskPriorityDisinherit+0xd4>)
 801995e:	681b      	ldr	r3, [r3, #0]
 8019960:	429a      	cmp	r2, r3
 8019962:	d903      	bls.n	801996c <xTaskPriorityDisinherit+0xa4>
 8019964:	693b      	ldr	r3, [r7, #16]
 8019966:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019968:	4a0c      	ldr	r2, [pc, #48]	; (801999c <xTaskPriorityDisinherit+0xd4>)
 801996a:	6013      	str	r3, [r2, #0]
 801996c:	693b      	ldr	r3, [r7, #16]
 801996e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8019970:	4613      	mov	r3, r2
 8019972:	009b      	lsls	r3, r3, #2
 8019974:	4413      	add	r3, r2
 8019976:	009b      	lsls	r3, r3, #2
 8019978:	4a09      	ldr	r2, [pc, #36]	; (80199a0 <xTaskPriorityDisinherit+0xd8>)
 801997a:	441a      	add	r2, r3
 801997c:	693b      	ldr	r3, [r7, #16]
 801997e:	3304      	adds	r3, #4
 8019980:	4619      	mov	r1, r3
 8019982:	4610      	mov	r0, r2
 8019984:	f7fe fa37 	bl	8017df6 <vListInsertEnd>
 8019988:	2301      	movs	r3, #1
 801998a:	617b      	str	r3, [r7, #20]
 801998c:	697b      	ldr	r3, [r7, #20]
 801998e:	4618      	mov	r0, r3
 8019990:	3718      	adds	r7, #24
 8019992:	46bd      	mov	sp, r7
 8019994:	bd80      	pop	{r7, pc}
 8019996:	bf00      	nop
 8019998:	24002784 	.word	0x24002784
 801999c:	24002c60 	.word	0x24002c60
 80199a0:	24002788 	.word	0x24002788

080199a4 <uxTaskResetEventItemValue>:
 80199a4:	b480      	push	{r7}
 80199a6:	b083      	sub	sp, #12
 80199a8:	af00      	add	r7, sp, #0
 80199aa:	4b09      	ldr	r3, [pc, #36]	; (80199d0 <uxTaskResetEventItemValue+0x2c>)
 80199ac:	681b      	ldr	r3, [r3, #0]
 80199ae:	699b      	ldr	r3, [r3, #24]
 80199b0:	607b      	str	r3, [r7, #4]
 80199b2:	4b07      	ldr	r3, [pc, #28]	; (80199d0 <uxTaskResetEventItemValue+0x2c>)
 80199b4:	681b      	ldr	r3, [r3, #0]
 80199b6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80199b8:	4b05      	ldr	r3, [pc, #20]	; (80199d0 <uxTaskResetEventItemValue+0x2c>)
 80199ba:	681b      	ldr	r3, [r3, #0]
 80199bc:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 80199c0:	619a      	str	r2, [r3, #24]
 80199c2:	687b      	ldr	r3, [r7, #4]
 80199c4:	4618      	mov	r0, r3
 80199c6:	370c      	adds	r7, #12
 80199c8:	46bd      	mov	sp, r7
 80199ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80199ce:	4770      	bx	lr
 80199d0:	24002784 	.word	0x24002784

080199d4 <prvAddCurrentTaskToDelayedList>:
 80199d4:	b580      	push	{r7, lr}
 80199d6:	b084      	sub	sp, #16
 80199d8:	af00      	add	r7, sp, #0
 80199da:	6078      	str	r0, [r7, #4]
 80199dc:	6039      	str	r1, [r7, #0]
 80199de:	4b21      	ldr	r3, [pc, #132]	; (8019a64 <prvAddCurrentTaskToDelayedList+0x90>)
 80199e0:	681b      	ldr	r3, [r3, #0]
 80199e2:	60fb      	str	r3, [r7, #12]
 80199e4:	4b20      	ldr	r3, [pc, #128]	; (8019a68 <prvAddCurrentTaskToDelayedList+0x94>)
 80199e6:	681b      	ldr	r3, [r3, #0]
 80199e8:	3304      	adds	r3, #4
 80199ea:	4618      	mov	r0, r3
 80199ec:	f7fe fa60 	bl	8017eb0 <uxListRemove>
 80199f0:	687b      	ldr	r3, [r7, #4]
 80199f2:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80199f6:	d10a      	bne.n	8019a0e <prvAddCurrentTaskToDelayedList+0x3a>
 80199f8:	683b      	ldr	r3, [r7, #0]
 80199fa:	2b00      	cmp	r3, #0
 80199fc:	d007      	beq.n	8019a0e <prvAddCurrentTaskToDelayedList+0x3a>
 80199fe:	4b1a      	ldr	r3, [pc, #104]	; (8019a68 <prvAddCurrentTaskToDelayedList+0x94>)
 8019a00:	681b      	ldr	r3, [r3, #0]
 8019a02:	3304      	adds	r3, #4
 8019a04:	4619      	mov	r1, r3
 8019a06:	4819      	ldr	r0, [pc, #100]	; (8019a6c <prvAddCurrentTaskToDelayedList+0x98>)
 8019a08:	f7fe f9f5 	bl	8017df6 <vListInsertEnd>
 8019a0c:	e026      	b.n	8019a5c <prvAddCurrentTaskToDelayedList+0x88>
 8019a0e:	68fa      	ldr	r2, [r7, #12]
 8019a10:	687b      	ldr	r3, [r7, #4]
 8019a12:	4413      	add	r3, r2
 8019a14:	60bb      	str	r3, [r7, #8]
 8019a16:	4b14      	ldr	r3, [pc, #80]	; (8019a68 <prvAddCurrentTaskToDelayedList+0x94>)
 8019a18:	681b      	ldr	r3, [r3, #0]
 8019a1a:	68ba      	ldr	r2, [r7, #8]
 8019a1c:	605a      	str	r2, [r3, #4]
 8019a1e:	68ba      	ldr	r2, [r7, #8]
 8019a20:	68fb      	ldr	r3, [r7, #12]
 8019a22:	429a      	cmp	r2, r3
 8019a24:	d209      	bcs.n	8019a3a <prvAddCurrentTaskToDelayedList+0x66>
 8019a26:	4b12      	ldr	r3, [pc, #72]	; (8019a70 <prvAddCurrentTaskToDelayedList+0x9c>)
 8019a28:	681a      	ldr	r2, [r3, #0]
 8019a2a:	4b0f      	ldr	r3, [pc, #60]	; (8019a68 <prvAddCurrentTaskToDelayedList+0x94>)
 8019a2c:	681b      	ldr	r3, [r3, #0]
 8019a2e:	3304      	adds	r3, #4
 8019a30:	4619      	mov	r1, r3
 8019a32:	4610      	mov	r0, r2
 8019a34:	f7fe fa03 	bl	8017e3e <vListInsert>
 8019a38:	e010      	b.n	8019a5c <prvAddCurrentTaskToDelayedList+0x88>
 8019a3a:	4b0e      	ldr	r3, [pc, #56]	; (8019a74 <prvAddCurrentTaskToDelayedList+0xa0>)
 8019a3c:	681a      	ldr	r2, [r3, #0]
 8019a3e:	4b0a      	ldr	r3, [pc, #40]	; (8019a68 <prvAddCurrentTaskToDelayedList+0x94>)
 8019a40:	681b      	ldr	r3, [r3, #0]
 8019a42:	3304      	adds	r3, #4
 8019a44:	4619      	mov	r1, r3
 8019a46:	4610      	mov	r0, r2
 8019a48:	f7fe f9f9 	bl	8017e3e <vListInsert>
 8019a4c:	4b0a      	ldr	r3, [pc, #40]	; (8019a78 <prvAddCurrentTaskToDelayedList+0xa4>)
 8019a4e:	681b      	ldr	r3, [r3, #0]
 8019a50:	68ba      	ldr	r2, [r7, #8]
 8019a52:	429a      	cmp	r2, r3
 8019a54:	d202      	bcs.n	8019a5c <prvAddCurrentTaskToDelayedList+0x88>
 8019a56:	4a08      	ldr	r2, [pc, #32]	; (8019a78 <prvAddCurrentTaskToDelayedList+0xa4>)
 8019a58:	68bb      	ldr	r3, [r7, #8]
 8019a5a:	6013      	str	r3, [r2, #0]
 8019a5c:	bf00      	nop
 8019a5e:	3710      	adds	r7, #16
 8019a60:	46bd      	mov	sp, r7
 8019a62:	bd80      	pop	{r7, pc}
 8019a64:	24002c5c 	.word	0x24002c5c
 8019a68:	24002784 	.word	0x24002784
 8019a6c:	24002c44 	.word	0x24002c44
 8019a70:	24002c14 	.word	0x24002c14
 8019a74:	24002c10 	.word	0x24002c10
 8019a78:	24002c78 	.word	0x24002c78

08019a7c <xTimerCreateTimerTask>:
 8019a7c:	b580      	push	{r7, lr}
 8019a7e:	b08a      	sub	sp, #40	; 0x28
 8019a80:	af04      	add	r7, sp, #16
 8019a82:	2300      	movs	r3, #0
 8019a84:	617b      	str	r3, [r7, #20]
 8019a86:	f000 fb07 	bl	801a098 <prvCheckForValidListAndQueue>
 8019a8a:	4b1c      	ldr	r3, [pc, #112]	; (8019afc <xTimerCreateTimerTask+0x80>)
 8019a8c:	681b      	ldr	r3, [r3, #0]
 8019a8e:	2b00      	cmp	r3, #0
 8019a90:	d021      	beq.n	8019ad6 <xTimerCreateTimerTask+0x5a>
 8019a92:	2300      	movs	r3, #0
 8019a94:	60fb      	str	r3, [r7, #12]
 8019a96:	2300      	movs	r3, #0
 8019a98:	60bb      	str	r3, [r7, #8]
 8019a9a:	1d3a      	adds	r2, r7, #4
 8019a9c:	f107 0108 	add.w	r1, r7, #8
 8019aa0:	f107 030c 	add.w	r3, r7, #12
 8019aa4:	4618      	mov	r0, r3
 8019aa6:	f7fd fef3 	bl	8017890 <vApplicationGetTimerTaskMemory>
 8019aaa:	6879      	ldr	r1, [r7, #4]
 8019aac:	68bb      	ldr	r3, [r7, #8]
 8019aae:	68fa      	ldr	r2, [r7, #12]
 8019ab0:	9202      	str	r2, [sp, #8]
 8019ab2:	9301      	str	r3, [sp, #4]
 8019ab4:	2302      	movs	r3, #2
 8019ab6:	9300      	str	r3, [sp, #0]
 8019ab8:	2300      	movs	r3, #0
 8019aba:	460a      	mov	r2, r1
 8019abc:	4910      	ldr	r1, [pc, #64]	; (8019b00 <xTimerCreateTimerTask+0x84>)
 8019abe:	4811      	ldr	r0, [pc, #68]	; (8019b04 <xTimerCreateTimerTask+0x88>)
 8019ac0:	f7fe ff0c 	bl	80188dc <xTaskCreateStatic>
 8019ac4:	4603      	mov	r3, r0
 8019ac6:	4a10      	ldr	r2, [pc, #64]	; (8019b08 <xTimerCreateTimerTask+0x8c>)
 8019ac8:	6013      	str	r3, [r2, #0]
 8019aca:	4b0f      	ldr	r3, [pc, #60]	; (8019b08 <xTimerCreateTimerTask+0x8c>)
 8019acc:	681b      	ldr	r3, [r3, #0]
 8019ace:	2b00      	cmp	r3, #0
 8019ad0:	d001      	beq.n	8019ad6 <xTimerCreateTimerTask+0x5a>
 8019ad2:	2301      	movs	r3, #1
 8019ad4:	617b      	str	r3, [r7, #20]
 8019ad6:	697b      	ldr	r3, [r7, #20]
 8019ad8:	2b00      	cmp	r3, #0
 8019ada:	d10a      	bne.n	8019af2 <xTimerCreateTimerTask+0x76>
 8019adc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019ae0:	f383 8811 	msr	BASEPRI, r3
 8019ae4:	f3bf 8f6f 	isb	sy
 8019ae8:	f3bf 8f4f 	dsb	sy
 8019aec:	613b      	str	r3, [r7, #16]
 8019aee:	bf00      	nop
 8019af0:	e7fe      	b.n	8019af0 <xTimerCreateTimerTask+0x74>
 8019af2:	697b      	ldr	r3, [r7, #20]
 8019af4:	4618      	mov	r0, r3
 8019af6:	3718      	adds	r7, #24
 8019af8:	46bd      	mov	sp, r7
 8019afa:	bd80      	pop	{r7, pc}
 8019afc:	24002cb4 	.word	0x24002cb4
 8019b00:	0801b6b8 	.word	0x0801b6b8
 8019b04:	08019c41 	.word	0x08019c41
 8019b08:	24002cb8 	.word	0x24002cb8

08019b0c <xTimerGenericCommand>:
 8019b0c:	b580      	push	{r7, lr}
 8019b0e:	b08a      	sub	sp, #40	; 0x28
 8019b10:	af00      	add	r7, sp, #0
 8019b12:	60f8      	str	r0, [r7, #12]
 8019b14:	60b9      	str	r1, [r7, #8]
 8019b16:	607a      	str	r2, [r7, #4]
 8019b18:	603b      	str	r3, [r7, #0]
 8019b1a:	2300      	movs	r3, #0
 8019b1c:	627b      	str	r3, [r7, #36]	; 0x24
 8019b1e:	68fb      	ldr	r3, [r7, #12]
 8019b20:	2b00      	cmp	r3, #0
 8019b22:	d10a      	bne.n	8019b3a <xTimerGenericCommand+0x2e>
 8019b24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019b28:	f383 8811 	msr	BASEPRI, r3
 8019b2c:	f3bf 8f6f 	isb	sy
 8019b30:	f3bf 8f4f 	dsb	sy
 8019b34:	623b      	str	r3, [r7, #32]
 8019b36:	bf00      	nop
 8019b38:	e7fe      	b.n	8019b38 <xTimerGenericCommand+0x2c>
 8019b3a:	4b1a      	ldr	r3, [pc, #104]	; (8019ba4 <xTimerGenericCommand+0x98>)
 8019b3c:	681b      	ldr	r3, [r3, #0]
 8019b3e:	2b00      	cmp	r3, #0
 8019b40:	d02a      	beq.n	8019b98 <xTimerGenericCommand+0x8c>
 8019b42:	68bb      	ldr	r3, [r7, #8]
 8019b44:	613b      	str	r3, [r7, #16]
 8019b46:	687b      	ldr	r3, [r7, #4]
 8019b48:	617b      	str	r3, [r7, #20]
 8019b4a:	68fb      	ldr	r3, [r7, #12]
 8019b4c:	61bb      	str	r3, [r7, #24]
 8019b4e:	68bb      	ldr	r3, [r7, #8]
 8019b50:	2b05      	cmp	r3, #5
 8019b52:	dc18      	bgt.n	8019b86 <xTimerGenericCommand+0x7a>
 8019b54:	f7ff fe9a 	bl	801988c <xTaskGetSchedulerState>
 8019b58:	4603      	mov	r3, r0
 8019b5a:	2b02      	cmp	r3, #2
 8019b5c:	d109      	bne.n	8019b72 <xTimerGenericCommand+0x66>
 8019b5e:	4b11      	ldr	r3, [pc, #68]	; (8019ba4 <xTimerGenericCommand+0x98>)
 8019b60:	6818      	ldr	r0, [r3, #0]
 8019b62:	f107 0110 	add.w	r1, r7, #16
 8019b66:	2300      	movs	r3, #0
 8019b68:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8019b6a:	f7fe facf 	bl	801810c <xQueueGenericSend>
 8019b6e:	6278      	str	r0, [r7, #36]	; 0x24
 8019b70:	e012      	b.n	8019b98 <xTimerGenericCommand+0x8c>
 8019b72:	4b0c      	ldr	r3, [pc, #48]	; (8019ba4 <xTimerGenericCommand+0x98>)
 8019b74:	6818      	ldr	r0, [r3, #0]
 8019b76:	f107 0110 	add.w	r1, r7, #16
 8019b7a:	2300      	movs	r3, #0
 8019b7c:	2200      	movs	r2, #0
 8019b7e:	f7fe fac5 	bl	801810c <xQueueGenericSend>
 8019b82:	6278      	str	r0, [r7, #36]	; 0x24
 8019b84:	e008      	b.n	8019b98 <xTimerGenericCommand+0x8c>
 8019b86:	4b07      	ldr	r3, [pc, #28]	; (8019ba4 <xTimerGenericCommand+0x98>)
 8019b88:	6818      	ldr	r0, [r3, #0]
 8019b8a:	f107 0110 	add.w	r1, r7, #16
 8019b8e:	2300      	movs	r3, #0
 8019b90:	683a      	ldr	r2, [r7, #0]
 8019b92:	f7fe fbb9 	bl	8018308 <xQueueGenericSendFromISR>
 8019b96:	6278      	str	r0, [r7, #36]	; 0x24
 8019b98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019b9a:	4618      	mov	r0, r3
 8019b9c:	3728      	adds	r7, #40	; 0x28
 8019b9e:	46bd      	mov	sp, r7
 8019ba0:	bd80      	pop	{r7, pc}
 8019ba2:	bf00      	nop
 8019ba4:	24002cb4 	.word	0x24002cb4

08019ba8 <prvProcessExpiredTimer>:
 8019ba8:	b580      	push	{r7, lr}
 8019baa:	b088      	sub	sp, #32
 8019bac:	af02      	add	r7, sp, #8
 8019bae:	6078      	str	r0, [r7, #4]
 8019bb0:	6039      	str	r1, [r7, #0]
 8019bb2:	4b22      	ldr	r3, [pc, #136]	; (8019c3c <prvProcessExpiredTimer+0x94>)
 8019bb4:	681b      	ldr	r3, [r3, #0]
 8019bb6:	68db      	ldr	r3, [r3, #12]
 8019bb8:	68db      	ldr	r3, [r3, #12]
 8019bba:	617b      	str	r3, [r7, #20]
 8019bbc:	697b      	ldr	r3, [r7, #20]
 8019bbe:	3304      	adds	r3, #4
 8019bc0:	4618      	mov	r0, r3
 8019bc2:	f7fe f975 	bl	8017eb0 <uxListRemove>
 8019bc6:	697b      	ldr	r3, [r7, #20]
 8019bc8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019bcc:	f003 0304 	and.w	r3, r3, #4
 8019bd0:	2b00      	cmp	r3, #0
 8019bd2:	d022      	beq.n	8019c1a <prvProcessExpiredTimer+0x72>
 8019bd4:	697b      	ldr	r3, [r7, #20]
 8019bd6:	699a      	ldr	r2, [r3, #24]
 8019bd8:	687b      	ldr	r3, [r7, #4]
 8019bda:	18d1      	adds	r1, r2, r3
 8019bdc:	687b      	ldr	r3, [r7, #4]
 8019bde:	683a      	ldr	r2, [r7, #0]
 8019be0:	6978      	ldr	r0, [r7, #20]
 8019be2:	f000 f8d1 	bl	8019d88 <prvInsertTimerInActiveList>
 8019be6:	4603      	mov	r3, r0
 8019be8:	2b00      	cmp	r3, #0
 8019bea:	d01f      	beq.n	8019c2c <prvProcessExpiredTimer+0x84>
 8019bec:	2300      	movs	r3, #0
 8019bee:	9300      	str	r3, [sp, #0]
 8019bf0:	2300      	movs	r3, #0
 8019bf2:	687a      	ldr	r2, [r7, #4]
 8019bf4:	2100      	movs	r1, #0
 8019bf6:	6978      	ldr	r0, [r7, #20]
 8019bf8:	f7ff ff88 	bl	8019b0c <xTimerGenericCommand>
 8019bfc:	6138      	str	r0, [r7, #16]
 8019bfe:	693b      	ldr	r3, [r7, #16]
 8019c00:	2b00      	cmp	r3, #0
 8019c02:	d113      	bne.n	8019c2c <prvProcessExpiredTimer+0x84>
 8019c04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019c08:	f383 8811 	msr	BASEPRI, r3
 8019c0c:	f3bf 8f6f 	isb	sy
 8019c10:	f3bf 8f4f 	dsb	sy
 8019c14:	60fb      	str	r3, [r7, #12]
 8019c16:	bf00      	nop
 8019c18:	e7fe      	b.n	8019c18 <prvProcessExpiredTimer+0x70>
 8019c1a:	697b      	ldr	r3, [r7, #20]
 8019c1c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019c20:	f023 0301 	bic.w	r3, r3, #1
 8019c24:	b2da      	uxtb	r2, r3
 8019c26:	697b      	ldr	r3, [r7, #20]
 8019c28:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8019c2c:	697b      	ldr	r3, [r7, #20]
 8019c2e:	6a1b      	ldr	r3, [r3, #32]
 8019c30:	6978      	ldr	r0, [r7, #20]
 8019c32:	4798      	blx	r3
 8019c34:	bf00      	nop
 8019c36:	3718      	adds	r7, #24
 8019c38:	46bd      	mov	sp, r7
 8019c3a:	bd80      	pop	{r7, pc}
 8019c3c:	24002cac 	.word	0x24002cac

08019c40 <prvTimerTask>:
 8019c40:	b580      	push	{r7, lr}
 8019c42:	b084      	sub	sp, #16
 8019c44:	af00      	add	r7, sp, #0
 8019c46:	6078      	str	r0, [r7, #4]
 8019c48:	f107 0308 	add.w	r3, r7, #8
 8019c4c:	4618      	mov	r0, r3
 8019c4e:	f000 f857 	bl	8019d00 <prvGetNextExpireTime>
 8019c52:	60f8      	str	r0, [r7, #12]
 8019c54:	68bb      	ldr	r3, [r7, #8]
 8019c56:	4619      	mov	r1, r3
 8019c58:	68f8      	ldr	r0, [r7, #12]
 8019c5a:	f000 f803 	bl	8019c64 <prvProcessTimerOrBlockTask>
 8019c5e:	f000 f8d5 	bl	8019e0c <prvProcessReceivedCommands>
 8019c62:	e7f1      	b.n	8019c48 <prvTimerTask+0x8>

08019c64 <prvProcessTimerOrBlockTask>:
 8019c64:	b580      	push	{r7, lr}
 8019c66:	b084      	sub	sp, #16
 8019c68:	af00      	add	r7, sp, #0
 8019c6a:	6078      	str	r0, [r7, #4]
 8019c6c:	6039      	str	r1, [r7, #0]
 8019c6e:	f7ff f977 	bl	8018f60 <vTaskSuspendAll>
 8019c72:	f107 0308 	add.w	r3, r7, #8
 8019c76:	4618      	mov	r0, r3
 8019c78:	f000 f866 	bl	8019d48 <prvSampleTimeNow>
 8019c7c:	60f8      	str	r0, [r7, #12]
 8019c7e:	68bb      	ldr	r3, [r7, #8]
 8019c80:	2b00      	cmp	r3, #0
 8019c82:	d130      	bne.n	8019ce6 <prvProcessTimerOrBlockTask+0x82>
 8019c84:	683b      	ldr	r3, [r7, #0]
 8019c86:	2b00      	cmp	r3, #0
 8019c88:	d10a      	bne.n	8019ca0 <prvProcessTimerOrBlockTask+0x3c>
 8019c8a:	687a      	ldr	r2, [r7, #4]
 8019c8c:	68fb      	ldr	r3, [r7, #12]
 8019c8e:	429a      	cmp	r2, r3
 8019c90:	d806      	bhi.n	8019ca0 <prvProcessTimerOrBlockTask+0x3c>
 8019c92:	f7ff f973 	bl	8018f7c <xTaskResumeAll>
 8019c96:	68f9      	ldr	r1, [r7, #12]
 8019c98:	6878      	ldr	r0, [r7, #4]
 8019c9a:	f7ff ff85 	bl	8019ba8 <prvProcessExpiredTimer>
 8019c9e:	e024      	b.n	8019cea <prvProcessTimerOrBlockTask+0x86>
 8019ca0:	683b      	ldr	r3, [r7, #0]
 8019ca2:	2b00      	cmp	r3, #0
 8019ca4:	d008      	beq.n	8019cb8 <prvProcessTimerOrBlockTask+0x54>
 8019ca6:	4b13      	ldr	r3, [pc, #76]	; (8019cf4 <prvProcessTimerOrBlockTask+0x90>)
 8019ca8:	681b      	ldr	r3, [r3, #0]
 8019caa:	681b      	ldr	r3, [r3, #0]
 8019cac:	2b00      	cmp	r3, #0
 8019cae:	d101      	bne.n	8019cb4 <prvProcessTimerOrBlockTask+0x50>
 8019cb0:	2301      	movs	r3, #1
 8019cb2:	e000      	b.n	8019cb6 <prvProcessTimerOrBlockTask+0x52>
 8019cb4:	2300      	movs	r3, #0
 8019cb6:	603b      	str	r3, [r7, #0]
 8019cb8:	4b0f      	ldr	r3, [pc, #60]	; (8019cf8 <prvProcessTimerOrBlockTask+0x94>)
 8019cba:	6818      	ldr	r0, [r3, #0]
 8019cbc:	687a      	ldr	r2, [r7, #4]
 8019cbe:	68fb      	ldr	r3, [r7, #12]
 8019cc0:	1ad3      	subs	r3, r2, r3
 8019cc2:	683a      	ldr	r2, [r7, #0]
 8019cc4:	4619      	mov	r1, r3
 8019cc6:	f7fe fdd5 	bl	8018874 <vQueueWaitForMessageRestricted>
 8019cca:	f7ff f957 	bl	8018f7c <xTaskResumeAll>
 8019cce:	4603      	mov	r3, r0
 8019cd0:	2b00      	cmp	r3, #0
 8019cd2:	d10a      	bne.n	8019cea <prvProcessTimerOrBlockTask+0x86>
 8019cd4:	4b09      	ldr	r3, [pc, #36]	; (8019cfc <prvProcessTimerOrBlockTask+0x98>)
 8019cd6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8019cda:	601a      	str	r2, [r3, #0]
 8019cdc:	f3bf 8f4f 	dsb	sy
 8019ce0:	f3bf 8f6f 	isb	sy
 8019ce4:	e001      	b.n	8019cea <prvProcessTimerOrBlockTask+0x86>
 8019ce6:	f7ff f949 	bl	8018f7c <xTaskResumeAll>
 8019cea:	bf00      	nop
 8019cec:	3710      	adds	r7, #16
 8019cee:	46bd      	mov	sp, r7
 8019cf0:	bd80      	pop	{r7, pc}
 8019cf2:	bf00      	nop
 8019cf4:	24002cb0 	.word	0x24002cb0
 8019cf8:	24002cb4 	.word	0x24002cb4
 8019cfc:	e000ed04 	.word	0xe000ed04

08019d00 <prvGetNextExpireTime>:
 8019d00:	b480      	push	{r7}
 8019d02:	b085      	sub	sp, #20
 8019d04:	af00      	add	r7, sp, #0
 8019d06:	6078      	str	r0, [r7, #4]
 8019d08:	4b0e      	ldr	r3, [pc, #56]	; (8019d44 <prvGetNextExpireTime+0x44>)
 8019d0a:	681b      	ldr	r3, [r3, #0]
 8019d0c:	681b      	ldr	r3, [r3, #0]
 8019d0e:	2b00      	cmp	r3, #0
 8019d10:	d101      	bne.n	8019d16 <prvGetNextExpireTime+0x16>
 8019d12:	2201      	movs	r2, #1
 8019d14:	e000      	b.n	8019d18 <prvGetNextExpireTime+0x18>
 8019d16:	2200      	movs	r2, #0
 8019d18:	687b      	ldr	r3, [r7, #4]
 8019d1a:	601a      	str	r2, [r3, #0]
 8019d1c:	687b      	ldr	r3, [r7, #4]
 8019d1e:	681b      	ldr	r3, [r3, #0]
 8019d20:	2b00      	cmp	r3, #0
 8019d22:	d105      	bne.n	8019d30 <prvGetNextExpireTime+0x30>
 8019d24:	4b07      	ldr	r3, [pc, #28]	; (8019d44 <prvGetNextExpireTime+0x44>)
 8019d26:	681b      	ldr	r3, [r3, #0]
 8019d28:	68db      	ldr	r3, [r3, #12]
 8019d2a:	681b      	ldr	r3, [r3, #0]
 8019d2c:	60fb      	str	r3, [r7, #12]
 8019d2e:	e001      	b.n	8019d34 <prvGetNextExpireTime+0x34>
 8019d30:	2300      	movs	r3, #0
 8019d32:	60fb      	str	r3, [r7, #12]
 8019d34:	68fb      	ldr	r3, [r7, #12]
 8019d36:	4618      	mov	r0, r3
 8019d38:	3714      	adds	r7, #20
 8019d3a:	46bd      	mov	sp, r7
 8019d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d40:	4770      	bx	lr
 8019d42:	bf00      	nop
 8019d44:	24002cac 	.word	0x24002cac

08019d48 <prvSampleTimeNow>:
 8019d48:	b580      	push	{r7, lr}
 8019d4a:	b084      	sub	sp, #16
 8019d4c:	af00      	add	r7, sp, #0
 8019d4e:	6078      	str	r0, [r7, #4]
 8019d50:	f7ff f9b2 	bl	80190b8 <xTaskGetTickCount>
 8019d54:	60f8      	str	r0, [r7, #12]
 8019d56:	4b0b      	ldr	r3, [pc, #44]	; (8019d84 <prvSampleTimeNow+0x3c>)
 8019d58:	681b      	ldr	r3, [r3, #0]
 8019d5a:	68fa      	ldr	r2, [r7, #12]
 8019d5c:	429a      	cmp	r2, r3
 8019d5e:	d205      	bcs.n	8019d6c <prvSampleTimeNow+0x24>
 8019d60:	f000 f936 	bl	8019fd0 <prvSwitchTimerLists>
 8019d64:	687b      	ldr	r3, [r7, #4]
 8019d66:	2201      	movs	r2, #1
 8019d68:	601a      	str	r2, [r3, #0]
 8019d6a:	e002      	b.n	8019d72 <prvSampleTimeNow+0x2a>
 8019d6c:	687b      	ldr	r3, [r7, #4]
 8019d6e:	2200      	movs	r2, #0
 8019d70:	601a      	str	r2, [r3, #0]
 8019d72:	4a04      	ldr	r2, [pc, #16]	; (8019d84 <prvSampleTimeNow+0x3c>)
 8019d74:	68fb      	ldr	r3, [r7, #12]
 8019d76:	6013      	str	r3, [r2, #0]
 8019d78:	68fb      	ldr	r3, [r7, #12]
 8019d7a:	4618      	mov	r0, r3
 8019d7c:	3710      	adds	r7, #16
 8019d7e:	46bd      	mov	sp, r7
 8019d80:	bd80      	pop	{r7, pc}
 8019d82:	bf00      	nop
 8019d84:	24002cbc 	.word	0x24002cbc

08019d88 <prvInsertTimerInActiveList>:
 8019d88:	b580      	push	{r7, lr}
 8019d8a:	b086      	sub	sp, #24
 8019d8c:	af00      	add	r7, sp, #0
 8019d8e:	60f8      	str	r0, [r7, #12]
 8019d90:	60b9      	str	r1, [r7, #8]
 8019d92:	607a      	str	r2, [r7, #4]
 8019d94:	603b      	str	r3, [r7, #0]
 8019d96:	2300      	movs	r3, #0
 8019d98:	617b      	str	r3, [r7, #20]
 8019d9a:	68fb      	ldr	r3, [r7, #12]
 8019d9c:	68ba      	ldr	r2, [r7, #8]
 8019d9e:	605a      	str	r2, [r3, #4]
 8019da0:	68fb      	ldr	r3, [r7, #12]
 8019da2:	68fa      	ldr	r2, [r7, #12]
 8019da4:	611a      	str	r2, [r3, #16]
 8019da6:	68ba      	ldr	r2, [r7, #8]
 8019da8:	687b      	ldr	r3, [r7, #4]
 8019daa:	429a      	cmp	r2, r3
 8019dac:	d812      	bhi.n	8019dd4 <prvInsertTimerInActiveList+0x4c>
 8019dae:	687a      	ldr	r2, [r7, #4]
 8019db0:	683b      	ldr	r3, [r7, #0]
 8019db2:	1ad2      	subs	r2, r2, r3
 8019db4:	68fb      	ldr	r3, [r7, #12]
 8019db6:	699b      	ldr	r3, [r3, #24]
 8019db8:	429a      	cmp	r2, r3
 8019dba:	d302      	bcc.n	8019dc2 <prvInsertTimerInActiveList+0x3a>
 8019dbc:	2301      	movs	r3, #1
 8019dbe:	617b      	str	r3, [r7, #20]
 8019dc0:	e01b      	b.n	8019dfa <prvInsertTimerInActiveList+0x72>
 8019dc2:	4b10      	ldr	r3, [pc, #64]	; (8019e04 <prvInsertTimerInActiveList+0x7c>)
 8019dc4:	681a      	ldr	r2, [r3, #0]
 8019dc6:	68fb      	ldr	r3, [r7, #12]
 8019dc8:	3304      	adds	r3, #4
 8019dca:	4619      	mov	r1, r3
 8019dcc:	4610      	mov	r0, r2
 8019dce:	f7fe f836 	bl	8017e3e <vListInsert>
 8019dd2:	e012      	b.n	8019dfa <prvInsertTimerInActiveList+0x72>
 8019dd4:	687a      	ldr	r2, [r7, #4]
 8019dd6:	683b      	ldr	r3, [r7, #0]
 8019dd8:	429a      	cmp	r2, r3
 8019dda:	d206      	bcs.n	8019dea <prvInsertTimerInActiveList+0x62>
 8019ddc:	68ba      	ldr	r2, [r7, #8]
 8019dde:	683b      	ldr	r3, [r7, #0]
 8019de0:	429a      	cmp	r2, r3
 8019de2:	d302      	bcc.n	8019dea <prvInsertTimerInActiveList+0x62>
 8019de4:	2301      	movs	r3, #1
 8019de6:	617b      	str	r3, [r7, #20]
 8019de8:	e007      	b.n	8019dfa <prvInsertTimerInActiveList+0x72>
 8019dea:	4b07      	ldr	r3, [pc, #28]	; (8019e08 <prvInsertTimerInActiveList+0x80>)
 8019dec:	681a      	ldr	r2, [r3, #0]
 8019dee:	68fb      	ldr	r3, [r7, #12]
 8019df0:	3304      	adds	r3, #4
 8019df2:	4619      	mov	r1, r3
 8019df4:	4610      	mov	r0, r2
 8019df6:	f7fe f822 	bl	8017e3e <vListInsert>
 8019dfa:	697b      	ldr	r3, [r7, #20]
 8019dfc:	4618      	mov	r0, r3
 8019dfe:	3718      	adds	r7, #24
 8019e00:	46bd      	mov	sp, r7
 8019e02:	bd80      	pop	{r7, pc}
 8019e04:	24002cb0 	.word	0x24002cb0
 8019e08:	24002cac 	.word	0x24002cac

08019e0c <prvProcessReceivedCommands>:
 8019e0c:	b580      	push	{r7, lr}
 8019e0e:	b08e      	sub	sp, #56	; 0x38
 8019e10:	af02      	add	r7, sp, #8
 8019e12:	e0ca      	b.n	8019faa <prvProcessReceivedCommands+0x19e>
 8019e14:	687b      	ldr	r3, [r7, #4]
 8019e16:	2b00      	cmp	r3, #0
 8019e18:	da18      	bge.n	8019e4c <prvProcessReceivedCommands+0x40>
 8019e1a:	1d3b      	adds	r3, r7, #4
 8019e1c:	3304      	adds	r3, #4
 8019e1e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8019e20:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8019e22:	2b00      	cmp	r3, #0
 8019e24:	d10a      	bne.n	8019e3c <prvProcessReceivedCommands+0x30>
 8019e26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019e2a:	f383 8811 	msr	BASEPRI, r3
 8019e2e:	f3bf 8f6f 	isb	sy
 8019e32:	f3bf 8f4f 	dsb	sy
 8019e36:	61fb      	str	r3, [r7, #28]
 8019e38:	bf00      	nop
 8019e3a:	e7fe      	b.n	8019e3a <prvProcessReceivedCommands+0x2e>
 8019e3c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8019e3e:	681b      	ldr	r3, [r3, #0]
 8019e40:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8019e42:	6850      	ldr	r0, [r2, #4]
 8019e44:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8019e46:	6892      	ldr	r2, [r2, #8]
 8019e48:	4611      	mov	r1, r2
 8019e4a:	4798      	blx	r3
 8019e4c:	687b      	ldr	r3, [r7, #4]
 8019e4e:	2b00      	cmp	r3, #0
 8019e50:	f2c0 80aa 	blt.w	8019fa8 <prvProcessReceivedCommands+0x19c>
 8019e54:	68fb      	ldr	r3, [r7, #12]
 8019e56:	62bb      	str	r3, [r7, #40]	; 0x28
 8019e58:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019e5a:	695b      	ldr	r3, [r3, #20]
 8019e5c:	2b00      	cmp	r3, #0
 8019e5e:	d004      	beq.n	8019e6a <prvProcessReceivedCommands+0x5e>
 8019e60:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019e62:	3304      	adds	r3, #4
 8019e64:	4618      	mov	r0, r3
 8019e66:	f7fe f823 	bl	8017eb0 <uxListRemove>
 8019e6a:	463b      	mov	r3, r7
 8019e6c:	4618      	mov	r0, r3
 8019e6e:	f7ff ff6b 	bl	8019d48 <prvSampleTimeNow>
 8019e72:	6278      	str	r0, [r7, #36]	; 0x24
 8019e74:	687b      	ldr	r3, [r7, #4]
 8019e76:	2b09      	cmp	r3, #9
 8019e78:	f200 8097 	bhi.w	8019faa <prvProcessReceivedCommands+0x19e>
 8019e7c:	a201      	add	r2, pc, #4	; (adr r2, 8019e84 <prvProcessReceivedCommands+0x78>)
 8019e7e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019e82:	bf00      	nop
 8019e84:	08019ead 	.word	0x08019ead
 8019e88:	08019ead 	.word	0x08019ead
 8019e8c:	08019ead 	.word	0x08019ead
 8019e90:	08019f21 	.word	0x08019f21
 8019e94:	08019f35 	.word	0x08019f35
 8019e98:	08019f7f 	.word	0x08019f7f
 8019e9c:	08019ead 	.word	0x08019ead
 8019ea0:	08019ead 	.word	0x08019ead
 8019ea4:	08019f21 	.word	0x08019f21
 8019ea8:	08019f35 	.word	0x08019f35
 8019eac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019eae:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019eb2:	f043 0301 	orr.w	r3, r3, #1
 8019eb6:	b2da      	uxtb	r2, r3
 8019eb8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019eba:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8019ebe:	68ba      	ldr	r2, [r7, #8]
 8019ec0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019ec2:	699b      	ldr	r3, [r3, #24]
 8019ec4:	18d1      	adds	r1, r2, r3
 8019ec6:	68bb      	ldr	r3, [r7, #8]
 8019ec8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8019eca:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019ecc:	f7ff ff5c 	bl	8019d88 <prvInsertTimerInActiveList>
 8019ed0:	4603      	mov	r3, r0
 8019ed2:	2b00      	cmp	r3, #0
 8019ed4:	d069      	beq.n	8019faa <prvProcessReceivedCommands+0x19e>
 8019ed6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019ed8:	6a1b      	ldr	r3, [r3, #32]
 8019eda:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019edc:	4798      	blx	r3
 8019ede:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019ee0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019ee4:	f003 0304 	and.w	r3, r3, #4
 8019ee8:	2b00      	cmp	r3, #0
 8019eea:	d05e      	beq.n	8019faa <prvProcessReceivedCommands+0x19e>
 8019eec:	68ba      	ldr	r2, [r7, #8]
 8019eee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019ef0:	699b      	ldr	r3, [r3, #24]
 8019ef2:	441a      	add	r2, r3
 8019ef4:	2300      	movs	r3, #0
 8019ef6:	9300      	str	r3, [sp, #0]
 8019ef8:	2300      	movs	r3, #0
 8019efa:	2100      	movs	r1, #0
 8019efc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019efe:	f7ff fe05 	bl	8019b0c <xTimerGenericCommand>
 8019f02:	6238      	str	r0, [r7, #32]
 8019f04:	6a3b      	ldr	r3, [r7, #32]
 8019f06:	2b00      	cmp	r3, #0
 8019f08:	d14f      	bne.n	8019faa <prvProcessReceivedCommands+0x19e>
 8019f0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019f0e:	f383 8811 	msr	BASEPRI, r3
 8019f12:	f3bf 8f6f 	isb	sy
 8019f16:	f3bf 8f4f 	dsb	sy
 8019f1a:	61bb      	str	r3, [r7, #24]
 8019f1c:	bf00      	nop
 8019f1e:	e7fe      	b.n	8019f1e <prvProcessReceivedCommands+0x112>
 8019f20:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019f22:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019f26:	f023 0301 	bic.w	r3, r3, #1
 8019f2a:	b2da      	uxtb	r2, r3
 8019f2c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019f2e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8019f32:	e03a      	b.n	8019faa <prvProcessReceivedCommands+0x19e>
 8019f34:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019f36:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019f3a:	f043 0301 	orr.w	r3, r3, #1
 8019f3e:	b2da      	uxtb	r2, r3
 8019f40:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019f42:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8019f46:	68ba      	ldr	r2, [r7, #8]
 8019f48:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019f4a:	619a      	str	r2, [r3, #24]
 8019f4c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019f4e:	699b      	ldr	r3, [r3, #24]
 8019f50:	2b00      	cmp	r3, #0
 8019f52:	d10a      	bne.n	8019f6a <prvProcessReceivedCommands+0x15e>
 8019f54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8019f58:	f383 8811 	msr	BASEPRI, r3
 8019f5c:	f3bf 8f6f 	isb	sy
 8019f60:	f3bf 8f4f 	dsb	sy
 8019f64:	617b      	str	r3, [r7, #20]
 8019f66:	bf00      	nop
 8019f68:	e7fe      	b.n	8019f68 <prvProcessReceivedCommands+0x15c>
 8019f6a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019f6c:	699a      	ldr	r2, [r3, #24]
 8019f6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019f70:	18d1      	adds	r1, r2, r3
 8019f72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019f74:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8019f76:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019f78:	f7ff ff06 	bl	8019d88 <prvInsertTimerInActiveList>
 8019f7c:	e015      	b.n	8019faa <prvProcessReceivedCommands+0x19e>
 8019f7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019f80:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019f84:	f003 0302 	and.w	r3, r3, #2
 8019f88:	2b00      	cmp	r3, #0
 8019f8a:	d103      	bne.n	8019f94 <prvProcessReceivedCommands+0x188>
 8019f8c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019f8e:	f000 fbff 	bl	801a790 <vPortFree>
 8019f92:	e00a      	b.n	8019faa <prvProcessReceivedCommands+0x19e>
 8019f94:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019f96:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019f9a:	f023 0301 	bic.w	r3, r3, #1
 8019f9e:	b2da      	uxtb	r2, r3
 8019fa0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019fa2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8019fa6:	e000      	b.n	8019faa <prvProcessReceivedCommands+0x19e>
 8019fa8:	bf00      	nop
 8019faa:	4b08      	ldr	r3, [pc, #32]	; (8019fcc <prvProcessReceivedCommands+0x1c0>)
 8019fac:	681b      	ldr	r3, [r3, #0]
 8019fae:	1d39      	adds	r1, r7, #4
 8019fb0:	2200      	movs	r2, #0
 8019fb2:	4618      	mov	r0, r3
 8019fb4:	f7fe fa44 	bl	8018440 <xQueueReceive>
 8019fb8:	4603      	mov	r3, r0
 8019fba:	2b00      	cmp	r3, #0
 8019fbc:	f47f af2a 	bne.w	8019e14 <prvProcessReceivedCommands+0x8>
 8019fc0:	bf00      	nop
 8019fc2:	bf00      	nop
 8019fc4:	3730      	adds	r7, #48	; 0x30
 8019fc6:	46bd      	mov	sp, r7
 8019fc8:	bd80      	pop	{r7, pc}
 8019fca:	bf00      	nop
 8019fcc:	24002cb4 	.word	0x24002cb4

08019fd0 <prvSwitchTimerLists>:
 8019fd0:	b580      	push	{r7, lr}
 8019fd2:	b088      	sub	sp, #32
 8019fd4:	af02      	add	r7, sp, #8
 8019fd6:	e048      	b.n	801a06a <prvSwitchTimerLists+0x9a>
 8019fd8:	4b2d      	ldr	r3, [pc, #180]	; (801a090 <prvSwitchTimerLists+0xc0>)
 8019fda:	681b      	ldr	r3, [r3, #0]
 8019fdc:	68db      	ldr	r3, [r3, #12]
 8019fde:	681b      	ldr	r3, [r3, #0]
 8019fe0:	613b      	str	r3, [r7, #16]
 8019fe2:	4b2b      	ldr	r3, [pc, #172]	; (801a090 <prvSwitchTimerLists+0xc0>)
 8019fe4:	681b      	ldr	r3, [r3, #0]
 8019fe6:	68db      	ldr	r3, [r3, #12]
 8019fe8:	68db      	ldr	r3, [r3, #12]
 8019fea:	60fb      	str	r3, [r7, #12]
 8019fec:	68fb      	ldr	r3, [r7, #12]
 8019fee:	3304      	adds	r3, #4
 8019ff0:	4618      	mov	r0, r3
 8019ff2:	f7fd ff5d 	bl	8017eb0 <uxListRemove>
 8019ff6:	68fb      	ldr	r3, [r7, #12]
 8019ff8:	6a1b      	ldr	r3, [r3, #32]
 8019ffa:	68f8      	ldr	r0, [r7, #12]
 8019ffc:	4798      	blx	r3
 8019ffe:	68fb      	ldr	r3, [r7, #12]
 801a000:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801a004:	f003 0304 	and.w	r3, r3, #4
 801a008:	2b00      	cmp	r3, #0
 801a00a:	d02e      	beq.n	801a06a <prvSwitchTimerLists+0x9a>
 801a00c:	68fb      	ldr	r3, [r7, #12]
 801a00e:	699b      	ldr	r3, [r3, #24]
 801a010:	693a      	ldr	r2, [r7, #16]
 801a012:	4413      	add	r3, r2
 801a014:	60bb      	str	r3, [r7, #8]
 801a016:	68ba      	ldr	r2, [r7, #8]
 801a018:	693b      	ldr	r3, [r7, #16]
 801a01a:	429a      	cmp	r2, r3
 801a01c:	d90e      	bls.n	801a03c <prvSwitchTimerLists+0x6c>
 801a01e:	68fb      	ldr	r3, [r7, #12]
 801a020:	68ba      	ldr	r2, [r7, #8]
 801a022:	605a      	str	r2, [r3, #4]
 801a024:	68fb      	ldr	r3, [r7, #12]
 801a026:	68fa      	ldr	r2, [r7, #12]
 801a028:	611a      	str	r2, [r3, #16]
 801a02a:	4b19      	ldr	r3, [pc, #100]	; (801a090 <prvSwitchTimerLists+0xc0>)
 801a02c:	681a      	ldr	r2, [r3, #0]
 801a02e:	68fb      	ldr	r3, [r7, #12]
 801a030:	3304      	adds	r3, #4
 801a032:	4619      	mov	r1, r3
 801a034:	4610      	mov	r0, r2
 801a036:	f7fd ff02 	bl	8017e3e <vListInsert>
 801a03a:	e016      	b.n	801a06a <prvSwitchTimerLists+0x9a>
 801a03c:	2300      	movs	r3, #0
 801a03e:	9300      	str	r3, [sp, #0]
 801a040:	2300      	movs	r3, #0
 801a042:	693a      	ldr	r2, [r7, #16]
 801a044:	2100      	movs	r1, #0
 801a046:	68f8      	ldr	r0, [r7, #12]
 801a048:	f7ff fd60 	bl	8019b0c <xTimerGenericCommand>
 801a04c:	6078      	str	r0, [r7, #4]
 801a04e:	687b      	ldr	r3, [r7, #4]
 801a050:	2b00      	cmp	r3, #0
 801a052:	d10a      	bne.n	801a06a <prvSwitchTimerLists+0x9a>
 801a054:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a058:	f383 8811 	msr	BASEPRI, r3
 801a05c:	f3bf 8f6f 	isb	sy
 801a060:	f3bf 8f4f 	dsb	sy
 801a064:	603b      	str	r3, [r7, #0]
 801a066:	bf00      	nop
 801a068:	e7fe      	b.n	801a068 <prvSwitchTimerLists+0x98>
 801a06a:	4b09      	ldr	r3, [pc, #36]	; (801a090 <prvSwitchTimerLists+0xc0>)
 801a06c:	681b      	ldr	r3, [r3, #0]
 801a06e:	681b      	ldr	r3, [r3, #0]
 801a070:	2b00      	cmp	r3, #0
 801a072:	d1b1      	bne.n	8019fd8 <prvSwitchTimerLists+0x8>
 801a074:	4b06      	ldr	r3, [pc, #24]	; (801a090 <prvSwitchTimerLists+0xc0>)
 801a076:	681b      	ldr	r3, [r3, #0]
 801a078:	617b      	str	r3, [r7, #20]
 801a07a:	4b06      	ldr	r3, [pc, #24]	; (801a094 <prvSwitchTimerLists+0xc4>)
 801a07c:	681b      	ldr	r3, [r3, #0]
 801a07e:	4a04      	ldr	r2, [pc, #16]	; (801a090 <prvSwitchTimerLists+0xc0>)
 801a080:	6013      	str	r3, [r2, #0]
 801a082:	4a04      	ldr	r2, [pc, #16]	; (801a094 <prvSwitchTimerLists+0xc4>)
 801a084:	697b      	ldr	r3, [r7, #20]
 801a086:	6013      	str	r3, [r2, #0]
 801a088:	bf00      	nop
 801a08a:	3718      	adds	r7, #24
 801a08c:	46bd      	mov	sp, r7
 801a08e:	bd80      	pop	{r7, pc}
 801a090:	24002cac 	.word	0x24002cac
 801a094:	24002cb0 	.word	0x24002cb0

0801a098 <prvCheckForValidListAndQueue>:
 801a098:	b580      	push	{r7, lr}
 801a09a:	b082      	sub	sp, #8
 801a09c:	af02      	add	r7, sp, #8
 801a09e:	f000 f989 	bl	801a3b4 <vPortEnterCritical>
 801a0a2:	4b15      	ldr	r3, [pc, #84]	; (801a0f8 <prvCheckForValidListAndQueue+0x60>)
 801a0a4:	681b      	ldr	r3, [r3, #0]
 801a0a6:	2b00      	cmp	r3, #0
 801a0a8:	d120      	bne.n	801a0ec <prvCheckForValidListAndQueue+0x54>
 801a0aa:	4814      	ldr	r0, [pc, #80]	; (801a0fc <prvCheckForValidListAndQueue+0x64>)
 801a0ac:	f7fd fe76 	bl	8017d9c <vListInitialise>
 801a0b0:	4813      	ldr	r0, [pc, #76]	; (801a100 <prvCheckForValidListAndQueue+0x68>)
 801a0b2:	f7fd fe73 	bl	8017d9c <vListInitialise>
 801a0b6:	4b13      	ldr	r3, [pc, #76]	; (801a104 <prvCheckForValidListAndQueue+0x6c>)
 801a0b8:	4a10      	ldr	r2, [pc, #64]	; (801a0fc <prvCheckForValidListAndQueue+0x64>)
 801a0ba:	601a      	str	r2, [r3, #0]
 801a0bc:	4b12      	ldr	r3, [pc, #72]	; (801a108 <prvCheckForValidListAndQueue+0x70>)
 801a0be:	4a10      	ldr	r2, [pc, #64]	; (801a100 <prvCheckForValidListAndQueue+0x68>)
 801a0c0:	601a      	str	r2, [r3, #0]
 801a0c2:	2300      	movs	r3, #0
 801a0c4:	9300      	str	r3, [sp, #0]
 801a0c6:	4b11      	ldr	r3, [pc, #68]	; (801a10c <prvCheckForValidListAndQueue+0x74>)
 801a0c8:	4a11      	ldr	r2, [pc, #68]	; (801a110 <prvCheckForValidListAndQueue+0x78>)
 801a0ca:	2110      	movs	r1, #16
 801a0cc:	200a      	movs	r0, #10
 801a0ce:	f7fd ff81 	bl	8017fd4 <xQueueGenericCreateStatic>
 801a0d2:	4603      	mov	r3, r0
 801a0d4:	4a08      	ldr	r2, [pc, #32]	; (801a0f8 <prvCheckForValidListAndQueue+0x60>)
 801a0d6:	6013      	str	r3, [r2, #0]
 801a0d8:	4b07      	ldr	r3, [pc, #28]	; (801a0f8 <prvCheckForValidListAndQueue+0x60>)
 801a0da:	681b      	ldr	r3, [r3, #0]
 801a0dc:	2b00      	cmp	r3, #0
 801a0de:	d005      	beq.n	801a0ec <prvCheckForValidListAndQueue+0x54>
 801a0e0:	4b05      	ldr	r3, [pc, #20]	; (801a0f8 <prvCheckForValidListAndQueue+0x60>)
 801a0e2:	681b      	ldr	r3, [r3, #0]
 801a0e4:	490b      	ldr	r1, [pc, #44]	; (801a114 <prvCheckForValidListAndQueue+0x7c>)
 801a0e6:	4618      	mov	r0, r3
 801a0e8:	f7fe fb9a 	bl	8018820 <vQueueAddToRegistry>
 801a0ec:	f000 f992 	bl	801a414 <vPortExitCritical>
 801a0f0:	bf00      	nop
 801a0f2:	46bd      	mov	sp, r7
 801a0f4:	bd80      	pop	{r7, pc}
 801a0f6:	bf00      	nop
 801a0f8:	24002cb4 	.word	0x24002cb4
 801a0fc:	24002c84 	.word	0x24002c84
 801a100:	24002c98 	.word	0x24002c98
 801a104:	24002cac 	.word	0x24002cac
 801a108:	24002cb0 	.word	0x24002cb0
 801a10c:	24002d60 	.word	0x24002d60
 801a110:	24002cc0 	.word	0x24002cc0
 801a114:	0801b6c0 	.word	0x0801b6c0

0801a118 <xTimerPendFunctionCallFromISR>:
 801a118:	b580      	push	{r7, lr}
 801a11a:	b08a      	sub	sp, #40	; 0x28
 801a11c:	af00      	add	r7, sp, #0
 801a11e:	60f8      	str	r0, [r7, #12]
 801a120:	60b9      	str	r1, [r7, #8]
 801a122:	607a      	str	r2, [r7, #4]
 801a124:	603b      	str	r3, [r7, #0]
 801a126:	f06f 0301 	mvn.w	r3, #1
 801a12a:	617b      	str	r3, [r7, #20]
 801a12c:	68fb      	ldr	r3, [r7, #12]
 801a12e:	61bb      	str	r3, [r7, #24]
 801a130:	68bb      	ldr	r3, [r7, #8]
 801a132:	61fb      	str	r3, [r7, #28]
 801a134:	687b      	ldr	r3, [r7, #4]
 801a136:	623b      	str	r3, [r7, #32]
 801a138:	4b06      	ldr	r3, [pc, #24]	; (801a154 <xTimerPendFunctionCallFromISR+0x3c>)
 801a13a:	6818      	ldr	r0, [r3, #0]
 801a13c:	f107 0114 	add.w	r1, r7, #20
 801a140:	2300      	movs	r3, #0
 801a142:	683a      	ldr	r2, [r7, #0]
 801a144:	f7fe f8e0 	bl	8018308 <xQueueGenericSendFromISR>
 801a148:	6278      	str	r0, [r7, #36]	; 0x24
 801a14a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a14c:	4618      	mov	r0, r3
 801a14e:	3728      	adds	r7, #40	; 0x28
 801a150:	46bd      	mov	sp, r7
 801a152:	bd80      	pop	{r7, pc}
 801a154:	24002cb4 	.word	0x24002cb4

0801a158 <pxPortInitialiseStack>:
 801a158:	b480      	push	{r7}
 801a15a:	b085      	sub	sp, #20
 801a15c:	af00      	add	r7, sp, #0
 801a15e:	60f8      	str	r0, [r7, #12]
 801a160:	60b9      	str	r1, [r7, #8]
 801a162:	607a      	str	r2, [r7, #4]
 801a164:	68fb      	ldr	r3, [r7, #12]
 801a166:	3b04      	subs	r3, #4
 801a168:	60fb      	str	r3, [r7, #12]
 801a16a:	68fb      	ldr	r3, [r7, #12]
 801a16c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 801a170:	601a      	str	r2, [r3, #0]
 801a172:	68fb      	ldr	r3, [r7, #12]
 801a174:	3b04      	subs	r3, #4
 801a176:	60fb      	str	r3, [r7, #12]
 801a178:	68bb      	ldr	r3, [r7, #8]
 801a17a:	f023 0201 	bic.w	r2, r3, #1
 801a17e:	68fb      	ldr	r3, [r7, #12]
 801a180:	601a      	str	r2, [r3, #0]
 801a182:	68fb      	ldr	r3, [r7, #12]
 801a184:	3b04      	subs	r3, #4
 801a186:	60fb      	str	r3, [r7, #12]
 801a188:	4a0c      	ldr	r2, [pc, #48]	; (801a1bc <pxPortInitialiseStack+0x64>)
 801a18a:	68fb      	ldr	r3, [r7, #12]
 801a18c:	601a      	str	r2, [r3, #0]
 801a18e:	68fb      	ldr	r3, [r7, #12]
 801a190:	3b14      	subs	r3, #20
 801a192:	60fb      	str	r3, [r7, #12]
 801a194:	687a      	ldr	r2, [r7, #4]
 801a196:	68fb      	ldr	r3, [r7, #12]
 801a198:	601a      	str	r2, [r3, #0]
 801a19a:	68fb      	ldr	r3, [r7, #12]
 801a19c:	3b04      	subs	r3, #4
 801a19e:	60fb      	str	r3, [r7, #12]
 801a1a0:	68fb      	ldr	r3, [r7, #12]
 801a1a2:	f06f 0202 	mvn.w	r2, #2
 801a1a6:	601a      	str	r2, [r3, #0]
 801a1a8:	68fb      	ldr	r3, [r7, #12]
 801a1aa:	3b20      	subs	r3, #32
 801a1ac:	60fb      	str	r3, [r7, #12]
 801a1ae:	68fb      	ldr	r3, [r7, #12]
 801a1b0:	4618      	mov	r0, r3
 801a1b2:	3714      	adds	r7, #20
 801a1b4:	46bd      	mov	sp, r7
 801a1b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a1ba:	4770      	bx	lr
 801a1bc:	0801a1c1 	.word	0x0801a1c1

0801a1c0 <prvTaskExitError>:
 801a1c0:	b480      	push	{r7}
 801a1c2:	b085      	sub	sp, #20
 801a1c4:	af00      	add	r7, sp, #0
 801a1c6:	2300      	movs	r3, #0
 801a1c8:	607b      	str	r3, [r7, #4]
 801a1ca:	4b12      	ldr	r3, [pc, #72]	; (801a214 <prvTaskExitError+0x54>)
 801a1cc:	681b      	ldr	r3, [r3, #0]
 801a1ce:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801a1d2:	d00a      	beq.n	801a1ea <prvTaskExitError+0x2a>
 801a1d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a1d8:	f383 8811 	msr	BASEPRI, r3
 801a1dc:	f3bf 8f6f 	isb	sy
 801a1e0:	f3bf 8f4f 	dsb	sy
 801a1e4:	60fb      	str	r3, [r7, #12]
 801a1e6:	bf00      	nop
 801a1e8:	e7fe      	b.n	801a1e8 <prvTaskExitError+0x28>
 801a1ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a1ee:	f383 8811 	msr	BASEPRI, r3
 801a1f2:	f3bf 8f6f 	isb	sy
 801a1f6:	f3bf 8f4f 	dsb	sy
 801a1fa:	60bb      	str	r3, [r7, #8]
 801a1fc:	bf00      	nop
 801a1fe:	bf00      	nop
 801a200:	687b      	ldr	r3, [r7, #4]
 801a202:	2b00      	cmp	r3, #0
 801a204:	d0fc      	beq.n	801a200 <prvTaskExitError+0x40>
 801a206:	bf00      	nop
 801a208:	bf00      	nop
 801a20a:	3714      	adds	r7, #20
 801a20c:	46bd      	mov	sp, r7
 801a20e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a212:	4770      	bx	lr
 801a214:	240000d4 	.word	0x240000d4
	...

0801a220 <SVC_Handler>:
 801a220:	4b07      	ldr	r3, [pc, #28]	; (801a240 <pxCurrentTCBConst2>)
 801a222:	6819      	ldr	r1, [r3, #0]
 801a224:	6808      	ldr	r0, [r1, #0]
 801a226:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a22a:	f380 8809 	msr	PSP, r0
 801a22e:	f3bf 8f6f 	isb	sy
 801a232:	f04f 0000 	mov.w	r0, #0
 801a236:	f380 8811 	msr	BASEPRI, r0
 801a23a:	4770      	bx	lr
 801a23c:	f3af 8000 	nop.w

0801a240 <pxCurrentTCBConst2>:
 801a240:	24002784 	.word	0x24002784
 801a244:	bf00      	nop
 801a246:	bf00      	nop

0801a248 <prvPortStartFirstTask>:
 801a248:	4808      	ldr	r0, [pc, #32]	; (801a26c <prvPortStartFirstTask+0x24>)
 801a24a:	6800      	ldr	r0, [r0, #0]
 801a24c:	6800      	ldr	r0, [r0, #0]
 801a24e:	f380 8808 	msr	MSP, r0
 801a252:	f04f 0000 	mov.w	r0, #0
 801a256:	f380 8814 	msr	CONTROL, r0
 801a25a:	b662      	cpsie	i
 801a25c:	b661      	cpsie	f
 801a25e:	f3bf 8f4f 	dsb	sy
 801a262:	f3bf 8f6f 	isb	sy
 801a266:	df00      	svc	0
 801a268:	bf00      	nop
 801a26a:	bf00      	nop
 801a26c:	e000ed08 	.word	0xe000ed08

0801a270 <xPortStartScheduler>:
 801a270:	b580      	push	{r7, lr}
 801a272:	b086      	sub	sp, #24
 801a274:	af00      	add	r7, sp, #0
 801a276:	4b46      	ldr	r3, [pc, #280]	; (801a390 <xPortStartScheduler+0x120>)
 801a278:	681b      	ldr	r3, [r3, #0]
 801a27a:	4a46      	ldr	r2, [pc, #280]	; (801a394 <xPortStartScheduler+0x124>)
 801a27c:	4293      	cmp	r3, r2
 801a27e:	d10a      	bne.n	801a296 <xPortStartScheduler+0x26>
 801a280:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a284:	f383 8811 	msr	BASEPRI, r3
 801a288:	f3bf 8f6f 	isb	sy
 801a28c:	f3bf 8f4f 	dsb	sy
 801a290:	613b      	str	r3, [r7, #16]
 801a292:	bf00      	nop
 801a294:	e7fe      	b.n	801a294 <xPortStartScheduler+0x24>
 801a296:	4b3e      	ldr	r3, [pc, #248]	; (801a390 <xPortStartScheduler+0x120>)
 801a298:	681b      	ldr	r3, [r3, #0]
 801a29a:	4a3f      	ldr	r2, [pc, #252]	; (801a398 <xPortStartScheduler+0x128>)
 801a29c:	4293      	cmp	r3, r2
 801a29e:	d10a      	bne.n	801a2b6 <xPortStartScheduler+0x46>
 801a2a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a2a4:	f383 8811 	msr	BASEPRI, r3
 801a2a8:	f3bf 8f6f 	isb	sy
 801a2ac:	f3bf 8f4f 	dsb	sy
 801a2b0:	60fb      	str	r3, [r7, #12]
 801a2b2:	bf00      	nop
 801a2b4:	e7fe      	b.n	801a2b4 <xPortStartScheduler+0x44>
 801a2b6:	4b39      	ldr	r3, [pc, #228]	; (801a39c <xPortStartScheduler+0x12c>)
 801a2b8:	617b      	str	r3, [r7, #20]
 801a2ba:	697b      	ldr	r3, [r7, #20]
 801a2bc:	781b      	ldrb	r3, [r3, #0]
 801a2be:	b2db      	uxtb	r3, r3
 801a2c0:	607b      	str	r3, [r7, #4]
 801a2c2:	697b      	ldr	r3, [r7, #20]
 801a2c4:	22ff      	movs	r2, #255	; 0xff
 801a2c6:	701a      	strb	r2, [r3, #0]
 801a2c8:	697b      	ldr	r3, [r7, #20]
 801a2ca:	781b      	ldrb	r3, [r3, #0]
 801a2cc:	b2db      	uxtb	r3, r3
 801a2ce:	70fb      	strb	r3, [r7, #3]
 801a2d0:	78fb      	ldrb	r3, [r7, #3]
 801a2d2:	b2db      	uxtb	r3, r3
 801a2d4:	f003 0350 	and.w	r3, r3, #80	; 0x50
 801a2d8:	b2da      	uxtb	r2, r3
 801a2da:	4b31      	ldr	r3, [pc, #196]	; (801a3a0 <xPortStartScheduler+0x130>)
 801a2dc:	701a      	strb	r2, [r3, #0]
 801a2de:	4b31      	ldr	r3, [pc, #196]	; (801a3a4 <xPortStartScheduler+0x134>)
 801a2e0:	2207      	movs	r2, #7
 801a2e2:	601a      	str	r2, [r3, #0]
 801a2e4:	e009      	b.n	801a2fa <xPortStartScheduler+0x8a>
 801a2e6:	4b2f      	ldr	r3, [pc, #188]	; (801a3a4 <xPortStartScheduler+0x134>)
 801a2e8:	681b      	ldr	r3, [r3, #0]
 801a2ea:	3b01      	subs	r3, #1
 801a2ec:	4a2d      	ldr	r2, [pc, #180]	; (801a3a4 <xPortStartScheduler+0x134>)
 801a2ee:	6013      	str	r3, [r2, #0]
 801a2f0:	78fb      	ldrb	r3, [r7, #3]
 801a2f2:	b2db      	uxtb	r3, r3
 801a2f4:	005b      	lsls	r3, r3, #1
 801a2f6:	b2db      	uxtb	r3, r3
 801a2f8:	70fb      	strb	r3, [r7, #3]
 801a2fa:	78fb      	ldrb	r3, [r7, #3]
 801a2fc:	b2db      	uxtb	r3, r3
 801a2fe:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801a302:	2b80      	cmp	r3, #128	; 0x80
 801a304:	d0ef      	beq.n	801a2e6 <xPortStartScheduler+0x76>
 801a306:	4b27      	ldr	r3, [pc, #156]	; (801a3a4 <xPortStartScheduler+0x134>)
 801a308:	681b      	ldr	r3, [r3, #0]
 801a30a:	f1c3 0307 	rsb	r3, r3, #7
 801a30e:	2b04      	cmp	r3, #4
 801a310:	d00a      	beq.n	801a328 <xPortStartScheduler+0xb8>
 801a312:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a316:	f383 8811 	msr	BASEPRI, r3
 801a31a:	f3bf 8f6f 	isb	sy
 801a31e:	f3bf 8f4f 	dsb	sy
 801a322:	60bb      	str	r3, [r7, #8]
 801a324:	bf00      	nop
 801a326:	e7fe      	b.n	801a326 <xPortStartScheduler+0xb6>
 801a328:	4b1e      	ldr	r3, [pc, #120]	; (801a3a4 <xPortStartScheduler+0x134>)
 801a32a:	681b      	ldr	r3, [r3, #0]
 801a32c:	021b      	lsls	r3, r3, #8
 801a32e:	4a1d      	ldr	r2, [pc, #116]	; (801a3a4 <xPortStartScheduler+0x134>)
 801a330:	6013      	str	r3, [r2, #0]
 801a332:	4b1c      	ldr	r3, [pc, #112]	; (801a3a4 <xPortStartScheduler+0x134>)
 801a334:	681b      	ldr	r3, [r3, #0]
 801a336:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 801a33a:	4a1a      	ldr	r2, [pc, #104]	; (801a3a4 <xPortStartScheduler+0x134>)
 801a33c:	6013      	str	r3, [r2, #0]
 801a33e:	687b      	ldr	r3, [r7, #4]
 801a340:	b2da      	uxtb	r2, r3
 801a342:	697b      	ldr	r3, [r7, #20]
 801a344:	701a      	strb	r2, [r3, #0]
 801a346:	4b18      	ldr	r3, [pc, #96]	; (801a3a8 <xPortStartScheduler+0x138>)
 801a348:	681b      	ldr	r3, [r3, #0]
 801a34a:	4a17      	ldr	r2, [pc, #92]	; (801a3a8 <xPortStartScheduler+0x138>)
 801a34c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801a350:	6013      	str	r3, [r2, #0]
 801a352:	4b15      	ldr	r3, [pc, #84]	; (801a3a8 <xPortStartScheduler+0x138>)
 801a354:	681b      	ldr	r3, [r3, #0]
 801a356:	4a14      	ldr	r2, [pc, #80]	; (801a3a8 <xPortStartScheduler+0x138>)
 801a358:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 801a35c:	6013      	str	r3, [r2, #0]
 801a35e:	f000 f8dd 	bl	801a51c <vPortSetupTimerInterrupt>
 801a362:	4b12      	ldr	r3, [pc, #72]	; (801a3ac <xPortStartScheduler+0x13c>)
 801a364:	2200      	movs	r2, #0
 801a366:	601a      	str	r2, [r3, #0]
 801a368:	f000 f8fc 	bl	801a564 <vPortEnableVFP>
 801a36c:	4b10      	ldr	r3, [pc, #64]	; (801a3b0 <xPortStartScheduler+0x140>)
 801a36e:	681b      	ldr	r3, [r3, #0]
 801a370:	4a0f      	ldr	r2, [pc, #60]	; (801a3b0 <xPortStartScheduler+0x140>)
 801a372:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 801a376:	6013      	str	r3, [r2, #0]
 801a378:	f7ff ff66 	bl	801a248 <prvPortStartFirstTask>
 801a37c:	f7fe ff6e 	bl	801925c <vTaskSwitchContext>
 801a380:	f7ff ff1e 	bl	801a1c0 <prvTaskExitError>
 801a384:	2300      	movs	r3, #0
 801a386:	4618      	mov	r0, r3
 801a388:	3718      	adds	r7, #24
 801a38a:	46bd      	mov	sp, r7
 801a38c:	bd80      	pop	{r7, pc}
 801a38e:	bf00      	nop
 801a390:	e000ed00 	.word	0xe000ed00
 801a394:	410fc271 	.word	0x410fc271
 801a398:	410fc270 	.word	0x410fc270
 801a39c:	e000e400 	.word	0xe000e400
 801a3a0:	24002db0 	.word	0x24002db0
 801a3a4:	24002db4 	.word	0x24002db4
 801a3a8:	e000ed20 	.word	0xe000ed20
 801a3ac:	240000d4 	.word	0x240000d4
 801a3b0:	e000ef34 	.word	0xe000ef34

0801a3b4 <vPortEnterCritical>:
 801a3b4:	b480      	push	{r7}
 801a3b6:	b083      	sub	sp, #12
 801a3b8:	af00      	add	r7, sp, #0
 801a3ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a3be:	f383 8811 	msr	BASEPRI, r3
 801a3c2:	f3bf 8f6f 	isb	sy
 801a3c6:	f3bf 8f4f 	dsb	sy
 801a3ca:	607b      	str	r3, [r7, #4]
 801a3cc:	bf00      	nop
 801a3ce:	4b0f      	ldr	r3, [pc, #60]	; (801a40c <vPortEnterCritical+0x58>)
 801a3d0:	681b      	ldr	r3, [r3, #0]
 801a3d2:	3301      	adds	r3, #1
 801a3d4:	4a0d      	ldr	r2, [pc, #52]	; (801a40c <vPortEnterCritical+0x58>)
 801a3d6:	6013      	str	r3, [r2, #0]
 801a3d8:	4b0c      	ldr	r3, [pc, #48]	; (801a40c <vPortEnterCritical+0x58>)
 801a3da:	681b      	ldr	r3, [r3, #0]
 801a3dc:	2b01      	cmp	r3, #1
 801a3de:	d10f      	bne.n	801a400 <vPortEnterCritical+0x4c>
 801a3e0:	4b0b      	ldr	r3, [pc, #44]	; (801a410 <vPortEnterCritical+0x5c>)
 801a3e2:	681b      	ldr	r3, [r3, #0]
 801a3e4:	b2db      	uxtb	r3, r3
 801a3e6:	2b00      	cmp	r3, #0
 801a3e8:	d00a      	beq.n	801a400 <vPortEnterCritical+0x4c>
 801a3ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a3ee:	f383 8811 	msr	BASEPRI, r3
 801a3f2:	f3bf 8f6f 	isb	sy
 801a3f6:	f3bf 8f4f 	dsb	sy
 801a3fa:	603b      	str	r3, [r7, #0]
 801a3fc:	bf00      	nop
 801a3fe:	e7fe      	b.n	801a3fe <vPortEnterCritical+0x4a>
 801a400:	bf00      	nop
 801a402:	370c      	adds	r7, #12
 801a404:	46bd      	mov	sp, r7
 801a406:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a40a:	4770      	bx	lr
 801a40c:	240000d4 	.word	0x240000d4
 801a410:	e000ed04 	.word	0xe000ed04

0801a414 <vPortExitCritical>:
 801a414:	b480      	push	{r7}
 801a416:	b083      	sub	sp, #12
 801a418:	af00      	add	r7, sp, #0
 801a41a:	4b12      	ldr	r3, [pc, #72]	; (801a464 <vPortExitCritical+0x50>)
 801a41c:	681b      	ldr	r3, [r3, #0]
 801a41e:	2b00      	cmp	r3, #0
 801a420:	d10a      	bne.n	801a438 <vPortExitCritical+0x24>
 801a422:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a426:	f383 8811 	msr	BASEPRI, r3
 801a42a:	f3bf 8f6f 	isb	sy
 801a42e:	f3bf 8f4f 	dsb	sy
 801a432:	607b      	str	r3, [r7, #4]
 801a434:	bf00      	nop
 801a436:	e7fe      	b.n	801a436 <vPortExitCritical+0x22>
 801a438:	4b0a      	ldr	r3, [pc, #40]	; (801a464 <vPortExitCritical+0x50>)
 801a43a:	681b      	ldr	r3, [r3, #0]
 801a43c:	3b01      	subs	r3, #1
 801a43e:	4a09      	ldr	r2, [pc, #36]	; (801a464 <vPortExitCritical+0x50>)
 801a440:	6013      	str	r3, [r2, #0]
 801a442:	4b08      	ldr	r3, [pc, #32]	; (801a464 <vPortExitCritical+0x50>)
 801a444:	681b      	ldr	r3, [r3, #0]
 801a446:	2b00      	cmp	r3, #0
 801a448:	d105      	bne.n	801a456 <vPortExitCritical+0x42>
 801a44a:	2300      	movs	r3, #0
 801a44c:	603b      	str	r3, [r7, #0]
 801a44e:	683b      	ldr	r3, [r7, #0]
 801a450:	f383 8811 	msr	BASEPRI, r3
 801a454:	bf00      	nop
 801a456:	bf00      	nop
 801a458:	370c      	adds	r7, #12
 801a45a:	46bd      	mov	sp, r7
 801a45c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a460:	4770      	bx	lr
 801a462:	bf00      	nop
 801a464:	240000d4 	.word	0x240000d4
	...

0801a470 <PendSV_Handler>:
 801a470:	f3ef 8009 	mrs	r0, PSP
 801a474:	f3bf 8f6f 	isb	sy
 801a478:	4b15      	ldr	r3, [pc, #84]	; (801a4d0 <pxCurrentTCBConst>)
 801a47a:	681a      	ldr	r2, [r3, #0]
 801a47c:	f01e 0f10 	tst.w	lr, #16
 801a480:	bf08      	it	eq
 801a482:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 801a486:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a48a:	6010      	str	r0, [r2, #0]
 801a48c:	e92d 0009 	stmdb	sp!, {r0, r3}
 801a490:	f04f 0050 	mov.w	r0, #80	; 0x50
 801a494:	f380 8811 	msr	BASEPRI, r0
 801a498:	f3bf 8f4f 	dsb	sy
 801a49c:	f3bf 8f6f 	isb	sy
 801a4a0:	f7fe fedc 	bl	801925c <vTaskSwitchContext>
 801a4a4:	f04f 0000 	mov.w	r0, #0
 801a4a8:	f380 8811 	msr	BASEPRI, r0
 801a4ac:	bc09      	pop	{r0, r3}
 801a4ae:	6819      	ldr	r1, [r3, #0]
 801a4b0:	6808      	ldr	r0, [r1, #0]
 801a4b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4b6:	f01e 0f10 	tst.w	lr, #16
 801a4ba:	bf08      	it	eq
 801a4bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 801a4c0:	f380 8809 	msr	PSP, r0
 801a4c4:	f3bf 8f6f 	isb	sy
 801a4c8:	4770      	bx	lr
 801a4ca:	bf00      	nop
 801a4cc:	f3af 8000 	nop.w

0801a4d0 <pxCurrentTCBConst>:
 801a4d0:	24002784 	.word	0x24002784
 801a4d4:	bf00      	nop
 801a4d6:	bf00      	nop

0801a4d8 <xPortSysTickHandler>:
 801a4d8:	b580      	push	{r7, lr}
 801a4da:	b082      	sub	sp, #8
 801a4dc:	af00      	add	r7, sp, #0
 801a4de:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a4e2:	f383 8811 	msr	BASEPRI, r3
 801a4e6:	f3bf 8f6f 	isb	sy
 801a4ea:	f3bf 8f4f 	dsb	sy
 801a4ee:	607b      	str	r3, [r7, #4]
 801a4f0:	bf00      	nop
 801a4f2:	f7fe fdf1 	bl	80190d8 <xTaskIncrementTick>
 801a4f6:	4603      	mov	r3, r0
 801a4f8:	2b00      	cmp	r3, #0
 801a4fa:	d003      	beq.n	801a504 <xPortSysTickHandler+0x2c>
 801a4fc:	4b06      	ldr	r3, [pc, #24]	; (801a518 <xPortSysTickHandler+0x40>)
 801a4fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801a502:	601a      	str	r2, [r3, #0]
 801a504:	2300      	movs	r3, #0
 801a506:	603b      	str	r3, [r7, #0]
 801a508:	683b      	ldr	r3, [r7, #0]
 801a50a:	f383 8811 	msr	BASEPRI, r3
 801a50e:	bf00      	nop
 801a510:	bf00      	nop
 801a512:	3708      	adds	r7, #8
 801a514:	46bd      	mov	sp, r7
 801a516:	bd80      	pop	{r7, pc}
 801a518:	e000ed04 	.word	0xe000ed04

0801a51c <vPortSetupTimerInterrupt>:
 801a51c:	b480      	push	{r7}
 801a51e:	af00      	add	r7, sp, #0
 801a520:	4b0b      	ldr	r3, [pc, #44]	; (801a550 <vPortSetupTimerInterrupt+0x34>)
 801a522:	2200      	movs	r2, #0
 801a524:	601a      	str	r2, [r3, #0]
 801a526:	4b0b      	ldr	r3, [pc, #44]	; (801a554 <vPortSetupTimerInterrupt+0x38>)
 801a528:	2200      	movs	r2, #0
 801a52a:	601a      	str	r2, [r3, #0]
 801a52c:	4b0a      	ldr	r3, [pc, #40]	; (801a558 <vPortSetupTimerInterrupt+0x3c>)
 801a52e:	681b      	ldr	r3, [r3, #0]
 801a530:	4a0a      	ldr	r2, [pc, #40]	; (801a55c <vPortSetupTimerInterrupt+0x40>)
 801a532:	fba2 2303 	umull	r2, r3, r2, r3
 801a536:	099b      	lsrs	r3, r3, #6
 801a538:	4a09      	ldr	r2, [pc, #36]	; (801a560 <vPortSetupTimerInterrupt+0x44>)
 801a53a:	3b01      	subs	r3, #1
 801a53c:	6013      	str	r3, [r2, #0]
 801a53e:	4b04      	ldr	r3, [pc, #16]	; (801a550 <vPortSetupTimerInterrupt+0x34>)
 801a540:	2207      	movs	r2, #7
 801a542:	601a      	str	r2, [r3, #0]
 801a544:	bf00      	nop
 801a546:	46bd      	mov	sp, r7
 801a548:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a54c:	4770      	bx	lr
 801a54e:	bf00      	nop
 801a550:	e000e010 	.word	0xe000e010
 801a554:	e000e018 	.word	0xe000e018
 801a558:	240000c4 	.word	0x240000c4
 801a55c:	10624dd3 	.word	0x10624dd3
 801a560:	e000e014 	.word	0xe000e014

0801a564 <vPortEnableVFP>:
 801a564:	f8df 000c 	ldr.w	r0, [pc, #12]	; 801a574 <vPortEnableVFP+0x10>
 801a568:	6801      	ldr	r1, [r0, #0]
 801a56a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 801a56e:	6001      	str	r1, [r0, #0]
 801a570:	4770      	bx	lr
 801a572:	bf00      	nop
 801a574:	e000ed88 	.word	0xe000ed88

0801a578 <vPortValidateInterruptPriority>:
 801a578:	b480      	push	{r7}
 801a57a:	b085      	sub	sp, #20
 801a57c:	af00      	add	r7, sp, #0
 801a57e:	f3ef 8305 	mrs	r3, IPSR
 801a582:	60fb      	str	r3, [r7, #12]
 801a584:	68fb      	ldr	r3, [r7, #12]
 801a586:	2b0f      	cmp	r3, #15
 801a588:	d914      	bls.n	801a5b4 <vPortValidateInterruptPriority+0x3c>
 801a58a:	4a17      	ldr	r2, [pc, #92]	; (801a5e8 <vPortValidateInterruptPriority+0x70>)
 801a58c:	68fb      	ldr	r3, [r7, #12]
 801a58e:	4413      	add	r3, r2
 801a590:	781b      	ldrb	r3, [r3, #0]
 801a592:	72fb      	strb	r3, [r7, #11]
 801a594:	4b15      	ldr	r3, [pc, #84]	; (801a5ec <vPortValidateInterruptPriority+0x74>)
 801a596:	781b      	ldrb	r3, [r3, #0]
 801a598:	7afa      	ldrb	r2, [r7, #11]
 801a59a:	429a      	cmp	r2, r3
 801a59c:	d20a      	bcs.n	801a5b4 <vPortValidateInterruptPriority+0x3c>
 801a59e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a5a2:	f383 8811 	msr	BASEPRI, r3
 801a5a6:	f3bf 8f6f 	isb	sy
 801a5aa:	f3bf 8f4f 	dsb	sy
 801a5ae:	607b      	str	r3, [r7, #4]
 801a5b0:	bf00      	nop
 801a5b2:	e7fe      	b.n	801a5b2 <vPortValidateInterruptPriority+0x3a>
 801a5b4:	4b0e      	ldr	r3, [pc, #56]	; (801a5f0 <vPortValidateInterruptPriority+0x78>)
 801a5b6:	681b      	ldr	r3, [r3, #0]
 801a5b8:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 801a5bc:	4b0d      	ldr	r3, [pc, #52]	; (801a5f4 <vPortValidateInterruptPriority+0x7c>)
 801a5be:	681b      	ldr	r3, [r3, #0]
 801a5c0:	429a      	cmp	r2, r3
 801a5c2:	d90a      	bls.n	801a5da <vPortValidateInterruptPriority+0x62>
 801a5c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a5c8:	f383 8811 	msr	BASEPRI, r3
 801a5cc:	f3bf 8f6f 	isb	sy
 801a5d0:	f3bf 8f4f 	dsb	sy
 801a5d4:	603b      	str	r3, [r7, #0]
 801a5d6:	bf00      	nop
 801a5d8:	e7fe      	b.n	801a5d8 <vPortValidateInterruptPriority+0x60>
 801a5da:	bf00      	nop
 801a5dc:	3714      	adds	r7, #20
 801a5de:	46bd      	mov	sp, r7
 801a5e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a5e4:	4770      	bx	lr
 801a5e6:	bf00      	nop
 801a5e8:	e000e3f0 	.word	0xe000e3f0
 801a5ec:	24002db0 	.word	0x24002db0
 801a5f0:	e000ed0c 	.word	0xe000ed0c
 801a5f4:	24002db4 	.word	0x24002db4

0801a5f8 <pvPortMalloc>:
 801a5f8:	b580      	push	{r7, lr}
 801a5fa:	b08a      	sub	sp, #40	; 0x28
 801a5fc:	af00      	add	r7, sp, #0
 801a5fe:	6078      	str	r0, [r7, #4]
 801a600:	2300      	movs	r3, #0
 801a602:	61fb      	str	r3, [r7, #28]
 801a604:	f7fe fcac 	bl	8018f60 <vTaskSuspendAll>
 801a608:	4b5b      	ldr	r3, [pc, #364]	; (801a778 <pvPortMalloc+0x180>)
 801a60a:	681b      	ldr	r3, [r3, #0]
 801a60c:	2b00      	cmp	r3, #0
 801a60e:	d101      	bne.n	801a614 <pvPortMalloc+0x1c>
 801a610:	f000 f920 	bl	801a854 <prvHeapInit>
 801a614:	4b59      	ldr	r3, [pc, #356]	; (801a77c <pvPortMalloc+0x184>)
 801a616:	681a      	ldr	r2, [r3, #0]
 801a618:	687b      	ldr	r3, [r7, #4]
 801a61a:	4013      	ands	r3, r2
 801a61c:	2b00      	cmp	r3, #0
 801a61e:	f040 8093 	bne.w	801a748 <pvPortMalloc+0x150>
 801a622:	687b      	ldr	r3, [r7, #4]
 801a624:	2b00      	cmp	r3, #0
 801a626:	d01d      	beq.n	801a664 <pvPortMalloc+0x6c>
 801a628:	2208      	movs	r2, #8
 801a62a:	687b      	ldr	r3, [r7, #4]
 801a62c:	4413      	add	r3, r2
 801a62e:	607b      	str	r3, [r7, #4]
 801a630:	687b      	ldr	r3, [r7, #4]
 801a632:	f003 0307 	and.w	r3, r3, #7
 801a636:	2b00      	cmp	r3, #0
 801a638:	d014      	beq.n	801a664 <pvPortMalloc+0x6c>
 801a63a:	687b      	ldr	r3, [r7, #4]
 801a63c:	f023 0307 	bic.w	r3, r3, #7
 801a640:	3308      	adds	r3, #8
 801a642:	607b      	str	r3, [r7, #4]
 801a644:	687b      	ldr	r3, [r7, #4]
 801a646:	f003 0307 	and.w	r3, r3, #7
 801a64a:	2b00      	cmp	r3, #0
 801a64c:	d00a      	beq.n	801a664 <pvPortMalloc+0x6c>
 801a64e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a652:	f383 8811 	msr	BASEPRI, r3
 801a656:	f3bf 8f6f 	isb	sy
 801a65a:	f3bf 8f4f 	dsb	sy
 801a65e:	617b      	str	r3, [r7, #20]
 801a660:	bf00      	nop
 801a662:	e7fe      	b.n	801a662 <pvPortMalloc+0x6a>
 801a664:	687b      	ldr	r3, [r7, #4]
 801a666:	2b00      	cmp	r3, #0
 801a668:	d06e      	beq.n	801a748 <pvPortMalloc+0x150>
 801a66a:	4b45      	ldr	r3, [pc, #276]	; (801a780 <pvPortMalloc+0x188>)
 801a66c:	681b      	ldr	r3, [r3, #0]
 801a66e:	687a      	ldr	r2, [r7, #4]
 801a670:	429a      	cmp	r2, r3
 801a672:	d869      	bhi.n	801a748 <pvPortMalloc+0x150>
 801a674:	4b43      	ldr	r3, [pc, #268]	; (801a784 <pvPortMalloc+0x18c>)
 801a676:	623b      	str	r3, [r7, #32]
 801a678:	4b42      	ldr	r3, [pc, #264]	; (801a784 <pvPortMalloc+0x18c>)
 801a67a:	681b      	ldr	r3, [r3, #0]
 801a67c:	627b      	str	r3, [r7, #36]	; 0x24
 801a67e:	e004      	b.n	801a68a <pvPortMalloc+0x92>
 801a680:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a682:	623b      	str	r3, [r7, #32]
 801a684:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a686:	681b      	ldr	r3, [r3, #0]
 801a688:	627b      	str	r3, [r7, #36]	; 0x24
 801a68a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a68c:	685b      	ldr	r3, [r3, #4]
 801a68e:	687a      	ldr	r2, [r7, #4]
 801a690:	429a      	cmp	r2, r3
 801a692:	d903      	bls.n	801a69c <pvPortMalloc+0xa4>
 801a694:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a696:	681b      	ldr	r3, [r3, #0]
 801a698:	2b00      	cmp	r3, #0
 801a69a:	d1f1      	bne.n	801a680 <pvPortMalloc+0x88>
 801a69c:	4b36      	ldr	r3, [pc, #216]	; (801a778 <pvPortMalloc+0x180>)
 801a69e:	681b      	ldr	r3, [r3, #0]
 801a6a0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801a6a2:	429a      	cmp	r2, r3
 801a6a4:	d050      	beq.n	801a748 <pvPortMalloc+0x150>
 801a6a6:	6a3b      	ldr	r3, [r7, #32]
 801a6a8:	681b      	ldr	r3, [r3, #0]
 801a6aa:	2208      	movs	r2, #8
 801a6ac:	4413      	add	r3, r2
 801a6ae:	61fb      	str	r3, [r7, #28]
 801a6b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a6b2:	681a      	ldr	r2, [r3, #0]
 801a6b4:	6a3b      	ldr	r3, [r7, #32]
 801a6b6:	601a      	str	r2, [r3, #0]
 801a6b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a6ba:	685a      	ldr	r2, [r3, #4]
 801a6bc:	687b      	ldr	r3, [r7, #4]
 801a6be:	1ad2      	subs	r2, r2, r3
 801a6c0:	2308      	movs	r3, #8
 801a6c2:	005b      	lsls	r3, r3, #1
 801a6c4:	429a      	cmp	r2, r3
 801a6c6:	d91f      	bls.n	801a708 <pvPortMalloc+0x110>
 801a6c8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801a6ca:	687b      	ldr	r3, [r7, #4]
 801a6cc:	4413      	add	r3, r2
 801a6ce:	61bb      	str	r3, [r7, #24]
 801a6d0:	69bb      	ldr	r3, [r7, #24]
 801a6d2:	f003 0307 	and.w	r3, r3, #7
 801a6d6:	2b00      	cmp	r3, #0
 801a6d8:	d00a      	beq.n	801a6f0 <pvPortMalloc+0xf8>
 801a6da:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a6de:	f383 8811 	msr	BASEPRI, r3
 801a6e2:	f3bf 8f6f 	isb	sy
 801a6e6:	f3bf 8f4f 	dsb	sy
 801a6ea:	613b      	str	r3, [r7, #16]
 801a6ec:	bf00      	nop
 801a6ee:	e7fe      	b.n	801a6ee <pvPortMalloc+0xf6>
 801a6f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a6f2:	685a      	ldr	r2, [r3, #4]
 801a6f4:	687b      	ldr	r3, [r7, #4]
 801a6f6:	1ad2      	subs	r2, r2, r3
 801a6f8:	69bb      	ldr	r3, [r7, #24]
 801a6fa:	605a      	str	r2, [r3, #4]
 801a6fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a6fe:	687a      	ldr	r2, [r7, #4]
 801a700:	605a      	str	r2, [r3, #4]
 801a702:	69b8      	ldr	r0, [r7, #24]
 801a704:	f000 f908 	bl	801a918 <prvInsertBlockIntoFreeList>
 801a708:	4b1d      	ldr	r3, [pc, #116]	; (801a780 <pvPortMalloc+0x188>)
 801a70a:	681a      	ldr	r2, [r3, #0]
 801a70c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a70e:	685b      	ldr	r3, [r3, #4]
 801a710:	1ad3      	subs	r3, r2, r3
 801a712:	4a1b      	ldr	r2, [pc, #108]	; (801a780 <pvPortMalloc+0x188>)
 801a714:	6013      	str	r3, [r2, #0]
 801a716:	4b1a      	ldr	r3, [pc, #104]	; (801a780 <pvPortMalloc+0x188>)
 801a718:	681a      	ldr	r2, [r3, #0]
 801a71a:	4b1b      	ldr	r3, [pc, #108]	; (801a788 <pvPortMalloc+0x190>)
 801a71c:	681b      	ldr	r3, [r3, #0]
 801a71e:	429a      	cmp	r2, r3
 801a720:	d203      	bcs.n	801a72a <pvPortMalloc+0x132>
 801a722:	4b17      	ldr	r3, [pc, #92]	; (801a780 <pvPortMalloc+0x188>)
 801a724:	681b      	ldr	r3, [r3, #0]
 801a726:	4a18      	ldr	r2, [pc, #96]	; (801a788 <pvPortMalloc+0x190>)
 801a728:	6013      	str	r3, [r2, #0]
 801a72a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a72c:	685a      	ldr	r2, [r3, #4]
 801a72e:	4b13      	ldr	r3, [pc, #76]	; (801a77c <pvPortMalloc+0x184>)
 801a730:	681b      	ldr	r3, [r3, #0]
 801a732:	431a      	orrs	r2, r3
 801a734:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a736:	605a      	str	r2, [r3, #4]
 801a738:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a73a:	2200      	movs	r2, #0
 801a73c:	601a      	str	r2, [r3, #0]
 801a73e:	4b13      	ldr	r3, [pc, #76]	; (801a78c <pvPortMalloc+0x194>)
 801a740:	681b      	ldr	r3, [r3, #0]
 801a742:	3301      	adds	r3, #1
 801a744:	4a11      	ldr	r2, [pc, #68]	; (801a78c <pvPortMalloc+0x194>)
 801a746:	6013      	str	r3, [r2, #0]
 801a748:	f7fe fc18 	bl	8018f7c <xTaskResumeAll>
 801a74c:	69fb      	ldr	r3, [r7, #28]
 801a74e:	f003 0307 	and.w	r3, r3, #7
 801a752:	2b00      	cmp	r3, #0
 801a754:	d00a      	beq.n	801a76c <pvPortMalloc+0x174>
 801a756:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a75a:	f383 8811 	msr	BASEPRI, r3
 801a75e:	f3bf 8f6f 	isb	sy
 801a762:	f3bf 8f4f 	dsb	sy
 801a766:	60fb      	str	r3, [r7, #12]
 801a768:	bf00      	nop
 801a76a:	e7fe      	b.n	801a76a <pvPortMalloc+0x172>
 801a76c:	69fb      	ldr	r3, [r7, #28]
 801a76e:	4618      	mov	r0, r3
 801a770:	3728      	adds	r7, #40	; 0x28
 801a772:	46bd      	mov	sp, r7
 801a774:	bd80      	pop	{r7, pc}
 801a776:	bf00      	nop
 801a778:	240069c0 	.word	0x240069c0
 801a77c:	240069d4 	.word	0x240069d4
 801a780:	240069c4 	.word	0x240069c4
 801a784:	240069b8 	.word	0x240069b8
 801a788:	240069c8 	.word	0x240069c8
 801a78c:	240069cc 	.word	0x240069cc

0801a790 <vPortFree>:
 801a790:	b580      	push	{r7, lr}
 801a792:	b086      	sub	sp, #24
 801a794:	af00      	add	r7, sp, #0
 801a796:	6078      	str	r0, [r7, #4]
 801a798:	687b      	ldr	r3, [r7, #4]
 801a79a:	617b      	str	r3, [r7, #20]
 801a79c:	687b      	ldr	r3, [r7, #4]
 801a79e:	2b00      	cmp	r3, #0
 801a7a0:	d04d      	beq.n	801a83e <vPortFree+0xae>
 801a7a2:	2308      	movs	r3, #8
 801a7a4:	425b      	negs	r3, r3
 801a7a6:	697a      	ldr	r2, [r7, #20]
 801a7a8:	4413      	add	r3, r2
 801a7aa:	617b      	str	r3, [r7, #20]
 801a7ac:	697b      	ldr	r3, [r7, #20]
 801a7ae:	613b      	str	r3, [r7, #16]
 801a7b0:	693b      	ldr	r3, [r7, #16]
 801a7b2:	685a      	ldr	r2, [r3, #4]
 801a7b4:	4b24      	ldr	r3, [pc, #144]	; (801a848 <vPortFree+0xb8>)
 801a7b6:	681b      	ldr	r3, [r3, #0]
 801a7b8:	4013      	ands	r3, r2
 801a7ba:	2b00      	cmp	r3, #0
 801a7bc:	d10a      	bne.n	801a7d4 <vPortFree+0x44>
 801a7be:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a7c2:	f383 8811 	msr	BASEPRI, r3
 801a7c6:	f3bf 8f6f 	isb	sy
 801a7ca:	f3bf 8f4f 	dsb	sy
 801a7ce:	60fb      	str	r3, [r7, #12]
 801a7d0:	bf00      	nop
 801a7d2:	e7fe      	b.n	801a7d2 <vPortFree+0x42>
 801a7d4:	693b      	ldr	r3, [r7, #16]
 801a7d6:	681b      	ldr	r3, [r3, #0]
 801a7d8:	2b00      	cmp	r3, #0
 801a7da:	d00a      	beq.n	801a7f2 <vPortFree+0x62>
 801a7dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801a7e0:	f383 8811 	msr	BASEPRI, r3
 801a7e4:	f3bf 8f6f 	isb	sy
 801a7e8:	f3bf 8f4f 	dsb	sy
 801a7ec:	60bb      	str	r3, [r7, #8]
 801a7ee:	bf00      	nop
 801a7f0:	e7fe      	b.n	801a7f0 <vPortFree+0x60>
 801a7f2:	693b      	ldr	r3, [r7, #16]
 801a7f4:	685a      	ldr	r2, [r3, #4]
 801a7f6:	4b14      	ldr	r3, [pc, #80]	; (801a848 <vPortFree+0xb8>)
 801a7f8:	681b      	ldr	r3, [r3, #0]
 801a7fa:	4013      	ands	r3, r2
 801a7fc:	2b00      	cmp	r3, #0
 801a7fe:	d01e      	beq.n	801a83e <vPortFree+0xae>
 801a800:	693b      	ldr	r3, [r7, #16]
 801a802:	681b      	ldr	r3, [r3, #0]
 801a804:	2b00      	cmp	r3, #0
 801a806:	d11a      	bne.n	801a83e <vPortFree+0xae>
 801a808:	693b      	ldr	r3, [r7, #16]
 801a80a:	685a      	ldr	r2, [r3, #4]
 801a80c:	4b0e      	ldr	r3, [pc, #56]	; (801a848 <vPortFree+0xb8>)
 801a80e:	681b      	ldr	r3, [r3, #0]
 801a810:	43db      	mvns	r3, r3
 801a812:	401a      	ands	r2, r3
 801a814:	693b      	ldr	r3, [r7, #16]
 801a816:	605a      	str	r2, [r3, #4]
 801a818:	f7fe fba2 	bl	8018f60 <vTaskSuspendAll>
 801a81c:	693b      	ldr	r3, [r7, #16]
 801a81e:	685a      	ldr	r2, [r3, #4]
 801a820:	4b0a      	ldr	r3, [pc, #40]	; (801a84c <vPortFree+0xbc>)
 801a822:	681b      	ldr	r3, [r3, #0]
 801a824:	4413      	add	r3, r2
 801a826:	4a09      	ldr	r2, [pc, #36]	; (801a84c <vPortFree+0xbc>)
 801a828:	6013      	str	r3, [r2, #0]
 801a82a:	6938      	ldr	r0, [r7, #16]
 801a82c:	f000 f874 	bl	801a918 <prvInsertBlockIntoFreeList>
 801a830:	4b07      	ldr	r3, [pc, #28]	; (801a850 <vPortFree+0xc0>)
 801a832:	681b      	ldr	r3, [r3, #0]
 801a834:	3301      	adds	r3, #1
 801a836:	4a06      	ldr	r2, [pc, #24]	; (801a850 <vPortFree+0xc0>)
 801a838:	6013      	str	r3, [r2, #0]
 801a83a:	f7fe fb9f 	bl	8018f7c <xTaskResumeAll>
 801a83e:	bf00      	nop
 801a840:	3718      	adds	r7, #24
 801a842:	46bd      	mov	sp, r7
 801a844:	bd80      	pop	{r7, pc}
 801a846:	bf00      	nop
 801a848:	240069d4 	.word	0x240069d4
 801a84c:	240069c4 	.word	0x240069c4
 801a850:	240069d0 	.word	0x240069d0

0801a854 <prvHeapInit>:
 801a854:	b480      	push	{r7}
 801a856:	b085      	sub	sp, #20
 801a858:	af00      	add	r7, sp, #0
 801a85a:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
 801a85e:	60bb      	str	r3, [r7, #8]
 801a860:	4b27      	ldr	r3, [pc, #156]	; (801a900 <prvHeapInit+0xac>)
 801a862:	60fb      	str	r3, [r7, #12]
 801a864:	68fb      	ldr	r3, [r7, #12]
 801a866:	f003 0307 	and.w	r3, r3, #7
 801a86a:	2b00      	cmp	r3, #0
 801a86c:	d00c      	beq.n	801a888 <prvHeapInit+0x34>
 801a86e:	68fb      	ldr	r3, [r7, #12]
 801a870:	3307      	adds	r3, #7
 801a872:	60fb      	str	r3, [r7, #12]
 801a874:	68fb      	ldr	r3, [r7, #12]
 801a876:	f023 0307 	bic.w	r3, r3, #7
 801a87a:	60fb      	str	r3, [r7, #12]
 801a87c:	68ba      	ldr	r2, [r7, #8]
 801a87e:	68fb      	ldr	r3, [r7, #12]
 801a880:	1ad3      	subs	r3, r2, r3
 801a882:	4a1f      	ldr	r2, [pc, #124]	; (801a900 <prvHeapInit+0xac>)
 801a884:	4413      	add	r3, r2
 801a886:	60bb      	str	r3, [r7, #8]
 801a888:	68fb      	ldr	r3, [r7, #12]
 801a88a:	607b      	str	r3, [r7, #4]
 801a88c:	4a1d      	ldr	r2, [pc, #116]	; (801a904 <prvHeapInit+0xb0>)
 801a88e:	687b      	ldr	r3, [r7, #4]
 801a890:	6013      	str	r3, [r2, #0]
 801a892:	4b1c      	ldr	r3, [pc, #112]	; (801a904 <prvHeapInit+0xb0>)
 801a894:	2200      	movs	r2, #0
 801a896:	605a      	str	r2, [r3, #4]
 801a898:	687b      	ldr	r3, [r7, #4]
 801a89a:	68ba      	ldr	r2, [r7, #8]
 801a89c:	4413      	add	r3, r2
 801a89e:	60fb      	str	r3, [r7, #12]
 801a8a0:	2208      	movs	r2, #8
 801a8a2:	68fb      	ldr	r3, [r7, #12]
 801a8a4:	1a9b      	subs	r3, r3, r2
 801a8a6:	60fb      	str	r3, [r7, #12]
 801a8a8:	68fb      	ldr	r3, [r7, #12]
 801a8aa:	f023 0307 	bic.w	r3, r3, #7
 801a8ae:	60fb      	str	r3, [r7, #12]
 801a8b0:	68fb      	ldr	r3, [r7, #12]
 801a8b2:	4a15      	ldr	r2, [pc, #84]	; (801a908 <prvHeapInit+0xb4>)
 801a8b4:	6013      	str	r3, [r2, #0]
 801a8b6:	4b14      	ldr	r3, [pc, #80]	; (801a908 <prvHeapInit+0xb4>)
 801a8b8:	681b      	ldr	r3, [r3, #0]
 801a8ba:	2200      	movs	r2, #0
 801a8bc:	605a      	str	r2, [r3, #4]
 801a8be:	4b12      	ldr	r3, [pc, #72]	; (801a908 <prvHeapInit+0xb4>)
 801a8c0:	681b      	ldr	r3, [r3, #0]
 801a8c2:	2200      	movs	r2, #0
 801a8c4:	601a      	str	r2, [r3, #0]
 801a8c6:	687b      	ldr	r3, [r7, #4]
 801a8c8:	603b      	str	r3, [r7, #0]
 801a8ca:	683b      	ldr	r3, [r7, #0]
 801a8cc:	68fa      	ldr	r2, [r7, #12]
 801a8ce:	1ad2      	subs	r2, r2, r3
 801a8d0:	683b      	ldr	r3, [r7, #0]
 801a8d2:	605a      	str	r2, [r3, #4]
 801a8d4:	4b0c      	ldr	r3, [pc, #48]	; (801a908 <prvHeapInit+0xb4>)
 801a8d6:	681a      	ldr	r2, [r3, #0]
 801a8d8:	683b      	ldr	r3, [r7, #0]
 801a8da:	601a      	str	r2, [r3, #0]
 801a8dc:	683b      	ldr	r3, [r7, #0]
 801a8de:	685b      	ldr	r3, [r3, #4]
 801a8e0:	4a0a      	ldr	r2, [pc, #40]	; (801a90c <prvHeapInit+0xb8>)
 801a8e2:	6013      	str	r3, [r2, #0]
 801a8e4:	683b      	ldr	r3, [r7, #0]
 801a8e6:	685b      	ldr	r3, [r3, #4]
 801a8e8:	4a09      	ldr	r2, [pc, #36]	; (801a910 <prvHeapInit+0xbc>)
 801a8ea:	6013      	str	r3, [r2, #0]
 801a8ec:	4b09      	ldr	r3, [pc, #36]	; (801a914 <prvHeapInit+0xc0>)
 801a8ee:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 801a8f2:	601a      	str	r2, [r3, #0]
 801a8f4:	bf00      	nop
 801a8f6:	3714      	adds	r7, #20
 801a8f8:	46bd      	mov	sp, r7
 801a8fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a8fe:	4770      	bx	lr
 801a900:	24002db8 	.word	0x24002db8
 801a904:	240069b8 	.word	0x240069b8
 801a908:	240069c0 	.word	0x240069c0
 801a90c:	240069c8 	.word	0x240069c8
 801a910:	240069c4 	.word	0x240069c4
 801a914:	240069d4 	.word	0x240069d4

0801a918 <prvInsertBlockIntoFreeList>:
 801a918:	b480      	push	{r7}
 801a91a:	b085      	sub	sp, #20
 801a91c:	af00      	add	r7, sp, #0
 801a91e:	6078      	str	r0, [r7, #4]
 801a920:	4b28      	ldr	r3, [pc, #160]	; (801a9c4 <prvInsertBlockIntoFreeList+0xac>)
 801a922:	60fb      	str	r3, [r7, #12]
 801a924:	e002      	b.n	801a92c <prvInsertBlockIntoFreeList+0x14>
 801a926:	68fb      	ldr	r3, [r7, #12]
 801a928:	681b      	ldr	r3, [r3, #0]
 801a92a:	60fb      	str	r3, [r7, #12]
 801a92c:	68fb      	ldr	r3, [r7, #12]
 801a92e:	681b      	ldr	r3, [r3, #0]
 801a930:	687a      	ldr	r2, [r7, #4]
 801a932:	429a      	cmp	r2, r3
 801a934:	d8f7      	bhi.n	801a926 <prvInsertBlockIntoFreeList+0xe>
 801a936:	68fb      	ldr	r3, [r7, #12]
 801a938:	60bb      	str	r3, [r7, #8]
 801a93a:	68fb      	ldr	r3, [r7, #12]
 801a93c:	685b      	ldr	r3, [r3, #4]
 801a93e:	68ba      	ldr	r2, [r7, #8]
 801a940:	4413      	add	r3, r2
 801a942:	687a      	ldr	r2, [r7, #4]
 801a944:	429a      	cmp	r2, r3
 801a946:	d108      	bne.n	801a95a <prvInsertBlockIntoFreeList+0x42>
 801a948:	68fb      	ldr	r3, [r7, #12]
 801a94a:	685a      	ldr	r2, [r3, #4]
 801a94c:	687b      	ldr	r3, [r7, #4]
 801a94e:	685b      	ldr	r3, [r3, #4]
 801a950:	441a      	add	r2, r3
 801a952:	68fb      	ldr	r3, [r7, #12]
 801a954:	605a      	str	r2, [r3, #4]
 801a956:	68fb      	ldr	r3, [r7, #12]
 801a958:	607b      	str	r3, [r7, #4]
 801a95a:	687b      	ldr	r3, [r7, #4]
 801a95c:	60bb      	str	r3, [r7, #8]
 801a95e:	687b      	ldr	r3, [r7, #4]
 801a960:	685b      	ldr	r3, [r3, #4]
 801a962:	68ba      	ldr	r2, [r7, #8]
 801a964:	441a      	add	r2, r3
 801a966:	68fb      	ldr	r3, [r7, #12]
 801a968:	681b      	ldr	r3, [r3, #0]
 801a96a:	429a      	cmp	r2, r3
 801a96c:	d118      	bne.n	801a9a0 <prvInsertBlockIntoFreeList+0x88>
 801a96e:	68fb      	ldr	r3, [r7, #12]
 801a970:	681a      	ldr	r2, [r3, #0]
 801a972:	4b15      	ldr	r3, [pc, #84]	; (801a9c8 <prvInsertBlockIntoFreeList+0xb0>)
 801a974:	681b      	ldr	r3, [r3, #0]
 801a976:	429a      	cmp	r2, r3
 801a978:	d00d      	beq.n	801a996 <prvInsertBlockIntoFreeList+0x7e>
 801a97a:	687b      	ldr	r3, [r7, #4]
 801a97c:	685a      	ldr	r2, [r3, #4]
 801a97e:	68fb      	ldr	r3, [r7, #12]
 801a980:	681b      	ldr	r3, [r3, #0]
 801a982:	685b      	ldr	r3, [r3, #4]
 801a984:	441a      	add	r2, r3
 801a986:	687b      	ldr	r3, [r7, #4]
 801a988:	605a      	str	r2, [r3, #4]
 801a98a:	68fb      	ldr	r3, [r7, #12]
 801a98c:	681b      	ldr	r3, [r3, #0]
 801a98e:	681a      	ldr	r2, [r3, #0]
 801a990:	687b      	ldr	r3, [r7, #4]
 801a992:	601a      	str	r2, [r3, #0]
 801a994:	e008      	b.n	801a9a8 <prvInsertBlockIntoFreeList+0x90>
 801a996:	4b0c      	ldr	r3, [pc, #48]	; (801a9c8 <prvInsertBlockIntoFreeList+0xb0>)
 801a998:	681a      	ldr	r2, [r3, #0]
 801a99a:	687b      	ldr	r3, [r7, #4]
 801a99c:	601a      	str	r2, [r3, #0]
 801a99e:	e003      	b.n	801a9a8 <prvInsertBlockIntoFreeList+0x90>
 801a9a0:	68fb      	ldr	r3, [r7, #12]
 801a9a2:	681a      	ldr	r2, [r3, #0]
 801a9a4:	687b      	ldr	r3, [r7, #4]
 801a9a6:	601a      	str	r2, [r3, #0]
 801a9a8:	68fa      	ldr	r2, [r7, #12]
 801a9aa:	687b      	ldr	r3, [r7, #4]
 801a9ac:	429a      	cmp	r2, r3
 801a9ae:	d002      	beq.n	801a9b6 <prvInsertBlockIntoFreeList+0x9e>
 801a9b0:	68fb      	ldr	r3, [r7, #12]
 801a9b2:	687a      	ldr	r2, [r7, #4]
 801a9b4:	601a      	str	r2, [r3, #0]
 801a9b6:	bf00      	nop
 801a9b8:	3714      	adds	r7, #20
 801a9ba:	46bd      	mov	sp, r7
 801a9bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a9c0:	4770      	bx	lr
 801a9c2:	bf00      	nop
 801a9c4:	240069b8 	.word	0x240069b8
 801a9c8:	240069c0 	.word	0x240069c0

0801a9cc <__errno>:
 801a9cc:	4b01      	ldr	r3, [pc, #4]	; (801a9d4 <__errno+0x8>)
 801a9ce:	6818      	ldr	r0, [r3, #0]
 801a9d0:	4770      	bx	lr
 801a9d2:	bf00      	nop
 801a9d4:	240000d8 	.word	0x240000d8

0801a9d8 <__libc_init_array>:
 801a9d8:	b570      	push	{r4, r5, r6, lr}
 801a9da:	4d0d      	ldr	r5, [pc, #52]	; (801aa10 <__libc_init_array+0x38>)
 801a9dc:	4c0d      	ldr	r4, [pc, #52]	; (801aa14 <__libc_init_array+0x3c>)
 801a9de:	1b64      	subs	r4, r4, r5
 801a9e0:	10a4      	asrs	r4, r4, #2
 801a9e2:	2600      	movs	r6, #0
 801a9e4:	42a6      	cmp	r6, r4
 801a9e6:	d109      	bne.n	801a9fc <__libc_init_array+0x24>
 801a9e8:	4d0b      	ldr	r5, [pc, #44]	; (801aa18 <__libc_init_array+0x40>)
 801a9ea:	4c0c      	ldr	r4, [pc, #48]	; (801aa1c <__libc_init_array+0x44>)
 801a9ec:	f000 fd2c 	bl	801b448 <_init>
 801a9f0:	1b64      	subs	r4, r4, r5
 801a9f2:	10a4      	asrs	r4, r4, #2
 801a9f4:	2600      	movs	r6, #0
 801a9f6:	42a6      	cmp	r6, r4
 801a9f8:	d105      	bne.n	801aa06 <__libc_init_array+0x2e>
 801a9fa:	bd70      	pop	{r4, r5, r6, pc}
 801a9fc:	f855 3b04 	ldr.w	r3, [r5], #4
 801aa00:	4798      	blx	r3
 801aa02:	3601      	adds	r6, #1
 801aa04:	e7ee      	b.n	801a9e4 <__libc_init_array+0xc>
 801aa06:	f855 3b04 	ldr.w	r3, [r5], #4
 801aa0a:	4798      	blx	r3
 801aa0c:	3601      	adds	r6, #1
 801aa0e:	e7f2      	b.n	801a9f6 <__libc_init_array+0x1e>
 801aa10:	0801b900 	.word	0x0801b900
 801aa14:	0801b900 	.word	0x0801b900
 801aa18:	0801b900 	.word	0x0801b900
 801aa1c:	0801b904 	.word	0x0801b904

0801aa20 <memcpy>:
 801aa20:	440a      	add	r2, r1
 801aa22:	4291      	cmp	r1, r2
 801aa24:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 801aa28:	d100      	bne.n	801aa2c <memcpy+0xc>
 801aa2a:	4770      	bx	lr
 801aa2c:	b510      	push	{r4, lr}
 801aa2e:	f811 4b01 	ldrb.w	r4, [r1], #1
 801aa32:	f803 4f01 	strb.w	r4, [r3, #1]!
 801aa36:	4291      	cmp	r1, r2
 801aa38:	d1f9      	bne.n	801aa2e <memcpy+0xe>
 801aa3a:	bd10      	pop	{r4, pc}

0801aa3c <memset>:
 801aa3c:	4402      	add	r2, r0
 801aa3e:	4603      	mov	r3, r0
 801aa40:	4293      	cmp	r3, r2
 801aa42:	d100      	bne.n	801aa46 <memset+0xa>
 801aa44:	4770      	bx	lr
 801aa46:	f803 1b01 	strb.w	r1, [r3], #1
 801aa4a:	e7f9      	b.n	801aa40 <memset+0x4>

0801aa4c <_puts_r>:
 801aa4c:	b570      	push	{r4, r5, r6, lr}
 801aa4e:	460e      	mov	r6, r1
 801aa50:	4605      	mov	r5, r0
 801aa52:	b118      	cbz	r0, 801aa5c <_puts_r+0x10>
 801aa54:	6983      	ldr	r3, [r0, #24]
 801aa56:	b90b      	cbnz	r3, 801aa5c <_puts_r+0x10>
 801aa58:	f000 fa48 	bl	801aeec <__sinit>
 801aa5c:	69ab      	ldr	r3, [r5, #24]
 801aa5e:	68ac      	ldr	r4, [r5, #8]
 801aa60:	b913      	cbnz	r3, 801aa68 <_puts_r+0x1c>
 801aa62:	4628      	mov	r0, r5
 801aa64:	f000 fa42 	bl	801aeec <__sinit>
 801aa68:	4b2c      	ldr	r3, [pc, #176]	; (801ab1c <_puts_r+0xd0>)
 801aa6a:	429c      	cmp	r4, r3
 801aa6c:	d120      	bne.n	801aab0 <_puts_r+0x64>
 801aa6e:	686c      	ldr	r4, [r5, #4]
 801aa70:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801aa72:	07db      	lsls	r3, r3, #31
 801aa74:	d405      	bmi.n	801aa82 <_puts_r+0x36>
 801aa76:	89a3      	ldrh	r3, [r4, #12]
 801aa78:	0598      	lsls	r0, r3, #22
 801aa7a:	d402      	bmi.n	801aa82 <_puts_r+0x36>
 801aa7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801aa7e:	f000 fad3 	bl	801b028 <__retarget_lock_acquire_recursive>
 801aa82:	89a3      	ldrh	r3, [r4, #12]
 801aa84:	0719      	lsls	r1, r3, #28
 801aa86:	d51d      	bpl.n	801aac4 <_puts_r+0x78>
 801aa88:	6923      	ldr	r3, [r4, #16]
 801aa8a:	b1db      	cbz	r3, 801aac4 <_puts_r+0x78>
 801aa8c:	3e01      	subs	r6, #1
 801aa8e:	68a3      	ldr	r3, [r4, #8]
 801aa90:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 801aa94:	3b01      	subs	r3, #1
 801aa96:	60a3      	str	r3, [r4, #8]
 801aa98:	bb39      	cbnz	r1, 801aaea <_puts_r+0x9e>
 801aa9a:	2b00      	cmp	r3, #0
 801aa9c:	da38      	bge.n	801ab10 <_puts_r+0xc4>
 801aa9e:	4622      	mov	r2, r4
 801aaa0:	210a      	movs	r1, #10
 801aaa2:	4628      	mov	r0, r5
 801aaa4:	f000 f848 	bl	801ab38 <__swbuf_r>
 801aaa8:	3001      	adds	r0, #1
 801aaaa:	d011      	beq.n	801aad0 <_puts_r+0x84>
 801aaac:	250a      	movs	r5, #10
 801aaae:	e011      	b.n	801aad4 <_puts_r+0x88>
 801aab0:	4b1b      	ldr	r3, [pc, #108]	; (801ab20 <_puts_r+0xd4>)
 801aab2:	429c      	cmp	r4, r3
 801aab4:	d101      	bne.n	801aaba <_puts_r+0x6e>
 801aab6:	68ac      	ldr	r4, [r5, #8]
 801aab8:	e7da      	b.n	801aa70 <_puts_r+0x24>
 801aaba:	4b1a      	ldr	r3, [pc, #104]	; (801ab24 <_puts_r+0xd8>)
 801aabc:	429c      	cmp	r4, r3
 801aabe:	bf08      	it	eq
 801aac0:	68ec      	ldreq	r4, [r5, #12]
 801aac2:	e7d5      	b.n	801aa70 <_puts_r+0x24>
 801aac4:	4621      	mov	r1, r4
 801aac6:	4628      	mov	r0, r5
 801aac8:	f000 f888 	bl	801abdc <__swsetup_r>
 801aacc:	2800      	cmp	r0, #0
 801aace:	d0dd      	beq.n	801aa8c <_puts_r+0x40>
 801aad0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 801aad4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801aad6:	07da      	lsls	r2, r3, #31
 801aad8:	d405      	bmi.n	801aae6 <_puts_r+0x9a>
 801aada:	89a3      	ldrh	r3, [r4, #12]
 801aadc:	059b      	lsls	r3, r3, #22
 801aade:	d402      	bmi.n	801aae6 <_puts_r+0x9a>
 801aae0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801aae2:	f000 faa2 	bl	801b02a <__retarget_lock_release_recursive>
 801aae6:	4628      	mov	r0, r5
 801aae8:	bd70      	pop	{r4, r5, r6, pc}
 801aaea:	2b00      	cmp	r3, #0
 801aaec:	da04      	bge.n	801aaf8 <_puts_r+0xac>
 801aaee:	69a2      	ldr	r2, [r4, #24]
 801aaf0:	429a      	cmp	r2, r3
 801aaf2:	dc06      	bgt.n	801ab02 <_puts_r+0xb6>
 801aaf4:	290a      	cmp	r1, #10
 801aaf6:	d004      	beq.n	801ab02 <_puts_r+0xb6>
 801aaf8:	6823      	ldr	r3, [r4, #0]
 801aafa:	1c5a      	adds	r2, r3, #1
 801aafc:	6022      	str	r2, [r4, #0]
 801aafe:	7019      	strb	r1, [r3, #0]
 801ab00:	e7c5      	b.n	801aa8e <_puts_r+0x42>
 801ab02:	4622      	mov	r2, r4
 801ab04:	4628      	mov	r0, r5
 801ab06:	f000 f817 	bl	801ab38 <__swbuf_r>
 801ab0a:	3001      	adds	r0, #1
 801ab0c:	d1bf      	bne.n	801aa8e <_puts_r+0x42>
 801ab0e:	e7df      	b.n	801aad0 <_puts_r+0x84>
 801ab10:	6823      	ldr	r3, [r4, #0]
 801ab12:	250a      	movs	r5, #10
 801ab14:	1c5a      	adds	r2, r3, #1
 801ab16:	6022      	str	r2, [r4, #0]
 801ab18:	701d      	strb	r5, [r3, #0]
 801ab1a:	e7db      	b.n	801aad4 <_puts_r+0x88>
 801ab1c:	0801b8b8 	.word	0x0801b8b8
 801ab20:	0801b8d8 	.word	0x0801b8d8
 801ab24:	0801b898 	.word	0x0801b898

0801ab28 <puts>:
 801ab28:	4b02      	ldr	r3, [pc, #8]	; (801ab34 <puts+0xc>)
 801ab2a:	4601      	mov	r1, r0
 801ab2c:	6818      	ldr	r0, [r3, #0]
 801ab2e:	f7ff bf8d 	b.w	801aa4c <_puts_r>
 801ab32:	bf00      	nop
 801ab34:	240000d8 	.word	0x240000d8

0801ab38 <__swbuf_r>:
 801ab38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ab3a:	460e      	mov	r6, r1
 801ab3c:	4614      	mov	r4, r2
 801ab3e:	4605      	mov	r5, r0
 801ab40:	b118      	cbz	r0, 801ab4a <__swbuf_r+0x12>
 801ab42:	6983      	ldr	r3, [r0, #24]
 801ab44:	b90b      	cbnz	r3, 801ab4a <__swbuf_r+0x12>
 801ab46:	f000 f9d1 	bl	801aeec <__sinit>
 801ab4a:	4b21      	ldr	r3, [pc, #132]	; (801abd0 <__swbuf_r+0x98>)
 801ab4c:	429c      	cmp	r4, r3
 801ab4e:	d12b      	bne.n	801aba8 <__swbuf_r+0x70>
 801ab50:	686c      	ldr	r4, [r5, #4]
 801ab52:	69a3      	ldr	r3, [r4, #24]
 801ab54:	60a3      	str	r3, [r4, #8]
 801ab56:	89a3      	ldrh	r3, [r4, #12]
 801ab58:	071a      	lsls	r2, r3, #28
 801ab5a:	d52f      	bpl.n	801abbc <__swbuf_r+0x84>
 801ab5c:	6923      	ldr	r3, [r4, #16]
 801ab5e:	b36b      	cbz	r3, 801abbc <__swbuf_r+0x84>
 801ab60:	6923      	ldr	r3, [r4, #16]
 801ab62:	6820      	ldr	r0, [r4, #0]
 801ab64:	1ac0      	subs	r0, r0, r3
 801ab66:	6963      	ldr	r3, [r4, #20]
 801ab68:	b2f6      	uxtb	r6, r6
 801ab6a:	4283      	cmp	r3, r0
 801ab6c:	4637      	mov	r7, r6
 801ab6e:	dc04      	bgt.n	801ab7a <__swbuf_r+0x42>
 801ab70:	4621      	mov	r1, r4
 801ab72:	4628      	mov	r0, r5
 801ab74:	f000 f926 	bl	801adc4 <_fflush_r>
 801ab78:	bb30      	cbnz	r0, 801abc8 <__swbuf_r+0x90>
 801ab7a:	68a3      	ldr	r3, [r4, #8]
 801ab7c:	3b01      	subs	r3, #1
 801ab7e:	60a3      	str	r3, [r4, #8]
 801ab80:	6823      	ldr	r3, [r4, #0]
 801ab82:	1c5a      	adds	r2, r3, #1
 801ab84:	6022      	str	r2, [r4, #0]
 801ab86:	701e      	strb	r6, [r3, #0]
 801ab88:	6963      	ldr	r3, [r4, #20]
 801ab8a:	3001      	adds	r0, #1
 801ab8c:	4283      	cmp	r3, r0
 801ab8e:	d004      	beq.n	801ab9a <__swbuf_r+0x62>
 801ab90:	89a3      	ldrh	r3, [r4, #12]
 801ab92:	07db      	lsls	r3, r3, #31
 801ab94:	d506      	bpl.n	801aba4 <__swbuf_r+0x6c>
 801ab96:	2e0a      	cmp	r6, #10
 801ab98:	d104      	bne.n	801aba4 <__swbuf_r+0x6c>
 801ab9a:	4621      	mov	r1, r4
 801ab9c:	4628      	mov	r0, r5
 801ab9e:	f000 f911 	bl	801adc4 <_fflush_r>
 801aba2:	b988      	cbnz	r0, 801abc8 <__swbuf_r+0x90>
 801aba4:	4638      	mov	r0, r7
 801aba6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801aba8:	4b0a      	ldr	r3, [pc, #40]	; (801abd4 <__swbuf_r+0x9c>)
 801abaa:	429c      	cmp	r4, r3
 801abac:	d101      	bne.n	801abb2 <__swbuf_r+0x7a>
 801abae:	68ac      	ldr	r4, [r5, #8]
 801abb0:	e7cf      	b.n	801ab52 <__swbuf_r+0x1a>
 801abb2:	4b09      	ldr	r3, [pc, #36]	; (801abd8 <__swbuf_r+0xa0>)
 801abb4:	429c      	cmp	r4, r3
 801abb6:	bf08      	it	eq
 801abb8:	68ec      	ldreq	r4, [r5, #12]
 801abba:	e7ca      	b.n	801ab52 <__swbuf_r+0x1a>
 801abbc:	4621      	mov	r1, r4
 801abbe:	4628      	mov	r0, r5
 801abc0:	f000 f80c 	bl	801abdc <__swsetup_r>
 801abc4:	2800      	cmp	r0, #0
 801abc6:	d0cb      	beq.n	801ab60 <__swbuf_r+0x28>
 801abc8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 801abcc:	e7ea      	b.n	801aba4 <__swbuf_r+0x6c>
 801abce:	bf00      	nop
 801abd0:	0801b8b8 	.word	0x0801b8b8
 801abd4:	0801b8d8 	.word	0x0801b8d8
 801abd8:	0801b898 	.word	0x0801b898

0801abdc <__swsetup_r>:
 801abdc:	4b32      	ldr	r3, [pc, #200]	; (801aca8 <__swsetup_r+0xcc>)
 801abde:	b570      	push	{r4, r5, r6, lr}
 801abe0:	681d      	ldr	r5, [r3, #0]
 801abe2:	4606      	mov	r6, r0
 801abe4:	460c      	mov	r4, r1
 801abe6:	b125      	cbz	r5, 801abf2 <__swsetup_r+0x16>
 801abe8:	69ab      	ldr	r3, [r5, #24]
 801abea:	b913      	cbnz	r3, 801abf2 <__swsetup_r+0x16>
 801abec:	4628      	mov	r0, r5
 801abee:	f000 f97d 	bl	801aeec <__sinit>
 801abf2:	4b2e      	ldr	r3, [pc, #184]	; (801acac <__swsetup_r+0xd0>)
 801abf4:	429c      	cmp	r4, r3
 801abf6:	d10f      	bne.n	801ac18 <__swsetup_r+0x3c>
 801abf8:	686c      	ldr	r4, [r5, #4]
 801abfa:	89a3      	ldrh	r3, [r4, #12]
 801abfc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ac00:	0719      	lsls	r1, r3, #28
 801ac02:	d42c      	bmi.n	801ac5e <__swsetup_r+0x82>
 801ac04:	06dd      	lsls	r5, r3, #27
 801ac06:	d411      	bmi.n	801ac2c <__swsetup_r+0x50>
 801ac08:	2309      	movs	r3, #9
 801ac0a:	6033      	str	r3, [r6, #0]
 801ac0c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801ac10:	81a3      	strh	r3, [r4, #12]
 801ac12:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801ac16:	e03e      	b.n	801ac96 <__swsetup_r+0xba>
 801ac18:	4b25      	ldr	r3, [pc, #148]	; (801acb0 <__swsetup_r+0xd4>)
 801ac1a:	429c      	cmp	r4, r3
 801ac1c:	d101      	bne.n	801ac22 <__swsetup_r+0x46>
 801ac1e:	68ac      	ldr	r4, [r5, #8]
 801ac20:	e7eb      	b.n	801abfa <__swsetup_r+0x1e>
 801ac22:	4b24      	ldr	r3, [pc, #144]	; (801acb4 <__swsetup_r+0xd8>)
 801ac24:	429c      	cmp	r4, r3
 801ac26:	bf08      	it	eq
 801ac28:	68ec      	ldreq	r4, [r5, #12]
 801ac2a:	e7e6      	b.n	801abfa <__swsetup_r+0x1e>
 801ac2c:	0758      	lsls	r0, r3, #29
 801ac2e:	d512      	bpl.n	801ac56 <__swsetup_r+0x7a>
 801ac30:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801ac32:	b141      	cbz	r1, 801ac46 <__swsetup_r+0x6a>
 801ac34:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801ac38:	4299      	cmp	r1, r3
 801ac3a:	d002      	beq.n	801ac42 <__swsetup_r+0x66>
 801ac3c:	4630      	mov	r0, r6
 801ac3e:	f000 fa5b 	bl	801b0f8 <_free_r>
 801ac42:	2300      	movs	r3, #0
 801ac44:	6363      	str	r3, [r4, #52]	; 0x34
 801ac46:	89a3      	ldrh	r3, [r4, #12]
 801ac48:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801ac4c:	81a3      	strh	r3, [r4, #12]
 801ac4e:	2300      	movs	r3, #0
 801ac50:	6063      	str	r3, [r4, #4]
 801ac52:	6923      	ldr	r3, [r4, #16]
 801ac54:	6023      	str	r3, [r4, #0]
 801ac56:	89a3      	ldrh	r3, [r4, #12]
 801ac58:	f043 0308 	orr.w	r3, r3, #8
 801ac5c:	81a3      	strh	r3, [r4, #12]
 801ac5e:	6923      	ldr	r3, [r4, #16]
 801ac60:	b94b      	cbnz	r3, 801ac76 <__swsetup_r+0x9a>
 801ac62:	89a3      	ldrh	r3, [r4, #12]
 801ac64:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801ac68:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801ac6c:	d003      	beq.n	801ac76 <__swsetup_r+0x9a>
 801ac6e:	4621      	mov	r1, r4
 801ac70:	4630      	mov	r0, r6
 801ac72:	f000 fa01 	bl	801b078 <__smakebuf_r>
 801ac76:	89a0      	ldrh	r0, [r4, #12]
 801ac78:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ac7c:	f010 0301 	ands.w	r3, r0, #1
 801ac80:	d00a      	beq.n	801ac98 <__swsetup_r+0xbc>
 801ac82:	2300      	movs	r3, #0
 801ac84:	60a3      	str	r3, [r4, #8]
 801ac86:	6963      	ldr	r3, [r4, #20]
 801ac88:	425b      	negs	r3, r3
 801ac8a:	61a3      	str	r3, [r4, #24]
 801ac8c:	6923      	ldr	r3, [r4, #16]
 801ac8e:	b943      	cbnz	r3, 801aca2 <__swsetup_r+0xc6>
 801ac90:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801ac94:	d1ba      	bne.n	801ac0c <__swsetup_r+0x30>
 801ac96:	bd70      	pop	{r4, r5, r6, pc}
 801ac98:	0781      	lsls	r1, r0, #30
 801ac9a:	bf58      	it	pl
 801ac9c:	6963      	ldrpl	r3, [r4, #20]
 801ac9e:	60a3      	str	r3, [r4, #8]
 801aca0:	e7f4      	b.n	801ac8c <__swsetup_r+0xb0>
 801aca2:	2000      	movs	r0, #0
 801aca4:	e7f7      	b.n	801ac96 <__swsetup_r+0xba>
 801aca6:	bf00      	nop
 801aca8:	240000d8 	.word	0x240000d8
 801acac:	0801b8b8 	.word	0x0801b8b8
 801acb0:	0801b8d8 	.word	0x0801b8d8
 801acb4:	0801b898 	.word	0x0801b898

0801acb8 <__sflush_r>:
 801acb8:	898a      	ldrh	r2, [r1, #12]
 801acba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801acbe:	4605      	mov	r5, r0
 801acc0:	0710      	lsls	r0, r2, #28
 801acc2:	460c      	mov	r4, r1
 801acc4:	d458      	bmi.n	801ad78 <__sflush_r+0xc0>
 801acc6:	684b      	ldr	r3, [r1, #4]
 801acc8:	2b00      	cmp	r3, #0
 801acca:	dc05      	bgt.n	801acd8 <__sflush_r+0x20>
 801accc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801acce:	2b00      	cmp	r3, #0
 801acd0:	dc02      	bgt.n	801acd8 <__sflush_r+0x20>
 801acd2:	2000      	movs	r0, #0
 801acd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801acd8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801acda:	2e00      	cmp	r6, #0
 801acdc:	d0f9      	beq.n	801acd2 <__sflush_r+0x1a>
 801acde:	2300      	movs	r3, #0
 801ace0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801ace4:	682f      	ldr	r7, [r5, #0]
 801ace6:	602b      	str	r3, [r5, #0]
 801ace8:	d032      	beq.n	801ad50 <__sflush_r+0x98>
 801acea:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801acec:	89a3      	ldrh	r3, [r4, #12]
 801acee:	075a      	lsls	r2, r3, #29
 801acf0:	d505      	bpl.n	801acfe <__sflush_r+0x46>
 801acf2:	6863      	ldr	r3, [r4, #4]
 801acf4:	1ac0      	subs	r0, r0, r3
 801acf6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801acf8:	b10b      	cbz	r3, 801acfe <__sflush_r+0x46>
 801acfa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801acfc:	1ac0      	subs	r0, r0, r3
 801acfe:	2300      	movs	r3, #0
 801ad00:	4602      	mov	r2, r0
 801ad02:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801ad04:	6a21      	ldr	r1, [r4, #32]
 801ad06:	4628      	mov	r0, r5
 801ad08:	47b0      	blx	r6
 801ad0a:	1c43      	adds	r3, r0, #1
 801ad0c:	89a3      	ldrh	r3, [r4, #12]
 801ad0e:	d106      	bne.n	801ad1e <__sflush_r+0x66>
 801ad10:	6829      	ldr	r1, [r5, #0]
 801ad12:	291d      	cmp	r1, #29
 801ad14:	d82c      	bhi.n	801ad70 <__sflush_r+0xb8>
 801ad16:	4a2a      	ldr	r2, [pc, #168]	; (801adc0 <__sflush_r+0x108>)
 801ad18:	40ca      	lsrs	r2, r1
 801ad1a:	07d6      	lsls	r6, r2, #31
 801ad1c:	d528      	bpl.n	801ad70 <__sflush_r+0xb8>
 801ad1e:	2200      	movs	r2, #0
 801ad20:	6062      	str	r2, [r4, #4]
 801ad22:	04d9      	lsls	r1, r3, #19
 801ad24:	6922      	ldr	r2, [r4, #16]
 801ad26:	6022      	str	r2, [r4, #0]
 801ad28:	d504      	bpl.n	801ad34 <__sflush_r+0x7c>
 801ad2a:	1c42      	adds	r2, r0, #1
 801ad2c:	d101      	bne.n	801ad32 <__sflush_r+0x7a>
 801ad2e:	682b      	ldr	r3, [r5, #0]
 801ad30:	b903      	cbnz	r3, 801ad34 <__sflush_r+0x7c>
 801ad32:	6560      	str	r0, [r4, #84]	; 0x54
 801ad34:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801ad36:	602f      	str	r7, [r5, #0]
 801ad38:	2900      	cmp	r1, #0
 801ad3a:	d0ca      	beq.n	801acd2 <__sflush_r+0x1a>
 801ad3c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801ad40:	4299      	cmp	r1, r3
 801ad42:	d002      	beq.n	801ad4a <__sflush_r+0x92>
 801ad44:	4628      	mov	r0, r5
 801ad46:	f000 f9d7 	bl	801b0f8 <_free_r>
 801ad4a:	2000      	movs	r0, #0
 801ad4c:	6360      	str	r0, [r4, #52]	; 0x34
 801ad4e:	e7c1      	b.n	801acd4 <__sflush_r+0x1c>
 801ad50:	6a21      	ldr	r1, [r4, #32]
 801ad52:	2301      	movs	r3, #1
 801ad54:	4628      	mov	r0, r5
 801ad56:	47b0      	blx	r6
 801ad58:	1c41      	adds	r1, r0, #1
 801ad5a:	d1c7      	bne.n	801acec <__sflush_r+0x34>
 801ad5c:	682b      	ldr	r3, [r5, #0]
 801ad5e:	2b00      	cmp	r3, #0
 801ad60:	d0c4      	beq.n	801acec <__sflush_r+0x34>
 801ad62:	2b1d      	cmp	r3, #29
 801ad64:	d001      	beq.n	801ad6a <__sflush_r+0xb2>
 801ad66:	2b16      	cmp	r3, #22
 801ad68:	d101      	bne.n	801ad6e <__sflush_r+0xb6>
 801ad6a:	602f      	str	r7, [r5, #0]
 801ad6c:	e7b1      	b.n	801acd2 <__sflush_r+0x1a>
 801ad6e:	89a3      	ldrh	r3, [r4, #12]
 801ad70:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801ad74:	81a3      	strh	r3, [r4, #12]
 801ad76:	e7ad      	b.n	801acd4 <__sflush_r+0x1c>
 801ad78:	690f      	ldr	r7, [r1, #16]
 801ad7a:	2f00      	cmp	r7, #0
 801ad7c:	d0a9      	beq.n	801acd2 <__sflush_r+0x1a>
 801ad7e:	0793      	lsls	r3, r2, #30
 801ad80:	680e      	ldr	r6, [r1, #0]
 801ad82:	bf08      	it	eq
 801ad84:	694b      	ldreq	r3, [r1, #20]
 801ad86:	600f      	str	r7, [r1, #0]
 801ad88:	bf18      	it	ne
 801ad8a:	2300      	movne	r3, #0
 801ad8c:	eba6 0807 	sub.w	r8, r6, r7
 801ad90:	608b      	str	r3, [r1, #8]
 801ad92:	f1b8 0f00 	cmp.w	r8, #0
 801ad96:	dd9c      	ble.n	801acd2 <__sflush_r+0x1a>
 801ad98:	6a21      	ldr	r1, [r4, #32]
 801ad9a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801ad9c:	4643      	mov	r3, r8
 801ad9e:	463a      	mov	r2, r7
 801ada0:	4628      	mov	r0, r5
 801ada2:	47b0      	blx	r6
 801ada4:	2800      	cmp	r0, #0
 801ada6:	dc06      	bgt.n	801adb6 <__sflush_r+0xfe>
 801ada8:	89a3      	ldrh	r3, [r4, #12]
 801adaa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801adae:	81a3      	strh	r3, [r4, #12]
 801adb0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801adb4:	e78e      	b.n	801acd4 <__sflush_r+0x1c>
 801adb6:	4407      	add	r7, r0
 801adb8:	eba8 0800 	sub.w	r8, r8, r0
 801adbc:	e7e9      	b.n	801ad92 <__sflush_r+0xda>
 801adbe:	bf00      	nop
 801adc0:	20400001 	.word	0x20400001

0801adc4 <_fflush_r>:
 801adc4:	b538      	push	{r3, r4, r5, lr}
 801adc6:	690b      	ldr	r3, [r1, #16]
 801adc8:	4605      	mov	r5, r0
 801adca:	460c      	mov	r4, r1
 801adcc:	b913      	cbnz	r3, 801add4 <_fflush_r+0x10>
 801adce:	2500      	movs	r5, #0
 801add0:	4628      	mov	r0, r5
 801add2:	bd38      	pop	{r3, r4, r5, pc}
 801add4:	b118      	cbz	r0, 801adde <_fflush_r+0x1a>
 801add6:	6983      	ldr	r3, [r0, #24]
 801add8:	b90b      	cbnz	r3, 801adde <_fflush_r+0x1a>
 801adda:	f000 f887 	bl	801aeec <__sinit>
 801adde:	4b14      	ldr	r3, [pc, #80]	; (801ae30 <_fflush_r+0x6c>)
 801ade0:	429c      	cmp	r4, r3
 801ade2:	d11b      	bne.n	801ae1c <_fflush_r+0x58>
 801ade4:	686c      	ldr	r4, [r5, #4]
 801ade6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801adea:	2b00      	cmp	r3, #0
 801adec:	d0ef      	beq.n	801adce <_fflush_r+0xa>
 801adee:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801adf0:	07d0      	lsls	r0, r2, #31
 801adf2:	d404      	bmi.n	801adfe <_fflush_r+0x3a>
 801adf4:	0599      	lsls	r1, r3, #22
 801adf6:	d402      	bmi.n	801adfe <_fflush_r+0x3a>
 801adf8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801adfa:	f000 f915 	bl	801b028 <__retarget_lock_acquire_recursive>
 801adfe:	4628      	mov	r0, r5
 801ae00:	4621      	mov	r1, r4
 801ae02:	f7ff ff59 	bl	801acb8 <__sflush_r>
 801ae06:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801ae08:	07da      	lsls	r2, r3, #31
 801ae0a:	4605      	mov	r5, r0
 801ae0c:	d4e0      	bmi.n	801add0 <_fflush_r+0xc>
 801ae0e:	89a3      	ldrh	r3, [r4, #12]
 801ae10:	059b      	lsls	r3, r3, #22
 801ae12:	d4dd      	bmi.n	801add0 <_fflush_r+0xc>
 801ae14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ae16:	f000 f908 	bl	801b02a <__retarget_lock_release_recursive>
 801ae1a:	e7d9      	b.n	801add0 <_fflush_r+0xc>
 801ae1c:	4b05      	ldr	r3, [pc, #20]	; (801ae34 <_fflush_r+0x70>)
 801ae1e:	429c      	cmp	r4, r3
 801ae20:	d101      	bne.n	801ae26 <_fflush_r+0x62>
 801ae22:	68ac      	ldr	r4, [r5, #8]
 801ae24:	e7df      	b.n	801ade6 <_fflush_r+0x22>
 801ae26:	4b04      	ldr	r3, [pc, #16]	; (801ae38 <_fflush_r+0x74>)
 801ae28:	429c      	cmp	r4, r3
 801ae2a:	bf08      	it	eq
 801ae2c:	68ec      	ldreq	r4, [r5, #12]
 801ae2e:	e7da      	b.n	801ade6 <_fflush_r+0x22>
 801ae30:	0801b8b8 	.word	0x0801b8b8
 801ae34:	0801b8d8 	.word	0x0801b8d8
 801ae38:	0801b898 	.word	0x0801b898

0801ae3c <std>:
 801ae3c:	2300      	movs	r3, #0
 801ae3e:	b510      	push	{r4, lr}
 801ae40:	4604      	mov	r4, r0
 801ae42:	e9c0 3300 	strd	r3, r3, [r0]
 801ae46:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ae4a:	6083      	str	r3, [r0, #8]
 801ae4c:	8181      	strh	r1, [r0, #12]
 801ae4e:	6643      	str	r3, [r0, #100]	; 0x64
 801ae50:	81c2      	strh	r2, [r0, #14]
 801ae52:	6183      	str	r3, [r0, #24]
 801ae54:	4619      	mov	r1, r3
 801ae56:	2208      	movs	r2, #8
 801ae58:	305c      	adds	r0, #92	; 0x5c
 801ae5a:	f7ff fdef 	bl	801aa3c <memset>
 801ae5e:	4b05      	ldr	r3, [pc, #20]	; (801ae74 <std+0x38>)
 801ae60:	6263      	str	r3, [r4, #36]	; 0x24
 801ae62:	4b05      	ldr	r3, [pc, #20]	; (801ae78 <std+0x3c>)
 801ae64:	62a3      	str	r3, [r4, #40]	; 0x28
 801ae66:	4b05      	ldr	r3, [pc, #20]	; (801ae7c <std+0x40>)
 801ae68:	62e3      	str	r3, [r4, #44]	; 0x2c
 801ae6a:	4b05      	ldr	r3, [pc, #20]	; (801ae80 <std+0x44>)
 801ae6c:	6224      	str	r4, [r4, #32]
 801ae6e:	6323      	str	r3, [r4, #48]	; 0x30
 801ae70:	bd10      	pop	{r4, pc}
 801ae72:	bf00      	nop
 801ae74:	0801b2d9 	.word	0x0801b2d9
 801ae78:	0801b2fb 	.word	0x0801b2fb
 801ae7c:	0801b333 	.word	0x0801b333
 801ae80:	0801b357 	.word	0x0801b357

0801ae84 <_cleanup_r>:
 801ae84:	4901      	ldr	r1, [pc, #4]	; (801ae8c <_cleanup_r+0x8>)
 801ae86:	f000 b8af 	b.w	801afe8 <_fwalk_reent>
 801ae8a:	bf00      	nop
 801ae8c:	0801adc5 	.word	0x0801adc5

0801ae90 <__sfmoreglue>:
 801ae90:	b570      	push	{r4, r5, r6, lr}
 801ae92:	2268      	movs	r2, #104	; 0x68
 801ae94:	1e4d      	subs	r5, r1, #1
 801ae96:	4355      	muls	r5, r2
 801ae98:	460e      	mov	r6, r1
 801ae9a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801ae9e:	f000 f997 	bl	801b1d0 <_malloc_r>
 801aea2:	4604      	mov	r4, r0
 801aea4:	b140      	cbz	r0, 801aeb8 <__sfmoreglue+0x28>
 801aea6:	2100      	movs	r1, #0
 801aea8:	e9c0 1600 	strd	r1, r6, [r0]
 801aeac:	300c      	adds	r0, #12
 801aeae:	60a0      	str	r0, [r4, #8]
 801aeb0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801aeb4:	f7ff fdc2 	bl	801aa3c <memset>
 801aeb8:	4620      	mov	r0, r4
 801aeba:	bd70      	pop	{r4, r5, r6, pc}

0801aebc <__sfp_lock_acquire>:
 801aebc:	4801      	ldr	r0, [pc, #4]	; (801aec4 <__sfp_lock_acquire+0x8>)
 801aebe:	f000 b8b3 	b.w	801b028 <__retarget_lock_acquire_recursive>
 801aec2:	bf00      	nop
 801aec4:	240069d9 	.word	0x240069d9

0801aec8 <__sfp_lock_release>:
 801aec8:	4801      	ldr	r0, [pc, #4]	; (801aed0 <__sfp_lock_release+0x8>)
 801aeca:	f000 b8ae 	b.w	801b02a <__retarget_lock_release_recursive>
 801aece:	bf00      	nop
 801aed0:	240069d9 	.word	0x240069d9

0801aed4 <__sinit_lock_acquire>:
 801aed4:	4801      	ldr	r0, [pc, #4]	; (801aedc <__sinit_lock_acquire+0x8>)
 801aed6:	f000 b8a7 	b.w	801b028 <__retarget_lock_acquire_recursive>
 801aeda:	bf00      	nop
 801aedc:	240069da 	.word	0x240069da

0801aee0 <__sinit_lock_release>:
 801aee0:	4801      	ldr	r0, [pc, #4]	; (801aee8 <__sinit_lock_release+0x8>)
 801aee2:	f000 b8a2 	b.w	801b02a <__retarget_lock_release_recursive>
 801aee6:	bf00      	nop
 801aee8:	240069da 	.word	0x240069da

0801aeec <__sinit>:
 801aeec:	b510      	push	{r4, lr}
 801aeee:	4604      	mov	r4, r0
 801aef0:	f7ff fff0 	bl	801aed4 <__sinit_lock_acquire>
 801aef4:	69a3      	ldr	r3, [r4, #24]
 801aef6:	b11b      	cbz	r3, 801af00 <__sinit+0x14>
 801aef8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801aefc:	f7ff bff0 	b.w	801aee0 <__sinit_lock_release>
 801af00:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801af04:	6523      	str	r3, [r4, #80]	; 0x50
 801af06:	4b13      	ldr	r3, [pc, #76]	; (801af54 <__sinit+0x68>)
 801af08:	4a13      	ldr	r2, [pc, #76]	; (801af58 <__sinit+0x6c>)
 801af0a:	681b      	ldr	r3, [r3, #0]
 801af0c:	62a2      	str	r2, [r4, #40]	; 0x28
 801af0e:	42a3      	cmp	r3, r4
 801af10:	bf04      	itt	eq
 801af12:	2301      	moveq	r3, #1
 801af14:	61a3      	streq	r3, [r4, #24]
 801af16:	4620      	mov	r0, r4
 801af18:	f000 f820 	bl	801af5c <__sfp>
 801af1c:	6060      	str	r0, [r4, #4]
 801af1e:	4620      	mov	r0, r4
 801af20:	f000 f81c 	bl	801af5c <__sfp>
 801af24:	60a0      	str	r0, [r4, #8]
 801af26:	4620      	mov	r0, r4
 801af28:	f000 f818 	bl	801af5c <__sfp>
 801af2c:	2200      	movs	r2, #0
 801af2e:	60e0      	str	r0, [r4, #12]
 801af30:	2104      	movs	r1, #4
 801af32:	6860      	ldr	r0, [r4, #4]
 801af34:	f7ff ff82 	bl	801ae3c <std>
 801af38:	68a0      	ldr	r0, [r4, #8]
 801af3a:	2201      	movs	r2, #1
 801af3c:	2109      	movs	r1, #9
 801af3e:	f7ff ff7d 	bl	801ae3c <std>
 801af42:	68e0      	ldr	r0, [r4, #12]
 801af44:	2202      	movs	r2, #2
 801af46:	2112      	movs	r1, #18
 801af48:	f7ff ff78 	bl	801ae3c <std>
 801af4c:	2301      	movs	r3, #1
 801af4e:	61a3      	str	r3, [r4, #24]
 801af50:	e7d2      	b.n	801aef8 <__sinit+0xc>
 801af52:	bf00      	nop
 801af54:	0801b894 	.word	0x0801b894
 801af58:	0801ae85 	.word	0x0801ae85

0801af5c <__sfp>:
 801af5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801af5e:	4607      	mov	r7, r0
 801af60:	f7ff ffac 	bl	801aebc <__sfp_lock_acquire>
 801af64:	4b1e      	ldr	r3, [pc, #120]	; (801afe0 <__sfp+0x84>)
 801af66:	681e      	ldr	r6, [r3, #0]
 801af68:	69b3      	ldr	r3, [r6, #24]
 801af6a:	b913      	cbnz	r3, 801af72 <__sfp+0x16>
 801af6c:	4630      	mov	r0, r6
 801af6e:	f7ff ffbd 	bl	801aeec <__sinit>
 801af72:	3648      	adds	r6, #72	; 0x48
 801af74:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801af78:	3b01      	subs	r3, #1
 801af7a:	d503      	bpl.n	801af84 <__sfp+0x28>
 801af7c:	6833      	ldr	r3, [r6, #0]
 801af7e:	b30b      	cbz	r3, 801afc4 <__sfp+0x68>
 801af80:	6836      	ldr	r6, [r6, #0]
 801af82:	e7f7      	b.n	801af74 <__sfp+0x18>
 801af84:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801af88:	b9d5      	cbnz	r5, 801afc0 <__sfp+0x64>
 801af8a:	4b16      	ldr	r3, [pc, #88]	; (801afe4 <__sfp+0x88>)
 801af8c:	60e3      	str	r3, [r4, #12]
 801af8e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801af92:	6665      	str	r5, [r4, #100]	; 0x64
 801af94:	f000 f847 	bl	801b026 <__retarget_lock_init_recursive>
 801af98:	f7ff ff96 	bl	801aec8 <__sfp_lock_release>
 801af9c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801afa0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801afa4:	6025      	str	r5, [r4, #0]
 801afa6:	61a5      	str	r5, [r4, #24]
 801afa8:	2208      	movs	r2, #8
 801afaa:	4629      	mov	r1, r5
 801afac:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801afb0:	f7ff fd44 	bl	801aa3c <memset>
 801afb4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801afb8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801afbc:	4620      	mov	r0, r4
 801afbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801afc0:	3468      	adds	r4, #104	; 0x68
 801afc2:	e7d9      	b.n	801af78 <__sfp+0x1c>
 801afc4:	2104      	movs	r1, #4
 801afc6:	4638      	mov	r0, r7
 801afc8:	f7ff ff62 	bl	801ae90 <__sfmoreglue>
 801afcc:	4604      	mov	r4, r0
 801afce:	6030      	str	r0, [r6, #0]
 801afd0:	2800      	cmp	r0, #0
 801afd2:	d1d5      	bne.n	801af80 <__sfp+0x24>
 801afd4:	f7ff ff78 	bl	801aec8 <__sfp_lock_release>
 801afd8:	230c      	movs	r3, #12
 801afda:	603b      	str	r3, [r7, #0]
 801afdc:	e7ee      	b.n	801afbc <__sfp+0x60>
 801afde:	bf00      	nop
 801afe0:	0801b894 	.word	0x0801b894
 801afe4:	ffff0001 	.word	0xffff0001

0801afe8 <_fwalk_reent>:
 801afe8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801afec:	4606      	mov	r6, r0
 801afee:	4688      	mov	r8, r1
 801aff0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801aff4:	2700      	movs	r7, #0
 801aff6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801affa:	f1b9 0901 	subs.w	r9, r9, #1
 801affe:	d505      	bpl.n	801b00c <_fwalk_reent+0x24>
 801b000:	6824      	ldr	r4, [r4, #0]
 801b002:	2c00      	cmp	r4, #0
 801b004:	d1f7      	bne.n	801aff6 <_fwalk_reent+0xe>
 801b006:	4638      	mov	r0, r7
 801b008:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b00c:	89ab      	ldrh	r3, [r5, #12]
 801b00e:	2b01      	cmp	r3, #1
 801b010:	d907      	bls.n	801b022 <_fwalk_reent+0x3a>
 801b012:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801b016:	3301      	adds	r3, #1
 801b018:	d003      	beq.n	801b022 <_fwalk_reent+0x3a>
 801b01a:	4629      	mov	r1, r5
 801b01c:	4630      	mov	r0, r6
 801b01e:	47c0      	blx	r8
 801b020:	4307      	orrs	r7, r0
 801b022:	3568      	adds	r5, #104	; 0x68
 801b024:	e7e9      	b.n	801affa <_fwalk_reent+0x12>

0801b026 <__retarget_lock_init_recursive>:
 801b026:	4770      	bx	lr

0801b028 <__retarget_lock_acquire_recursive>:
 801b028:	4770      	bx	lr

0801b02a <__retarget_lock_release_recursive>:
 801b02a:	4770      	bx	lr

0801b02c <__swhatbuf_r>:
 801b02c:	b570      	push	{r4, r5, r6, lr}
 801b02e:	460e      	mov	r6, r1
 801b030:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b034:	2900      	cmp	r1, #0
 801b036:	b096      	sub	sp, #88	; 0x58
 801b038:	4614      	mov	r4, r2
 801b03a:	461d      	mov	r5, r3
 801b03c:	da08      	bge.n	801b050 <__swhatbuf_r+0x24>
 801b03e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801b042:	2200      	movs	r2, #0
 801b044:	602a      	str	r2, [r5, #0]
 801b046:	061a      	lsls	r2, r3, #24
 801b048:	d410      	bmi.n	801b06c <__swhatbuf_r+0x40>
 801b04a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801b04e:	e00e      	b.n	801b06e <__swhatbuf_r+0x42>
 801b050:	466a      	mov	r2, sp
 801b052:	f000 f9a7 	bl	801b3a4 <_fstat_r>
 801b056:	2800      	cmp	r0, #0
 801b058:	dbf1      	blt.n	801b03e <__swhatbuf_r+0x12>
 801b05a:	9a01      	ldr	r2, [sp, #4]
 801b05c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801b060:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801b064:	425a      	negs	r2, r3
 801b066:	415a      	adcs	r2, r3
 801b068:	602a      	str	r2, [r5, #0]
 801b06a:	e7ee      	b.n	801b04a <__swhatbuf_r+0x1e>
 801b06c:	2340      	movs	r3, #64	; 0x40
 801b06e:	2000      	movs	r0, #0
 801b070:	6023      	str	r3, [r4, #0]
 801b072:	b016      	add	sp, #88	; 0x58
 801b074:	bd70      	pop	{r4, r5, r6, pc}
	...

0801b078 <__smakebuf_r>:
 801b078:	898b      	ldrh	r3, [r1, #12]
 801b07a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801b07c:	079d      	lsls	r5, r3, #30
 801b07e:	4606      	mov	r6, r0
 801b080:	460c      	mov	r4, r1
 801b082:	d507      	bpl.n	801b094 <__smakebuf_r+0x1c>
 801b084:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801b088:	6023      	str	r3, [r4, #0]
 801b08a:	6123      	str	r3, [r4, #16]
 801b08c:	2301      	movs	r3, #1
 801b08e:	6163      	str	r3, [r4, #20]
 801b090:	b002      	add	sp, #8
 801b092:	bd70      	pop	{r4, r5, r6, pc}
 801b094:	ab01      	add	r3, sp, #4
 801b096:	466a      	mov	r2, sp
 801b098:	f7ff ffc8 	bl	801b02c <__swhatbuf_r>
 801b09c:	9900      	ldr	r1, [sp, #0]
 801b09e:	4605      	mov	r5, r0
 801b0a0:	4630      	mov	r0, r6
 801b0a2:	f000 f895 	bl	801b1d0 <_malloc_r>
 801b0a6:	b948      	cbnz	r0, 801b0bc <__smakebuf_r+0x44>
 801b0a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b0ac:	059a      	lsls	r2, r3, #22
 801b0ae:	d4ef      	bmi.n	801b090 <__smakebuf_r+0x18>
 801b0b0:	f023 0303 	bic.w	r3, r3, #3
 801b0b4:	f043 0302 	orr.w	r3, r3, #2
 801b0b8:	81a3      	strh	r3, [r4, #12]
 801b0ba:	e7e3      	b.n	801b084 <__smakebuf_r+0xc>
 801b0bc:	4b0d      	ldr	r3, [pc, #52]	; (801b0f4 <__smakebuf_r+0x7c>)
 801b0be:	62b3      	str	r3, [r6, #40]	; 0x28
 801b0c0:	89a3      	ldrh	r3, [r4, #12]
 801b0c2:	6020      	str	r0, [r4, #0]
 801b0c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801b0c8:	81a3      	strh	r3, [r4, #12]
 801b0ca:	9b00      	ldr	r3, [sp, #0]
 801b0cc:	6163      	str	r3, [r4, #20]
 801b0ce:	9b01      	ldr	r3, [sp, #4]
 801b0d0:	6120      	str	r0, [r4, #16]
 801b0d2:	b15b      	cbz	r3, 801b0ec <__smakebuf_r+0x74>
 801b0d4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b0d8:	4630      	mov	r0, r6
 801b0da:	f000 f975 	bl	801b3c8 <_isatty_r>
 801b0de:	b128      	cbz	r0, 801b0ec <__smakebuf_r+0x74>
 801b0e0:	89a3      	ldrh	r3, [r4, #12]
 801b0e2:	f023 0303 	bic.w	r3, r3, #3
 801b0e6:	f043 0301 	orr.w	r3, r3, #1
 801b0ea:	81a3      	strh	r3, [r4, #12]
 801b0ec:	89a0      	ldrh	r0, [r4, #12]
 801b0ee:	4305      	orrs	r5, r0
 801b0f0:	81a5      	strh	r5, [r4, #12]
 801b0f2:	e7cd      	b.n	801b090 <__smakebuf_r+0x18>
 801b0f4:	0801ae85 	.word	0x0801ae85

0801b0f8 <_free_r>:
 801b0f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801b0fa:	2900      	cmp	r1, #0
 801b0fc:	d044      	beq.n	801b188 <_free_r+0x90>
 801b0fe:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b102:	9001      	str	r0, [sp, #4]
 801b104:	2b00      	cmp	r3, #0
 801b106:	f1a1 0404 	sub.w	r4, r1, #4
 801b10a:	bfb8      	it	lt
 801b10c:	18e4      	addlt	r4, r4, r3
 801b10e:	f000 f97d 	bl	801b40c <__malloc_lock>
 801b112:	4a1e      	ldr	r2, [pc, #120]	; (801b18c <_free_r+0x94>)
 801b114:	9801      	ldr	r0, [sp, #4]
 801b116:	6813      	ldr	r3, [r2, #0]
 801b118:	b933      	cbnz	r3, 801b128 <_free_r+0x30>
 801b11a:	6063      	str	r3, [r4, #4]
 801b11c:	6014      	str	r4, [r2, #0]
 801b11e:	b003      	add	sp, #12
 801b120:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801b124:	f000 b978 	b.w	801b418 <__malloc_unlock>
 801b128:	42a3      	cmp	r3, r4
 801b12a:	d908      	bls.n	801b13e <_free_r+0x46>
 801b12c:	6825      	ldr	r5, [r4, #0]
 801b12e:	1961      	adds	r1, r4, r5
 801b130:	428b      	cmp	r3, r1
 801b132:	bf01      	itttt	eq
 801b134:	6819      	ldreq	r1, [r3, #0]
 801b136:	685b      	ldreq	r3, [r3, #4]
 801b138:	1949      	addeq	r1, r1, r5
 801b13a:	6021      	streq	r1, [r4, #0]
 801b13c:	e7ed      	b.n	801b11a <_free_r+0x22>
 801b13e:	461a      	mov	r2, r3
 801b140:	685b      	ldr	r3, [r3, #4]
 801b142:	b10b      	cbz	r3, 801b148 <_free_r+0x50>
 801b144:	42a3      	cmp	r3, r4
 801b146:	d9fa      	bls.n	801b13e <_free_r+0x46>
 801b148:	6811      	ldr	r1, [r2, #0]
 801b14a:	1855      	adds	r5, r2, r1
 801b14c:	42a5      	cmp	r5, r4
 801b14e:	d10b      	bne.n	801b168 <_free_r+0x70>
 801b150:	6824      	ldr	r4, [r4, #0]
 801b152:	4421      	add	r1, r4
 801b154:	1854      	adds	r4, r2, r1
 801b156:	42a3      	cmp	r3, r4
 801b158:	6011      	str	r1, [r2, #0]
 801b15a:	d1e0      	bne.n	801b11e <_free_r+0x26>
 801b15c:	681c      	ldr	r4, [r3, #0]
 801b15e:	685b      	ldr	r3, [r3, #4]
 801b160:	6053      	str	r3, [r2, #4]
 801b162:	4421      	add	r1, r4
 801b164:	6011      	str	r1, [r2, #0]
 801b166:	e7da      	b.n	801b11e <_free_r+0x26>
 801b168:	d902      	bls.n	801b170 <_free_r+0x78>
 801b16a:	230c      	movs	r3, #12
 801b16c:	6003      	str	r3, [r0, #0]
 801b16e:	e7d6      	b.n	801b11e <_free_r+0x26>
 801b170:	6825      	ldr	r5, [r4, #0]
 801b172:	1961      	adds	r1, r4, r5
 801b174:	428b      	cmp	r3, r1
 801b176:	bf04      	itt	eq
 801b178:	6819      	ldreq	r1, [r3, #0]
 801b17a:	685b      	ldreq	r3, [r3, #4]
 801b17c:	6063      	str	r3, [r4, #4]
 801b17e:	bf04      	itt	eq
 801b180:	1949      	addeq	r1, r1, r5
 801b182:	6021      	streq	r1, [r4, #0]
 801b184:	6054      	str	r4, [r2, #4]
 801b186:	e7ca      	b.n	801b11e <_free_r+0x26>
 801b188:	b003      	add	sp, #12
 801b18a:	bd30      	pop	{r4, r5, pc}
 801b18c:	240069dc 	.word	0x240069dc

0801b190 <sbrk_aligned>:
 801b190:	b570      	push	{r4, r5, r6, lr}
 801b192:	4e0e      	ldr	r6, [pc, #56]	; (801b1cc <sbrk_aligned+0x3c>)
 801b194:	460c      	mov	r4, r1
 801b196:	6831      	ldr	r1, [r6, #0]
 801b198:	4605      	mov	r5, r0
 801b19a:	b911      	cbnz	r1, 801b1a2 <sbrk_aligned+0x12>
 801b19c:	f000 f88c 	bl	801b2b8 <_sbrk_r>
 801b1a0:	6030      	str	r0, [r6, #0]
 801b1a2:	4621      	mov	r1, r4
 801b1a4:	4628      	mov	r0, r5
 801b1a6:	f000 f887 	bl	801b2b8 <_sbrk_r>
 801b1aa:	1c43      	adds	r3, r0, #1
 801b1ac:	d00a      	beq.n	801b1c4 <sbrk_aligned+0x34>
 801b1ae:	1cc4      	adds	r4, r0, #3
 801b1b0:	f024 0403 	bic.w	r4, r4, #3
 801b1b4:	42a0      	cmp	r0, r4
 801b1b6:	d007      	beq.n	801b1c8 <sbrk_aligned+0x38>
 801b1b8:	1a21      	subs	r1, r4, r0
 801b1ba:	4628      	mov	r0, r5
 801b1bc:	f000 f87c 	bl	801b2b8 <_sbrk_r>
 801b1c0:	3001      	adds	r0, #1
 801b1c2:	d101      	bne.n	801b1c8 <sbrk_aligned+0x38>
 801b1c4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 801b1c8:	4620      	mov	r0, r4
 801b1ca:	bd70      	pop	{r4, r5, r6, pc}
 801b1cc:	240069e0 	.word	0x240069e0

0801b1d0 <_malloc_r>:
 801b1d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b1d4:	1ccd      	adds	r5, r1, #3
 801b1d6:	f025 0503 	bic.w	r5, r5, #3
 801b1da:	3508      	adds	r5, #8
 801b1dc:	2d0c      	cmp	r5, #12
 801b1de:	bf38      	it	cc
 801b1e0:	250c      	movcc	r5, #12
 801b1e2:	2d00      	cmp	r5, #0
 801b1e4:	4607      	mov	r7, r0
 801b1e6:	db01      	blt.n	801b1ec <_malloc_r+0x1c>
 801b1e8:	42a9      	cmp	r1, r5
 801b1ea:	d905      	bls.n	801b1f8 <_malloc_r+0x28>
 801b1ec:	230c      	movs	r3, #12
 801b1ee:	603b      	str	r3, [r7, #0]
 801b1f0:	2600      	movs	r6, #0
 801b1f2:	4630      	mov	r0, r6
 801b1f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b1f8:	4e2e      	ldr	r6, [pc, #184]	; (801b2b4 <_malloc_r+0xe4>)
 801b1fa:	f000 f907 	bl	801b40c <__malloc_lock>
 801b1fe:	6833      	ldr	r3, [r6, #0]
 801b200:	461c      	mov	r4, r3
 801b202:	bb34      	cbnz	r4, 801b252 <_malloc_r+0x82>
 801b204:	4629      	mov	r1, r5
 801b206:	4638      	mov	r0, r7
 801b208:	f7ff ffc2 	bl	801b190 <sbrk_aligned>
 801b20c:	1c43      	adds	r3, r0, #1
 801b20e:	4604      	mov	r4, r0
 801b210:	d14d      	bne.n	801b2ae <_malloc_r+0xde>
 801b212:	6834      	ldr	r4, [r6, #0]
 801b214:	4626      	mov	r6, r4
 801b216:	2e00      	cmp	r6, #0
 801b218:	d140      	bne.n	801b29c <_malloc_r+0xcc>
 801b21a:	6823      	ldr	r3, [r4, #0]
 801b21c:	4631      	mov	r1, r6
 801b21e:	4638      	mov	r0, r7
 801b220:	eb04 0803 	add.w	r8, r4, r3
 801b224:	f000 f848 	bl	801b2b8 <_sbrk_r>
 801b228:	4580      	cmp	r8, r0
 801b22a:	d13a      	bne.n	801b2a2 <_malloc_r+0xd2>
 801b22c:	6821      	ldr	r1, [r4, #0]
 801b22e:	3503      	adds	r5, #3
 801b230:	1a6d      	subs	r5, r5, r1
 801b232:	f025 0503 	bic.w	r5, r5, #3
 801b236:	3508      	adds	r5, #8
 801b238:	2d0c      	cmp	r5, #12
 801b23a:	bf38      	it	cc
 801b23c:	250c      	movcc	r5, #12
 801b23e:	4629      	mov	r1, r5
 801b240:	4638      	mov	r0, r7
 801b242:	f7ff ffa5 	bl	801b190 <sbrk_aligned>
 801b246:	3001      	adds	r0, #1
 801b248:	d02b      	beq.n	801b2a2 <_malloc_r+0xd2>
 801b24a:	6823      	ldr	r3, [r4, #0]
 801b24c:	442b      	add	r3, r5
 801b24e:	6023      	str	r3, [r4, #0]
 801b250:	e00e      	b.n	801b270 <_malloc_r+0xa0>
 801b252:	6822      	ldr	r2, [r4, #0]
 801b254:	1b52      	subs	r2, r2, r5
 801b256:	d41e      	bmi.n	801b296 <_malloc_r+0xc6>
 801b258:	2a0b      	cmp	r2, #11
 801b25a:	d916      	bls.n	801b28a <_malloc_r+0xba>
 801b25c:	1961      	adds	r1, r4, r5
 801b25e:	42a3      	cmp	r3, r4
 801b260:	6025      	str	r5, [r4, #0]
 801b262:	bf18      	it	ne
 801b264:	6059      	strne	r1, [r3, #4]
 801b266:	6863      	ldr	r3, [r4, #4]
 801b268:	bf08      	it	eq
 801b26a:	6031      	streq	r1, [r6, #0]
 801b26c:	5162      	str	r2, [r4, r5]
 801b26e:	604b      	str	r3, [r1, #4]
 801b270:	4638      	mov	r0, r7
 801b272:	f104 060b 	add.w	r6, r4, #11
 801b276:	f000 f8cf 	bl	801b418 <__malloc_unlock>
 801b27a:	f026 0607 	bic.w	r6, r6, #7
 801b27e:	1d23      	adds	r3, r4, #4
 801b280:	1af2      	subs	r2, r6, r3
 801b282:	d0b6      	beq.n	801b1f2 <_malloc_r+0x22>
 801b284:	1b9b      	subs	r3, r3, r6
 801b286:	50a3      	str	r3, [r4, r2]
 801b288:	e7b3      	b.n	801b1f2 <_malloc_r+0x22>
 801b28a:	6862      	ldr	r2, [r4, #4]
 801b28c:	42a3      	cmp	r3, r4
 801b28e:	bf0c      	ite	eq
 801b290:	6032      	streq	r2, [r6, #0]
 801b292:	605a      	strne	r2, [r3, #4]
 801b294:	e7ec      	b.n	801b270 <_malloc_r+0xa0>
 801b296:	4623      	mov	r3, r4
 801b298:	6864      	ldr	r4, [r4, #4]
 801b29a:	e7b2      	b.n	801b202 <_malloc_r+0x32>
 801b29c:	4634      	mov	r4, r6
 801b29e:	6876      	ldr	r6, [r6, #4]
 801b2a0:	e7b9      	b.n	801b216 <_malloc_r+0x46>
 801b2a2:	230c      	movs	r3, #12
 801b2a4:	603b      	str	r3, [r7, #0]
 801b2a6:	4638      	mov	r0, r7
 801b2a8:	f000 f8b6 	bl	801b418 <__malloc_unlock>
 801b2ac:	e7a1      	b.n	801b1f2 <_malloc_r+0x22>
 801b2ae:	6025      	str	r5, [r4, #0]
 801b2b0:	e7de      	b.n	801b270 <_malloc_r+0xa0>
 801b2b2:	bf00      	nop
 801b2b4:	240069dc 	.word	0x240069dc

0801b2b8 <_sbrk_r>:
 801b2b8:	b538      	push	{r3, r4, r5, lr}
 801b2ba:	4d06      	ldr	r5, [pc, #24]	; (801b2d4 <_sbrk_r+0x1c>)
 801b2bc:	2300      	movs	r3, #0
 801b2be:	4604      	mov	r4, r0
 801b2c0:	4608      	mov	r0, r1
 801b2c2:	602b      	str	r3, [r5, #0]
 801b2c4:	f7e9 fc6a 	bl	8004b9c <_sbrk>
 801b2c8:	1c43      	adds	r3, r0, #1
 801b2ca:	d102      	bne.n	801b2d2 <_sbrk_r+0x1a>
 801b2cc:	682b      	ldr	r3, [r5, #0]
 801b2ce:	b103      	cbz	r3, 801b2d2 <_sbrk_r+0x1a>
 801b2d0:	6023      	str	r3, [r4, #0]
 801b2d2:	bd38      	pop	{r3, r4, r5, pc}
 801b2d4:	240069e4 	.word	0x240069e4

0801b2d8 <__sread>:
 801b2d8:	b510      	push	{r4, lr}
 801b2da:	460c      	mov	r4, r1
 801b2dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b2e0:	f000 f8a0 	bl	801b424 <_read_r>
 801b2e4:	2800      	cmp	r0, #0
 801b2e6:	bfab      	itete	ge
 801b2e8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801b2ea:	89a3      	ldrhlt	r3, [r4, #12]
 801b2ec:	181b      	addge	r3, r3, r0
 801b2ee:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801b2f2:	bfac      	ite	ge
 801b2f4:	6563      	strge	r3, [r4, #84]	; 0x54
 801b2f6:	81a3      	strhlt	r3, [r4, #12]
 801b2f8:	bd10      	pop	{r4, pc}

0801b2fa <__swrite>:
 801b2fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b2fe:	461f      	mov	r7, r3
 801b300:	898b      	ldrh	r3, [r1, #12]
 801b302:	05db      	lsls	r3, r3, #23
 801b304:	4605      	mov	r5, r0
 801b306:	460c      	mov	r4, r1
 801b308:	4616      	mov	r6, r2
 801b30a:	d505      	bpl.n	801b318 <__swrite+0x1e>
 801b30c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b310:	2302      	movs	r3, #2
 801b312:	2200      	movs	r2, #0
 801b314:	f000 f868 	bl	801b3e8 <_lseek_r>
 801b318:	89a3      	ldrh	r3, [r4, #12]
 801b31a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b31e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801b322:	81a3      	strh	r3, [r4, #12]
 801b324:	4632      	mov	r2, r6
 801b326:	463b      	mov	r3, r7
 801b328:	4628      	mov	r0, r5
 801b32a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801b32e:	f000 b817 	b.w	801b360 <_write_r>

0801b332 <__sseek>:
 801b332:	b510      	push	{r4, lr}
 801b334:	460c      	mov	r4, r1
 801b336:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b33a:	f000 f855 	bl	801b3e8 <_lseek_r>
 801b33e:	1c43      	adds	r3, r0, #1
 801b340:	89a3      	ldrh	r3, [r4, #12]
 801b342:	bf15      	itete	ne
 801b344:	6560      	strne	r0, [r4, #84]	; 0x54
 801b346:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801b34a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801b34e:	81a3      	strheq	r3, [r4, #12]
 801b350:	bf18      	it	ne
 801b352:	81a3      	strhne	r3, [r4, #12]
 801b354:	bd10      	pop	{r4, pc}

0801b356 <__sclose>:
 801b356:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b35a:	f000 b813 	b.w	801b384 <_close_r>
	...

0801b360 <_write_r>:
 801b360:	b538      	push	{r3, r4, r5, lr}
 801b362:	4d07      	ldr	r5, [pc, #28]	; (801b380 <_write_r+0x20>)
 801b364:	4604      	mov	r4, r0
 801b366:	4608      	mov	r0, r1
 801b368:	4611      	mov	r1, r2
 801b36a:	2200      	movs	r2, #0
 801b36c:	602a      	str	r2, [r5, #0]
 801b36e:	461a      	mov	r2, r3
 801b370:	f7e9 fbc3 	bl	8004afa <_write>
 801b374:	1c43      	adds	r3, r0, #1
 801b376:	d102      	bne.n	801b37e <_write_r+0x1e>
 801b378:	682b      	ldr	r3, [r5, #0]
 801b37a:	b103      	cbz	r3, 801b37e <_write_r+0x1e>
 801b37c:	6023      	str	r3, [r4, #0]
 801b37e:	bd38      	pop	{r3, r4, r5, pc}
 801b380:	240069e4 	.word	0x240069e4

0801b384 <_close_r>:
 801b384:	b538      	push	{r3, r4, r5, lr}
 801b386:	4d06      	ldr	r5, [pc, #24]	; (801b3a0 <_close_r+0x1c>)
 801b388:	2300      	movs	r3, #0
 801b38a:	4604      	mov	r4, r0
 801b38c:	4608      	mov	r0, r1
 801b38e:	602b      	str	r3, [r5, #0]
 801b390:	f7e9 fbcf 	bl	8004b32 <_close>
 801b394:	1c43      	adds	r3, r0, #1
 801b396:	d102      	bne.n	801b39e <_close_r+0x1a>
 801b398:	682b      	ldr	r3, [r5, #0]
 801b39a:	b103      	cbz	r3, 801b39e <_close_r+0x1a>
 801b39c:	6023      	str	r3, [r4, #0]
 801b39e:	bd38      	pop	{r3, r4, r5, pc}
 801b3a0:	240069e4 	.word	0x240069e4

0801b3a4 <_fstat_r>:
 801b3a4:	b538      	push	{r3, r4, r5, lr}
 801b3a6:	4d07      	ldr	r5, [pc, #28]	; (801b3c4 <_fstat_r+0x20>)
 801b3a8:	2300      	movs	r3, #0
 801b3aa:	4604      	mov	r4, r0
 801b3ac:	4608      	mov	r0, r1
 801b3ae:	4611      	mov	r1, r2
 801b3b0:	602b      	str	r3, [r5, #0]
 801b3b2:	f7e9 fbca 	bl	8004b4a <_fstat>
 801b3b6:	1c43      	adds	r3, r0, #1
 801b3b8:	d102      	bne.n	801b3c0 <_fstat_r+0x1c>
 801b3ba:	682b      	ldr	r3, [r5, #0]
 801b3bc:	b103      	cbz	r3, 801b3c0 <_fstat_r+0x1c>
 801b3be:	6023      	str	r3, [r4, #0]
 801b3c0:	bd38      	pop	{r3, r4, r5, pc}
 801b3c2:	bf00      	nop
 801b3c4:	240069e4 	.word	0x240069e4

0801b3c8 <_isatty_r>:
 801b3c8:	b538      	push	{r3, r4, r5, lr}
 801b3ca:	4d06      	ldr	r5, [pc, #24]	; (801b3e4 <_isatty_r+0x1c>)
 801b3cc:	2300      	movs	r3, #0
 801b3ce:	4604      	mov	r4, r0
 801b3d0:	4608      	mov	r0, r1
 801b3d2:	602b      	str	r3, [r5, #0]
 801b3d4:	f7e9 fbc9 	bl	8004b6a <_isatty>
 801b3d8:	1c43      	adds	r3, r0, #1
 801b3da:	d102      	bne.n	801b3e2 <_isatty_r+0x1a>
 801b3dc:	682b      	ldr	r3, [r5, #0]
 801b3de:	b103      	cbz	r3, 801b3e2 <_isatty_r+0x1a>
 801b3e0:	6023      	str	r3, [r4, #0]
 801b3e2:	bd38      	pop	{r3, r4, r5, pc}
 801b3e4:	240069e4 	.word	0x240069e4

0801b3e8 <_lseek_r>:
 801b3e8:	b538      	push	{r3, r4, r5, lr}
 801b3ea:	4d07      	ldr	r5, [pc, #28]	; (801b408 <_lseek_r+0x20>)
 801b3ec:	4604      	mov	r4, r0
 801b3ee:	4608      	mov	r0, r1
 801b3f0:	4611      	mov	r1, r2
 801b3f2:	2200      	movs	r2, #0
 801b3f4:	602a      	str	r2, [r5, #0]
 801b3f6:	461a      	mov	r2, r3
 801b3f8:	f7e9 fbc2 	bl	8004b80 <_lseek>
 801b3fc:	1c43      	adds	r3, r0, #1
 801b3fe:	d102      	bne.n	801b406 <_lseek_r+0x1e>
 801b400:	682b      	ldr	r3, [r5, #0]
 801b402:	b103      	cbz	r3, 801b406 <_lseek_r+0x1e>
 801b404:	6023      	str	r3, [r4, #0]
 801b406:	bd38      	pop	{r3, r4, r5, pc}
 801b408:	240069e4 	.word	0x240069e4

0801b40c <__malloc_lock>:
 801b40c:	4801      	ldr	r0, [pc, #4]	; (801b414 <__malloc_lock+0x8>)
 801b40e:	f7ff be0b 	b.w	801b028 <__retarget_lock_acquire_recursive>
 801b412:	bf00      	nop
 801b414:	240069d8 	.word	0x240069d8

0801b418 <__malloc_unlock>:
 801b418:	4801      	ldr	r0, [pc, #4]	; (801b420 <__malloc_unlock+0x8>)
 801b41a:	f7ff be06 	b.w	801b02a <__retarget_lock_release_recursive>
 801b41e:	bf00      	nop
 801b420:	240069d8 	.word	0x240069d8

0801b424 <_read_r>:
 801b424:	b538      	push	{r3, r4, r5, lr}
 801b426:	4d07      	ldr	r5, [pc, #28]	; (801b444 <_read_r+0x20>)
 801b428:	4604      	mov	r4, r0
 801b42a:	4608      	mov	r0, r1
 801b42c:	4611      	mov	r1, r2
 801b42e:	2200      	movs	r2, #0
 801b430:	602a      	str	r2, [r5, #0]
 801b432:	461a      	mov	r2, r3
 801b434:	f7e9 fb44 	bl	8004ac0 <_read>
 801b438:	1c43      	adds	r3, r0, #1
 801b43a:	d102      	bne.n	801b442 <_read_r+0x1e>
 801b43c:	682b      	ldr	r3, [r5, #0]
 801b43e:	b103      	cbz	r3, 801b442 <_read_r+0x1e>
 801b440:	6023      	str	r3, [r4, #0]
 801b442:	bd38      	pop	{r3, r4, r5, pc}
 801b444:	240069e4 	.word	0x240069e4

0801b448 <_init>:
 801b448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b44a:	bf00      	nop
 801b44c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b44e:	bc08      	pop	{r3}
 801b450:	469e      	mov	lr, r3
 801b452:	4770      	bx	lr

0801b454 <_fini>:
 801b454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b456:	bf00      	nop
 801b458:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b45a:	bc08      	pop	{r3}
 801b45c:	469e      	mov	lr, r3
 801b45e:	4770      	bx	lr
